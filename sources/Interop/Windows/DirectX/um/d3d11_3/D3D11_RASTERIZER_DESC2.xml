<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D11_RASTERIZER_DESC2">
    <summary>
      <para>Describes rasterizer state.</para>
    </summary>
    <remarks>
      <para>Rasterizer state defines the behavior of the rasterizer stage. To create a rasterizer-state object, call <see cref="ID3D11Device3.CreateRasterizerState2" />. To set rasterizer state, call <see cref="ID3D11DeviceContext.RSSetState" />.</para>
      <para>If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state.</para>
      <list type="table">
        <listheader>
          <description>State</description>
          <description>Default Value</description>
        </listheader>
        <item>
          <description>
            <b>FillMode</b>
          </description>
          <description>Solid</description>
        </item>
        <item>
          <description>
            <b>CullMode</b>
          </description>
          <description>Back</description>
        </item>
        <item>
          <description>
            <b>FrontCounterClockwise</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>DepthBias</b>
          </description>
          <description>0</description>
        </item>
        <item>
          <description>
            <b>SlopeScaledDepthBias</b>
          </description>
          <description>0.0f</description>
        </item>
        <item>
          <description>
            <b>DepthBiasClamp</b>
          </description>
          <description>0.0f</description>
        </item>
        <item>
          <description>
            <b>DepthClipEnable</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
        <item>
          <description>
            <b>ScissorEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>MultisampleEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>AntialiasedLineEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>ForcedSampleCount</b>
          </description>
          <description>0</description>
        </item>
        <item>
          <description>
            <b>ConservativeRaster</b>
          </description>
          <description>
            <b>D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF</b>
          </description>
        </item>
      </list>
      <para>
        <b>Note</b>  For <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9.1, 9.2, 9.3, and 10.0, if you set <b>MultisampleEnable</b> to <b>FALSE</b>, the runtime renders all points, lines, and triangles without anti-aliasing even for render targets with a sample count greater than 1. For feature levels 10.1 and higher, the setting of <b>MultisampleEnable</b> has no effect on points and triangles with regard to MSAA and impacts only the selection of the line-rendering algorithm as shown in this table:</para>
      <list type="table">
        <listheader>
          <description>Line-rendering algorithm</description>
          <description>
            <b>MultisampleEnable</b>
          </description>
          <description>
            <b>AntialiasedLineEnable</b>
          </description>
        </listheader>
        <item>
          <description>Aliased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Alpha antialiased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
      </list>
      <para>The settings of the <b>MultisampleEnable</b> and <b>AntialiasedLineEnable</b> members apply only to multisample antialiasing (MSAA) render targets (that is, render targets with sample counts greater than 1). Because of the differences in <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature-level</a> behavior and as long as you aren’t performing any line drawing or don’t mind that lines render as quadrilaterals, we recommend that you always set <b>MultisampleEnable</b> to <b>TRUE</b> whenever you render on MSAA render targets.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-core-structures">Core Structures</seealso>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.CD3D11_RASTERIZER_DESC2">
    <summary>
      <para>TBD</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.D3D11_RASTERIZER_DESC2">
    <summary>
      <h4>- AntialiasedLineEnable</h4>
      <para>Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</para>
      <h4>- ConservativeRaster</h4>
      <para>A <see cref="D3D11_CONSERVATIVE_RASTERIZATION_MODE" />-typed value that identifies whether conservative rasterization is on or off.</para>
      <h4>- CullMode</h4>
      <para>A <see cref="D3D11_CULL_MODE" />-typed value that indicates that triangles facing the specified direction are not drawn.</para>
      <h4>- DepthBias</h4>
      <para>Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
      <h4>- DepthBiasClamp</h4>
      <para>Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
      <h4>- DepthClipEnable</h4>
      <para>Specifies whether to enable clipping based on distance.</para>
      <para>The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
      <code>

0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w
</code>
      <para>When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
      <h4>- FillMode</h4>
      <para>A <see cref="D3D11_FILL_MODE" />-typed value that determines the fill mode to use when rendering.</para>
      <h4>- ForcedSampleCount</h4>
      <para>The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.</para>
      <para>
        <b>Note</b>  If you want to render with <b>ForcedSampleCount</b> set to 1 or greater, you must follow these guidelines:</para>
      <list type="bullet">
        <item>
          <description>Don't bind depth-stencil views.</description>
        </item>
        <item>
          <description>Disable depth testing.</description>
        </item>
        <item>
          <description>Ensure the shader doesn't output depth.</description>
        </item>
        <item>
          <description>If you have any render-target views bound (<see cref="D3D11_BIND_RENDER_TARGET" />) and <b>ForcedSampleCount</b> is greater than 1, ensure that every render target has only a single sample.</description>
        </item>
        <item>
          <description>Don't operate the shader at sample frequency. Therefore, <see cref="ID3D11ShaderReflection.IsSampleFrequencyShader" /> returns <b>FALSE</b>.</description>
        </item>
      </list>Otherwise, rendering behavior is undefined. For info about how to configure depth-stencil, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-depth-stencil">Configuring Depth-Stencil Functionality</a>.
<h4>- FrontCounterClockwise</h4><para>Specifies whether a triangle is front- or back-facing. If <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <b>FALSE</b>, the opposite is true.</para><h4>- MultisampleEnable</h4><para>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para><h4>- ScissorEnable</h4><para>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</para><h4>- SlopeScaledDepthBias</h4><para>Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para></summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.liasedLineEnable">
    <summary>
      <para>Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.rvativeRaster">
    <summary>
      <para>A <see cref="D3D11_CONSERVATIVE_RASTERIZATION_MODE" />-typed value that identifies whether conservative rasterization is on or off.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ode">
    <summary>
      <para>A <see cref="D3D11_CULL_MODE" />-typed value that indicates that triangles facing the specified direction are not drawn.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.Bias">
    <summary>
      <para>Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.BiasClamp">
    <summary>
      <para>Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ClipEnable">
    <summary>
      <para>Specifies whether to enable clipping based on distance.</para>
      <para>The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
      <code>

0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w
</code>
      <para>When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ode">
    <summary>
      <para>A <see cref="D3D11_FILL_MODE" />-typed value that determines the fill mode to use when rendering.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.dSampleCount">
    <summary>
      <para>The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.</para>
      <para>
        <b>Note</b>  If you want to render with <b>ForcedSampleCount</b> set to 1 or greater, you must follow these guidelines:</para>
      <list type="bullet">
        <item>
          <description>Don't bind depth-stencil views.</description>
        </item>
        <item>
          <description>Disable depth testing.</description>
        </item>
        <item>
          <description>Ensure the shader doesn't output depth.</description>
        </item>
        <item>
          <description>If you have any render-target views bound (<see cref="D3D11_BIND_RENDER_TARGET" />) and <b>ForcedSampleCount</b> is greater than 1, ensure that every render target has only a single sample.</description>
        </item>
        <item>
          <description>Don't operate the shader at sample frequency. Therefore, <see cref="ID3D11ShaderReflection.IsSampleFrequencyShader" /> returns <b>FALSE</b>.</description>
        </item>
      </list>Otherwise, rendering behavior is undefined. For info about how to configure depth-stencil, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-depth-stencil">Configuring Depth-Stencil Functionality</a>.
</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.CounterClockwise">
    <summary>
      <para>Specifies whether a triangle is front- or back-facing. If <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <b>FALSE</b>, the opposite is true.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.sampleEnable">
    <summary>
      <para>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.orEnable">
    <summary>
      <para>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ScaledDepthBias">
    <summary>
      <para>Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2">
    <summary>
      <para>Describes rasterizer state.</para>
    </summary>
    <remarks>
      <para>Rasterizer state defines the behavior of the rasterizer stage. To create a rasterizer-state object, call <see cref="ID3D11Device3.CreateRasterizerState2" />. To set rasterizer state, call <see cref="ID3D11DeviceContext.RSSetState" />.</para>
      <para>If you do not specify some rasterizer state,  the Direct3D runtime uses the following default values for rasterizer state.</para>
      <list type="table">
        <listheader>
          <description>State</description>
          <description>Default Value</description>
        </listheader>
        <item>
          <description>
            <b>FillMode</b>
          </description>
          <description>Solid</description>
        </item>
        <item>
          <description>
            <b>CullMode</b>
          </description>
          <description>Back</description>
        </item>
        <item>
          <description>
            <b>FrontCounterClockwise</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>DepthBias</b>
          </description>
          <description>0</description>
        </item>
        <item>
          <description>
            <b>SlopeScaledDepthBias</b>
          </description>
          <description>0.0f</description>
        </item>
        <item>
          <description>
            <b>DepthBiasClamp</b>
          </description>
          <description>0.0f</description>
        </item>
        <item>
          <description>
            <b>DepthClipEnable</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
        <item>
          <description>
            <b>ScissorEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>MultisampleEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>AntialiasedLineEnable</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>
            <b>ForcedSampleCount</b>
          </description>
          <description>0</description>
        </item>
        <item>
          <description>
            <b>ConservativeRaster</b>
          </description>
          <description>
            <b>D3D11_CONSERVATIVE_RASTERIZATION_MODE_OFF</b>
          </description>
        </item>
      </list>
      <para>
        <b>Note</b>  For <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9.1, 9.2, 9.3, and 10.0, if you set <b>MultisampleEnable</b> to <b>FALSE</b>, the runtime renders all points, lines, and triangles without anti-aliasing even for render targets with a sample count greater than 1. For feature levels 10.1 and higher, the setting of <b>MultisampleEnable</b> has no effect on points and triangles with regard to MSAA and impacts only the selection of the line-rendering algorithm as shown in this table:</para>
      <list type="table">
        <listheader>
          <description>Line-rendering algorithm</description>
          <description>
            <b>MultisampleEnable</b>
          </description>
          <description>
            <b>AntialiasedLineEnable</b>
          </description>
        </listheader>
        <item>
          <description>Aliased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Alpha antialiased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
      </list>
      <para>The settings of the <b>MultisampleEnable</b> and <b>AntialiasedLineEnable</b> members apply only to multisample antialiasing (MSAA) render targets (that is, render targets with sample counts greater than 1). Because of the differences in <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature-level</a> behavior and as long as you aren’t performing any line drawing or don’t mind that lines render as quadrilaterals, we recommend that you always set <b>MultisampleEnable</b> to <b>TRUE</b> whenever you render on MSAA render targets.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-core-structures">Core Structures</seealso>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.FillMode">
    <summary>
      <para>A <see cref="D3D11_FILL_MODE" />-typed value that determines the fill mode to use when rendering.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.CullMode">
    <summary>
      <para>A <see cref="D3D11_CULL_MODE" />-typed value that indicates that triangles facing the specified direction are not drawn.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.FrontCounterClockwise">
    <summary>
      <para>Specifies whether a triangle is front- or back-facing. If <b>TRUE</b>, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <b>FALSE</b>, the opposite is true.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.DepthBias">
    <summary>
      <para>Depth value added to a given pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.DepthBiasClamp">
    <summary>
      <para>Maximum depth bias of a pixel. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.SlopeScaledDepthBias">
    <summary>
      <para>Scalar on a given pixel's slope. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.DepthClipEnable">
    <summary>
      <para>Specifies whether to enable clipping based on distance.</para>
      <para>The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default–<b>TRUE</b>, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
      <code>
0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w

</code>
      <para>When you set <b>DepthClipEnable</b> to <b>FALSE</b>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ScissorEnable">
    <summary>
      <para>Specifies whether to enable scissor-rectangle culling. All pixels outside an active scissor rectangle are culled.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.MultisampleEnable">
    <summary>
      <para>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.AntialiasedLineEnable">
    <summary>
      <para>Specifies whether to enable line antialiasing; only applies if doing line drawing and <b>MultisampleEnable</b> is <b>FALSE</b>. For more info about this member, see Remarks.</para>
    </summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ForcedSampleCount">
    <summary>
      <para>The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.</para>
      <para>
        <b>Note</b>  If you want to render with <b>ForcedSampleCount</b> set to 1 or greater, you must follow these guidelines:</para>
      <list type="bullet">
        <item>
          <description>Don't bind depth-stencil views.</description>
        </item>
        <item>
          <description>Disable depth testing.</description>
        </item>
        <item>
          <description>Ensure the shader doesn't output depth.</description>
        </item>
        <item>
          <description>If you have any render-target views bound (<see cref="D3D11_BIND_RENDER_TARGET" />) and <b>ForcedSampleCount</b> is greater than 1, ensure that every render target has only a single sample.</description>
        </item>
        <item>
          <description>Don't operate the shader at sample frequency. Therefore, <see cref="ID3D11ShaderReflection.IsSampleFrequencyShader" /> returns <b>FALSE</b>.</description>
        </item>
      </list>Otherwise, rendering behavior is undefined. For info about how to configure depth-stencil, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-depth-stencil">Configuring Depth-Stencil Functionality</a>.
</summary>
  </member>
  <member name="D3D11_RASTERIZER_DESC2.ConservativeRaster">
    <summary>
      <para>A <see cref="D3D11_CONSERVATIVE_RASTERIZATION_MODE" />-typed value that identifies whether conservative rasterization is on or off.</para>
    </summary>
  </member>
</doc>