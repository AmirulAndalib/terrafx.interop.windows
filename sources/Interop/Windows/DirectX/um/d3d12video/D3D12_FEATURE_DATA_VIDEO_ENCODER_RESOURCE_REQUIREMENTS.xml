<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS">
    <summary>
      <para>Provides data for calls to <see cref="ID3D12VideoDevice.CheckFeatureSupport" /> when the feature specified is <see cref="D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS" />. Retrieves values indicating resource requirements for video encoding with the specified encoding configuration.</para>
    </summary>
    <seealso cref="DXGI_FORMAT" />
    <seealso cref="ID3D12Resource" />
    <seealso cref="EncodeFrame" />
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.NodeIndex">
    <summary>
      <para>In multi-adapter operation, this indicates which physical adapter of the device this operation applies to.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.Codec">
    <summary>
      <para>A member of the <see cref="D3D12_VIDEO_ENCODER_CODEC" /> enumeration specifying the codec for which resource requirements are being queried.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.Profile">
    <summary>
      <para>A <see cref="D3D12_VIDEO_ENCODER_PROFILE_DESC" /> structure specifying the profile for which resource requirements are being queried.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.InputFormat">
    <summary>
      <para>A <see cref="DXGI_FORMAT" /> structure representing the input format for which resource requirements are being queried.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.PictureTargetResolution">
    <summary>
      <para>A <see cref="D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC" /> structure representing the resolution for which resource requirements are being queried.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.IsSupported">
    <summary>
      <para>Receives a boolean value indicating if the specified parameters are supported.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.CompressedBitstreamBufferAccessAlignment">
    <summary>
      <para>Receives a UINT indicating the alignment required in bytes for the resource to be passed in <see cref="D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM.pBuffer" /> and <b>D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM.Offset</b>. If no alignment is required, 1 should is returned to indicate 1 byte (trivial) alignment.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.EncoderMetadataBufferAccessAlignment">
    <summary>
      <para>Receives a UINT indicating the alignment required in bytes for the resource to be passed in D3D12_VIDEO_ENCODER_OUTPUT_ARGUMENTS.pEncoderOutputMetadata. If no alignment required, 1 should be reported to convey 1 byte (trivial) alignment.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.MaxEncoderOutputMetadataBufferSize">
    <summary>
      <para>Receives a UINT indicating the maximum size in bytes needed for the <see cref="ID3D12Resource" /> that will be allocated by the host and used as output in the <see cref="EncodeFrame" /> for output encoder metadata based on the input arguments.</para>
    </summary>
  </member>
</doc>