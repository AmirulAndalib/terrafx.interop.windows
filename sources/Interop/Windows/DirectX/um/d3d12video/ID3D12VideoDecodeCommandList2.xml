<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12VideoDecodeCommandList2.ExecuteExtensionCommand">
    <summary>
      <para>Records a command to execute a video extension command into a decode command list.</para>
    </summary>
    <param name="pExtensionCommand">
      <para>Pointer to an <see cref="ID3D12VideoExtensionCommand" /> representing the video extension command to execute.  The caller is responsible for maintaining object lifetime until command execution is complete.</para>
    </param>
    <param name="pExecutionParameters">
      <para>A pointer to the execution parameters structure, which is defined by the command.  The parameters structure must match the parameters enumerated by a call to <see cref="ID3D12VideoDevice.CheckFeatureSupport" /> with the feature value of <see cref="D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETERS" /> and a parameter stage value of <see cref="D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_EXECUTION" />.</para>
    </param>
    <param name="ExecutionParametersSizeInBytes">
      <para>The size of the <i>pExecutionParameters</i> parameter structure, in bytes.</para>
    </param>
    <remarks>
      <para>Errors initializing the extension command are reported via debug layers and the return value of the command list's <see cref="Close" /> method.</para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList2.InitializeExtensionCommand">
    <summary>
      <para>Records a command to initializes or re-initializes a video extension command into a video decode command list.</para>
    </summary>
    <param name="pExtensionCommand">
      <para>Pointer to an <see cref="ID3D12VideoExtensionCommand" /> representing the video extension command to initialize.  The caller is responsible for maintaining object lifetime until command execution is complete.</para>
    </param>
    <param name="pInitializationParameters">
      <para>A pointer to the creation parameters structure, which is defined by the command.  The parameters structure must match the parameters enumerated by a call to <see cref="ID3D12VideoDevice.CheckFeatureSupport" /> with the feature value of <see cref="D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETERS" /> and a parameter stage value of <see cref="D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_INITIALIZATION" />.</para>
    </param>
    <param name="InitializationParametersSizeInBytes">
      <para>The size of the <i>pInitializationParameters</i> parameter structure, in bytes.</para>
    </param>
    <remarks>
      <para>Errors initializing the extension command are reported via debug layers and the return value of the command list's <see cref="Close" /> method.</para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList2.SetProtectedResourceSession">
    <summary>
      <para>Specifies whether or not protected resources can be accessed by subsequent commands in the video decode command list. By default, no protected resources are enabled. After calling <b>SetProtectedResourceSession</b> with a valid session, protected resources of the same type can refer to that session. After calling <b>SetProtectedResourceSession</b> with <b>NULL</b>, no protected resources can be accessed.</para>
    </summary>
    <param name="pProtectedResourceSession">
      <para>An optional pointer to an <see cref="ID3D12ProtectedResourceSession" />. You can obtain an <b>ID3D12ProtectedResourceSession</b> by calling <see cref="ID3D12Device4.CreateProtectedResourceSession" />.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList2">
    <summary>
      <para>Encapsulates a list of graphics commands for video decoding. This interface inherits from <see cref="ID3D12VideoDecodeCommandList1" /> and adds support for video extension commands.</para>
    </summary>
  </member>
</doc>