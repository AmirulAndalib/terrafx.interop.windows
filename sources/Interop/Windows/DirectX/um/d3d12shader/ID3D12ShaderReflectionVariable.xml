<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12ShaderReflectionVariable.GetBuffer">
    <summary>
      <para>Returns the <see cref="ID3D12ShaderReflectionConstantBuffer" /> of the present <see cref="ID3D12ShaderReflectionVariable" />.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="ID3D12ShaderReflectionConstantBuffer" />*</b></para>
      <para>Returns a pointer to the <see cref="ID3D12ShaderReflectionConstantBuffer" /> of the present <see cref="ID3D12ShaderReflectionVariable" />.</para>
    </returns>
    <seealso cref="ID3D12ShaderReflectionVariable" />
  </member>
  <member name="ID3D12ShaderReflectionVariable.GetDesc">
    <summary>
      <para>Gets a shader-variable description.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D12_SHADER_VARIABLE_DESC" />*</b></para>
      <para>A pointer to a shader-variable description (see <see cref="D3D12_SHADER_VARIABLE_DESC" />).</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>This method can be used to determine if the <see cref="ID3D12ShaderReflectionVariable Interface" /> is valid, the method returns <b>E_FAIL</b> when the variable is not valid.</para>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionVariable" />
  </member>
  <member name="ID3D12ShaderReflectionVariable.GetInterfaceSlot">
    <summary>
      <para>Gets the corresponding interface slot for a variable that represents an interface pointer.</para>
    </summary>
    <param name="uArrayIndex">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>The index of the array element to get the slot number for.
For a non-array variable this value will be zero.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Returns the index of the interface in the interface array.</para>
    </returns>
    <remarks>
      <para>GetInterfaceSlot gets the corresponding slot in a dynamic linkage array for an interface instance.
The returned slot number is used to set an interface instance to a particular class instance.
See the HLSL <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/overviews-direct3d-11-hlsl-dynamic-linking-class">Interfaces and Classes</a> overview for additional information.</para>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionVariable" />
  </member>
  <member name="ID3D12ShaderReflectionVariable.GetType">
    <summary>
      <para>Gets a shader-variable type.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="ID3D12ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D12ShaderReflectionType Interface" />.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionVariable" />
  </member>
  <member name="ID3D12ShaderReflectionVariable">
    <summary>
      <para>This shader-reflection interface provides access to a variable.</para>
    </summary>
    <remarks>
      <para>To get a shader-reflection-variable interface, call a method like <see cref="ID3D12ShaderReflection.GetVariableByName" />. This isn't a COM interface, so you don't need to worry about reference counts or releasing the interface when you're done with it.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/d3d12-graphics-reference-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>