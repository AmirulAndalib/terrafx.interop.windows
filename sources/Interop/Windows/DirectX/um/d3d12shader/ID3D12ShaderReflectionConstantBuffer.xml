<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12ShaderReflectionConstantBuffer.GetDesc">
    <summary>
      <para>Gets a constant-buffer description.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D12_SHADER_BUFFER_DESC" />*</b></para>
      <para>A shader-buffer description, as a pointer to a <see cref="D3D12_SHADER_BUFFER_DESC" /> structure.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionConstantBuffer" />
  </member>
  <member name="ID3D12ShaderReflectionConstantBuffer.GetVariableByIndex">
    <summary>
      <para>Gets a shader-reflection variable by index.</para>
    </summary>
    <param name="Index">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based index.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D12ShaderReflectionVariable" />*</b></para>
      <para>A pointer to a shader-reflection variable interface (see <see cref="ID3D12ShaderReflectionVariable Interface" />).</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionConstantBuffer" />
  </member>
  <member name="ID3D12ShaderReflectionConstantBuffer.GetVariableByName">
    <summary>
      <para>Gets a shader-reflection variable by name.</para>
    </summary>
    <param name="Name">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>Variable name.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D12ShaderReflectionVariable" />*</b></para>
      <para>Returns a sentinel object (end of list marker). To determine if GetVariableByName successfully completed, call <see cref="ID3D12ShaderReflectionVariable.GetDesc" /> and check the returned <b>HRESULT</b>; any return value other than success means that GetVariableByName failed.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D12ShaderReflectionConstantBuffer" />
  </member>
  <member name="ID3D12ShaderReflectionConstantBuffer">
    <summary>
      <para>This shader-reflection interface provides access to a constant buffer.</para>
    </summary>
    <remarks>
      <para>To create a constant-buffer interface, call <see cref="ID3D12ShaderReflection.GetConstantBufferByIndex" /> or <see cref="ID3D12ShaderReflection.GetConstantBufferByName" />. This isn't a COM interface, so you don't need to worry about reference counts or releasing the interface when you're done with it.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/d3d12-graphics-reference-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>