<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1CommandSink1.SetPrimitiveBlend1">
    <summary>
      <para>Sets a new primitive blend mode.</para>
    </summary>
    <param name="primitiveBlend">
      <para>Type: <b><see cref="D2D1_PRIMITIVE_BLEND" /></b></para>
      <para>The primitive blend that will apply to subsequent primitives.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <h3>Blend modes</h3>
      <para>For aliased rendering (except for MIN mode), the output value O is computed by linearly interpolating the value <i>blend(S, D)</i> with the destination pixel value, based on the amount that the primitive covers the destination pixel.</para>
      <para>The table here shows the primitive blend modes for both aliased and antialiased blending. The equations listed in the table  use these elements:</para>
      <list type="bullet">
        <item>
          <description>O = Output</description>
        </item>
        <item>
          <description>S = Source</description>
        </item>
        <item>
          <description>SA = Source Alpha</description>
        </item>
        <item>
          <description>D = Destination</description>
        </item>
        <item>
          <description>DA = Destination Alpha</description>
        </item>
        <item>
          <description>C = Pixel coverage</description>
        </item>
      </list>
      <list type="table">
        <listheader>
          <description>Primitive blend mode</description>
          <description>Aliased blending</description>
          <description>Antialiased blending</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>D2D1_PRIMITIVE_BLEND_SOURCE_OVER</description>
          <description>O = (S + (1 – SA) * D) * C + D * (1 – C)</description>
          <description>O = S * C + D *(1 – SA *C)</description>
          <description>The standard source-over-destination blend mode.</description>
        </item>
        <item>
          <description>D2D1_PRIMITIVE_BLEND_COPY</description>
          <description>O = S * C + D * (1 – C)</description>
          <description>O = S * C + D * (1 – C)</description>
          <description>The source is copied to the destination; the destination pixels are ignored.</description>
        </item>
        <item>
          <description>D2D1_PRIMITIVE_BLEND_MIN</description>
          <description>O = Min(S + 1-SA, D) </description>
          <description>O = Min(S * C + 1 – SA *C, D)</description>
          <description>The resulting pixel values use the minimum of the source and destination pixel values. Available in Windows 8 and later.</description>
        </item>
        <item>
          <description>D2D1_PRIMITIVE_BLEND_ADD</description>
          <description>O = (S + D) * C + D * (1 – C)</description>
          <description>O = S * C + D</description>
          <description>The resulting pixel values are the sum of the source and destination pixel values. Available in Windows 8 and later.</description>
        </item>
      </list>
      <para>
        <img alt="An illustration of Direct2D primitive blend modes with varying opacity and backgrounds." src="https://docs.microsoft.com/windows/win32/api/d2d1_2mages/PrimBlendDemo.png" />
      </para>
      <para>An illustration of the primitive blend modes with varying opacity and backgrounds.</para>
      <para>The primitive blend will apply to all of the primitive drawn on the context, unless this is overridden with the <i>compositeMode</i> parameter on the <see cref="DrawImage" /> API.</para>
      <para>The primitive blend applies to the interior of any primitives drawn on the context. In the case of <see cref="DrawImage" />, this will be implied by the image rectangle, offset and world transform.</para>
      <para>If the primitive blend is anything other than <b>D2D1_PRIMITIVE_BLEND_OVER</b> then ClearType rendering will be turned off. If the application explicitly forces ClearType rendering in these modes, the drawing context will be placed in an error state. D2DERR_WRONG_STATE will be returned from either <see cref="EndDraw" /> or <see cref="Flush" />.</para>
    </remarks>
    <seealso cref="ID2D1CommandSink1" />
  </member>
  <member name="ID2D1CommandSink1">
    <summary>
      <para>This interface performs all the same functions as the existing <see cref="ID2D1CommandSink" /> interface. It also enables access to the new primitive blend modes, MIN and ADD, through its <a href="https://docs.microsoft.com//windows/desktop/Direct2D/id2d1commandsink-setprimitiveblend1">SetPrimitiveBlend1</a> method.</para>
    </summary>
    <seealso cref="ID2D1CommandSink" />
  </member>
</doc>