<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IXAudio2VoiceCallback.OnBufferEnd">
    <summary>Called when the voice finishes processing a buffer.</summary>
    <param name="pBufferContext">Context pointer assigned to the <b>pContext</b> member of the <see cref="XAUDIO2_BUFFER" /> structure when the buffer was submitted.</param>
  </member>
  <member name="IXAudio2VoiceCallback.OnBufferStart">
    <summary>Called when the voice is about to start processing a new audio buffer.</summary>
    <param name="pBufferContext">Context pointer that was assigned to the pContext member of the <see cref="XAUDIO2_BUFFER" /> structure when the buffer was submitted.</param>
  </member>
  <member name="IXAudio2VoiceCallback.OnLoopEnd">
    <summary>Called when the voice reaches the end position of a loop.</summary>
    <param name="pBufferContext">Context pointer that was assigned to the <b>pContext</b> member of the <see cref="XAUDIO2_BUFFER" /> structure when the buffer was submitted.</param>
  </member>
  <member name="IXAudio2VoiceCallback.OnStreamEnd">
    <summary>Called when the voice has just finished playing a contiguous audio stream.</summary>
  </member>
  <member name="IXAudio2VoiceCallback.OnVoiceError">
    <summary>Called when a critical error occurs during voice processing.</summary>
    <param name="pBufferContext">Context pointer that was assigned to the <b>pContext</b> member of the <see cref="XAUDIO2_BUFFER" /> structure when the buffer was submitted.</param>
    <param name="Error">The HRESULT code of the error encountered.</param>
  </member>
  <member name="IXAudio2VoiceCallback.OnVoiceProcessingPassEnd">
    <summary>Called just after the processing pass for the voice ends.</summary>
  </member>
  <member name="IXAudio2VoiceCallback.OnVoiceProcessingPassStart">
    <summary>Called during each processing pass for each voice, just before XAudio2 reads data from the voice's buffer queue.</summary>
    <param name="BytesRequired">
      <para>The number of bytes that must be submitted immediately to avoid starvation. This allows the implementation of just-in-time streaming scenarios; the client can keep the absolute minimum data queued on the voice at all times, and pass it fresh data just before the data is required. This model provides the lowest possible latency attainable with XAudio2. For xWMA and XMA data <i>BytesRequired</i> will always be zero, since the concept of a frame of xWMA or XMA data is meaningless.</para>
      <div>
        <b>Note</b>  In a situation where there is always plenty of data available on the source voice, <i>BytesRequired</i> should always report zero, because it doesn't need any samples immediately to avoid glitching.</div>
    </param>
  </member>
</doc>