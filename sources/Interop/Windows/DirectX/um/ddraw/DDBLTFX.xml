<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DDBLTFX">
    <summary>The DDBLTFX structure passes raster operations (ROPs), effects, and override information to the <see cref="IDirectDrawSurface7.Blt" /> method. This structure is also part of the <see cref="DDBLTBATCH" /> structure that is used with the <see cref="IDirectDrawSurface7.BltBatch" /> method.</summary>
  </member>
  <member name="DDBLTFX.dwSize">
    <summary>Size of the structure, in bytes. This member must be initialized before the structure is used.</summary>
  </member>
  <member name="DDBLTFX.dwDDFX">
    <summary>
      <para>Type of FX operations. The following types are defined.</para>
      <h4>DDBLTFX_ARITHSTRETCHY</h4>
      <para>Uses arithmetic stretching along the y-axis for this bit block transfer (bitblt).</para>
      <h4>DDBLTFX_MIRRORLEFTRIGHT</h4>
      <para>Turns the surface on its y-axis. This bitblt mirrors the surface from left to right.</para>
      <h4>DDBLTFX_MIRRORUPDOWN</h4>
      <para>Turns the surface on its x-axis. This bitblt mirrors the surface from top to bottom.</para>
      <h4>DDBLTFX_NOTEARING</h4>
      <para>Schedules this bitblt to avoid tearing.</para>
      <h4>DDBLTFX_ROTATE180</h4>
      <para>Rotates the surface 180 degrees clockwise during this bitblt.</para>
      <h4>DDBLTFX_ROTATE270</h4>
      <para>Rotates the surface 270 degrees clockwise during this bitblt.</para>
      <h4>DDBLTFX_ROTATE90</h4>
      <para>Rotates the surface 90 degrees clockwise during this bitblt.</para>
      <h4>DDBLTFX_ZBUFFERBASEDEST</h4>
      <para>Adds the <b>dwZBufferBaseDest</b> member to each of the source z-values before comparing them with the destination z-values during this z-bitblt.</para>
      <h4>DDBLTFX_ZBUFFERRANGE</h4>
      <para>Uses the <b>dwZBufferLow</b> and <b>dwZBufferHigh</b> members as range values to specify limits to the bits copied from a source surface during this z-bitblt.</para>
    </summary>
  </member>
  <member name="DDBLTFX.dwROP">
    <summary>Win32 raster operations. You can retrieve a list of supported raster operations by calling the <see cref="IDirectDraw7.GetCaps" /> method.</summary>
  </member>
  <member name="DDBLTFX.dwDDROP">
    <summary>DirectDraw raster operations.</summary>
  </member>
  <member name="DDBLTFX.dwRotationAngle">
    <summary>Rotation angle for the bitblt.</summary>
  </member>
  <member name="DDBLTFX.dwZBufferOpCode">
    <summary>Z-buffer compares.</summary>
  </member>
  <member name="DDBLTFX.dwZBufferLow">
    <summary>Low limit of a z-buffer.</summary>
  </member>
  <member name="DDBLTFX.dwZBufferHigh">
    <summary>High limit of a z-buffer.</summary>
  </member>
  <member name="DDBLTFX.dwZBufferBaseDest">
    <summary>Destination base value of a z-buffer.</summary>
  </member>
  <member name="DDBLTFX.dwZDestConstBitDepth">
    <summary>Bit depth of the destination z-constant.</summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwZDestConst"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.lpDDSZBufferDest"></member>
  <member name="DDBLTFX.dwZSrcConstBitDepth">
    <summary>Bit depth of the source z-constant.</summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwZSrcConst"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.lpDDSZBufferSrc"></member>
  <member name="DDBLTFX.dwAlphaEdgeBlendBitDepth">
    <summary>Bit depth of the constant for an alpha edge blend.</summary>
  </member>
  <member name="DDBLTFX.dwAlphaEdgeBlend">
    <summary>Alpha constant used for edge blending.</summary>
  </member>
  <member name="DDBLTFX.dwReserved">
    <summary>Reserved</summary>
  </member>
  <member name="DDBLTFX.dwAlphaDestConstBitDepth">
    <summary>Bit depth of the destination alpha constant.</summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwAlphaDestConst"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.lpDDSAlphaDest"></member>
  <member name="DDBLTFX.dwAlphaSrcConstBitDepth">
    <summary>Bit depth of the source alpha constant.</summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwAlphaSrcConst"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.lpDDSAlphaSrc"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwFillColor"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwFillDepth"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.dwFillPixel"></member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN.lpDDSPattern"></member>
  <member name="DDBLTFX.ddckDestColorkey">
    <summary>Destination color key override.</summary>
  </member>
  <member name="DDBLTFX.ddckSrcColorkey">
    <summary>Source color key override.</summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN(1)">
    <summary>
      <h4>dwZDestConst</h4>
      <para>Constant used as the z-buffer destination.</para>
      <h4>lpDDSZBufferDest</h4>
      <para>Surface used as the z-buffer destination.</para>
    </summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN(2)">
    <summary>
      <h4>dwZSrcConst</h4>
      <para>Constant used as the z-buffer destination.</para>
      <h4>lpDDSZBufferSrc</h4>
      <para>Surface used as the z-buffer source.</para>
    </summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN(3)">
    <summary>
      <h4>dwAlphaDestConst</h4>
      <para>Constant used as the alpha channel destination.</para>
      <h4>lpDDSAlphaDest</h4>
      <para>Surface used as the alpha channel destination.</para>
    </summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN(4)">
    <summary>
      <h4>dwAlphaSrcConst</h4>
      <para>Constant used as the alpha channel source.</para>
      <h4>lpDDSAlphaSrc</h4>
      <para>Surface used as the alpha channel source.</para>
    </summary>
  </member>
  <member name="DDBLTFX.DUMMYUNIONNAMEN(5)">
    <summary>
      <h4>dwFillColor</h4>
      <para>Color used to fill a surface when DDBLT_COLORFILL is specified. This value must be a pixel appropriate to the pixel format of the destination surface. For a palettized surface, it would be a palette index, and for a 16-bit RGB surface, it would be a 16-bit pixel value.</para>
      <h4>dwFillDepth</h4>
      <para>Depth value for the z-buffer.</para>
      <h4>dwFillPixel</h4>
      <para>Pixel value for RGBA or RGBZ fills. Applications that use RGBZ fills should use this member, not <b>dwFillColor</b> or <b>dwFillDepth</b>.</para>
      <h4>lpDDSPattern</h4>
      <para>Surface to use as a pattern. The pattern can be used in certain blit operations that combine a source and a destination.</para>
    </summary>
  </member>
</doc>