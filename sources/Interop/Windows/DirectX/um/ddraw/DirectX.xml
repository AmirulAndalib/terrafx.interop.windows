<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DirectX.DirectDrawCreate">
    <summary>Creates an instance of a DirectDraw object. A DirectDraw object that is created by using this function does not support the complete set of Direct3D interfaces in DirectX 7.0. To create a DirectDraw object that is capable of exposing all of the features of Direct3D in DirectX 7.0, use the <see cref="DirectDrawCreateEx" /> function.</summary>
    <param name="lpGUID">
      <para>A pointer to the globally unique identifier (GUID) that represents the driver to be created. This can be NULL to indicate the active display driver, or you can pass one of the following flags to restrict the active display driver's behavior for debugging purposes:</para>
      <h4>DDCREATE_EMULATIONONLY</h4>
      <para>The DirectDraw object uses emulation for all features; it does not take advantage of any hardware-supported features.</para>
      <h4>DDCREATE_HARDWAREONLY</h4>
      <para>The DirectDraw object never emulates features not supported by the hardware. Attempts to call methods that require unsupported features fail, returning DDERR_UNSUPPORTED.</para>
    </param>
    <param name="lplpDD">A pointer to a variable to be set to a valid <b>IDirectDraw</b> interface pointer if the call succeeds.</param>
    <param name="pUnkOuter">Allows for future compatibility with COM aggregation features. Presently, however, this function returns an error if this parameter is anything but NULL.</param>
    <returns>
      <para>If the function succeeds, the return value is DD_OK.</para>
      <para>If it fails, the function can return one of the following error values:</para>
      <list type="bullet">
        <item>
          <description>DDERR_DIRECTDRAWALREADYCREATED</description>
        </item>
        <item>
          <description>DDERR_GENERIC</description>
        </item>
        <item>
          <description>DDERR_INVALIDDIRECTDRAWGUID</description>
        </item>
        <item>
          <description>DDERR_INVALIDPARAMS</description>
        </item>
        <item>
          <description>DDERR_NODIRECTDRAWHW</description>
        </item>
        <item>
          <description>DDERR_OUTOFMEMORY</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="DirectX.DirectDrawCreateClipper">
    <summary>Creates an instance of a DirectDrawClipper object that is not associated with a DirectDraw object.</summary>
    <param name="dwFlags">Currently not used and must be set to 0.</param>
    <param name="lplpDDClipper">Address of a pointer to be filled with the address of the new DirectDrawClipper object.</param>
    <param name="pUnkOuter">Allows for future compatibility with COM aggregation features. Currently, this function returns an error if this parameter is not NULL.</param>
    <returns>
      <para>If the function succeeds, the return value is DD_OK.</para>
      <para>If it fails, the function can return one of the following error values:</para>
      <list type="bullet">
        <item>
          <description>DDERR_INVALIDPARAMS</description>
        </item>
        <item>
          <description>DDERR_OUTOFMEMORY</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="DirectX.DirectDrawCreateEx">
    <summary>Creates an instance of a DirectDraw object that supports the set of Direct3D interfaces in DirectX 7.0. To use the features of Direct3D in DirectX 7.0, create a DirectDraw object with this function.</summary>
    <param name="lpGuid">
      <para>A pointer to the globally unique identifier (GUID) that represents the driver to be created. This can be NULL to indicate the active display driver, or you can pass one of the following flags to restrict the active display driver's behavior for debugging purposes:</para>
      <h4>DDCREATE_EMULATIONONLY</h4>
      <para>The DirectDraw object uses emulation for all features; it does not take advantage of any hardware-supported features.</para>
      <h4>DDCREATE_HARDWAREONLY</h4>
      <para>The DirectDraw object never emulates features not supported by the hardware. Attempts to call methods that require unsupported features fail, returning DDERR_UNSUPPORTED.</para>
    </param>
    <param name="lplpDD">A pointer to a variable to be set to a valid <see cref="IDirectDraw7" /> interface pointer if the call succeeds.</param>
    <param name="iid">This parameter must be set to IID_IDirectDraw7. This function fails and returns DDERR_INVALIDPARAMS if any other interface is specified.</param>
    <param name="pUnkOuter">Allows for future compatibility with COM aggregation features. Currently, this function returns an error if this parameter is not NULL.</param>
    <returns>
      <para>If the function succeeds, the return value is DD_OK.</para>
      <para>If it fails, the function can return one of the following error values:</para>
      <list type="bullet">
        <item>
          <description>DDERR_DIRECTDRAWALREADYCREATED</description>
        </item>
        <item>
          <description>DDERR_GENERIC</description>
        </item>
        <item>
          <description>DDERR_INVALIDDIRECTDRAWGUID</description>
        </item>
        <item>
          <description>DDERR_INVALIDPARAMS</description>
        </item>
        <item>
          <description>DDERR_NODIRECTDRAWHW</description>
        </item>
        <item>
          <description>DDERR_OUTOFMEMORY</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerate">
    <summary>
      <para>This function is superseded by the <see cref="DirectDrawEnumerateEx" /> function.</para>
      <para>The <b>DirectDrawEnumerate</b> function enumerates the primary DirectDraw display device and a nondisplay device (such as a 3-D accelerator that has no 2-D capabilities), if one is installed. The NULL entry always identifies the primary display device shared with the GDI.</para>
    </summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbacka">DDEnumCallback</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined context to be passed to the enumeration callback function each time that it is called.</param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateA">
    <summary>
      <para>This function is superseded by the <see cref="DirectDrawEnumerateEx" /> function.</para>
      <para>The <b>DirectDrawEnumerate</b> function enumerates the primary DirectDraw display device and a nondisplay device (such as a 3-D accelerator that has no 2-D capabilities), if one is installed. The NULL entry always identifies the primary display device shared with the GDI.</para>
    </summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbacka">DDEnumCallback</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined context to be passed to the enumeration callback function each time that it is called.</param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateEx">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateExA">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateExW">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateEx">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
      <h5>- dwFlags.DDENUM_ATTACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_DETACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_NONDISPLAYDEVICES</h5>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateExA">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
      <h5>- dwFlags.DDENUM_ATTACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_DETACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_NONDISPLAYDEVICES</h5>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateExW">
    <summary>Enumerates all DirectDraw devices that are installed on the computer. The NULL entry always identifies the primary display device that is shared with GDI.</summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbackexa">DDEnumCallbackEx</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined value to be passed to the enumeration callback function each time that it is called.</param>
    <param name="dwFlags">
      <para>Flags that specify the enumeration scope. This parameter can be 0 or a combination of the following flags. If the value is 0, the function enumerates only the primary display device.</para>
      <h4>DDENUM_ATTACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h4>DDENUM_DETACHEDSECONDARYDEVICES</h4>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h4>DDENUM_NONDISPLAYDEVICES</h4>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
      <h5>- dwFlags.DDENUM_ATTACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_DETACHEDSECONDARYDEVICES</h5>
      <para>The function enumerates the primary device and any display devices that are not attached to the desktop.</para>
      <h5>- dwFlags.DDENUM_NONDISPLAYDEVICES</h5>
      <para>The function enumerates the primary device and any nondisplay devices, such as 3-D accelerators that have no 2-D capabilities.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerate">
    <summary>
      <para>This function is superseded by the <see cref="DirectDrawEnumerateEx" /> function.</para>
      <para>The <b>DirectDrawEnumerate</b> function enumerates the primary DirectDraw display device and a nondisplay device (such as a 3-D accelerator that has no 2-D capabilities), if one is installed. The NULL entry always identifies the primary display device shared with the GDI.</para>
    </summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbacka">DDEnumCallback</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined context to be passed to the enumeration callback function each time that it is called.</param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
  <member name="DirectX.DirectDrawEnumerateW">
    <summary>
      <para>This function is superseded by the <see cref="DirectDrawEnumerateEx" /> function.</para>
      <para>The <b>DirectDrawEnumerate</b> function enumerates the primary DirectDraw display device and a nondisplay device (such as a 3-D accelerator that has no 2-D capabilities), if one is installed. The NULL entry always identifies the primary display device shared with the GDI.</para>
    </summary>
    <param name="lpCallback">Address of a <a href="https://docs.microsoft.com//windows/desktop/api/ddraw/nc-ddraw-lpddenumcallbacka">DDEnumCallback</a> function to be called with a description of each enumerated DirectDraw-enabled hardware abstraction layer (HAL).</param>
    <param name="lpContext">Address of an application-defined context to be passed to the enumeration callback function each time that it is called.</param>
    <returns>
      <para>If the function succeeds, the return value is <b>DD_OK</b>.</para>
      <para>If it fails, the function returns <b>DDERR_INVALIDPARAMS</b>.</para>
    </returns>
  </member>
</doc>