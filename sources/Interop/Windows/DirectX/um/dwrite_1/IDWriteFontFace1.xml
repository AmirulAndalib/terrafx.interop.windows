<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFontFace1.GetCaretMetrics">
    <summary>Gets caret metrics for the font in design units.</summary>
    <param name="caretMetrics">A pointer to the <see cref="DWRITE_CARET_METRICS" /> structure that is filled.</param>
  </member>
  <member name="IDWriteFontFace1.GetDesignGlyphAdvances">
    <summary>Retrieves the advances in design units for a sequences of glyphs.</summary>
    <param name="glyphCount">The number of glyphs to retrieve advances for.</param>
    <param name="glyphIndices">An array of glyph id's to retrieve advances for.</param>
    <param name="glyphAdvances">The returned advances in font design units for each glyph.</param>
    <param name="isSideways">Retrieve the glyph's vertical advance height rather than horizontal advance widths.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace1.GetGdiCompatibleGlyphAdvances">
    <summary>Returns the pixel-aligned advances for a sequences of glyphs.</summary>
    <param name="emSize">Logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</param>
    <param name="pixelsPerDip">Number of physical pixels per DIP. For example, if the DPI of the rendering surface is 96 this value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
    <param name="transform">Optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and pixelsPerDip.</param>
    <param name="useGdiNatural">When FALSE, the metrics are the same as GDI aliased text (DWRITE_MEASURING_MODE_GDI_CLASSIC). When TRUE, the metrics are the same as those measured by GDI using a font using CLEARTYPE_NATURAL_QUALITY (DWRITE_MEASURING_MODE_GDI_NATURAL).</param>
    <param name="isSideways">Retrieve the glyph's vertical advances rather than horizontal advances.</param>
    <param name="glyphCount">Total glyphs to retrieve adjustments for.</param>
    <param name="glyphIndices">An array of glyph id's to retrieve advances.</param>
    <param name="glyphAdvances">The returned advances in font design units for each glyph.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace1.GetGdiCompatibleMetrics">
    <summary>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.</summary>
    <param name="emSize">The logical size of the font in DIP units.</param>
    <param name="pixelsPerDip">The number of physical pixels per DIP.</param>
    <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and <i>pixelsPerDip</i>.</param>
    <param name="fontMetrics">A pointer to a <see cref="DWRITE_FONT_METRICS1" /> structure to fill in. The metrics returned by this function are in font design units.</param>
    <returns>Standard HRESULT error code.</returns>
  </member>
  <member name="IDWriteFontFace1.GetKerningPairAdjustments">
    <summary>Retrieves the kerning pair adjustments from the font's kern table.</summary>
    <param name="glyphCount">Number of glyphs to retrieve adjustments for.</param>
    <param name="glyphIndices">An array of glyph id's to retrieve adjustments for.</param>
    <param name="glyphAdvanceAdjustments">The advances, returned in font design units, for each glyph. The last glyph adjustment is zero.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace1.GetMetrics">
    <summary>Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.</summary>
    <param name="fontMetrics">A filled <see cref="DWRITE_FONT_METRICS1" /> structure that holds metrics for the current font face element. The metrics returned by this method are in font design units.</param>
  </member>
  <member name="IDWriteFontFace1.GetRecommendedRenderingMode">
    <summary>Determines the recommended rendering mode for the font, using the specified size and rendering parameters.</summary>
    <param name="fontEmSize">The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</param>
    <param name="dpiX">The number of physical pixels per DIP in a horizontal position. For example, if the DPI of the rendering surface is 96, this value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
    <param name="dpiY">The number of physical pixels per DIP in a vertical position. For example, if the DPI of the rendering surface is 96, this value is 1.0f. If the DPI is 120, this value is 120.0f/96.</param>
    <param name="transform">Specifies the world transform.</param>
    <param name="isSideways">Whether the glyphs in the run are sideways or not.</param>
    <param name="outlineThreshold">A <see cref="DWRITE_OUTLINE_THRESHOLD" />-typed value that specifies the quality of the graphics system's outline rendering, affects the size threshold above which outline rendering is used.</param>
    <param name="measuringMode">
      <para>The measuring method that will be used for glyphs in the font. Renderer implementations may choose different rendering modes for different measuring methods, for example:</para>
      <list type="bullet">
        <item>
          <description>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL for <see cref="DWRITE_MEASURING_MODE_NATURAL" /></description>
        </item>
        <item>
          <description>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC for <see cref="DWRITE_MEASURING_MODE_GDI_CLASSIC" /></description>
        </item>
        <item>
          <description>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL for <see cref="DWRITE_MEASURING_MODE_GDI_NATURAL" /></description>
        </item>
      </list>
    </param>
    <param name="renderingMode">When this method returns, contains a value that indicates the recommended rendering mode to use.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace1.GetUnicodeRanges">
    <summary>Retrieves a list of character ranges supported by a font.</summary>
    <param name="maxRangeCount">Maximum number of character ranges passed in from the client.</param>
    <param name="unicodeRanges">An array of <see cref="DWRITE_UNICODE_RANGE" /> structures that are filled with the character ranges.</param>
    <param name="actualRangeCount">A pointer to the actual number of character ranges, regardless of the maximum count.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>S_OK</term>
              </listheader>
            </list>
          </description>
          <description>The method executed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>E_NOT_SUFFICIENT_BUFFER</term>
              </listheader>
            </list>
          </description>
          <description>The buffer is too small. The <i>actualRangeCount</i> was more than the <i>maxRangeCount</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IDWriteFontFace1.GetVerticalGlyphVariants">
    <summary>Retrieves the vertical forms of the nominal glyphs retrieved from GetGlyphIndices.</summary>
    <param name="glyphCount">The number of glyphs to retrieve.</param>
    <param name="nominalGlyphIndices">Original glyph indices from cmap.</param>
    <param name="verticalGlyphIndices">The vertical form of glyph indices.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace1.HasKerningPairs">
    <summary>Determines whether the font supports pair-kerning.</summary>
    <returns>Returns TRUE if the font supports kerning pairs, otherwise FALSE.</returns>
  </member>
  <member name="IDWriteFontFace1.HasVerticalGlyphVariants">
    <summary>Determines whether the font has any vertical glyph variants.</summary>
    <returns>Returns TRUE if the font contains vertical glyph variants, otherwise FALSE.</returns>
  </member>
  <member name="IDWriteFontFace1.IsMonospacedFont">
    <summary>Determines whether the font of a text range is monospaced, that is, the font characters are the same fixed-pitch width.</summary>
    <returns>Returns TRUE if the font is monospaced, otherwise it returns FALSE.</returns>
  </member>
  <member name="IDWriteFontFace1">
    <summary>
      <para>Represents an absolute reference to a font face. This interface contains font face type, appropriate file references, and face identification data.</para>
      <para>This interface extends <see cref="IDWriteFontFace" />. Various font data such as metrics, names, and glyph outlines are obtained from <b>IDWriteFontFace</b>.</para>
    </summary>
  </member>
</doc>