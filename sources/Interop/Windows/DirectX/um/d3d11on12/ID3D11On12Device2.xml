<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11On12Device2.ReturnUnderlyingResource">
    <summary>With this method, you can return a Direct3D 11 resource object to Direct3D11On12, and indicate (by way of fences and fence signal values) when the resource will be ready for Direct3D11On12 to consume. You should call <b>ReturnUnderlyingResource</b> once Direct3D 12 work has been scheduled.</summary>
    <param name="pResource11">The Direct3D 11 resource object that you wish to return.</param>
    <param name="NumSync">The number of elements in the arrays pointed to by <i>pSignalValues</i> and <i>ppFences</i>.</param>
    <param name="pSignalValues">A pointer to an array of fence signal values.</param>
    <param name="ppFences">A pointer to an array of fence objects.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/desktop/com/com-error-codes-10">error code</a>.</returns>
  </member>
  <member name="ID3D11On12Device2.UnwrapUnderlyingResource">
    <summary>Unwraps a Direct3D 11 resource object, and retrieves it as a Direct3D 12 resource object.</summary>
    <param name="pResource11">The Direct3D 11 resource object to unwrap.</param>
    <param name="pCommandQueue">The command queue on which your application plans to use the resource. Any pending work accessing the resource causes fence waits to be scheduled on this queue. You can then queue further work on this queue, including a signal on a caller-owned fence.</param>
    <param name="riid">A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <code>ppvResource12</code>.</param>
    <param name="ppvResource12">A pointer to a memory block that receives a pointer to the Direct3D 12 resource.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/desktop/com/com-error-codes-10">error code</a>.</returns>
  </member>
  <member name="ID3D11On12Device2">
    <summary>Enables you to take resources created through the Direct3D 11 APIs, and use them in Direct3D 12. This interface extends <see cref="ID3D11On12Device1" />.</summary>
  </member>
</doc>