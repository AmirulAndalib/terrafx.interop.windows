<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11On12Device1.GetD3D12Device">
    <summary>Retrieves the <see cref="Direct3D 12 device" /> being interoperated with. This enables better interoperability with a component that might be handed a Direct3D 11 device, but which wants to leverage Direct3D 12 instead.</summary>
    <param name="riid">A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <code>ppvDevice</code>. This is expected to be the GUID of <see cref="ID3D12Device" />.</param>
    <param name="ppvDevice">A pointer to a memory block that receives a pointer to the device. This is the address of a pointer to an <see cref="ID3D12Device" />, representing the Direct3D 12 device.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/desktop/com/com-error-codes-10">error code</a>.</returns>
  </member>
  <member name="ID3D11On12Device1">
    <summary>Enables better interoperability with a component that might be handed a Direct3D 11 device, but which wants to leverage Direct3D 12 instead. This interface extends <see cref="ID3D11On12Device" /> to retrieve the <see cref="Direct3D 12 device" /> being interoperated with.</summary>
  </member>
</doc>