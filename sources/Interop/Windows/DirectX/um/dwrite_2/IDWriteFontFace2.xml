<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFontFace2.GetColorPaletteCount">
    <summary>Gets the number of color palettes defined by the font.</summary>
    <returns>The return value is zero if the font has no color information. Color fonts are required to define at least one palette, with palette index zero reserved as the default palette.</returns>
  </member>
  <member name="IDWriteFontFace2.GetPaletteEntries">
    <summary>Gets color values from the font's color palette.</summary>
    <param name="colorPaletteIndex">Zero-based index of the color palette. If the font does not have a palette with the specified index, the method returns <b>DWRITE_E_NOCOLOR</b>.</param>
    <param name="firstEntryIndex">Zero-based index of the first palette entry to read.</param>
    <param name="entryCount">Number of palette entries to read.</param>
    <param name="paletteEntries">Array that receives the color values.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>E_INVALIDARG</term>
              </listheader>
            </list>
          </description>
          <description>The sum of <i>firstEntryIndex</i> and <i>entryCount</i> is greater than the actual number of palette entries that's returned by the <see cref="GetPaletteEntryCount" /> method.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>DWRITE_E_NOCOLOR</term>
              </listheader>
            </list>
          </description>
          <description>The font doesn't have a palette with the specified palette index.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IDWriteFontFace2.GetPaletteEntryCount">
    <summary>Get the number of entries in each color palette.</summary>
    <returns>The number of entries in each color palette. All color palettes in a font have the same number of palette entries. The return value is zero if the font has no color information.</returns>
  </member>
  <member name="IDWriteFontFace2.GetRecommendedRenderingMode">
    <summary>Determines the recommended text rendering and grid-fit mode to be used based on the font, size, world transform, and measuring mode.</summary>
    <param name="fontEmSize">Logical font size in DIPs.</param>
    <param name="dpiX">Number of pixels per logical inch in the horizontal direction.</param>
    <param name="dpiY">Number of pixels per logical inch in the vertical direction.</param>
    <param name="transform">A <see cref="DWRITE_MATRIX" /> structure that describes the world transform.</param>
    <param name="isSideways">Specifies whether the font is sideways. <b>TRUE</b> if the font is sideways; otherwise, <b>FALSE</b>.</param>
    <param name="outlineThreshold">A <see cref="DWRITE_OUTLINE_THRESHOLD" />-typed value that specifies the quality of the graphics system's outline rendering, affects the size threshold above which outline rendering is used.</param>
    <param name="measuringMode">A <see cref="DWRITE_MEASURING_MODE" />-typed value that specifies the method used to measure during text layout. For proper glyph spacing, this method returns a rendering mode that is compatible with the specified measuring mode.</param>
    <param name="renderingParams">A pointer to a <see cref="IDWriteRenderingParams" /> interface for the rendering parameters object. This parameter is necessary in case the rendering parameters object overrides the rendering mode.</param>
    <param name="renderingMode">A pointer to a variable that receives a <see cref="DWRITE_RENDERING_MODE" />-typed value for the recommended rendering mode.</param>
    <param name="gridFitMode">A pointer to a variable that receives a <see cref="DWRITE_GRID_FIT_MODE" />-typed value for the recommended grid-fit mode.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFace2.IsColorFont">
    <summary>Allows you to determine if a color rendering path is potentially necessary.</summary>
    <returns>Returns <b>TRUE</b> if a color rendering path is potentially necessary.</returns>
  </member>
  <member name="IDWriteFontFace2">
    <summary>
      <para>Represents an absolute reference to a font face. This interface contains font face type, appropriate file references, and face identification data. It adds the ability to check whether a color rendering path is potentially necessary.</para>
      <para>This interface extends <see cref="IDWriteFontFace1" />. Various font data such as metrics, names, and glyph outlines are obtained from <b>IDWriteFontFace</b>.</para>
    </summary>
  </member>
</doc>