<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFontFallbackBuilder.AddMapping">
    <summary>Appends a single mapping to the list. Call this once for each additional mapping.</summary>
    <param name="ranges">Unicode ranges that apply to this mapping.</param>
    <param name="rangesCount">Number of Unicode ranges.</param>
    <param name="targetFamilyNames">List of target family name strings.</param>
    <param name="targetFamilyNamesCount">Number of target family names.</param>
    <param name="fontCollection">Optional explicit font collection for this mapping.</param>
    <param name="localeName">Locale of the context.</param>
    <param name="baseFamilyName">Base family name to match against, if applicable.</param>
    <param name="scale">Scale factor to multiply the result target font by.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFallbackBuilder.AddMappings">
    <summary>Adds all the mappings from an existing font fallback object, which can be used to compose larger fallback definitions. A common scenario is to start with the system fallback from <see cref="IDWriteFactory2.GetSystemFontFallback" /> to cover the majority of Unicode characters, but then customize a few ranges with additional application-specific entries, either appending them first (to have priority over the system default) before calling <b>AddMappings</b>; or calling <b>AddMappings</b> first, and then appending custom ranges to fill in any custom gaps.</summary>
    <param name="fontFallback">An existing font fallback object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFallbackBuilder.CreateFontFallback">
    <summary>Creates the finalized fallback object from the mappings added.</summary>
    <param name="fontFallback">Contains an address of a pointer to the created fallback list.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFallbackBuilder">
    <summary>Allows you to create Unicode font fallback mappings and create a font fall back object from those mappings.</summary>
  </member>
</doc>