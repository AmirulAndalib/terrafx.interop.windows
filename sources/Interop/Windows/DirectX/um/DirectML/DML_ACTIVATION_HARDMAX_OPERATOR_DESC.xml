<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DML_ACTIVATION_HARDMAX_OPERATOR_DESC">
    <summary>
      <para>Performs a hardmax function on each element of <i>InputTensor</i>, placing the result into the corresponding element of <i>OutputTensor</i>.</para>
      <para>The operator computes the hardmax (1 for the first occurrence of the largest value in the layer, and 0 for all other values) of each row in the given input.</para>
    </summary>
    <remarks>
      <para>The operator computes the hardmax (1 for the first maximum value, and 0 for all others) values for each layer in the batch of the given input. The input is a 2-D tensor (Tensor) of size (batch_size x input_feature_dimensions). The output tensor has the same shape and contains the hardmax values of the corresponding input.</para>
    </remarks>
    <seealso cref="DML_ARGMAX_OPERATOR_DESC structure" />
  </member>
  <member name="DML_ACTIVATION_HARDMAX_OPERATOR_DESC.InputTensor">
    <summary>
      <para>Type: <b>const <see cref="DML_TENSOR_DESC" />*</b></para>
      <para>The tensor to read from for the input. This tensor must have an <i>effective rank</i> no greater than 2. The effective rank of a tensor is the <i>DimensionCount</i> of the tensor, excluding leftmost dimensions of size 1. For example a tensor size of <code>{ 1, 1, BatchCount, Width }</code> is valid, and is equivalent to a tensor of sizes <code>{ BatchCount, Width }</code>.</para>
    </summary>
  </member>
  <member name="DML_ACTIVATION_HARDMAX_OPERATOR_DESC.OutputTensor">
    <summary>
      <para>Type: <b>const <see cref="DML_TENSOR_DESC" />*</b></para>
      <para>The output tensor to write the results to.</para>
    </summary>
  </member>
</doc>