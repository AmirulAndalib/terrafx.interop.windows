<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDCompositionTexture.GetAvailableFence">
    <summary>
      <para>Retrieves a Direct3D synchronization fence/value pair that indicates when the composition texture will become available, if that info is known. The value returned depends on the availability state of the composition texture. An availability state specifies whether, and when, it's safe to render to the composition texture.</para>
      <para>See the <b>Remarks</b> section for the availability states, their descriptions, and how <b>GetAvailableFence</b> behaves for each state.</para>
      <para>If a composition texture becomes available, then your app must be careful to issue rendering only to the exact subregion of the Direct3D texture that it refers to.</para>
    </summary>
    <param name="fenceValue">The returned fence value.</param>
    <param name="iid">An interface identifier.</param>
    <param name="availableFence">The returned available fence, or <code>nullptr</code>, depending on the availability state of the composition texture. For details, see the <b>Remarks</b> section.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">HRESULT</a> error code.</returns>
  </member>
  <member name="IDCompositionTexture.SetAlphaMode">
    <summary>Informs the <a href="https://docs.microsoft.com//windows/win32/dwm/dwm-overview">Desktop Window Manager (DWM)</a> whether alpha pixels in the texture should be honored or ignored.</summary>
    <param name="alphaMode">
      <para>Indicates whether alpha pixels in the texture should be honored or ignored.</para>
      <para>| Value | Meaning | | - | - | | <b>DXGI_ALPHA_MODE_UNSPECIFIED</b> | The alpha channel isn't specified. This value has the same effect as <b>DXGI_ALPHA_MODE_IGNORE</b>. | | <b>DXGI_ALPHA_MODE_PREMULTIPLIED</b> | The color channels contain values that are premultiplied with the alpha channel. | | <b>DXGI_ALPHA_MODE_IGNORE</b> | The alpha channel should be ignored, and the bitmap should be rendered opaquely. |</para>
    </param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">HRESULT</a> error code.</returns>
  </member>
  <member name="IDCompositionTexture.SetColorSpace">
    <summary>Informs the system of the color space that it should map the texture into.</summary>
    <param name="colorSpace">Specifies the color space to use.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">HRESULT</a> error code.</returns>
  </member>
  <member name="IDCompositionTexture.SetSourceRect">
    <summary>Specifies the portion of an overall Direct3D texture that the composition texture represents (and samples from). This allows you to have multiple composition textures referencing the same Direct3D texture.</summary>
    <param name="sourceRect">The region of a Direct3D texture that the composition texture represents.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">HRESULT</a> error code.</returns>
  </member>
  <member name="IDCompositionTexture">
    <summary>
      <para>The interface to an object that represents a raw Direct3D texture that can be bound to a composition visual as content. The object can be used anywhere that a generic composition surface can be used in those APIs today—for example, as the content of a sprite visual or a surface brush. The object exposes an available fence, which can be used to synchronize application rendering and composition work. Can also accept various attributes, such as an alpha mode, source rect, and color space, to more precisely define the content being displayed.</para>
      <para>The composition textures API supports Direct3D 11 only.</para>
    </summary>
  </member>
</doc>