<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFontFileLoader.CreateStreamFromKey">
    <summary>
      <para>Creates a font file stream object that encapsulates an open file resource.</para>
    </summary>
    <param name="fontFileReferenceKey">
      <para>Type: <b>const void*</b></para>
      <para>A pointer to a font file reference key that uniquely identifies the font file resource
within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by <i> fontFileReferenceKeySize</i>.</para>
    </param>
    <param name="fontFileReferenceKeySize">
      <para>Type: <b>UINT32</b></para>
      <para>The size of font file reference key, in bytes.</para>
    </param>
    <param name="fontFileStream">
      <para>Type: <b><see cref="IDWriteFontFileStream" />**</b></para>
      <para>When this method returns, contains the address of a pointer to the newly created <see cref="IDWriteFontFileStream" /> object.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>The resource is closed when the last reference to <i>fontFileStream</i> is released.</para>
    </remarks>
    <seealso cref="IDWriteFontFileLoader" />
  </member>
  <member name="IDWriteFontFileLoader">
    <summary>
      <para>Handles loading font file resources of a particular type from a font file reference key into a font file stream object.</para>
    </summary>
    <remarks>
      <para>The font file loader interface is recommended to be implemented by a singleton object. Note that font file loader implementations must not register themselves with DirectWrite factory inside their constructors and must not unregister themselves in their destructors, because registration and unregistration operations increment and decrement the object reference count respectively. Instead, registration and unregistration of font file loaders with DirectWrite factory should be performed outside of the font file loader implementation as a separate step.</para>
    </remarks>
  </member>
</doc>