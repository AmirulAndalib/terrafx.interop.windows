<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteTextAnalysisSink.SetBidiLevel">
    <summary>Sets a bidirectional level on the range, which is called once per run change (either explicit or resolved implicit).</summary>
    <param name="textPosition">The starting position from which to report.</param>
    <param name="textLength">The number of UTF16 units of the reported range.</param>
    <param name="explicitLevel">The explicit level from the paragraph reading direction and any embedded control codes RLE/RLO/LRE/LRO/PDF, which is determined before any additional rules.</param>
    <param name="resolvedLevel">The final implicit level considering the explicit level and characters' natural directionality, after all Bidi rules have been applied.</param>
    <returns>A successful code or error code to stop analysis.</returns>
  </member>
  <member name="IDWriteTextAnalysisSink.SetLineBreakpoints">
    <summary>Sets line-break opportunities for each character, starting from the specified position.</summary>
    <param name="textPosition">The starting text position from which to report.</param>
    <param name="textLength">The number of UTF16 units of the reported range.</param>
    <param name="lineBreakpoints">A pointer to a structure that contains breaking conditions set for each character from the starting position to the end of the specified range.</param>
    <returns>A successful code or error code to stop analysis.</returns>
  </member>
  <member name="IDWriteTextAnalysisSink.SetNumberSubstitution">
    <summary>Sets the number substitution on the text range affected by the text analysis.</summary>
    <param name="textPosition">The starting position from which to report.</param>
    <param name="textLength">The number of UTF16 units of the reported range.</param>
    <param name="numberSubstitution">An object that holds the appropriate digits and numeric punctuation for a given locale. Use <see cref="IDWriteFactory.CreateNumberSubstitution" /> to create this object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextAnalysisSink.SetScriptAnalysis">
    <summary>Reports script analysis for the specified text range.</summary>
    <param name="textPosition">The starting position from which to report.</param>
    <param name="textLength">The number of UTF16 units of the reported range.</param>
    <param name="scriptAnalysis">A pointer to a structure that contains a zero-based index representation of a writing system script and a value indicating whether additional shaping of text is required.</param>
    <returns>A successful code or error code to stop analysis.</returns>
  </member>
  <member name="IDWriteTextAnalysisSink">
    <summary>This interface is implemented by the text analyzer's client to receive the output of a given text analysis.</summary>
  </member>
</doc>