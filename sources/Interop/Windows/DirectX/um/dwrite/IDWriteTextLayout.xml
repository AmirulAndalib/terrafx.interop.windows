<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteTextLayout.DetermineMinWidth">
    <summary>Determines the minimum possible width the layout can be set to without emergency breaking between the characters of whole words occurring.</summary>
    <param name="minWidth">Minimum width.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.Draw">
    <summary>Draws text using the specified client drawing context.</summary>
    <param name="clientDrawingContext">An application-defined drawing context.</param>
    <param name="renderer">Pointer to the set of callback functions used to draw parts of a text string.</param>
    <param name="originX">The x-coordinate of the layout's left side.</param>
    <param name="originY">The y-coordinate of the layout's top side.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetClusterMetrics">
    <summary>Retrieves logical properties and measurements of each glyph cluster.</summary>
    <param name="clusterMetrics">When this method returns, contains metrics, such as line-break or total advance width, for a glyph cluster.</param>
    <param name="maxClusterCount">The maximum size of the <i>clusterMetrics</i> array.</param>
    <param name="actualClusterCount">When this method returns, contains the actual size of the <i>clusterMetrics</i> array that is needed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetDrawingEffect">
    <summary>Gets the application-defined drawing effect at the specified text position.</summary>
    <param name="currentPosition">The position of the text whose drawing effect is to be retrieved.</param>
    <param name="drawingEffect">When this method returns, contains an address of a pointer to the current application-defined drawing effect. Usually this effect is a foreground brush that is used in glyph drawing.</param>
    <param name="textRange">Contains the range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the drawing effect.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontCollection">
    <summary>Gets the font collection associated with the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="fontCollection">Contains an address of a pointer to the current font collection.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the underline.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontFamilyName">
    <summary>Copies the font family name of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to examine.</param>
    <param name="fontFamilyName">When this method returns, contains an array of characters that receives the current font family name. You must allocate storage for this parameter.</param>
    <param name="nameSize">The size of the character array in character count including the terminated <b>NULL</b> character.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font family name.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontFamilyNameLength">
    <summary>Get the length of the font family name at the current position.</summary>
    <param name="currentPosition">The current text position.</param>
    <param name="nameLength">When this method returns, contains the size of the character array containing the font family name, in character count, not including the terminated <b>NULL</b> character.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font family.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontSize">
    <summary>Gets the font em height of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="fontSize">When this method returns, contains the size of the font in ems of the text at the specified position.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font size.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontStretch">
    <summary>Gets the font stretch of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="fontStretch">When this method returns, contains a value which indicates the type of font stretch (also known as width) being applied at the specified position.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font stretch.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontStyle">
    <summary>Gets the font style (also known as slope) of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="fontStyle">When this method returns, contains a value which indicates the type of font style (also known as slope or incline) being applied at the specified position.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font style.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetFontWeight">
    <summary>Gets the font weight of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="fontWeight">When this method returns, contains a value which indicates the type of font weight being applied at the specified position.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the font weight.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetInlineObject">
    <summary>Gets the inline object at the specified position.</summary>
    <param name="currentPosition">The specified text position.</param>
    <param name="inlineObject">Contains the application-defined inline object.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the inline object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetLineMetrics">
    <summary>Retrieves the information about each individual text line of the text string.</summary>
    <param name="lineMetrics">When this method returns, contains a pointer to an array of structures containing various calculated length values of individual text lines.</param>
    <param name="maxLineCount">The maximum size of the <i>lineMetrics</i> array.</param>
    <param name="actualLineCount">When this method returns, contains the actual size of the <i>lineMetrics</i> array that is needed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetLocaleName">
    <summary>Gets the locale name of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="localeName">When this method returns, contains the character array receiving the current locale name.</param>
    <param name="nameSize">Size of the character array, in character count, including the terminated <b>NULL</b> character.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the locale name.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetLocaleNameLength">
    <summary>Gets the length of the locale name of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="nameLength">Size of the character array, in character count, not including the terminated <b>NULL</b> character.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the locale name.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetMaxHeight">
    <summary>Gets the layout maximum height.</summary>
    <returns>The layout maximum height.</returns>
  </member>
  <member name="IDWriteTextLayout.GetMaxWidth">
    <summary>Gets the layout maximum width.</summary>
    <returns>Returns the layout maximum width.</returns>
  </member>
  <member name="IDWriteTextLayout.GetMetrics">
    <summary>Retrieves overall metrics for the formatted string.</summary>
    <param name="textMetrics">When this method returns, contains the measured distances of text and associated content after being formatted.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetOverhangMetrics">
    <summary>Returns the overhangs (in DIPs) of the layout and all objects contained in it, including text glyphs and inline objects.</summary>
    <param name="overhangs">Overshoots of visible extents (in DIPs) outside the layout.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetStrikethrough">
    <summary>Get the strikethrough presence of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="hasStrikethrough">A Boolean flag that indicates whether strikethrough is present at the position indicated by <i>currentPosition</i>.</param>
    <param name="textRange">Contains the range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to strikethrough.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetTypography">
    <summary>Gets the typography setting of the text at the specified position.</summary>
    <param name="currentPosition">The position of the text to inspect.</param>
    <param name="typography">When this method returns, contains an address of a pointer to the current typography setting.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the typography.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.GetUnderline">
    <summary>Gets the underline presence of the text at the specified position.</summary>
    <param name="currentPosition">The current text position.</param>
    <param name="hasUnderline">A Boolean flag that indicates whether underline is present at the position indicated by <i>currentPosition</i>.</param>
    <param name="textRange">The range of text that has the same formatting as the text at the position specified by <i>currentPosition</i>. This means the run has the exact formatting as the position specified, including but not limited to the underline.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.HitTestPoint">
    <summary>The application calls this function passing in a specific pixel location relative to the top-left location of the layout box and obtains the information about the correspondent hit-test metrics of the text string where the hit-test has occurred. When the specified pixel location is outside the text string, the function sets the output value <i>*isInside</i> to<b>FALSE</b>.</summary>
    <param name="pointX">The pixel location X to hit-test, relative to the top-left location of the layout box.</param>
    <param name="pointY">The pixel location Y to hit-test, relative to the top-left location of the layout box.</param>
    <param name="isTrailingHit">An output flag that indicates whether the hit-test location is at the leading or the trailing side of the character. When the output <i>*isInside</i> value is set to <b>FALSE</b>, this value is set according to the output<i>hitTestMetrics-&gt;textPosition</i> value to represent the edge closest to the hit-test location.</param>
    <param name="isInside">An output flag that indicates whether the hit-test location is inside the text string. When <b>FALSE</b>, the position nearest the text's edge is returned.</param>
    <param name="hitTestMetrics">The output geometry fully enclosing the hit-test location. When the output <i>*isInside</i> value is set to <b>FALSE</b>, this structure represents the geometry enclosing the edge closest to the hit-test location.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.HitTestTextPosition">
    <summary>The application calls this function to get the pixel location relative to the top-left of the layout box given the text position and the logical side of the position. This function is normally used as part of caret positioning of text where the caret is drawn at the location corresponding to the current text editing position. It may also be used as a way to programmatically obtain the geometry of a particular text position in UI automation.</summary>
    <param name="textPosition">The text position used to get the pixel location.</param>
    <param name="isTrailingHit">A Boolean flag that indicates whether the pixel location is of the leading or the trailing side of the specified text position.</param>
    <param name="pointX">When this method returns, contains the output pixel location X, relative to the top-left location of the layout box.</param>
    <param name="pointY">When this method returns, contains the output pixel location Y, relative to the top-left location of the layout box.</param>
    <param name="hitTestMetrics">When this method returns, contains the output geometry fully enclosing the specified text position.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.HitTestTextRange">
    <summary>
      <para>The application calls this function to get a set of hit-test metrics corresponding to a range of text positions. One of the main usages is to implement highlight selection of the text string.</para>
      <para>The function returns E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER), when the buffer size of hitTestMetrics is too small to hold all the regions calculated by the function. In this situation, the function sets the output value *actualHitTestMetricsCount to the number of geometries calculated.</para>
      <para>The application is responsible for allocating a new buffer of greater size and calling the function again.</para>
      <para>A good value to use as an initial value for maxHitTestMetricsCount may be calculated from the following equation:</para>
      <code>maxHitTestMetricsCount = lineCount * maxBidiReorderingDepth</code>
      <para>where lineCount is obtained from the value of the output argument *actualLineCount (from the function <see cref="IDWriteTextLayout" />.GetLineLengths), and the maxBidiReorderingDepth value from the <see cref="DWRITE_TEXT_METRICS" /> structure of the output argument *textMetrics (from the function<see cref="IDWriteFactory" />.<see cref="CreateTextLayout" />).</para>
    </summary>
    <param name="textPosition">The first text position of the specified range.</param>
    <param name="textLength">The number of positions of the specified range.</param>
    <param name="originX">The origin pixel location X at the left of the layout box. This offset is added to the hit-test metrics returned.</param>
    <param name="originY">The origin pixel location Y at the top of the layout box. This offset is added to the hit-test metrics returned.</param>
    <param name="hitTestMetrics">When this method returns, contains a pointer to a buffer of the output geometry fully enclosing the specified position range. The buffer must be at least as large as <i>maxHitTestMetricsCount</i>.</param>
    <param name="maxHitTestMetricsCount">Maximum number of boxes <i>hitTestMetrics</i> could hold in its buffer memory.</param>
    <param name="actualHitTestMetricsCount">Actual number of geometries <i>hitTestMetrics</i> holds in its buffer memory.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetDrawingEffect">
    <summary>Sets the application-defined drawing effect.</summary>
    <param name="drawingEffect">Application-defined drawing effects that apply to the range. This data object will be passed back to the application's drawing callbacks for final rendering.</param>
    <param name="textRange">The text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontCollection">
    <summary>Sets the font collection.</summary>
    <param name="fontCollection">The font collection to set.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontFamilyName">
    <summary>Sets null-terminated font family name for text within a specified text range.</summary>
    <param name="fontFamilyName">The font family name that applies to the entire text string within the range specified by <i>textRange</i>.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontSize">
    <summary>Sets the font size in DIP units for text within a specified text range.</summary>
    <param name="fontSize">The font size in DIP units to be set for text in the range specified by <i>textRange</i>.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontStretch">
    <summary>Sets the font stretch for text within a specified text range.</summary>
    <param name="fontStretch">A value which indicates the type of font stretch for text within the range specified by <i>textRange</i>.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontStyle">
    <summary>Sets the font style for text within a text range specified by a <see cref="DWRITE_TEXT_RANGE" /> structure.</summary>
    <param name="fontStyle">The font style to be set for text within a range specified by <i>textRange</i>.</param>
    <param name="textRange">The text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetFontWeight">
    <summary>Sets the font weight for text within a text range specified by a <see cref="DWRITE_TEXT_RANGE" /> structure.</summary>
    <param name="fontWeight">The font weight to be set for text within the range specified by <i>textRange</i>.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetInlineObject">
    <summary>Sets the inline object.</summary>
    <param name="inlineObject">An application-defined inline object.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetLocaleName">
    <summary>Sets the locale name for text within a specified text range.</summary>
    <param name="localeName">A null-terminated locale name string.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetMaxHeight">
    <summary>Sets the layout maximum height.</summary>
    <param name="maxHeight">A value that indicates the maximum height of the layout box.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetMaxWidth">
    <summary>Sets the layout maximum width.</summary>
    <param name="maxWidth">A value that indicates the maximum width of the layout box.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetStrikethrough">
    <summary>Sets strikethrough for text within a specified text range.</summary>
    <param name="hasStrikethrough">A Boolean flag that indicates whether strikethrough takes place in the range specified by <i>textRange</i>.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetTypography">
    <summary>Sets font typography features for text within a specified text range.</summary>
    <param name="typography">Pointer to font typography settings.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout.SetUnderline">
    <summary>Sets underlining for text within a specified text range.</summary>
    <param name="hasUnderline">A Boolean flag that indicates whether underline takes place within a specified text range.</param>
    <param name="textRange">Text range to which this change applies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteTextLayout">
    <summary>The <b>IDWriteTextLayout</b> interface represents a block of text after it has been fully analyzed and formatted.</summary>
  </member>
</doc>