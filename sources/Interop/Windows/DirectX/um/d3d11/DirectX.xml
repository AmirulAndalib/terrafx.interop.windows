<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DirectX.D3D11CalcSubresource">
    <summary>Calculates a subresource index for a texture.</summary>
    <param name="MipSlice">A zero-based index for the mipmap level to address; 0 indicates the first, most detailed mipmap level.</param>
    <param name="ArraySlice">The zero-based index for the array level to address; always use 0 for volume (3D) textures.</param>
    <param name="MipLevels">Number of mipmap levels in the resource.</param>
    <returns>The index which equals MipSlice + (ArraySlice * MipLevels).</returns>
  </member>
  <member name="DirectX.D3D11CreateDevice">
    <summary>Creates a device that represents the display adapter.</summary>
    <param name="pAdapter">
      <para>A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter that is enumerated by <see cref="IDXGIFactory1.EnumAdapters" />.</para>
      <div>
        <b>Note</b>  Do not mix the use of DXGI 1.0 (<see cref="IDXGIFactory" />) and DXGI 1.1 (<see cref="IDXGIFactory1" />) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application.</div>
    </param>
    <param name="DriverType">The <see cref="D3D_DRIVER_TYPE" />, which represents the driver type to create.</param>
    <param name="Software">A handle to a DLL that implements a software rasterizer. If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>,<i>Software</i> must not be <b>NULL</b>. Get the handle by calling <see cref="LoadLibrary" />,<see cref="LoadLibraryEx" /> , or <see cref="GetModuleHandle" />.</param>
    <param name="Flags">The runtime <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <see cref="D3D11_CREATE_DEVICE_FLAG" />); values can be bitwise OR'd together.</param>
    <param name="pFeatureLevels">
      <para>A pointer to an array of <see cref="D3D_FEATURE_LEVEL" />s, which determine the order of feature levels to attempt to create. If <i>pFeatureLevels</i> is set to <b>NULL</b>, this function uses the following array of feature levels:</para>
      <code>{ D3D_FEATURE_LEVEL_11_0, D3D_FEATURE_LEVEL_10_1, D3D_FEATURE_LEVEL_10_0, D3D_FEATURE_LEVEL_9_3, D3D_FEATURE_LEVEL_9_2, D3D_FEATURE_LEVEL_9_1, };</code>
      <div>
        <b>Note</b>  If the Direct3D 11.1 runtime is present on the computer and <i>pFeatureLevels</i> is set to <b>NULL</b>, this function won't create a <see cref="D3D_FEATURE_LEVEL_11_1" /> device. To create a <b>D3D_FEATURE_LEVEL_11_1</b> device, you must explicitly provide a <b>D3D_FEATURE_LEVEL</b> array that includes <b>D3D_FEATURE_LEVEL_11_1</b>. If you provide a <b>D3D_FEATURE_LEVEL</b> array that contains <b>D3D_FEATURE_LEVEL_11_1</b> on a computer that doesn't have the Direct3D 11.1 runtime installed, this function immediately fails with E_INVALIDARG.</div>
    </param>
    <param name="FeatureLevels">The number of elements in <i>pFeatureLevels</i>.</param>
    <param name="SDKVersion">The SDK version; use <i>D3D11_SDK_VERSION</i>.</param>
    <param name="ppDevice">Returns the address of a pointer to an <see cref="ID3D11Device" /> object that represents the device created. If this parameter is <b>NULL</b>, no ID3D11Device will be returned.</param>
    <param name="pFeatureLevel">If successful, returns the first <see cref="D3D_FEATURE_LEVEL" /> from the <i>pFeatureLevels</i> array which succeeded. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.</param>
    <param name="ppImmediateContext">Returns the address of a pointer to an <see cref="ID3D11DeviceContext" /> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.</param>
    <returns>
      <para>This method can return one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
      <para>This method returns E_INVALIDARG if you set the <i>pAdapter</i> parameter to a non-<b>NULL</b> value and the <i>DriverType</i> parameter to the D3D_DRIVER_TYPE_HARDWARE value.</para>
      <para>This method returns <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_SDK_COMPONENT_MISSING</a> if you specify <see cref="D3D11_CREATE_DEVICE_DEBUG" /> in <i>Flags</i> and the incorrect version of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> is installed on your computer. Install the latest Windows SDK to get the correct version.</para>
    </returns>
  </member>
  <member name="DirectX.D3D11CreateDeviceAndSwapChain">
    <summary>Creates a device that represents the display adapter and a swap chain used for rendering.</summary>
    <param name="pAdapter">
      <para>A pointer to the video adapter to use when creating a <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-intro">device</a>. Pass <b>NULL</b> to use the default adapter, which is the first adapter enumerated by <see cref="IDXGIFactory1.EnumAdapters" />.</para>
      <div>
        <b>Note</b>  Do not mix the use of DXGI 1.0 (<see cref="IDXGIFactory" />) and DXGI 1.1 (<see cref="IDXGIFactory1" />) in an application. Use <b>IDXGIFactory</b> or <b>IDXGIFactory1</b>, but not both in an application.</div>
    </param>
    <param name="DriverType">The <see cref="D3D_DRIVER_TYPE" />, which represents the driver type to create.</param>
    <param name="Software">A handle to a DLL that implements a software rasterizer. If <i>DriverType</i> is <i>D3D_DRIVER_TYPE_SOFTWARE</i>, <i>Software</i> must not be <b>NULL</b>. Get the handle by calling <see cref="LoadLibrary" />,<see cref="LoadLibraryEx" /> , or <see cref="GetModuleHandle" />. The value should be non-<b>NULL</b> when <see cref="D3D_DRIVER_TYPE" /> is <b>D3D_DRIVER_TYPE_SOFTWARE</b> and <b>NULL</b> otherwise.</param>
    <param name="Flags">The runtime <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">layers</a> to enable (see <see cref="D3D11_CREATE_DEVICE_FLAG" />); values can be bitwise OR'd together.</param>
    <param name="pFeatureLevels">
      <para>A pointer to an array of <see cref="D3D_FEATURE_LEVEL" />s, which determine the order of feature levels to attempt to create. If <i>pFeatureLevels</i> is set to <b>NULL</b>, this function uses the following array of feature levels:</para>
      <code>{ D3D_FEATURE_LEVEL_11_0, D3D_FEATURE_LEVEL_10_1, D3D_FEATURE_LEVEL_10_0, D3D_FEATURE_LEVEL_9_3, D3D_FEATURE_LEVEL_9_2, D3D_FEATURE_LEVEL_9_1, };</code>
      <div>
        <b>Note</b>  If the Direct3D 11.1 runtime is present on the computer and <i>pFeatureLevels</i> is set to <b>NULL</b>, this function won't create a <see cref="D3D_FEATURE_LEVEL_11_1" /> device. To create a <b>D3D_FEATURE_LEVEL_11_1</b> device, you must explicitly provide a <b>D3D_FEATURE_LEVEL</b> array that includes <b>D3D_FEATURE_LEVEL_11_1</b>. If you provide a <b>D3D_FEATURE_LEVEL</b> array that contains <b>D3D_FEATURE_LEVEL_11_1</b> on a computer that doesn't have the Direct3D 11.1 runtime installed, this function immediately fails with E_INVALIDARG.</div>
    </param>
    <param name="FeatureLevels">The number of elements in <i>pFeatureLevels</i>.</param>
    <param name="SDKVersion">The SDK version; use <i>D3D11_SDK_VERSION</i>.</param>
    <param name="pSwapChainDesc">A pointer to a swap chain description (see <see cref="DXGI_SWAP_CHAIN_DESC" />) that contains initialization parameters for the swap chain.</param>
    <param name="ppSwapChain">Returns the address of a pointer to the <see cref="IDXGISwapChain" /> object that represents the swap chain used for rendering.</param>
    <param name="ppDevice">Returns the address of a pointer to an <see cref="ID3D11Device" /> object that represents the device created. If this parameter is <b>NULL</b>, no ID3D11Device will be returned'.</param>
    <param name="pFeatureLevel">Returns a pointer to a <see cref="D3D_FEATURE_LEVEL" />, which represents the first element in an array of feature levels supported by the device. Supply <b>NULL</b> as an input if you don't need to determine which feature level is supported.</param>
    <param name="ppImmediateContext">Returns the address of a pointer to an <see cref="ID3D11DeviceContext" /> object that represents the device context. If this parameter is <b>NULL</b>, no ID3D11DeviceContext will be returned.</param>
    <returns>
      <para>This method can return one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
      <para>This method returns <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NOT_CURRENTLY_AVAILABLE</a> if you call it in a Session 0 process.</para>
      <para>This method returns E_INVALIDARG if you set the <i>pAdapter</i> parameter to a non-<b>NULL</b> value and the <i>DriverType</i> parameter to the D3D_DRIVER_TYPE_HARDWARE value.</para>
      <para>This method returns <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_SDK_COMPONENT_MISSING</a> if you specify <see cref="D3D11_CREATE_DEVICE_DEBUG" /> in <i>Flags</i> and the incorrect version of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> is installed on your computer. Install the latest Windows SDK to get the correct version.</para>
    </returns>
  </member>
</doc>