<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D11_INPUT_ELEMENT_DESC">
    <summary>A description of a single element for the input-assembler stage.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.SemanticName">
    <summary>The HLSL semantic associated with this element in a shader input-signature. See <a href="https://docs.microsoft.com//windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics">HLSL Semantics</a> for more info.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.SemanticIndex">
    <summary>
      <para>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name</para>
      <code>matrix</code>
      <para>, however each of the four component would have different semantic indices (0, 1, 2, and 3).</para>
    </summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.Format">
    <summary>The data type of the element data. See <see cref="DXGI_FORMAT" />.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.InputSlot">
    <summary>An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.AlignedByteOffset">
    <summary>Optional. Offset (in bytes) from the start of the vertex. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly after the previous one, including any packing if necessary.</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.InputSlotClass">
    <summary>Identifies the input data class for a single input slot (see <see cref="D3D11_INPUT_CLASSIFICATION" />).</summary>
  </member>
  <member name="D3D11_INPUT_ELEMENT_DESC.InstanceDataStepRate">
    <summary>The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data (the slot class is set to D3D11_INPUT_PER_VERTEX_DATA).</summary>
  </member>
</doc>