<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D11_SO_DECLARATION_ENTRY">
    <summary>
      <para>Description of a vertex element in a vertex buffer in an output slot.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-core-structures">Core Structures</seealso>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.Stream">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based, stream number.</para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.SemanticName">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>Type of output element; possible values include: <b>"POSITION"</b>, <b>"NORMAL"</b>, or <b>"TEXCOORD0"</b>.
Note that if <i>SemanticName</i> is <b>NULL</b> then
<i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.SemanticIndex">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.StartComponent">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BYTE</a></b></para>
      <para>Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components
of a position, then StartComponent should be 1 and ComponentCount should be 2.</para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.ComponentCount">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BYTE</a></b></para>
      <para>The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components
of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if <i>SemanticName</i> is <b>NULL</b> then
<i>ComponentCount</i> can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>
    </summary>
  </member>
  <member name="D3D11_SO_DECLARATION_ENTRY.OutputSlot">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BYTE</a></b></para>
      <para>The associated stream output buffer that is bound to the pipeline
(see <see cref="ID3D11DeviceContext.SOSetTargets" />).
The valid range for <i>OutputSlot</i> is 0 to 3.</para>
    </summary>
  </member>
</doc>