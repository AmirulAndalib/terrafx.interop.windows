<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D11_FORMAT_SUPPORT">
    <summary>Which resources are supported for a given format and given device (see <see cref="ID3D11Device.CheckFormatSupport" />and <see cref="ID3D11Device.CheckFeatureSupport" />).</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_BUFFER">
    <summary>Buffer resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER">
    <summary>Vertex buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER">
    <summary>Index buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SO_BUFFER">
    <summary>Streaming output buffers supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_TEXTURE1D">
    <summary>1D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_TEXTURE2D">
    <summary>2D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_TEXTURE3D">
    <summary>3D texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_TEXTURECUBE">
    <summary>Cube texture resources supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_LOAD">
    <summary>The HLSL <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-load">Load</a> function for texture objects is supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_SAMPLE">
    <summary>
      <para>The HLSL <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> function for texture objects is supported.</para>
      <div>
        <b>Note</b>  If the device supports the format as a resource (1D, 2D, 3D, or cube map) but doesn't support this option, the resource can still use the <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-sample">Sample</a> method but must use only the point filtering sampler state to perform the sample.</div>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON">
    <summary>
      <para>The HLSL <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmp">SampleCmp</a> and <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-to-samplecmplevelzero">SampleCmpLevelZero</a> functions for texture objects are supported.</para>
      <div>
        <b>Note</b>  Windows 8 and later might provide limited support for these functions on Direct3D <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9_1, 9_2, and 9_3. For more info, see <a href="https://docs.microsoft.com//previous-versions/windows/apps/jj262110(v=win.10)">Implementing shadow buffers for Direct3D feature level 9</a>.</div>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT">
    <summary>Reserved.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_MIP">
    <summary>Mipmaps are supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_MIP_AUTOGEN">
    <summary>Automatic generation of mipmaps is supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_RENDER_TARGET">
    <summary>Render targets are supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_BLENDABLE">
    <summary>Blend operations supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_DEPTH_STENCIL">
    <summary>Depth stencils supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_CPU_LOCKABLE">
    <summary>CPU locking supported.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE">
    <summary>Multisample antialiasing (MSAA) resolve operations are supported. For more info, see <see cref="ID3D11DeviceContex.ResolveSubresource" />.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_DISPLAY">
    <summary>Format can be displayed on screen.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT">
    <summary>Format cannot be cast to another format.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET">
    <summary>Format can be used as a multisampled rendertarget.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD">
    <summary>Format can be used as a multisampled texture and read into a shader with the HLSL load function.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_GATHER">
    <summary>Format can be used with the HLSL gather function. This value is available in DirectX 10.1 or higher.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST">
    <summary>Format supports casting when the resource is a back buffer.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW">
    <summary>Format can be used for an unordered access view.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON">
    <summary>Format can be used with the HLSL gather with comparison function.</summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_DECODER_OUTPUT">
    <summary>
      <para>Format can be used with the decoder output.</para>
      <para>
        <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT">
    <summary>
      <para>Format can be used with the video processor output.</para>
      <para>
        <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT">
    <summary>
      <para>Format can be used with the video processor input.</para>
      <para>
        <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
    </summary>
  </member>
  <member name="D3D11_FORMAT_SUPPORT.D3D11_FORMAT_SUPPORT_VIDEO_ENCODER">
    <summary>
      <para>Format can be used with the video encoder.</para>
      <para>
        <b>Direct3D 11:  </b>This value is not supported until Direct3D 11.1.</para>
    </summary>
  </member>
</doc>