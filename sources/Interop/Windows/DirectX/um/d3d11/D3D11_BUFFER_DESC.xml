<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D11_BUFFER_DESC">
    <summary>
      <para>Describes a buffer resource.</para>
    </summary>
    <remarks>
      <para>This structure is used by <see cref="ID3D11Device.CreateBuffer" /> to create buffer resources.</para>
      <para>In addition to this structure, you can also use the <see cref="CD3D11_BUFFER_DESC" /> derived structure, which is defined  in D3D11.h and behaves like an inherited class, to help create a buffer description.</para>
      <para>If the bind flag is <see cref="D3D11_BIND_CONSTANT_BUFFER" />, you must set the <b>ByteWidth</b> value in multiples of 16, and less than or equal to <b>D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT</b>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-resource-structures">Resource Structures</seealso>
  </member>
  <member name="D3D11_BUFFER_DESC.ByteWidth">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Size of the buffer in bytes.</para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC.Usage">
    <summary>
      <para>Type: <b><see cref="D3D11_USAGE" /></b></para>
      <para>Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically D3D11_USAGE_DEFAULT; see <see cref="D3D11_USAGE" /> for all possible values.</para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC.BindFlags">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Identify how the buffer will be bound to the pipeline. Flags (see <see cref="D3D11_BIND_FLAG" />) can be combined with a bitwise OR.</para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC.CPUAccessFlags">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>CPU access flags (see <see cref="D3D11_CPU_ACCESS_FLAG" />) or 0 if no CPU access is necessary. Flags can be combined with a bitwise OR.</para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC.MiscFlags">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Miscellaneous flags (see <see cref="D3D11_RESOURCE_MISC_FLAG" />) or 0 if unused. Flags can be combined with a bitwise OR.</para>
    </summary>
  </member>
  <member name="D3D11_BUFFER_DESC.StructureByteStride">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>The size of each element in the buffer structure (in bytes) when the buffer represents a structured buffer. For more info about structured buffers, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/direct3d-11-advanced-stages-cs-resources">Structured Buffer</a>.</para>
      <para>The size value in <b>StructureByteStride</b> must match the size of the format that you use for views of the buffer. For example, if you use a shader resource view (SRV) to read a buffer in a pixel shader, the SRV format size must match the size value in <b>StructureByteStride</b>.</para>
    </summary>
  </member>
</doc>