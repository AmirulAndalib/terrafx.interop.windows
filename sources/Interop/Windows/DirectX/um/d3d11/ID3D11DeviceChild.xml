<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11DeviceChild.GetDevice">
    <summary>
      <para>Get a pointer to the device that created this interface.</para>
    </summary>
    <param name="ppDevice">
      <para>Type: <b><see cref="ID3D11Device" />**</b></para>
      <para>Address of a pointer to a device (see <see cref="ID3D11Device" />).</para>
    </param>
    <remarks>
      <para>Any returned interfaces will have their reference count incremented by one, so be sure to call .release() on the returned pointer(s) before they are freed or else you will have a memory leak.</para>
    </remarks>
    <seealso cref="ID3D11DeviceChild" />
  </member>
  <member name="ID3D11DeviceChild.GetPrivateData">
    <summary>
      <para>Get application-defined data from a device child.</para>
    </summary>
    <param name="guid">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b></para>
      <para>Guid associated with the data.</para>
    </param>
    <param name="pDataSize">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a>*</b></para>
      <para>A pointer to a variable that on input contains the size, in bytes, of the buffer that <i>pData</i> points to, and on output contains the size, in bytes, of the amount of data that
<b>GetPrivateData</b> retrieved.</para>
    </param>
    <param name="pData">
      <para>Type: <b>void*</b></para>
      <para>A pointer to a buffer that
<b>GetPrivateData</b> fills with data from the device child if <i>pDataSize</i> points to a value that specifies a buffer large enough to hold the data.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns one of the
<a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>The data stored in the device child is set by calling <see cref="ID3D11DeviceChild.SetPrivateData" />.</para>
      <para>If the data returned is a pointer to an <see cref="IUnknown" />, or one of its derivative classes, which was previously set by SetPrivateDataInterface, that interface will have its reference count incremented before the private data is returned.</para>
      <para>
        <b>Windows Phone 8:
</b> This API is supported.</para>
    </remarks>
    <seealso cref="ID3D11DeviceChild" />
  </member>
  <member name="ID3D11DeviceChild.SetPrivateData">
    <summary>
      <para>Set application-defined data to a device child and associate that data with an application-defined guid.</para>
    </summary>
    <param name="guid">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b></para>
      <para>Guid associated with the data.</para>
    </param>
    <param name="DataSize">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Size of the data.</para>
    </param>
    <param name="pData">
      <para>Type: <b>const void*</b></para>
      <para>Pointer to the data to be stored with this device child. If pData is <b>NULL</b>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>The data stored in the device child with this method can be retrieved with <see cref="ID3D11DeviceChild.GetPrivateData" />.</para>
      <para>The <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-layers">debug layer</a> reports memory leaks by outputting a list of object interface pointers along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface pointer caused the leak. To set the friendly name, use the <b>SetPrivateData</b> method and the <b>WKPDID_D3DDebugObjectName</b> GUID that is in D3Dcommon.h. For example, to give pContext a friendly name of <i>My name</i>, use the following code:</para>
      <code>
static const char c_szName[] = "My name";
hr = pContext-&gt;SetPrivateData( WKPDID_D3DDebugObjectName, sizeof( c_szName ) - 1, c_szName );

</code>
    </remarks>
    <seealso cref="ID3D11DeviceChild" />
  </member>
  <member name="ID3D11DeviceChild.SetPrivateDataInterface">
    <summary>
      <para>Associate an IUnknown-derived interface with this device child and associate that interface with an application-defined guid.</para>
    </summary>
    <param name="guid">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/6e7d7108-c213-40bc-8294-ac13fe68fd50">REFGUID</a></b></para>
      <para>Guid associated with the interface.</para>
    </param>
    <param name="pData">
      <para>Type: <b>const IUnknown*</b></para>
      <para>Pointer to an IUnknown-derived interface to be associated with the device child.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>When this method is called .addref() will be called on the IUnknown-derived interface, and when the device child is destroyed .release() will be called on the IUnknown-derived interface.</para>
    </remarks>
    <seealso cref="ID3D11DeviceChild" />
  </member>
  <member name="ID3D11DeviceChild">
    <summary>
      <para>A device-child interface accesses data used by a device.</para>
    </summary>
    <remarks>
      <para>There are several types of device child interfaces, all of which inherit this interface. They include shaders, state objects, and input layouts.</para>
      <para>
        <b>Windows Phone 8:
</b> This API is supported.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-core-interfaces">Core Interfaces</seealso>
    <seealso cref="IUnknown" />
  </member>
</doc>