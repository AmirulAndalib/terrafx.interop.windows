<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11VideoDevice.CheckCryptoKeyExchange">
    <summary>Gets a cryptographic key-exchange mechanism that is supported by the driver.</summary>
    <param name="pCryptoType">
      <para>A pointer to a GUID that specifies the type of encryption to be used. The following GUIDs are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</description>
        </listheader>
      </list>
    </param>
    <param name="pDecoderProfile">A pointer to a GUID that specifies the decoding profile. To get profiles that the driver supports, call <see cref="ID3D11VideoDevice.GetVideoDecoderProfile" />. If decoding will not be used, set this parameter to <b>NULL</b>.</param>
    <param name="Index">The zero-based index of the key-exchange type. The driver reports the number of types in the <b>KeyExchangeTypeCount</b> member of the <see cref="D3D11_VIDEO_CONTENT_PROTECTION_CAPS" /> structure.</param>
    <param name="pKeyExchangeType">Receives a GUID that identifies the type of key exchange.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CheckVideoDecoderFormat">
    <summary>Given aprofile, checks whether the driver supports a specified output format.</summary>
    <param name="pDecoderProfile">A pointer to a GUID that identifies the profile. To get the list of supported profiles, call <see cref="ID3D11VideoDevice.GetVideoDecoderProfile" />.</param>
    <param name="Format">A <see cref="DXGI_FORMAT" /> value that specifies the output format. Typical values include <b>DXGI_FORMAT_NV12</b> and <b>DXGI_FORMAT_420_OPAQUE</b>.</param>
    <param name="pSupported">Receives the value <b>TRUE</b> if the format is supported, or <b>FALSE</b> otherwise.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateAuthenticatedChannel">
    <summary>Creates a channel to communicate with the Microsoft Direct3D device or the graphics driver. The channel can be used to send commands and queries for content protection.</summary>
    <param name="ChannelType">Specifies the type of channel, as a member of the <see cref="D3D11_AUTHENTICATED_CHANNEL_TYPE" /> enumeration.</param>
    <param name="ppAuthenticatedChannel">Receives a pointer to the <see cref="ID3D11AuthenticatedChannel" /> interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateCryptoSession">
    <summary>Creates a cryptographic session to encrypt video content that is sent to the graphics driver.</summary>
    <param name="pCryptoType">
      <para>A pointer to a GUID that specifies the type of encryption to use. The following GUIDs are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</description>
        </listheader>
      </list>
    </param>
    <param name="pDecoderProfile">A pointer to a GUID that specifies the decoding profile. For a list of possible values, see <see cref="ID3D11VideoDevice.GetVideoDecoderProfile" />. If decoding will not be used, set this parameter to <b>NULL</b>.</param>
    <param name="pKeyExchangeType">
      <para>A pointer to a GUID that specifies the type of key exchange.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>D3D11_KEY_EXCHANGE_RSAES_OAEP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller will create the session key, encrypt it with RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP) by using the driver's public key, and pass the session key to the driver.</description>
        </listheader>
      </list>
    </param>
    <param name="ppCryptoSession">Receives a pointer to the <see cref="ID3D11CryptoSession" /> interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoDecoder">
    <summary>Creates a video decoder device for Microsoft Direct3D 11.</summary>
    <param name="pVideoDesc">A pointer to a <see cref="D3D11_VIDEO_DECODER_DESC" /> structure that describes the video stream and the decoder profile.</param>
    <param name="pConfig">A pointer to a <see cref="D3D11_VIDEO_DECODER_CONFIG" /> structure that specifies the decoder configuration.</param>
    <param name="ppDecoder">Receives a pointer to the <see cref="ID3D11VideoDecoder" /> interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoDecoderOutputView">
    <summary>Creates a resource view for a video decoder, describing the output sample for the decoding operation.</summary>
    <param name="pResource">A pointer to the <see cref="ID3D11Resource" /> interface of the decoder surface. The resource must be created with the <b>D3D11_BIND_DECODER</b> flag. See <see cref="D3D11_BIND_FLAG" />.</param>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC" /> structure that describes the view.</param>
    <param name="ppVDOVView">Receives a pointer to the <see cref="ID3D11VideoDecoderOutputView" /> interface. The caller must release the interface. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoProcessor">
    <summary>Creates a video processor device for Microsoft Direct3D 11.</summary>
    <param name="pEnum">A pointer to the <see cref="ID3D11VideoProcessorEnumerator" /> interface. To get this pointer, call <see cref="ID3D11VideoDevice.CreateVideoProcessorEnumerator" />.</param>
    <param name="RateConversionIndex">Specifies the frame-rate conversion capabilities for the video processor. The value is a zero-based index that corresponds to the <i>TypeIndex</i> parameter of the <see cref="ID3D11VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps" /> method.</param>
    <param name="ppVideoProcessor">Receives a pointer to the <see cref="ID3D11VideoProcessor" /> interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoProcessorEnumerator">
    <summary>Enumerates the video processor capabilities of the driver.</summary>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_PROCESSOR_CONTENT_DESC" /> structure that describes the video content.</param>
    <param name="ppEnum">Receives a pointer to the <see cref="ID3D11VideoProcessorEnumerator" /> interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoProcessorInputView">
    <summary>Creates a resource view for a video processor, describing the input sample for the video processing operation.</summary>
    <param name="pResource">A pointer to the <see cref="ID3D11Resource" /> interface of the input surface.</param>
    <param name="pEnum">A pointer to the <see cref="ID3D11VideoProcessorEnumerator" /> interface that specifies the video processor. To get this pointer, call <see cref="ID3D11VideoDevice.CreateVideoProcessorEnumerator" />.</param>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC" /> structure that describes the view.</param>
    <param name="ppVPIView">Receives a pointer to the <see cref="ID3D11VideoProcessorInputView" /> interface. The caller must release the resource. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.CreateVideoProcessorOutputView">
    <summary>Creates a resource view for a video processor, describing the output sample for the video processing operation.</summary>
    <param name="pResource">A pointer to the <see cref="ID3D11Resource" /> interface of the output surface. The resource must be created with the <b>D3D11_BIND_RENDER_TARGET</b> flag. See <see cref="D3D11_BIND_FLAG" />.</param>
    <param name="pEnum">A pointer to the <see cref="ID3D11VideoProcessorEnumerator" /> interface that specifies the video processor. To get this pointer, call <see cref="ID3D11VideoDevice.CreateVideoProcessorEnumerator" />.</param>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC" /> structure that describes the view.</param>
    <param name="ppVPOView">Receives a pointer to the <see cref="ID3D11VideoProcessorOutputView" /> interface. The caller must release the resource. If this parameter is <b>NULL</b>, the method checks whether the view is supported, but does not create the view.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.GetContentProtectionCaps">
    <summary>Queries the driver for its content protection capabilities.</summary>
    <param name="pCryptoType">
      <para>A pointer to a GUID that specifies the type of encryption to be used. The following GUIDs are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>D3D11_CRYPTO_TYPE_AES128_CTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>128-bit Advanced Encryption Standard CTR mode (AES-CTR) block cipher.</description>
        </listheader>
      </list> <para>If no encryption will be used, set this parameter to <b>NULL</b>.</para></param>
    <param name="pDecoderProfile">
      <para>A pointer to a GUID that specifies the decoding profile. To get profiles that the driver supports, call <see cref="ID3D11VideoDevice.GetVideoDecoderProfile" />. If decoding will not be used, set this parameter to <b>NULL</b>.</para>
      <para>The driver might disallow some combinations of encryption type and profile.</para>
    </param>
    <param name="pCaps">A pointer to a <see cref="D3D11_VIDEO_CONTENT_PROTECTION_CAPS" /> structure. The method fills in this structure with the driver's content protection capabilities.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.GetVideoDecoderConfig">
    <summary>Gets a decoder configuration that is supported by the driver.</summary>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_DECODER_DESC" /> structure that describes the video stream.</param>
    <param name="Index">The zero-based index of the decoder configuration. To get the number of configurations that the driver supports, call <see cref="ID3D11VideoDevice.GetVideoDecoderConfigCount" />.</param>
    <param name="pConfig">A pointer to a <see cref="D3D11_VIDEO_DECODER_CONFIG" /> structure. The method fills in the structure with the decoder configuration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.GetVideoDecoderConfigCount">
    <summary>Gets the number of decoder configurations that the driver supports for a specified video description.</summary>
    <param name="pDesc">A pointer to a <see cref="D3D11_VIDEO_DECODER_DESC" /> structure that describes the video stream.</param>
    <param name="pCount">Receives the number of decoder configurations.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.GetVideoDecoderProfile">
    <summary>Gets a profile that is supported by the driver.</summary>
    <param name="Index">The zero-based index of the profile. To get the number of profiles that the driver supports, call <see cref="ID3D11VideoDevice.GetVideoDecoderProfileCount" />.</param>
    <param name="pDecoderProfile">Receives a GUID that identifies the profile.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.GetVideoDecoderProfileCount">
    <summary>Gets the number of profiles that are supported by the driver.</summary>
    <returns>Returns the number of profiles.</returns>
  </member>
  <member name="ID3D11VideoDevice.SetPrivateData">
    <summary>Sets private data on the video device and associates that data with a GUID.</summary>
    <param name="guid">The GUID associated with the data.</param>
    <param name="DataSize">The size of the data, in bytes.</param>
    <param name="pData">A pointer to the data.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice.SetPrivateDataInterface">
    <summary>Sets a private <see cref="IUnknown" /> pointer on the video device and associates that pointer with a GUID.</summary>
    <param name="guid">The GUID associated with the pointer.</param>
    <param name="pData">A pointer to the <see cref="IUnknown" /> interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D11VideoDevice">
    <summary>Provides the video decoding and video processing capabilities of a Microsoft Direct3D 11 device.</summary>
  </member>
</doc>