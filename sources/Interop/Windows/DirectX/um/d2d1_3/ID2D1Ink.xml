<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1Ink.AddSegments">
    <summary>Adds the given segments to the end of this ink object.</summary>
    <param name="segments">A pointer to an array of segments to be added to this ink object.</param>
    <param name="segmentsCount">The number of segments to be added to this ink object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.GetBounds">
    <summary>Retrieve the bounds of the geometry, with an optional applied transform.</summary>
    <param name="inkStyle">The ink style to be used in determining the bounds of this ink object.</param>
    <param name="worldTransform">The world transform to be used in determining the bounds of this ink object.</param>
    <param name="bounds">When this method returns, contains the bounds of this ink object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.GetSegmentCount">
    <summary>Returns the number of segments in this ink object.</summary>
    <returns>Returns the number of segments in this ink object.</returns>
  </member>
  <member name="ID2D1Ink.GetSegments">
    <summary>Retrieves the specified subset of segments stored in this ink object.</summary>
    <param name="startSegment">The index of the first segment in this ink object to retrieve.</param>
    <param name="segments">When this method returns, contains a pointer to an array of retrieved segments.</param>
    <param name="segmentsCount">The number of segments to retrieve. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.GetStartPoint">
    <summary>Retrieves the starting point for this ink object.</summary>
    <returns>The starting point for this ink object.</returns>
  </member>
  <member name="ID2D1Ink.RemoveSegmentsAtEnd">
    <summary>Removes the given number of segments from the end of this ink object.</summary>
    <param name="segmentsCount">The number of segments to be removed from the end of this ink object. Note that segmentsCount must be less or equal to the number of segments in the ink object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.SetSegmentAtEnd">
    <summary>Updates the last segment in this ink object with new control points.</summary>
    <param name="segment">A pointer to the segment data with which to overwrite this ink object's last segment. Note that if there are currently no segments in the ink object, SetSegmentsAtEnd will return an error.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.SetSegmentAtEnd">
    <summary>Updates the last segment in this ink object with new control points.</summary>
    <param name="segment">A pointer to the segment data with which to overwrite this ink object's last segment. Note that if there are currently no segments in the ink object, SetSegmentsAtEnd will return an error.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.SetSegments">
    <summary>Updates the specified segments in this ink object with new control points.</summary>
    <param name="startSegment">The index of the first segment in this ink object to update.</param>
    <param name="segments">A pointer to the array of segment data to be used in the update.</param>
    <param name="segmentsCount">The number of segments in this ink object that will be updated with new data. Note that segmentsCount must be less than or equal to the number of segments in the ink object minus startSegment.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.SetStartPoint">
    <summary>Sets the starting point for this ink object. This determines where this ink object will start rendering.</summary>
    <param name="startPoint">The new starting point for this ink object.</param>
  </member>
  <member name="ID2D1Ink.SetStartPoint">
    <summary>Sets the starting point for this ink object. This determines where this ink object will start rendering.</summary>
    <param name="startPoint">The new starting point for this ink object.</param>
  </member>
  <member name="ID2D1Ink.StreamAsGeometry">
    <summary>Retrieves a geometric representation of this ink object.</summary>
    <param name="inkStyle">The ink style to be used in determining the geometric representation.</param>
    <param name="worldTransform">The world transform to be used in determining the geometric representation.</param>
    <param name="flatteningTolerance">The flattening tolerance to be used in determining the geometric representation.</param>
    <param name="geometrySink">The geometry sink to which the geometry representation will be streamed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.StreamAsGeometry">
    <summary>Retrieves a geometric representation of this ink object.</summary>
    <param name="inkStyle">The ink style to be used in determining the geometric representation.</param>
    <param name="worldTransform">The world transform to be used in determining the geometric representation.</param>
    <param name="geometrySink">The geometry sink to which the geometry representation will be streamed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.StreamAsGeometry">
    <summary>Retrieves a geometric representation of this ink object.</summary>
    <param name="inkStyle">The ink style to be used in determining the geometric representation.</param>
    <param name="worldTransform">The world transform to be used in determining the geometric representation.</param>
    <param name="flatteningTolerance">The flattening tolerance to be used in determining the geometric representation.</param>
    <param name="geometrySink">The geometry sink to which the geometry representation will be streamed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink.StreamAsGeometry">
    <summary>Retrieves a geometric representation of this ink object.</summary>
    <param name="inkStyle">The ink style to be used in determining the geometric representation.</param>
    <param name="worldTransform">The world transform to be used in determining the geometric representation.</param>
    <param name="geometrySink">The geometry sink to which the geometry representation will be streamed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID2D1Ink">
    <summary>Represents a single continuous stroke of variable-width ink, as defined by a series of Bezier segments and widths.</summary>
  </member>
</doc>