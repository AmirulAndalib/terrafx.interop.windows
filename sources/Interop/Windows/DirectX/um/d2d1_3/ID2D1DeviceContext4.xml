<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1DeviceContext4.CreateSvgGlyphStyle">
    <summary>Creates an SVG glyph style object.</summary>
    <param name="svgGlyphStyle">On completion points to the created <see cref="ID2D1SvgGlyphStyle" /> object.</param>
    <returns>This method returns an HRESULT success or error code.</returns>
  </member>
  <member name="ID2D1DeviceContext4.DrawColorBitmapGlyphRun">
    <summary>Draws a color bitmap glyph run using one of the bitmap formats.</summary>
    <param name="glyphImageFormat">
      <para>Specifies the format of the glyph image. Supported formats are DWRITE_GLYPH_IMAGE_FORMATS_PNG, DWRITE_GLYPH_IMAGE_FORMATS_JPEG, DWRITE_GLYPH_IMAGE_FORMATS_TIFF, or DWRITE_GLYPH_IMAGE_FORMATS_PREMULTIPLIED_B8G8R8A8. This method will result in an error if the color glyph run does not contain the requested format.</para>
      <para>Only one format can be specified at a time, combinations of flags are not valid input.</para>
    </param>
    <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
    <param name="glyphRun">The glyphs to render.</param>
    <param name="measuringMode">Indicates the measuring method.</param>
    <param name="bitmapSnapOption">Specifies the pixel snapping policy when rendering color bitmap glyphs.</param>
  </member>
  <member name="ID2D1DeviceContext4.DrawSvgGlyphRun">
    <summary>Draws a color glyph run that has the format of DWRITE_GLYPH_IMAGE_FORMATS_SVG.</summary>
    <param name="baselineOrigin">The origin of the baseline for the glyph run.</param>
    <param name="glyphRun">The glyphs to render.</param>
    <param name="defaultFillBrush">The brush used to paint the specified glyphs.</param>
    <param name="svgGlyphStyle">Values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
    <param name="colorPaletteIndex">The index used to select a color palette within a color font. Note that this not the same as the paletteIndex in the DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
    <param name="measuringMode">Indicates the measuring method used for text layout.</param>
  </member>
  <member name="ID2D1DeviceContext4.DrawText">
    <summary>
      <para>Draws the text within the given layout rectangle.</para>
      <para>By default, this method performs baseline snapping and renders color versions of glyphs in color fonts.</para>
    </summary>
    <param name="string">A pointer to an array of Unicode characters to draw.</param>
    <param name="stringLength">The number of characters in string.</param>
    <param name="textFormat">An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.</param>
    <param name="layoutRect">The size and position of the area in which the text is drawn.</param>
    <param name="defaultFillBrush">The brush used to paint the text.</param>
    <param name="svgGlyphStyle">Values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
    <param name="colorPaletteIndex">The index used to select a color palette within a color font.</param>
    <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <see cref="D2D1_DRAW_TEXT_OPTIONS_NONE" />, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    <param name="measuringMode">A value that indicates how glyph metrics are used to measure text when it is formatted. The default value is <see cref="DWRITE_MEASURING_MODE_NATURAL" />.</param>
  </member>
  <member name="ID2D1DeviceContext4.DrawText">
    <summary>
      <para>Draws the text within the given layout rectangle.</para>
      <para>By default, this method performs baseline snapping and renders color versions of glyphs in color fonts.</para>
    </summary>
    <param name="string">A pointer to an array of Unicode characters to draw.</param>
    <param name="stringLength">The number of characters in string.</param>
    <param name="textFormat">An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.</param>
    <param name="layoutRect">The size and position of the area in which the text is drawn.</param>
    <param name="defaultFillBrush">The brush used to paint the text.</param>
    <param name="svgGlyphStyle">Values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
    <param name="colorPaletteIndex">The index used to select a color palette within a color font.</param>
    <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <see cref="D2D1_DRAW_TEXT_OPTIONS_NONE" />, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
    <param name="measuringMode">A value that indicates how glyph metrics are used to measure text when it is formatted. The default value is <see cref="DWRITE_MEASURING_MODE_NATURAL" />.</param>
  </member>
  <member name="ID2D1DeviceContext4.DrawTextLayout">
    <summary>Draws a text layout object. If the layout is not subsequently changed, this can be more efficient than DrawText when drawing the same layout repeatedly.</summary>
    <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by <i>textLayout</i> is drawn.</param>
    <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <see cref="ID2D1Resource" /> are ignored. If there are drawing effects that inherit from <b>ID2D1Resource</b> that are not brushes, this method fails and the render target is put in an error state.</param>
    <param name="defaultFillBrush">The brush used to paint the text.</param>
    <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
    <param name="colorPaletteIndex">The index used to select a color palette within a color font.</param>
    <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <see cref="D2D1_DRAW_TEXT_OPTIONS_NONE" />, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle.</param>
  </member>
  <member name="ID2D1DeviceContext4.GetColorBitmapGlyphImage">
    <summary>Retrieves an image of the color bitmap glyph from the color glyph cache. If the cache does not already contain the requested resource, it will be created. This method may be used to extend the lifetime of a glyph image even after it is evicted from the color glyph cache.</summary>
    <param name="glyphImageFormat">The format for the glyph image. If there is no image data in the requested format for the requested glyph, this method will return an error.</param>
    <param name="glyphOrigin">The origin for the glyph.</param>
    <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
    <param name="fontEmSize">The specified font size affects the choice of which bitmap to use from the font. It also affects the output glyphTransform, causing it to properly scale the glyph.</param>
    <param name="glyphIndex">Index of the glyph.</param>
    <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
    <param name="worldTransform">The transform to apply to the image. This input transform affects the choice of which bitmap to use from the font. It is also factored into the output glyphTransform.</param>
    <param name="dpiX">Dots per inch along the x-axis.</param>
    <param name="dpiY">Dots per inch along the y-axis.</param>
    <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. This includes the input glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
    <param name="glyphImage">On completion contains the retrieved glyph image.</param>
    <returns>This method returns an HRESULT success or error code.</returns>
  </member>
  <member name="ID2D1DeviceContext4.GetSvgGlyphImage">
    <summary>Retrieves an image of the SVG glyph from the color glyph cache. If the cache does not already contain the requested resource, it will be created. This method may be used to extend the lifetime of a glyph image even after it is evicted from the color glyph cache.</summary>
    <param name="glyphOrigin">Origin of the glyph.</param>
    <param name="fontFace">Reference to a font face which contains font face type, appropriate file references, face identification data and various font data such as metrics, names and glyph outlines.</param>
    <param name="fontEmSize">The specified font size affects the output glyphTransform, causing it to properly scale the glyph.</param>
    <param name="glyphIndex">Index of the glyph to retrieve.</param>
    <param name="isSideways">If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways as true and rotating the entire run 90 degrees to the right via a rotate transform.</param>
    <param name="worldTransform">The transform to apply to the image.</param>
    <param name="defaultFillBrush">Describes how the area is painted.</param>
    <param name="svgGlyphStyle">The values for context-fill, context-stroke, and context-value that are used when rendering SVG glyphs.</param>
    <param name="colorPaletteIndex">The index used to select a color palette within a color font. Note that this not the same as the paletteIndex in the DWRITE_COLOR_GLYPH_RUN struct, which is not relevant for SVG glyphs.</param>
    <param name="glyphTransform">Output transform, which transforms from the glyph's space to the same output space as the worldTransform. This includes the input glyphOrigin, the glyph's offset from the glyphOrigin, and any other required transformations.</param>
    <param name="glyphImage">On completion, contains the retrieved glyph image.</param>
    <returns>This method returns an HRESULT success or error code.</returns>
  </member>
  <member name="ID2D1DeviceContext4">
    <summary>This interface performs all the same functions as the <see cref="ID2D1DeviceContext3" /> interface, plus it enables functionality for handling new types of color font glyphs.</summary>
  </member>
</doc>