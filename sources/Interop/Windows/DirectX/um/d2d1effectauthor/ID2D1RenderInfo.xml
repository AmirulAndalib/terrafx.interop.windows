<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1RenderInfo.SetCached">
    <summary>
      <para>Specifies that the output of the transform in which the render information is encapsulated is or is not cached.</para>
    </summary>
    <param name="isCached">
      <para>Type: <b>BOOL</b></para>
      <para>
        <b>TRUE</b> if the output of the transform is cached; otherwise, <b>FALSE</b>.</para>
    </param>
    <seealso cref="ID2D1ConcreteTransform.SetCached" />
    <seealso cref="ID2D1RenderInfo" />
  </member>
  <member name="ID2D1RenderInfo.SetInputDescription">
    <summary>
      <para>Sets how a specific input to the transform should be handled by the renderer in terms of sampling.</para>
    </summary>
    <param name="inputIndex">
      <para>Type: <b>UINT32</b></para>
      <para>The index of the input that will have the input description applied.</para>
    </param>
    <param name="inputDescription">
      <para>Type: <b><see cref="D2D1_INPUT_DESCRIPTION" /></b></para>
      <para>The description of the input to be applied to the transform.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>The method returns an HRESULT. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>HRESULT</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>S_OK</description>
          <description>No error occurred.</description>
        </item>
        <item>
          <description>E_INVALIDARG</description>
          <description>An invalid parameter was passed to the returning function.</description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The input description must be matched correctly by the effect shader code.</para>
    </remarks>
    <seealso cref="D2D1_BUFFER_PRECISION" />
    <seealso cref="D2D1_CHANNEL_DEPTH" />
    <seealso cref="ID2D1DeviceContext.SetRenderingControls" />
    <seealso cref="ID2D1RenderInfo" />
  </member>
  <member name="ID2D1RenderInfo.SetInstructionCountHint">
    <summary>
      <para>Provides an estimated hint of shader execution cost to D2D.</para>
    </summary>
    <param name="instructionCount">
      <para>Type: <b>UINT32</b></para>
      <para>An approximate instruction count of the associated shader.</para>
    </param>
    <remarks>
      <para>The instruction count may be set according to the number of instructions in the shader.  This information is used as a hint when rendering extremely large images.  Calling this API is optional, but it may  improve performance if you provide an accurate number.</para>
      <para>
        <b>Note</b>  Instructions that occur in a loop should be counted according to the number of loop iterations.</para>
    </remarks>
    <seealso cref="ID2D1RenderInfo" />
  </member>
  <member name="ID2D1RenderInfo.SetOutputBuffer">
    <summary>
      <para>Allows a caller to control the output precision and channel-depth of the transform in which the render information is encapsulated.</para>
    </summary>
    <param name="bufferPrecision">
      <para>Type: <b><see cref="D2D1_BUFFER_PRECISION" /></b></para>
      <para>The type of buffer that should be used as an output from this transform.</para>
    </param>
    <param name="channelDepth">
      <para>Type: <b><see cref="D2D1_CHANNEL_DEPTH" /></b></para>
      <para>The number of channels that will be used on the output buffer.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If the method succeeds, it returns <b>S_OK</b>. If it fails, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>If the output precision of the transform is not specified, then it will default to the precision specified on the Direct2D device context. The maximum of 16bpc <b>UNORM</b> and 16bpc <b>FLOAT</b> is 32bpc <b>FLOAT</b>.</para>
      <para>The output channel depth will match the maximum of the input channel depths if the channel depth is <b>D2D1_CHANNEL_DEPTH_DEFAULT</b>.</para>
      <para>There is no global output channel depth, this is always left to the control of the transforms.</para>
    </remarks>
    <seealso cref="D2D1_BUFFER_PRECISION" />
    <seealso cref="D2D1_CHANNEL_DEPTH" />
    <seealso cref="ID2D1DeviceContext.SetRenderingControls" />
    <seealso cref="ID2D1RenderInfo" />
  </member>
  <member name="ID2D1RenderInfo">
    <summary>
      <para>Describes the render information common to all of the various transform implementations.</para>
    </summary>
    <remarks>
      <para>This interface is used by a transform implementation to first describe and then indicate changes to the rendering pass that corresponds to the transform.</para>
    </remarks>
    <seealso cref="IUnknown" />
  </member>
</doc>