<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFactory4.ComputeGlyphOrigins">
    <summary>Converts glyph run placements to glyph origins.</summary>
    <param name="glyphRun">Structure containing the properties of the glyph run.</param>
    <param name="baselineOrigin">The position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
    <param name="glyphOrigins">On return contains the glyph origins for the glyphrun.</param>
    <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="IDWriteFactory4.ComputeGlyphOrigins">
    <summary>Converts glyph run placements to glyph origins.</summary>
    <param name="glyphRun">Structure containing the properties of the glyph run.</param>
    <param name="baselineOrigin">The position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
    <param name="glyphOrigins">On return contains the glyph origins for the glyphrun.</param>
    <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="IDWriteFactory4.TranslateColorGlyphRun">
    <summary>Translates a glyph run to a sequence of color glyph runs, which can be rendered to produce a color representation of the original "base" run.</summary>
    <param name="baselineOrigin">Horizontal and vertical origin of the base glyph run in pre-transform coordinates.</param>
    <param name="glyphRun">Pointer to the original "base" glyph run.</param>
    <param name="glyphRunDescription">Optional glyph run description.</param>
    <param name="desiredGlyphImageFormats">Which data formats the runs should be split into.</param>
    <param name="measuringMode">Measuring mode, needed to compute the origins of each glyph.</param>
    <param name="worldAndDpiTransform">Matrix converting from the client's coordinate space to device coordinates (pixels), i.e., the world transform multiplied by any DPI scaling.</param>
    <param name="colorPaletteIndex">Zero-based index of the color palette to use. Valid indices are less than the number of palettes in the font, as returned by <see cref="IDWriteFontFace2.GetColorPaletteCount" />.</param>
    <param name="colorLayers">If the function succeeds, receives a pointer to an enumerator object that can be used to obtain the color glyph runs. If the base run has no color glyphs, then the output pointer is NULL and the method returns DWRITE_E_NOCOLOR.</param>
    <returns>Returns DWRITE_E_NOCOLOR if the font has no color information, the glyph run does not contain any color glyphs, or the specified color palette index is out of range. In this case, the client should render the original glyph run. Otherwise, returns a standard HRESULT error code.</returns>
  </member>
  <member name="IDWriteFactory4">
    <summary>The root factory interface for all DirectWrite objects.</summary>
  </member>
</doc>