<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFactory3.CreateCustomRenderingParams">
    <summary>Creates a rendering parameters object with the specified properties.</summary>
    <param name="gamma">The gamma value used for gamma correction, which must be greater than zero and cannot exceed 256.</param>
    <param name="enhancedContrast">The amount of contrast enhancement, zero or greater.</param>
    <param name="grayscaleEnhancedContrast">The amount of contrast enhancement to use for grayscale antialiasing, zero or greater.</param>
    <param name="clearTypeLevel">The degree of ClearType level, from 0.0f (no ClearType) to 1.0f (full ClearType).</param>
    <param name="pixelGeometry">A <see cref="DWRITE_PIXEL_GEOMETRY" />-typed value that specifies the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.</param>
    <param name="renderingMode">A <see cref="DWRITE_RENDERING_MODE1" />-typed value that specifies the method (for example, ClearType natural quality) for rendering glyphs. In most cases, specify <b>DWRITE_RENDERING_MODE1_DEFAULT</b> to automatically use an appropriate mode.</param>
    <param name="gridFitMode">A <see cref="DWRITE_GRID_FIT_MODE" />-typed value that specifies how to grid-fit glyph outlines. In most cases, specify <b>DWRITE_GRID_FIT_DEFAULT</b> to automatically choose an appropriate mode.</param>
    <param name="renderingParams">A pointer to a memory block that receives a pointer to a <see cref="IDWriteRenderingParams3" /> interface for the newly created rendering parameters object, or <b>NULL</b> in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.CreateFontCollectionFromFontSet">
    <summary>Create a weight/width/slope tree from a set of fonts.</summary>
    <param name="fontSet">A set of fonts to use to build the collection.</param>
    <param name="fontCollection">Holds the newly created font collection object, or NULL in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.CreateFontFaceReference">
    <summary>Creates a reference to a font given an <b>IDWriteFontFile</b>.</summary>
    <param name="fontFile">An <b>IDWriteFontFile</b> representing the font face.</param>
    <param name="faceIndex">The zero based index of a font face in cases when the font files contain a collection of font faces.<br />If the font files contain a single face, this value should be zero.</param>
    <param name="fontSimulations">Font face simulation flags for algorithmic emboldening and italicization.</param>
    <param name="fontFaceReference">Contains newly created font face reference object, or nullptr in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.CreateFontFaceReference">
    <summary>Creates a reference to a font given a full path.</summary>
    <param name="filePath">Absolute file path. Subsequent operations on the constructed object may fail if the user provided filePath doesn't correspond to a valid file on the disk.</param>
    <param name="lastWriteTime">Last modified time of the input file path. If the parameter is omitted,<br />the function will access the font file to obtain its last write time, so the clients are encouraged to specify this value<br />to avoid extra disk access. Subsequent operations on the constructed object may fail<br />if the user provided lastWriteTime doesn't match the file on the disk.</param>
    <param name="faceIndex">The zero based index of a font face in cases when the font files contain a collection of font faces.<br />If the font files contain a single face, this value should be zero.</param>
    <param name="fontSimulations">Font face simulation flags for algorithmic emboldening and italicization.</param>
    <param name="fontFaceReference">Contains newly created font face reference object, or nullptr in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.CreateFontSetBuilder">
    <summary>Creates an empty font set builder to add font face references<br />and create a custom font set.</summary>
    <param name="fontSetBuilder">Holds the newly created font set builder object, or NULL in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.CreateGlyphRunAnalysis">
    <summary>Creates a glyph-run-analysis object that encapsulates info that <a href="https://docs.microsoft.com//windows/win32/DirectWrite/direct-write-portal">DirectWrite</a> uses to render a glyph run.</summary>
    <param name="glyphRun">A <see cref="DWRITE_GLYPH_RUN" /> structure that contains the properties of the glyph run.</param>
    <param name="transform">A <see cref="DWRITE_MATRIX" /> structure that describes the optional transform to be applied to glyphs and their positions.</param>
    <param name="renderingMode">A <see cref="DWRITE_RENDERING_MODE1" />-typed value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default and not outline).</param>
    <param name="measuringMode">A <see cref="DWRITE_MEASURING_MODE" />-typed value that specifies the measuring method for glyphs in the run. This method uses this value with the other properties to determine the rendering mode.</param>
    <param name="gridFitMode">A <see cref="DWRITE_GRID_FIT_MODE" />-typed value that specifies how to grid-fit glyph outlines. This value must be non-default.</param>
    <param name="antialiasMode">A <see cref="DWRITE_TEXT_ANTIALIAS_MODE" />-typed value that specifies the type of antialiasing to use for text when the rendering mode calls for antialiasing.</param>
    <param name="baselineOriginX">The horizontal position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
    <param name="baselineOriginY">The vertical position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</param>
    <param name="glyphRunAnalysis">A pointer to a memory block that receives a pointer to a <see cref="IDWriteGlyphRunAnalysis" /> interface for the newly created glyph-run-analysis object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.GetFontDownloadQueue">
    <summary>Gets the font download queue associated with this factory object.</summary>
    <param name="fontDownloadQueue">Receives a pointer to the font download queue interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.GetSystemFontCollection">
    <summary>Retrieves a weight/width/slope tree of system fonts.</summary>
    <param name="includeDownloadableFonts">Indicates whether to include cloud fonts or only locally installed fonts.</param>
    <param name="fontCollection">Holds the newly created font collection object, or NULL in case of failure.</param>
    <param name="checkForUpdates">If this parameter is TRUE, the function performs an immediate check for changes<br />to the set of system fonts. If this parameter is FALSE, the function will still detect changes if the font<br />cache service is running, but there may be some latency. For example, an application might specify TRUE if<br />it has just installed a font and wants to be sure the font collection contains that font.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3.GetSystemFontSet">
    <summary>Retrieves the list of system fonts.</summary>
    <param name="fontSet">Holds the newly created font set object, or NULL in case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFactory3">
    <summary>The root factory interface for all <a href="https://docs.microsoft.com//windows/win32/DirectWrite/direct-write-portal">DirectWrite</a> objects.</summary>
  </member>
</doc>