<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDWriteFontFaceReference.CreateFontFace">
    <summary>Creates a font face from the reference for use with layout, shaping, or rendering.</summary>
    <param name="fontFace">Newly created font face object, or nullptr in the case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.CreateFontFaceWithSimulations">
    <summary>Creates a font face with alternate font simulations, for example, to explicitly simulate a bold font face out of a regular variant.</summary>
    <param name="fontFaceSimulationFlags">Font face simulation flags for algorithmic emboldening and italicization.</param>
    <param name="fontFace">Newly created font face object, or nullptr in the case of failure.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.EnqueueCharacterDownloadRequest">
    <summary>Adds a request to the font download queue (<see cref="IDWriteFontDownloadQueue" />).</summary>
    <param name="characters">Array of characters to download.</param>
    <param name="characterCount">The number of elements in the character array.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.EnqueueFileFragmentDownloadRequest">
    <summary>Adds a request to the font download queue (<see cref="IDWriteFontDownloadQueue" />).</summary>
    <param name="fileOffset">Offset of the fragment from the beginning of the font file.</param>
    <param name="fragmentSize">Size of the fragment in bytes.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.EnqueueFontDownloadRequest">
    <summary>Adds a request to the font download queue (<see cref="IDWriteFontDownloadQueue" />).</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.EnqueueGlyphDownloadRequest">
    <summary>Adds a request to the font download queue (<see cref="IDWriteFontDownloadQueue" />).</summary>
    <param name="glyphIndices">Array of glyph indices to download.</param>
    <param name="glyphCount">The number of elements in the glyph index array.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetFileSize">
    <summary>Get the total size of the font face in bytes.</summary>
    <returns>Returns the total size of the font face in bytes. If the locality is remote, this value is unknown and will be zero.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetFileTime">
    <summary>Get the last modified date.</summary>
    <param name="lastWriteTime">Returns the last modified date. The time may be zero if the font file loader does not expose file time.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetFontFaceIndex">
    <summary>Obtains the zero-based index of the font face in its font file or files. If the font files contain a single face,<br />the return value is zero.</summary>
    <returns>the zero-based index of the font face in its font file or files. If the font files contain a single face,<br />the return value is zero.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetFontFile">
    <summary>Obtains the font file representing a font face.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetLocalFileSize">
    <summary>Get the local size of the font face in bytes, which will always be<br />less than or equal to GetFullSize. If the locality is remote, this<br />value is zero. If full, this value will equal GetFileSize.</summary>
    <returns>the local size of the font face in bytes, which will always be<br />less than or equal to GetFullSize. If the locality is remote, this<br />value is zero. If full, this value will equal <see cref="GetFileSize" />.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetLocality">
    <summary>Get the locality of this font face reference.</summary>
    <returns>Returns the locality of this font face reference.</returns>
  </member>
  <member name="IDWriteFontFaceReference.GetSimulations">
    <summary>Obtains the algorithmic style simulation flags of a font face.</summary>
    <returns>Returns the algorithmic style simulation flags of a font face.</returns>
  </member>
  <member name="IDWriteFontFaceReference">
    <summary>Represents a reference to a font face. A uniquely identifying reference to a font, from which you can create a font face to query font metrics and use for rendering. A font face reference consists of a font file, font face index, and font face simulation. The file data may or may not be physically present on the local machine yet.</summary>
  </member>
</doc>