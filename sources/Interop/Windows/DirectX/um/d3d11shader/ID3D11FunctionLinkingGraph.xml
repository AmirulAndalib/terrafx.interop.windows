<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11FunctionLinkingGraph.CallFunction">
    <summary>
      <para>Creates a call-function linking node to use in the function-linking-graph.</para>
    </summary>
    <param name="pModuleInstanceNamespace">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The optional namespace for the function, or <b>NULL</b> if no namespace is needed.</para>
    </param>
    <param name="pModuleWithFunctionPrototype">
      <para>Type: <b><see cref="ID3D11Module" />*</b></para>
      <para>A pointer to the <see cref="ID3D11ModuleInstance" /> interface for the library module that contains the function prototype.</para>
    </param>
    <param name="pFunctionName">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The name of the function.</para>
    </param>
    <param name="ppCallNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />**</b></para>
      <para>A pointer to a variable that receives a pointer to the <see cref="ID3D11LinkingNode" /> interface that represents the function in the function-linking-graph.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.CreateModuleInstance">
    <summary>
      <para>Initializes a shader module from the function-linking-graph object.</para>
    </summary>
    <param name="ppModuleInstance">
      <para>Type: <b><see cref="ID3D11ModuleInstance" />**</b></para>
      <para>The address of a pointer to an <see cref="ID3D11ModuleInstance" /> interface for the shader module to initialize.</para>
    </param>
    <param name="ppErrorBuffer">
      <para>Type: <b><a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
      <para>An optional pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access compiler error messages, or <b>NULL</b> if there are no errors.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.GenerateHlsl">
    <summary>
      <para>Generates Microsoft High Level Shader Language (HLSL) shader code that represents the function-linking-graph.</para>
    </summary>
    <param name="uFlags">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Reserved</para>
    </param>
    <param name="ppBuffer">
      <para>Type: <b><a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
      <para>An pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the HLSL shader source code that represents the function-linking-graph. You can compile this HLSL code, but first you must  add code or include statements for the functions called in the function-linking-graph.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.GetLastError">
    <summary>
      <para>Gets the error from the last function call of the function-linking-graph.</para>
    </summary>
    <param name="ppErrorBuffer">
      <para>Type: <b><a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a>**</b></para>
      <para>An pointer to a variable that receives a pointer to the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff728743(v=vs.85)">ID3DBlob</a> interface that you can use to access the error.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.PassValue">
    <summary>
      <para>Passes a value from a source linking node to a destination linking node.</para>
    </summary>
    <param name="pSrcNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />*</b></para>
      <para>A pointer to the <see cref="ID3D11LinkingNode" /> interface for the source linking node.</para>
    </param>
    <param name="SrcParameterIndex">
      <para>Type: <b>INT</b></para>
      <para>The zero-based index of the source parameter.</para>
    </param>
    <param name="pDstNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />*</b></para>
      <para>A pointer to the <see cref="ID3D11LinkingNode" /> interface for the destination linking node.</para>
    </param>
    <param name="DstParameterIndex">
      <para>Type: <b>INT</b></para>
      <para>The zero-based index of the destination parameter.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.PassValueWithSwizzle">
    <summary>
      <para>Passes a value with swizzle from a source linking node to a destination linking node.</para>
    </summary>
    <param name="pSrcNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />*</b></para>
      <para>A pointer to the <see cref="ID3D11LinkingNode" /> interface for the source linking node.</para>
    </param>
    <param name="SrcParameterIndex">
      <para>Type: <b>INT</b></para>
      <para>The zero-based index of the source parameter.</para>
    </param>
    <param name="pSrcSwizzle">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The name of the source swizzle.</para>
    </param>
    <param name="pDstNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />*</b></para>
      <para>A pointer to the <see cref="ID3D11LinkingNode" /> interface for the destination linking node.</para>
    </param>
    <param name="DstParameterIndex">
      <para>Type: <b>INT</b></para>
      <para>The zero-based index of the destination parameter.</para>
    </param>
    <param name="pDstSwizzle">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The name of the destination swizzle.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.SetInputSignature">
    <summary>
      <para>Sets the input signature of the function-linking-graph.</para>
    </summary>
    <param name="pInputParameters">
      <para>Type: <b>const <see cref="D3D11_PARAMETER_DESC" />*</b></para>
      <para>An array of  <see cref="D3D11_PARAMETER_DESC" /> structures for the parameters of the input signature.</para>
    </param>
    <param name="cInputParameters">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>The number of input parameters in the <i>pInputParameters</i> array.</para>
    </param>
    <param name="ppInputNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />**</b></para>
      <para>A pointer to a variable that receives a pointer to the <see cref="ID3D11LinkingNode" /> interface that represents the input signature of the function-linking-graph.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph.SetOutputSignature">
    <summary>
      <para>Sets the output signature of the function-linking-graph.</para>
    </summary>
    <param name="pOutputParameters">
      <para>Type: <b>const <see cref="D3D11_PARAMETER_DESC" />*</b></para>
      <para>An array of  <see cref="D3D11_PARAMETER_DESC" /> structures for the parameters of the output signature.</para>
    </param>
    <param name="cOutputParameters">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>The number of output parameters in the <i>pOutputParameters</i> array.</para>
    </param>
    <param name="ppOutputNode">
      <para>Type: <b><see cref="ID3D11LinkingNode" />**</b></para>
      <para>A pointer to a variable that receives a pointer to the <see cref="ID3D11LinkingNode" /> interface that represents the output signature of the function-linking-graph.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionLinkingGraph" />
  </member>
  <member name="ID3D11FunctionLinkingGraph">
    <summary>
      <para>A function-linking-graph interface is used for constructing shaders that consist of a sequence of precompiled function calls that pass values to each other. <b>Note</b>  This interface is part of the HLSL shader linking technology that you can use on all Direct3D 11 platforms to create precompiled HLSL functions, package them into libraries, and link them into full shaders at run time.</para>
    </summary>
    <remarks>
      <para>To get a function-linking-graph interface, call <see cref="D3DCreateFunctionLinkingGraph" />.</para>
      <para>You can use the function-linking-graph (FLG) interface methods to construct shaders that consist of a sequence of precompiled function calls that pass values to each other. You don't need to write HLSL and then call the HLSL compiler. Instead, the shader structure is specified programmatically via a C++ API. FLG nodes represent input and output signatures and invocations of precompiled library functions. The order of registering the function-call nodes defines the sequence of invocations. You must specify the input signature node first and the output signature node last. FLG edges define how values are passed from one node to another. The data types of passed values must be the same; there is no implicit type conversion. Shape and swizzling rules follow the HLSL behavior. Values can only be passed forward in this sequence.</para>
      <para>
        <b>Note</b>  <b>ID3D11FunctionLinkingGraph</b> requires the D3dcompiler_47.dll or a later version of the DLL.</para>
    </remarks>
    <seealso cref="IUnknown" />
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>