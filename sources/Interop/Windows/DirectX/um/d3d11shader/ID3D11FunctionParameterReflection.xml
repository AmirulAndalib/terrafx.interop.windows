<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11FunctionParameterReflection.GetDesc">
    <summary>
      <para>Fills the parameter descriptor structure for the function's parameter.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D11_PARAMETER_DESC" />*</b></para>
      <para>A pointer to a <see cref="D3D11_PARAMETER_DESC" /> structure that receives a description of the function's parameter.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionParameterReflection" />
  </member>
  <member name="ID3D11FunctionParameterReflection">
    <summary>
      <para>A function-parameter-reflection interface accesses function-parameter info. <b>Note</b>  This interface is part of the HLSL shader linking technology that you can use on all Direct3D 11 platforms to create precompiled HLSL functions, package them into libraries, and link them into full shaders at run time.</para>
    </summary>
    <remarks>
      <para>To get a function-parameter-reflection interface, call <see cref="ID3D11FunctionReflection.GetFunctionParameter" />. This isn't a COM interface, so you don't need to worry about reference counts or releasing the interface when you're done with it.</para>
      <para>
        <b>Note</b>  <b>ID3D11FunctionParameterReflection</b> requires the D3dcompiler_47.dll or a later version of the DLL.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>