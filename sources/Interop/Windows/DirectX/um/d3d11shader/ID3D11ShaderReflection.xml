<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11ShaderReflection.GetBitwiseInstructionCount">
    <summary>Gets the number of bitwise instructions.</summary>
    <returns>The number of bitwise instructions.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetConstantBufferByIndex">
    <summary>Get a constant buffer by index.</summary>
    <param name="Index">Zero-based index.</param>
    <returns>A pointer to a constant buffer (see <see cref="ID3D11ShaderReflectionConstantBuffer Interface" />).</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetConstantBufferByName">
    <summary>Get a constant buffer by name.</summary>
    <param name="Name">The constant-buffer name.</param>
    <returns>A pointer to a constant buffer (see <see cref="ID3D11ShaderReflectionConstantBuffer Interface" />).</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetConversionInstructionCount">
    <summary>Gets the number of conversion instructions.</summary>
    <returns>Returns the number of conversion instructions.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetDesc">
    <summary>Get a shader description.</summary>
    <param name="pDesc">A pointer to a shader description. See <see cref="D3D11_SHADER_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetGSInputPrimitive">
    <summary>Gets the geometry-shader input-primitive description.</summary>
    <returns>The input-primitive description. See<see cref="D3D_PRIMITIVE_TOPOLOGY" />,<a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ff476189(v=vs.85)">D3D11_PRIMITIVE_TOPOLOGY</a>, or<a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/bb205334(v=vs.85)">D3D10_PRIMITIVE_TOPOLOGY</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetInputParameterDesc">
    <summary>Get an input-parameter description for a shader.</summary>
    <param name="ParameterIndex">A zero-based parameter index.</param>
    <param name="pDesc">A pointer to a shader-input-signature description. See <see cref="D3D11_SIGNATURE_PARAMETER_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetMinFeatureLevel">
    <summary>Gets the minimum feature level.</summary>
    <param name="unnamedParam1">A pointer to one of the enumerated values in <see cref="D3D_FEATURE_LEVEL" />, which represents the minimum feature level.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetMovcInstructionCount">
    <summary>Gets the number of Movc instructions.</summary>
    <returns>Returns the number of Movc instructions.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetMovInstructionCount">
    <summary>Gets the number of Mov instructions.</summary>
    <returns>Returns the number of Mov instructions.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetNumInterfaceSlots">
    <summary>Gets the number of interface slots in a shader.</summary>
    <returns>The number of interface slots in the shader.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetOutputParameterDesc">
    <summary>Get an output-parameter description for a shader.</summary>
    <param name="ParameterIndex">A zero-based parameter index.</param>
    <param name="pDesc">A pointer to a shader-output-parameter description. See <see cref="D3D11_SIGNATURE_PARAMETER_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetPatchConstantParameterDesc">
    <summary>Get a patch-constant parameter description for a shader.</summary>
    <param name="ParameterIndex">A zero-based parameter index.</param>
    <param name="pDesc">A pointer to a shader-input-signature description. See <see cref="D3D11_SIGNATURE_PARAMETER_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetRequiresFlags">
    <summary>Gets a group of flags that indicates the requirements of a shader.</summary>
    <returns>
      <para>A value that contains a combination of one or more shader requirements flags; each flag specifies a requirement of the shader. A default value of 0 means there are no requirements.</para>
      <list type="table">
        <listheader>
          <description>Shader requirement flag</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_DOUBLES</b>
          </description>
          <description>Shader requires that the graphics driver and hardware support double data type. For more info, see <see cref="D3D11_FEATURE_DATA_DOUBLES" />.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_EARLY_DEPTH_STENCIL</b>
          </description>
          <description>Shader requires an early depth stencil.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_UAVS_AT_EVERY_STAGE</b>
          </description>
          <description>Shader requires unordered access views (UAVs) at every pipeline stage.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_64_UAVS</b>
          </description>
          <description>Shader requires 64 UAVs.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_MINIMUM_PRECISION</b>
          </description>
          <description>Shader requires the graphics driver and hardware to support minimum precision. For more info, see <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/using-hlsl-minimum-precision">Using HLSL minimum precision</a>.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_11_1_DOUBLE_EXTENSIONS</b>
          </description>
          <description>Shader requires that the graphics driver and hardware support extended doubles instructions. For more info, see the <b>ExtendedDoublesShaderInstructions</b> member of <see cref="D3D11_FEATURE_DATA_D3D11_OPTIONS" />.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_11_1_SHADER_EXTENSIONS</b>
          </description>
          <description>Shader requires that the graphics driver and hardware support the <a href="https://docs.microsoft.com//windows/desktop/direct3dhlsl/dx-graphics-hlsl-msad4">msad4</a> intrinsic function in shaders. For more info, see the <b>SAD4ShaderInstructions</b> member of <see cref="D3D11_FEATURE_DATA_D3D11_OPTIONS" />.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_LEVEL_9_COMPARISON_FILTERING</b>
          </description>
          <description>Shader requires that the graphics driver and hardware support Direct3D 9 shadow support. For more info, see <see cref="D3D11_FEATURE_DATA_D3D9_SHADOW_SUPPORT" />.</description>
        </listheader>
        <listheader>
          <description>
            <b>D3D_SHADER_REQUIRES_TILED_RESOURCES</b>
          </description>
          <description>Shader requires that the graphics driver and hardware support tiled resources. For more info, see <see cref="GetResourceTiling" />.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ID3D11ShaderReflection.GetResourceBindingDesc">
    <summary>Get a description of how a resource is bound to a shader.</summary>
    <param name="ResourceIndex">A zero-based resource index.</param>
    <param name="pDesc">A pointer to an input-binding description. See <see cref="D3D11_SHADER_INPUT_BIND_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetResourceBindingDescByName">
    <summary>Get a description of how a resource is bound to a shader.</summary>
    <param name="Name">The constant-buffer name of the resource.</param>
    <param name="pDesc">A pointer to an input-binding description. See <see cref="D3D11_SHADER_INPUT_BIND_DESC" />.</param>
    <returns>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</returns>
  </member>
  <member name="ID3D11ShaderReflection.GetThreadGroupSize">
    <summary>Retrieves the sizes, in units of threads, of the X, Y, and Z dimensions of the shader's thread-group grid.</summary>
    <param name="pSizeX">A pointer to the size, in threads, of the x-dimension of the thread-group grid. The maximum size is 1024.</param>
    <param name="pSizeY">A pointer to the size, in threads, of the y-dimension of the thread-group grid. The maximum size is 1024.</param>
    <param name="pSizeZ">A pointer to the size, in threads, of the z-dimension of the thread-group grid. The maximum size is 64.</param>
    <returns>
      <para>Returns the total size, in threads, of the thread-group grid by calculating the product of the size of each dimension.</para>
      <code>*pSizeX * *pSizeY * *pSizeZ;</code>
    </returns>
  </member>
  <member name="ID3D11ShaderReflection.GetVariableByName">
    <summary>Gets a variable by name.</summary>
    <param name="Name">A pointer to a string containing the variable name.</param>
    <returns>Returns a <see cref="ID3D11ShaderReflectionVariable Interface" /> interface.</returns>
  </member>
  <member name="ID3D11ShaderReflection.IsSampleFrequencyShader">
    <summary>Indicates whether a shader is a sample frequency shader.</summary>
    <returns>Returns true if the shader is a sample frequency shader; otherwise returns false.</returns>
  </member>
  <member name="ID3D11ShaderReflection">
    <summary>A shader-reflection interface accesses shader information.</summary>
  </member>
</doc>