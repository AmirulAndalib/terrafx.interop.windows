<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11FunctionReflection.GetConstantBufferByIndex">
    <summary>
      <para>Gets a constant buffer by index for a function.</para>
    </summary>
    <param name="BufferIndex">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based index.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionConstantBuffer" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionConstantBuffer" /> interface that represents the constant buffer.</para>
    </returns>
    <remarks>
      <para>A constant buffer supplies either scalar constants or texture constants to a shader. A shader can use one or more constant buffers. For best performance, separate constants into buffers based on the frequency they are updated.</para>
    </remarks>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetConstantBufferByName">
    <summary>
      <para>Gets a constant buffer by name for a function.</para>
    </summary>
    <param name="Name">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The constant-buffer name.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionConstantBuffer" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionConstantBuffer" /> interface that represents the constant buffer.</para>
    </returns>
    <remarks>
      <para>A constant buffer supplies either scalar constants or texture constants to a shader. A shader can use one or more constant buffers. For best performance, separate constants into buffers based on the frequency they are updated.</para>
    </remarks>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetDesc">
    <summary>
      <para>Fills the function descriptor structure for the function.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D11_FUNCTION_DESC" />*</b></para>
      <para>A pointer to a <see cref="D3D11_FUNCTION_DESC" /> structure that receives a description of the function.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetFunctionParameter">
    <summary>
      <para>Gets the function parameter reflector.</para>
    </summary>
    <param name="ParameterIndex">
      <para>Type: <b>INT</b></para>
      <para>The zero-based index of the function parameter reflector to retrieve.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11FunctionParameterReflection" />*</b></para>
      <para>A pointer to a <see cref="ID3D11FunctionParameterReflection" /> interface that represents the function parameter reflector.</para>
    </returns>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetResourceBindingDesc">
    <summary>
      <para>Gets a description of how a resource is bound to a function.</para>
    </summary>
    <param name="ResourceIndex">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>A zero-based resource index.</para>
    </param>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D11_SHADER_INPUT_BIND_DESC" />*</b></para>
      <para>A pointer to a <see cref="D3D11_SHADER_INPUT_BIND_DESC" /> structure that describes input binding of the resource.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>A shader consists of executable code (the compiled HLSL functions) and a set of resources that supply the shader with input data. <b>GetResourceBindingDesc</b> gets info about how one resource in the set is bound as an input to the shader. The  <i>ResourceIndex</i> parameter specifies the index for the resource.</para>
    </remarks>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetResourceBindingDescByName">
    <summary>
      <para>Gets a description of how a resource is bound to a function.</para>
    </summary>
    <param name="Name">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The constant-buffer name of the resource.</para>
    </param>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D11_SHADER_INPUT_BIND_DESC" />*</b></para>
      <para>A pointer to a <see cref="D3D11_SHADER_INPUT_BIND_DESC" /> structure that describes input binding of the resource.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>A shader consists of executable code (the compiled HLSL functions) and a set of resources that supply the shader with input data. <b>GetResourceBindingDescByName</b> gets info about how one resource in the set is bound as an input to the shader. The  <i>Name</i> parameter specifies the name of the resource.</para>
    </remarks>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection.GetVariableByName">
    <summary>
      <para>Gets a variable by name.</para>
    </summary>
    <param name="Name">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>A pointer to a string containing the variable name.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionVariable" />*</b></para>
      <para>Returns a <see cref="ID3D11ShaderReflectionVariable Interface" /> interface.</para>
    </returns>
    <seealso cref="ID3D11FunctionReflection" />
  </member>
  <member name="ID3D11FunctionReflection">
    <summary>
      <para>A function-reflection interface accesses function info. <b>Note</b>  This interface is part of the HLSL shader linking technology that you can use on all Direct3D 11 platforms to create precompiled HLSL functions, package them into libraries, and link them into full shaders at run time.</para>
    </summary>
    <remarks>
      <para>To get a function-reflection interface, call <see cref="ID3D11LibraryReflection.GetFunctionByIndex" />. This isn't a COM interface, so you don't need to worry about reference counts or releasing the interface when you're done with it.</para>
      <para>
        <b>Note</b>  <b>ID3D11FunctionReflection</b> requires the D3dcompiler_47.dll or a later version of the DLL.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>