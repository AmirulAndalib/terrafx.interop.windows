<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D11ShaderReflectionType.GetBaseClass">
    <summary>
      <para>Gets an <see cref="ID3D11ShaderReflectionType Interface" />  interface containing the variable base class type.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>Returns A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetDesc">
    <summary>
      <para>Get the description of a shader-reflection-variable type.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="D3D11_SHADER_TYPE_DESC" />*</b></para>
      <para>A pointer to a shader-type description (see <see cref="D3D11_SHADER_TYPE_DESC" />).</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns one of the following <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-returnvalues">Direct3D 11 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetInterfaceByIndex">
    <summary>
      <para>Get an interface by index.</para>
    </summary>
    <param name="uIndex">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based index.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetMemberTypeByIndex">
    <summary>
      <para>Get a shader-reflection-variable type by index.</para>
    </summary>
    <param name="Index">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based index.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetMemberTypeByName">
    <summary>
      <para>Get a shader-reflection-variable type by name.</para>
    </summary>
    <param name="Name">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>Member name.</para>
    </param>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetMemberTypeName">
    <summary>
      <para>Get a shader-reflection-variable type.</para>
    </summary>
    <param name="Index">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Zero-based index.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>The variable type.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetNumInterfaces">
    <summary>
      <para>Gets the number of interfaces.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>Returns the number of interfaces.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.GetSubType">
    <summary>
      <para>Gets the base class of a class.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>Returns a pointer to a <see cref="ID3D11ShaderReflectionType Interface" /> containing the base class type.  Returns <b>NULL</b> if the class does not have a base class.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.ImplementsInterface">
    <summary>
      <para>Indicates whether a class type implements an interface.</para>
    </summary>
    <param name="pBase">
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if the interface is implemented; otherwise return S_FALSE.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.IsEqual">
    <summary>
      <para>Indicates whether two <see cref="ID3D11ShaderReflectionType Interface" /> pointers have the same underlying type.</para>
    </summary>
    <param name="pType">
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if the pointers have the same underlying type; otherwise returns S_FALSE.</para>
    </returns>
    <remarks>
      <para>IsEqual indicates whether the sources of the <see cref="ID3D11ShaderReflectionType Interface" /> pointers have the same underlying type.
For example, if two <b>ID3D11ShaderReflectionType Interface</b> pointers were retrieved from variables, IsEqual can be used to see if
the variables have the same type.</para>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType.IsOfType">
    <summary>
      <para>Indicates whether a variable is of the specified type.</para>
    </summary>
    <param name="pType">
      <para>Type: <b><see cref="ID3D11ShaderReflectionType" />*</b></para>
      <para>A pointer to a <see cref="ID3D11ShaderReflectionType Interface" />.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if object being queried is equal to or inherits from the type in the <i>pType</i> parameter; otherwise returns S_FALSE.</para>
    </returns>
    <remarks>
      <para>This method's interface is hosted in the out-of-box DLL D3DCompiler_xx.dll.</para>
    </remarks>
    <seealso cref="ID3D11ShaderReflectionType Interface" />
  </member>
  <member name="ID3D11ShaderReflectionType">
    <summary>
      <para>This shader-reflection interface provides access to variable type.</para>
    </summary>
    <remarks>
      <para>The get a shader-reflection-type interface, call <see cref="ID3D11ShaderReflectionVariable.GetType" />. This isn't a COM interface, so you don't need to worry about reference counts or releasing the interface when you're done with it.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d11-graphics-reference-d3d11-shader-interfaces">Shader Interfaces</seealso>
  </member>
</doc>