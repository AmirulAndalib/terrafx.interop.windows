<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXCoreAdapterList.GetAdapter">
    <summary>
      <para>Retrieves a specific adapter by index from a DXCore adapter list object. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</para>
    </summary>
    <param name="index">
      <para>Type: <b>uint32_t</b></para>
      <para>A zero-based index, identifying an adapter instance within the DXCore adapter list.</para>
    </param>
    <param name="riid">
      <para>Type: <b>REFIID</b></para>
      <para>A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppvAdapter</i>. This is expected to be the interface identifier (IID) of <see cref="IDXCoreAdapter" />.</para>
    </param>
    <param name="ppvAdapter">
      <para>Type: <b>void**</b></para>
      <para>The address of a pointer to an interface with the IID specified in the <i>riid</i> parameter. Upon successful return, <i>*ppvAdapter</i> (the dereferenced address) contains a pointer to the the DXCore adapter created.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
|DXGI_ERROR_DEVICE_REMOVED|The <i>index</i> is valid, but the adapter is no longer in a valid state.|
|E_INVALIDARG|The provided <i>index</i> is not valid.|
|E_NOINTERFACE|An invalid value was provided for <i>riid</i>.|
|E_POINTER|<code>nullptr</code> was provided for <i>ppvAdapter</i>.|</para>
    </returns>
    <remarks>
      <para>Multiple calls passing an index that represents the same adapter return identical interface pointers, even across different adapter lists. As a result, it's safe to compare interface pointers to determine whether multiple pointers refer to the same adapter object.</para>
    </remarks>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList.GetAdapterCount">
    <summary>
      <para>Retrieves the number of adapters in a DXCore adapter list object. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</para>
    </summary>
    <returns>
      <para>Type: <b>uint32_t</b></para>
      <para>Returns the number of adapter items in the list.</para>
    </returns>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList.GetFactory">
    <summary>
      <para>Retrieves an <see cref="IDXCoreAdapterFactory" /> interface pointer to the DXCore adapter factory object. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</para>
    </summary>
    <param name="riid">
      <para>Type: <b>REFIID</b></para>
      <para>A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppvFactory</i>. This is expected to be the interface identifier (IID) of <see cref="IDXCoreAdapterFactory" />.</para>
    </param>
    <param name="ppvFactory">
      <para>Type: <b>void**</b></para>
      <para>The address of a pointer to an interface with the IID specified in the <i>riid</i> parameter. Upon successful return, <i>*ppvFactory</i> (the dereferenced address) contains a pointer to the existing DXCore adapter factory object. Before returning, the function increments the reference count on the factory object's <see cref="IDXCoreAdapterFactory" /> interface.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
|E_NOINTERFACE|An invalid value was provided for <i>riid</i>.|
|E_POINTER|<code>nullptr</code> was provided for <i>ppvFactory</i>.|</para>
    </returns>
    <remarks>
      <para>For the duration of time that a reference exists on an <see cref="IDXCoreAdapterFactory" /> interface, an <see cref="IDXCoreAdapterList" /> interface, or an <see cref="IDXCoreAdapter" /> interface, additional calls to <see cref="DXCoreCreateAdapterFactory" /></para>
      <para>
        <see cref="IDXCoreAdapterList.GetFactory" />, or <see cref="IDXCoreAdapter.GetFactory" /> will return pointers to the same object, increasing the reference count of the <b>IDXCoreAdapterFactory</b> interface.</para>
    </remarks>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList.IsAdapterPreferenceSupported">
    <summary>
      <para>Determines whether a specified <see cref="DXCoreAdapterPreference" /> value is understood by the current operating system (OS). You can call <b>IsAdapterPreferenceSupported</b> before calling <see cref="IDXCoreAdapterList.Sort" />.</para>
    </summary>
    <param name="preference">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore_interface/ne-dxcore_interface-dxcoreadapterpreference">DXCoreAdapterPreference</a></b></para>
      <para>A <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore_interface/ne-dxcore_interface-dxcoreadapterpreference">DXCoreAdapterPreference</a> value that will be checked to see whether it's supported by the OS.</para>
    </param>
    <returns>
      <para>Type: <b>bool</b></para>
      <para>Returns <code>true</code> if the sort type is understood by the current OS. Otherwise, returns <code>false</code>.</para>
    </returns>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList.IsStale">
    <summary>
      <para>Determines whether changes to this system have resulted in this DXCore adapter list object becoming out of date. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</para>
    </summary>
    <returns>
      <para>Type: <b>bool</b></para>
      <para>Returns <code>true</code> if, since generating the list, changes to system conditions have occurred that would cause this adapter list to become stale. Otherwise, returns <code>false</code>.</para>
    </returns>
    <remarks>
      <para>You can poll <b>IsStale</b> to determine whether changing system conditions have led to this list becoming out of date. If <b>IsStale</b> returns <code>true</code> once, then it returns <code>true</code> for the remaining lifetime of the DXCore adapter list object. A stale list object is still considered stale even if system conditions return to a state that matches the list (the same conditions obtain now as did when the list was first generated).</para>
    </remarks>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList.Sort">
    <summary>
      <para>Sorts a DXCore adapter list object based on a provided input array of sort criteria, where array items earlier in the array of criteria are given a higher weight. <b>Sort</b> helps you to more easily find your ideal adapter in an adapter list.</para>
    </summary>
    <param name="numPreferences">
      <para>Type: <b>uint32_t</b></para>
      <para>The number of elements that are in the array pointed to by the <i>preferences</i> parameter.</para>
    </param>
    <param name="preferences">
      <para>Type: <b>const <see cref="DXCoreAdapterPreference" />*</b></para>
      <para>A pointer to a constant array of <see cref="DXCoreAdapterPreference" /> values, representing sort criteria.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
|E_INVALIDARG|The <i>numPreferences</i> argument is zero, or the <i>preferences</i> argument is <code>nullptr</code>.|</para>
    </returns>
    <remarks>
      <para>In cases where a provided <see cref="DXCoreAdapterPreference" /> value isn't recognized by the operating system (OS), it is ignored, and won't cause the API to fail. Known <b>DXCoreAdapterPreference</b> values will still be considered in this case. To determine whether a sort type is understood by the API, call <see cref="IDXCoreAdapterList.IsAdapterPreferenceSupported" />.</para>
      <para>
        <b>DXCoreAdapterPreference</b> values that occur earlier in the provided <i>preferences</i> array are treated with higher priority.</para>
      <para>Refer to the <b>DXCoreAdapterPreference</b> enumeration documentation for details about what logic is applied for each type. The internal logic for a type may develop as the OS develops.</para>
      <para>When <b>Sort</b> returns, items in the DXCore adapter list will have been sorted from most preferable to least preferable. So, calling <see cref="IDXCoreAdapterList.GetAdapter" /> with index 0 retrieves the adapter that best matches the requested sort preference types; index 1 is the next best match, and so on.</para>
    </remarks>
    <seealso cref="IDXCoreAdapterList" />
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-reference">DXCore Reference</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</seealso>
  </member>
  <member name="IDXCoreAdapterList">
    <summary>
      <para>The <b>IDXCoreAdapterList</b> interface implements methods for retrieving adapter items from a generated list, as well as details about the list. <b>IDXCoreAdapterList</b> inherits from the <see cref="IUnknown" /> interface. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</para>
    </summary>
  </member>
</doc>