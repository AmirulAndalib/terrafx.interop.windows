<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_RENDER_PASS_TIER">
    <summary>
      <para>Specifies the level of support for render passes on a graphics device.</para>
    </summary>
    <remarks>
      <para>To determine the level of support for render passes for a graphics device, pass <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS5" /> struct.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/rendering">Rendering</seealso>
  </member>
  <member name="D3D12_RENDER_PASS_TIER.D3D12_RENDER_PASS_TIER_0">
    <summary>
      <para>The user-mode display driver hasn't implemented render passes, and so the feature is provided only via software emulation. Render passes might not provide a performance advantage at this level of support.</para>
    </summary>
  </member>
  <member name="D3D12_RENDER_PASS_TIER.D3D12_RENDER_PASS_TIER_1">
    <summary>
      <para>The render passes feature is implemented by the user-mode display driver, and render target/depth buffer writes may be accelerated. Unordered access view (UAV) writes are not efficiently supported within the render pass.</para>
    </summary>
  </member>
  <member name="D3D12_RENDER_PASS_TIER.D3D12_RENDER_PASS_TIER_2">
    <summary>
      <para>The render passes feature is implemented by the user-mode display driver, render target/depth buffer writes may be accelerated, and unordered access view (UAV) writes (provided that writes in a render pass are not read until a subsequent render pass) are likely to be more efficient than issuing the same work without using a render pass.</para>
    </summary>
  </member>
</doc>