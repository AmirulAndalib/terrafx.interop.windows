<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12PipelineLibrary.GetSerializedSize">
    <summary>
      <para>Returns the amount of memory required to serialize the current contents of the database.</para>
    </summary>
    <returns>
      <para>Type: <b>SIZE_T</b></para>
      <para>This method returns a SIZE_T object, containing the size required in bytes.</para>
    </returns>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
  <member name="ID3D12PipelineLibrary.LoadComputePipeline">
    <summary>
      <para>Retrieves the requested PSO from the library. The input desc is matched against the data in the current library database, and remembered in order to prevent duplication of PSO contents.</para>
    </summary>
    <param name="pName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>The unique name of the PSO.</para>
    </param>
    <param name="pDesc">
      <para>Type: <b>const <see cref="D3D12_COMPUTE_PIPELINE_STATE_DESC" />*</b></para>
      <para>Specifies a description of the required PSO in a <see cref="D3D12_COMPUTE_PIPELINE_STATE_DESC" /> structure. This input description is matched against the data in the current library database, and stored in order to prevent duplication of PSO contents.</para>
    </param>
    <param name="riid">
      <para>Type: <b>REFIID</b></para>
      <para>Specifies a REFIID for the <see cref="ID3D12PipelineState" /> object. Typically set this, and the following parameter, with the macro <code>IID_PPV_ARGS(&amp;PSO1)</code>, where <i>PSO1</i> is the name of the object.</para>
    </param>
    <param name="ppPipelineState">
      <para>Type: <b>void**</b></para>
      <para>Specifies a pointer that will reference the returned PSO.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code, which can include E_INVALIDARG if the name doesn’t exist, or if the input description doesn’t match the data in the library, and E_OUTOFMEMORY if unable to allocate the return PSO.</para>
    </returns>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
  <member name="ID3D12PipelineLibrary.LoadGraphicsPipeline">
    <summary>
      <para>Retrieves the requested PSO from the library.</para>
    </summary>
    <param name="pName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>The unique name of the PSO.</para>
    </param>
    <param name="pDesc">
      <para>Type: <b>const <see cref="D3D12_GRAPHICS_PIPELINE_STATE_DESC" />*</b></para>
      <para>Specifies a description of the required PSO in a <see cref="D3D12_GRAPHICS_PIPELINE_STATE_DESC" /> structure. This input description is matched against the data in the current library database, and stored in order to prevent duplication of PSO contents.</para>
    </param>
    <param name="riid">
      <para>Type: <b>REFIID</b></para>
      <para>Specifies a REFIID for the <see cref="ID3D12PipelineState" /> object. Typically set this, and the following parameter, with the macro <code>IID_PPV_ARGS(&amp;PSO1)</code>, where <i>PSO1</i> is the name of the object.</para>
    </param>
    <param name="ppPipelineState">
      <para>Type: <b>void**</b></para>
      <para>Specifies a pointer that will reference the returned PSO.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code, which can include E_INVALIDARG if the name doesn’t exist, or if the input description doesn’t match the data in the library, and E_OUTOFMEMORY if unable to allocate the return PSO.</para>
    </returns>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
  <member name="ID3D12PipelineLibrary.Serialize">
    <summary>
      <para>Writes the contents of the library to the provided memory, to be provided back to the runtime at a later time.</para>
    </summary>
    <param name="pData">
      <para>Type: <b>void*</b></para>
      <para>Specifies a pointer to the data. This memory must be readable and writable up to the input size. This data can be saved and provided to <see cref="CreatePipelineLibrary" /> at a later time, including future instances of this or other processes. The data becomes invalidated if the runtime or driver is updated, and is not portable to other hardware or devices.</para>
    </param>
    <param name="DataSizeInBytes">
      <para>Type: <b>SIZE_T</b></para>
      <para>The size provided must be at least the size returned from <see cref="GetSerializedSize" />.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code, including E_INVALIDARG if the buffer provided isn’t big enough.</para>
    </returns>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
  <member name="ID3D12PipelineLibrary.StorePipeline">
    <summary>
      <para>Adds the input PSO to an internal database with the corresponding name.</para>
    </summary>
    <param name="pName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>Specifies a unique name for the library. Overwriting is not supported.</para>
    </param>
    <param name="pPipeline">
      <para>Type: <b>ID3D12PipelineState*</b></para>
      <para>Specifies the <see cref="ID3D12PipelineState" /> to add.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code, including E_INVALIDARG if the name already exists, E_OUTOFMEMORY if unable to allocate storage in the library.</para>
    </returns>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
  <member name="ID3D12PipelineLibrary">
    <summary>
      <para>Manages a pipeline library, in particular loading and retrieving individual PSOs.</para>
    </summary>
    <remarks>
      <para>Refer to the remarks and examples for <see cref="CreatePipelineLibrary" />.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-interfaces">Core Interfaces</seealso>
    <seealso cref="ID3D12DeviceChild" />
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/root-signature-version-1-1">Root Signature Version 1.1</seealso>
  </member>
</doc>