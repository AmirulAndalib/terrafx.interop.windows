<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12ShaderCacheSession.FindValue">
    <summary>
      <para>Looks up an entry in the cache whose key exactly matches the provided key.</para>
      <para>Call the function twice. The first time to retrieve the value's size, and the second time to retrieve the data. In-memory temporary storage makes this calling pattern performant.</para>
    </summary>
    <param name="pKey">
      <para>Type: _In_reads_bytes_(KeySize) <b>const void *</b></para>
      <para>The key of the entry to look up.</para>
    </param>
    <param name="KeySize">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a></b></para>
      <para>The size of the key, in bytes.</para>
    </param>
    <param name="pValue">
      <para>Type: _Out_writes_bytes_(*pValueSize) <b>void *</b></para>
      <para>A pointer to a memory block that receives the cached entry.</para>
    </param>
    <param name="pValueSize">
      <para>Type: _Inout_ <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a>*</b></para>
      <para>A pointer to a <b>UINT</b> that receives the size of the cached entry, in bytes.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
| DXGI_ERROR_CACHE_HASH_COLLISION | There's an entry with the same hash as the provided key, but the key doesn't exactly match. |
| DXGI_ERROR_NOT_FOUND | The entry isn't present. |</para>
    </returns>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12ShaderCacheSession.GetDesc">
    <summary>
      <para>Retrieves the description used to create the cache session.</para>
    </summary>
    <returns>
      <para>A <see cref="D3D12_SHADER_CACHE_SESSION_DESC" /> structure representing the description used to create the cache session.</para>
    </returns>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12ShaderCacheSession.SetDeleteOnDestroy">
    <summary>
      <para>When all cache session objects corresponding to a given cache are destroyed, the cache is cleared.</para>
      <para>See <b>Remarks</b> for the ways in which a disk cache can be cleared.</para>
    </summary>
    <remarks>
      <para>A disk cache can be cleared in one of the following ways.</para>
      <list type="bullet">
        <item>
          <description>Explicitly, by calling <b>SetDeleteOnDestroy</b> on the session object, and then releasing the session.</description>
        </item>
        <item>
          <description>Explicitly, in developer mode, by calling <see cref="ID3D12Device9.ShaderCacheControl" /> with <see cref="D3D12_SHADER_CACHE_KIND_FLAG_APPLICATION_MANAGED" />.</description>
        </item>
        <item>
          <description>Implicitly, by creating a session object with a version that doesn't match the version used to create it.</description>
        </item>
        <item>
          <description>Externally, by the disk cleanup utility enumerating it and clearing it. This won't happen for caches created with the <see cref="D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR" /> flag.</description>
        </item>
        <item>
          <description>Manually, by deleting the files (<code>*.idx</code>, <code>*.val</code>, and <code>*.lock</code>) stored on disk for <see cref="D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR" /> caches. Your application shouldn't attempt to do this for caches stored outside of the working directory.</description>
        </item>
      </list>
    </remarks>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12ShaderCacheSession.StoreValue">
    <summary>
      <para>Adds an entry to the cache.</para>
    </summary>
    <param name="pKey">
      <para>Type: _In_reads_bytes_(KeySize) <b>const void *</b></para>
      <para>The key of the entry to add.</para>
    </param>
    <param name="KeySize">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a></b></para>
      <para>The size of the key, in bytes.</para>
    </param>
    <param name="pValue">
      <para>Type: _In_reads_bytes_(ValueSize) <b>void *</b></para>
      <para>A pointer to a memory block containing the entry to add.</para>
    </param>
    <param name="ValueSize">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a></b></para>
      <para>The size of the entry to add, in bytes.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
| DXGI_ERROR_ALREADY_EXISTS | There's an entry with the same key. |
| DXGI_ERROR_CACHE_HASH_COLLISION | There's an entry with the same hash as the provided key, but the key doesn't match. |
| DXGI_ERROR_CACHE_FULL | Adding this entry would cause the cache to become larger than its maximum size. |</para>
    </returns>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12ShaderCacheSession">
    <summary>
      <para>Represents a shader cache session.</para>
    </summary>
    <seealso cref="ID3D12DeviceChild" />
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
</doc>