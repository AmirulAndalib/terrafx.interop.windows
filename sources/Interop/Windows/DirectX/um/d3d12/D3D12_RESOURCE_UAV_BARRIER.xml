<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_RESOURCE_UAV_BARRIER">
    <summary>
      <para>Represents a resource in which all UAV accesses must complete before any future UAV accesses can begin.</para>
    </summary>
    <remarks>
      <para>This struct represents a resource in which all unordered access view (UAV) accesses (reads or writes) must complete before any future UAV accesses (read or write) can begin.</para>
      <para>This structure is a member of the <see cref="D3D12_RESOURCE_BARRIER" /> structure.</para>
      <para>You don't need to insert a UAV barrier between 2 draw or dispatch calls that only read a UAV.
Additionally, you don't need to insert a UAV barrier between 2 draw or dispatch calls that write to the same UAV if you know that it's safe to execute the UAV accesses in any order.
The resource can be <b>NULL</b>, which indicates that any UAV access could require the barrier.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-structures">Core Structures</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/using-resource-barriers-to-synchronize-resource-states-in-direct3d-12">Using Resource Barriers to Synchronize Resource States in Direct3D 12</seealso>
  </member>
  <member name="D3D12_RESOURCE_UAV_BARRIER.pResource">
    <summary>
      <para>The resource used in the transition, as a pointer to <see cref="ID3D12Resource" />.</para>
    </summary>
  </member>
</doc>