<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_TILE_COPY_FLAGS">
    <summary>
      <para>Specifies how to copy a tile.</para>
    </summary>
    <remarks>
      <para>This enum is used by the <see cref="CopyTiles" /> method.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-enumerations">Core Enumerations</seealso>
  </member>
  <member name="D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_NONE">
    <summary>
      <para>No tile-copy flags are specified.</para>
    </summary>
  </member>
  <member name="D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_NO_HAZARD">
    <summary>
      <para>Indicates that the GPU isn't currently referencing any of the
portions of destination memory being written.</para>
    </summary>
  </member>
  <member name="D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE">
    <summary>
      <para>Indicates that the <see cref="ID3D12GraphicsCommandList.CopyTiles" /> operation involves copying a linear buffer to a swizzled tiled resource. This means to copy tile data from the
specified buffer location, reading tiles sequentially,
to the specified tile region (in x,y,z order if the region is a box), swizzling to optimal hardware memory layout as needed.
In this <b>ID3D12GraphicsCommandList.CopyTiles</b> call, you specify the source data with the  <i>pBuffer</i> parameter and the destination with the <i>pTiledResource</i> parameter.</para>
    </summary>
  </member>
  <member name="D3D12_TILE_COPY_FLAGS.D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER">
    <summary>
      <para>Indicates that the <see cref="ID3D12GraphicsCommandList.CopyTiles" /> operation involves copying a swizzled tiled resource to a linear buffer. This means to copy tile data from the tile region, reading tiles sequentially (in x,y,z order if the region is a box),
to the specified buffer location, deswizzling to linear memory layout as needed.
In this <b>ID3D12GraphicsCommandList.CopyTiles</b> call, you specify the source data with the <i>pTiledResource</i> parameter and the destination with the  <i>pBuffer</i> parameter.</para>
    </summary>
  </member>
</doc>