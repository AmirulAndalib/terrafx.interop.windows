<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT">
    <summary>
      <para>Details the adapter's GPU virtual address space limitations, including maximum address bits per resource and per process.</para>
    </summary>
    <remarks>
      <para>See the enumeration constant D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT in the <see cref="D3D12_FEATURE" /> enumeration.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-structures">Core Structures</seealso>
    <seealso cref="D3D12_FEATURE" />
  </member>
  <member name="D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT.MaxGPUVirtualAddressBitsPerResource">
    <summary>
      <para>The maximum GPU virtual address bits per resource.</para>
      <para>Some adapters have significantly less bits available per resource than per process, while other adapters have significantly greater bits available per resource than per process. The latter scenario tends to happen in less common scenarios, like when running a 32-bit process on certain UMA adapters.
When per resource capabilities are greater than per process, the greater per resource capabilities can only be leveraged by reserved resources or NULL mapped pages.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT.MaxGPUVirtualAddressBitsPerProcess">
    <summary>
      <para>The maximum GPU virtual address bits per process.</para>
      <para>When this value is nearly equal to the available residency budget, <see cref="Evict" /> will not be a feasible option to manage residency. See <see cref="MakeResident" /> for more details.</para>
    </summary>
  </member>
</doc>