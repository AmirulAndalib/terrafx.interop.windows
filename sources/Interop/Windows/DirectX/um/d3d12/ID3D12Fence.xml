<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12Fence.GetCompletedValue">
    <summary>
      <para>Gets the current value of the fence.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/WinProg/windows-data-types">UINT64</a></b></para>
      <para>Returns the current value of the fence. If the device has been removed, the return value will be <b>UINT64_MAX</b>.</para>
    </returns>
    <seealso cref="ID3D12Fence" />
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</seealso>
  </member>
  <member name="ID3D12Fence.SetEventOnCompletion">
    <summary>
      <para>Specifies an event that should be fired when the fence reaches a certain value.</para>
    </summary>
    <param name="Value">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/WinProg/windows-data-types">UINT64</a></b></para>
      <para>The fence value when the event is to be signaled.</para>
    </param>
    <param name="hEvent">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/WinProg/windows-data-types">HANDLE</a></b></para>
      <para>A handle to the event object.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>This method returns <b>E_OUTOFMEMORY</b> if the kernel components don’t have sufficient memory to store the event in a list. See <a href="https://docs.microsoft.com//windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
    </returns>
    <remarks>
      <para>To specify multiple fences before an event is triggered, refer to <see cref="SetEventOnMultipleFenceCompletion" />.</para>
      <para>If <i>hEvent</i> is a null handle, then this API will not return until the specified fence value(s) have been reached.</para>
    </remarks>
    <seealso cref="ID3D12Fence" />
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</seealso>
  </member>
  <member name="ID3D12Fence.Signal">
    <summary>
      <para>Sets the fence to the specified value.</para>
    </summary>
    <param name="Value">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/WinProg/windows-data-types">UINT64</a></b></para>
      <para>The value to set the fence to.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns one of the <a href="https://docs.microsoft.com//windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a>.</para>
    </returns>
    <remarks>
      <para>Use this method to set a fence value from the CPU side. Use <see cref="ID3D12CommandQueue.Signal" /> to set a fence from the GPU side.</para>
    </remarks>
    <seealso cref="ID3D12Fence" />
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</seealso>
  </member>
  <member name="ID3D12Fence">
    <summary>
      <para>Represents a fence, an object used for synchronization of the CPU and one or more GPUs.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/direct3d-12-interfaces">Core Interfaces</seealso>
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/fence-based-resource-management">Fence Based Resource Management</seealso>
    <seealso cref="ID3D12Pageable" />
    <seealso href="https://docs.microsoft.com//windows/win32/direct3d12/user-mode-heap-synchronization">Multi-engine synchronization</seealso>
  </member>
</doc>