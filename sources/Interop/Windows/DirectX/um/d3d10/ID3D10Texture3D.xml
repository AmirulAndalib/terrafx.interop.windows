<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D10Texture3D.GetDesc">
    <summary>Get the properties of the texture resource.</summary>
    <param name="pDesc">Pointer to a resource description (see <see cref="D3D10_TEXTURE3D_DESC" />).</param>
  </member>
  <member name="ID3D10Texture3D.Map">
    <summary>Get a pointer to the data contained in a subresource, and deny GPU access to that subresource.</summary>
    <param name="Subresource">Index number of the subresource. See <see cref="D3D10CalcSubresource" /> for more details.</param>
    <param name="MapType">Specifies the CPU's read and write permissions for a resource. For possible values, see <see cref="D3D10_MAP" />.</param>
    <param name="MapFlags">
      <see cref="Flag" /> that specifies what the CPU should do when the GPU is busy. This flag is optional.</param>
    <param name="pMappedTex3D">Pointer to a structure (<see cref="D3D10_MAPPED_TEXTURE3D" />) that is filled in by the function and contains a pointer to the resource data.</param>
    <returns>If this function succeeds, it returns S_OK. All of the Map methods have identical return values and operating restrictions. These are listed in the remarks section of <see cref="ID3D10Texture1D.Map" />.</returns>
  </member>
  <member name="ID3D10Texture3D.Unmap">
    <summary>Invalidate the pointer to the resource retrieved by <see cref="ID3D10Texture3D.Map" />, and re-enable the GPU's access to the resource.</summary>
    <param name="Subresource">
      <a href="https://docs.microsoft.com//windows/desktop/direct3d10/d3d10-graphics-programming-guide-resources-types">Subresource</a> to be unmapped. See <see cref="D3D10CalcSubresource" /> for more details.</param>
  </member>
  <member name="ID3D10Texture3D">
    <summary>A <a href="https://docs.microsoft.com//windows/desktop/direct3d10/d3d10-graphics-programming-guide-resources-types">3D texture</a> interface accesses texel data, which is structured memory.</summary>
  </member>
</doc>