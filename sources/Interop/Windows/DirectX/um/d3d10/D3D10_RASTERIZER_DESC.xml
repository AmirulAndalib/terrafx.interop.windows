<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D10_RASTERIZER_DESC">
    <summary>
      <para>Describes the rasterizer state.</para>
    </summary>
    <remarks>
      <para>Rasterizer state defines the behavior of the <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-rasterizer-stage">rasterizer stage</a>. To create a rasterizer-state object, call <see cref="ID3D10Device.CreateRasterizerState" />. To set rasterizer state, call <see cref="ID3D10Device.RSSetState" />.</para>
      <para>
        <b>Note</b>  For <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> 9.1, 9.2, 9.3, and 10.0, if you set <b>MultisampleEnable</b> to <b>FALSE</b>, the runtime renders all points, lines, and triangles without anti-aliasing even for render targets with a sample count greater than 1. For feature level 10.1, the setting of <b>MultisampleEnable</b> has no effect on points and triangles with regard to MSAA and impacts only the selection of the line-rendering algorithm as shown in this table:</para>
      <list type="table">
        <listheader>
          <description>Line-rendering algorithm</description>
          <description>
            <b>MultisampleEnable</b>
          </description>
          <description>
            <b>AntialiasedLineEnable</b>
          </description>
        </listheader>
        <item>
          <description>Aliased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Alpha antialiased</description>
          <description>
            <b>FALSE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>FALSE</b>
          </description>
        </item>
        <item>
          <description>Quadrilateral</description>
          <description>
            <b>TRUE</b>
          </description>
          <description>
            <b>TRUE</b>
          </description>
        </item>
      </list>
      <para>The settings of the <b>MultisampleEnable</b> and <b>AntialiasedLineEnable</b> members apply only to multisample antialiasing (MSAA) render targets (that is, render targets with sample counts greater than 1). Because of the differences in <a href="https://docs.microsoft.com//windows/desktop/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature-level</a> behavior and as long as you aren’t performing any line drawing or don’t mind that lines render as quadrilaterals, we recommend that you always set <b>MultisampleEnable</b> to <b>TRUE</b> whenever you render on MSAA render targets.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d10/d3d10-graphics-reference-d3d10-core-structures">Core Structures</seealso>
  </member>
  <member name="D3D10_RASTERIZER_DESC.FillMode">
    <summary>
      <para>Type: <b><see cref="D3D10_FILL_MODE" /></b></para>
      <para>A member of the <see cref="D3D10_FILL_MODE" /> enumerated type that determines the fill mode to use when rendering.  The default value is <b>D3D10_FILL_SOLID</b>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.CullMode">
    <summary>
      <para>Type: <b><see cref="D3D10_CULL_MODE" /></b></para>
      <para>A member of the <see cref="D3D10_CULL_MODE" /> enumerated type that indicates whether triangles facing the specified direction are drawn.  The default value is <b>D3D10_CULL_BACK</b>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.FrontCounterClockwise">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Determines if a triangle is front-facing or back-facing. If this parameter is <b>TRUE</b>, then a triangle is considered front-facing if its vertices are counter-clockwise on the render target, and considered back-facing if they are clockwise. If this parameter is <b>FALSE</b>, then the opposite is true.  The default value is <b>FALSE</b>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.DepthBias">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT</a></b></para>
      <para>Specifies the depth value added to a given pixel. The default value is 0. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.DepthBiasClamp">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">FLOAT</a></b></para>
      <para>Specifies the maximum depth bias of a pixel. The default value is 0.0f. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.SlopeScaledDepthBias">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">FLOAT</a></b></para>
      <para>Specifies a scalar on a given pixel's slope. The default value is 0.0f. For info about depth bias, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-output-merger-stage-depth-bias">Depth Bias</a>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.DepthClipEnable">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Enables or disables clipping based on distance.  The default value is <b>TRUE</b>.</para>
      <para>The hardware always performs x and y clipping of rasterized coordinates. When <b>DepthClipEnable</b> is set to the default value, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).</para>
      <code>
0 &lt; w
-w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
-w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)
0 &lt;= z &lt;= w

</code>
      <para>When you set <b>DepthClipEnable</b> to FALSE, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.ScissorEnable">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Enable or disables scissor-rectangle culling. All pixels outside an active scissor rectangle are culled. The default value is <b>FALSE</b>. For more information, see <a href="https://docs.microsoft.com//windows/desktop/direct3d11/d3d10-graphics-programming-guide-rasterizer-stage-getting-started">Set the Scissor Rectangle</a>.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.MultisampleEnable">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Specifies whether to use the quadrilateral or alpha line anti-aliasing algorithm on multisample antialiasing (MSAA) render targets. The default value is <b>FALSE</b>. Set to <b>TRUE</b> to use the quadrilateral line anti-aliasing algorithm and to <b>FALSE</b> to use the alpha line anti-aliasing algorithm. For more info about this member, see Remarks.</para>
    </summary>
  </member>
  <member name="D3D10_RASTERIZER_DESC.AntialiasedLineEnable">
    <summary>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Specifies whether to enable line antialiasing; only applies when alpha blending is enabled, you are drawing lines, and the <b>MultisampleEnable</b> member is <b>FALSE</b>.  The default value is <b>FALSE</b>. For more info about this member, see Remarks.</para>
    </summary>
  </member>
</doc>