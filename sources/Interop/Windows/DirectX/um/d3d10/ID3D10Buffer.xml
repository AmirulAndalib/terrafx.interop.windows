<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D10Buffer.GetDesc">
    <summary>Get the properties of a buffer resource.</summary>
    <param name="pDesc">Pointer to a resource description (see <see cref="D3D10_BUFFER_DESC" />) filled in by the method. This pointer cannot be <b>NULL</b>.</param>
  </member>
  <member name="ID3D10Buffer.Map">
    <summary>Get a pointer to the data contained in the resource and deny GPU access to the resource.</summary>
    <param name="MapType">Flag that specifies the CPU's permissions for the reading and writing of a resource. For possible values, see <see cref="D3D10_MAP" />.</param>
    <param name="MapFlags">Flag that specifies what the CPU should do when the GPU is busy (see <see cref="D3D10_MAP_FLAG" />). This flag is optional.</param>
    <param name="ppData">Pointer to the buffer resource data.</param>
    <returns>
      <para>If this function succeeds, it returns S_OK. The following list contains some of the reasons that <b>Map</b> can fail:</para>
      <list type="bullet">
        <item>
          <description>If <i>MapFlags</i> specifies D3D10_MAP_FLAG_DO_NOT_WAIT and the GPU is not yet finished with the resource, <b>ID3D10Buffer.Map</b> returns DXGI_ERROR_WAS_STILL_DRAWING.</description>
        </item>
        <item>
          <description>
            <b>ID3D10Buffer.Map</b> returns DXGI_ERROR_DEVICE_REMOVED if <i>MapType</i> includes any flags that permit reading and the hardware device (that is, the video card) has been removed.</description>
        </item>
      </list>For more information about the preceding return values, see <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a>.</returns>
  </member>
  <member name="ID3D10Buffer.Unmap">
    <summary>Invalidate the pointer to the resource retrieved by <see cref="ID3D10Buffer.Map" /> and reenable GPU access to the resource.</summary>
  </member>
  <member name="ID3D10Buffer">
    <summary>A buffer interface accesses a <a href="https://docs.microsoft.com//windows/desktop/direct3d10/d3d10-graphics-programming-guide-resources-types">buffer resource</a>, which is unstructured memory. Buffers typically store vertex or index data.</summary>
  </member>
</doc>