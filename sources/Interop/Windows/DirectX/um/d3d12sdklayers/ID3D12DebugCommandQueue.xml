<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12DebugCommandQueue.AssertResourceState">
    <summary>
      <para>Checks whether a resource, or subresource, is in a specified state, or not.</para>
    </summary>
    <param name="pResource">
      <para>Type: <b>ID3D12Resource*</b></para>
      <para>Specifies the  <see cref="ID3D12Resource" /> to check.</para>
    </param>
    <param name="Subresource">
      <para>Type: <b>UINT</b></para>
      <para>The index of the subresource to check.
This can be set to an index, or D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES.</para>
    </param>
    <param name="State">
      <para>Type: <b>UINT</b></para>
      <para>Specifies the state to check for. This can be one or more D3D12_RESOURCE_STATES flags Or'ed together.</para>
    </param>
    <returns>
      <para>Type: <b>BOOL</b></para>
      <para>This method returns true if the resource or subresource is in the specified state, false otherwise.</para>
    </returns>
    <remarks>
      <para>This method is very similar to <see cref="ID3D12DebugCommandList.AssertResourceState" />, however there are methods on the command queue that work directly with resources that might need to be monitored (for example <see cref="ID3D12CommandQueue.CopyTileMappings" />).</para>
    </remarks>
    <seealso cref="ID3D12DebugCommandQueue" />
  </member>
  <member name="ID3D12DebugCommandQueue">
    <summary>
      <para>Provides methods to monitor and debug a command queue.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-sdklayers-interfaces">Debug Layer Interfaces</seealso>
    <seealso cref="IUnknown" />
  </member>
</doc>