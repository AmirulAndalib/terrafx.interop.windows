<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DirectX.D2D1CreateFactory">
    <summary>Creates a factory object that can be used to create Direct2D resources.</summary>
    <param name="factoryType">The threading model of the factory and the resources it creates.</param>
    <param name="riid">A reference to the IID of <see cref="ID2D1Factory" /> that is obtained by using <code>__uuidof(ID2D1Factory)</code>.</param>
    <param name="pFactoryOptions">The level of detail provided to the debugging layer.</param>
    <param name="ppIFactory">When this method returns, contains the address to a pointer to the new factory.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</returns>
  </member>
  <member name="DirectX.D2D1CreateFactory">
    <summary>Creates a factory object that can be used to create Direct2D resources.</summary>
    <param name="factoryType">The threading model of the factory and the resources it creates.</param>
    <param name="riid">A reference to the IID of <see cref="ID2D1Factory" /> that is obtained by using <code>__uuidof(ID2D1Factory)</code>.</param>
    <param name="ppIFactory">When this method returns, contains the address to a pointer to the new factory.</param>
    <returns>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</returns>
  </member>
  <member name="DirectX.D2D1InvertMatrix">
    <summary>Tries to invert the specified matrix.</summary>
    <param name="matrix">The matrix to invert.</param>
    <returns>
      <b>true</b> if the matrix was inverted; otherwise, <b>false</b>.</returns>
  </member>
  <member name="DirectX.D2D1IsMatrixInvertible">
    <summary>Indicates whether the specified matrix is invertible.</summary>
    <param name="matrix">The matrix to test.</param>
    <returns>
      <b>true</b> if the matrix was inverted; otherwise, <b>false</b>.</returns>
  </member>
  <member name="DirectX.D2D1MakeRotateMatrix">
    <summary>Creates a rotation transformation that rotates by the specified angle about the specified point.</summary>
    <param name="angle">The clockwise rotation angle, in degrees.</param>
    <param name="center">The point about which to rotate.</param>
    <param name="matrix">When this method returns, contains the new rotation transformation. You must allocate storage for this parameter.</param>
  </member>
  <member name="DirectX.D2D1MakeSkewMatrix">
    <summary>Creates a skew transformation that has the specified x-axis angle, y-axis angle, and center point.</summary>
    <param name="angleX">The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.</param>
    <param name="angleY">The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</param>
    <param name="center">The center point of the skew operation.</param>
    <param name="matrix">When this method returns, contains the rotation transformation. You must allocate storage for this parameter.</param>
  </member>
</doc>