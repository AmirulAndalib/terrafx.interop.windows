<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1GeometryGroup.GetFillMode">
    <summary>
      <para>Indicates how the intersecting areas of the geometries contained in this geometry group are combined.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="D2D1_FILL_MODE" /></b></para>
      <para>A value that indicates how the intersecting areas of the geometries contained in this geometry group are combined.</para>
    </returns>
    <seealso cref="ID2D1GeometryGroup" />
  </member>
  <member name="ID2D1GeometryGroup.GetSourceGeometries">
    <summary>
      <para>Retrieves the geometries in the geometry group.</para>
    </summary>
    <param name="geometries">
      <para>Type: <b>const <see cref="ID2D1Geometry" />**</b></para>
      <para>When this method returns, contains the address of a pointer to an array of geometries to be filled by this method. The length of the array is specified by the <i>geometryCount</i> parameter. If the array is <b>NULL</b>, then this method performs no operation. You must allocate the memory for this array.</para>
    </param>
    <param name="geometriesCount">
      <para>Type: <b>UINT</b></para>
      <para>A value indicating the number of geometries to return in the <i>geometries</i> array. If this value is less than the number of geometries in the geometry group, the remaining geometries are omitted. If this value is larger than the number of geometries in the geometry group, the extra geometries are set to <b>NULL</b>. To obtain the number of geometries currently in the geometry group, use the <see cref="GetSourceGeometryCount" /> method.</para>
    </param>
    <remarks>
      <para>The returned geometries are referenced and  counted, and the caller must release them.</para>
    </remarks>
    <seealso cref="ID2D1GeometryGroup" />
  </member>
  <member name="ID2D1GeometryGroup.GetSourceGeometryCount">
    <summary>
      <para>Indicates the number of geometry objects in the geometry group.</para>
    </summary>
    <returns>
      <para>Type: <b>UINT32</b></para>
      <para>The number of geometries in the <see cref="ID2D1GeometryGroup" />.</para>
    </returns>
    <seealso cref="ID2D1GeometryGroup" />
  </member>
  <member name="ID2D1GeometryGroup">
    <summary>
      <para>Represents a composite geometry, composed of other <see cref="ID2D1Geometry" /> objects.</para>
    </summary>
    <remarks>
      <para>Geometry groups are a convenient way to group several geometries simultaneously so all figures of several distinct geometries are concatenated into one.</para>
      <h3>Creating ID2D1GeometryGroup Objects</h3>
      <para>To create a  <b>ID2D1GeometryGroup</b> object, call  the <see cref="ID2D1Factory.CreateGeometryGroup" /> method, passing in the <i>fillMode</i> with possible values of   <see cref="D2D1_FILL_MODE_ALTERNATE" /> (alternate) and <b>D2D1_FILL_MODE_WINDING</b>, an array of geometry objects to add to the geometry group, and the number of elements in this array.</para>
      <para>Direct2D geometries are immutable and device-independent resources created by <see cref="ID2D1Factory" />.  In general, you should create geometries once and retain them for the life of the application, or until they need to be modified. For more information about device-independent and device-dependent resources, see  the <a href="https://docs.microsoft.com//windows/win32/Direct2D/resources-and-resource-domains">Resources Overview</a>.</para>
    </remarks>
    <seealso cref="ID2D1Geometry" />
  </member>
</doc>