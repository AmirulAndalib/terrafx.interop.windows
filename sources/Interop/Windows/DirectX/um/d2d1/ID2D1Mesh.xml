<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1Mesh.Open">
    <summary>
      <para>Opens the mesh for population.</para>
    </summary>
    <param name="tessellationSink">
      <para>Type: <b><see cref="ID2D1TessellationSink" />**</b></para>
      <para>When this method returns, contains a pointer to a pointer to an <see cref="ID2D1TessellationSink" /> that is used to populate the mesh. This parameter is passed uninitialized.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</para>
    </returns>
    <seealso cref="ID2D1Mesh" />
  </member>
  <member name="ID2D1Mesh">
    <summary>
      <para>Represents a set of vertices that form a list of triangles.</para>
    </summary>
    <remarks>
      <h3>Creating ID2D1Mesh Objects</h3>
      <para>To create a mesh, call the <see cref="ID2D1RenderTarget.CreateMesh" /> method on the render target with which the mesh will be used. A mesh can only be used with the render target that created it and the render target's compatible targets.</para>
      <para>A mesh is a device-dependent resource: your application should create meshes after it initializes the render target with which the meshes will be used, and recreate the meshes whenever the render target needs recreated. (For more information about resources, see <a href="https://docs.microsoft.com//windows/win32/Direct2D/resources-and-resource-domains">Resources Overview</a>.)</para>
    </remarks>
    <seealso cref="ID2D1Resource" />
  </member>
</doc>