<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1Geometry.CombineWithGeometry">
    <summary>Combines this geometry with the specified geometry and stores the result in an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="inputGeometry">The geometry to combine with this instance.</param>
    <param name="combineMode">The type of combine operation to perform.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i> before combining, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The result of the combine operation.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CombineWithGeometry">
    <summary>Combines this geometry with the specified geometry and stores the result in an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="inputGeometry">The geometry to combine with this instance.</param>
    <param name="combineMode">The type of combine operation to perform.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i> before combining.</param>
    <param name="geometrySink">The result of the combine operation.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CombineWithGeometry">
    <summary>Combines this geometry with the specified geometry and stores the result in an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="inputGeometry">The geometry to combine with this instance.</param>
    <param name="combineMode">The type of combine operation to perform.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i> before combining.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The result of the combine operation.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CombineWithGeometry">
    <summary>Combines this geometry with the specified geometry and stores the result in an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="inputGeometry">The geometry to combine with this instance.</param>
    <param name="combineMode">The type of combine operation to perform.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i> before combining.</param>
    <param name="geometrySink">The result of the combine operation.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CompareWithGeometry">
    <summary>Describes the intersection between this geometry and the specified geometry. The comparison is performed using the default flattening tolerance.</summary>
    <param name="inputGeometry">The geometry to test.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i>, or <b>NULL</b>.</param>
    <param name="relation">When this method returns, contains a pointer to a value that describes how this geometry is related to <i>inputGeometry</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CompareWithGeometry">
    <summary>Describes the intersection between this geometry and the specified geometry. The comparison is performed by using the specified flattening tolerance.</summary>
    <param name="inputGeometry">The geometry to test.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i>, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="relation">When this method returns, contains a pointer to a value that describes how this geometry is related to <i>inputGeometry</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CompareWithGeometry">
    <summary>Describes the intersection between this geometry and the specified geometry. The comparison is performed using the default flattening tolerance.</summary>
    <param name="inputGeometry">The geometry to test.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i>.</param>
    <param name="relation">When this method returns, <i>relation</i> contains a pointer to a value that describes how this geometry is related to <i>inputGeometry</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.CompareWithGeometry">
    <summary>Describes the intersection between this geometry and the specified geometry. The comparison is performed using the specified flattening tolerance.</summary>
    <param name="inputGeometry">The geometry to test.</param>
    <param name="inputGeometryTransform">The transform to apply to <i>inputGeometry</i>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="relation">When this method returns, contains a pointer to a value that describes how this geometry is related to <i>inputGeometry</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeArea">
    <summary>Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry before computing its area, or <b>NULL</b>.</param>
    <param name="area">When this this method returns, contains a pointer to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeArea">
    <summary>Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry before computing its area, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="area">When this this method returns, contains a pointer to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeArea">
    <summary>Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the default tolerance.</summary>
    <param name="worldTransform">The transform to be applied to this geometry before computing its area.</param>
    <param name="area">When this method returns, <i>area</i> contains a pointer to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeArea">
    <summary>Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry before computing its area.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="area">When this method returns, contains a pointer to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeLength">
    <summary>Calculates the length of the geometry as though each segment were unrolled into a line.</summary>
    <param name="worldTransform">The transform to apply to the geometry before calculating its length, or <b>NULL</b>.</param>
    <param name="length">When this method returns, contains a pointer to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeLength">
    <summary>Calculates the length of the geometry as though each segment were unrolled into a line.</summary>
    <param name="worldTransform">The transform to apply to the geometry before calculating its length, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="length">When this method returns, contains a pointer to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeLength">
    <summary>Calculates the length of the geometry as though each segment were unrolled into a line.</summary>
    <param name="worldTransform">The transform to apply to the geometry before calculating its length.</param>
    <param name="length">When this method returns, contains a pointer to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputeLength">
    <summary>Calculates the length of the geometry as though each segment were unrolled into a line.</summary>
    <param name="worldTransform">The transform to apply to the geometry before calculating its length.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="length">When this method returns, contains a pointer to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputePointAtLength">
    <summary>Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the default tolerance.</summary>
    <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less than 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry.</param>
    <param name="worldTransform">The transform to apply to the geometry before calculating the specified point and tangent, or <b>NULL</b>.</param>
    <param name="point">The location at the specified distance along the geometry. If the geometry is empty, this point contains NaN as its x and y values.</param>
    <param name="unitTangentVector">The tangent vector at the specified distance along the geometry. If the geometry is empty, this vector contains NaN as its x and y values.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputePointAtLength">
    <summary>Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less than 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry.</param>
    <param name="worldTransform">The transform to apply to the geometry before calculating the specified point and tangent, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="point">The location at the specified distance along the geometry. If the geometry is empty, this point contains NaN as its x and y values.</param>
    <param name="unitTangentVector">When this method returns, contains a pointer to the tangent vector at the specified distance along the geometry. If the geometry is empty, this vector contains NaN as its x and y values. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputePointAtLength">
    <summary>Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the default tolerance.</summary>
    <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less than 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry.</param>
    <param name="worldTransform">The transform to apply to the geometry before calculating the specified point and tangent.</param>
    <param name="point">The location at the specified distance along the geometry. If the geometry is empty, this point contains NaN as its x and y values.</param>
    <param name="unitTangentVector">When this method returns, contains a pointer to the tangent vector at the specified distance along the geometry. If the geometry is empty, this vector contains NaN as its x and y values. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.ComputePointAtLength">
    <summary>Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less than 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry.</param>
    <param name="worldTransform">The transform to apply to the geometry before calculating the specified point and tangent.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="point">The location at the specified distance along the geometry. If the geometry is empty, this point contains NaN as its x and y values.</param>
    <param name="unitTangentVector">When this method returns, contains a pointer to the tangent vector at the specified distance along the geometry. If the geometry is empty, this vector contains NaN as its x and y values. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.FillContainsPoint">
    <summary>Indicates whether the area filled by this geometry would contain the specified point.</summary>
    <param name="point">The point to test.</param>
    <param name="worldTransform">The transform to apply to this geometry prior to testing for containment, or NULL.</param>
    <param name="contains">When this method returns, contains a <b>BOOL</b> value that is <b>TRUE</b> if the area filled by the geometry contains <i>point</i>; otherwise, <b>FALSE</b>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.FillContainsPoint">
    <summary>Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance.</summary>
    <param name="point">The point to test.</param>
    <param name="worldTransform">The transform to apply to the geometry prior to testing for containment, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="contains">When this method returns, contains a <b>BOOL</b> value that is <b>TRUE</b> if the area filled by the geometry contains <i>point</i>; otherwise, <b>FALSE</b>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.FillContainsPoint">
    <summary>Indicates whether the area filled by the geometry would contain the specified point.</summary>
    <param name="point">The point to test.</param>
    <param name="worldTransform">The transform to apply to the geometry prior to testing for containment.</param>
    <param name="contains">When this method returns, contains a bool value that is true if the area filled by the geometry contains <i>point</i>; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.FillContainsPoint">
    <summary>Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance.</summary>
    <param name="point">The point to test.</param>
    <param name="worldTransform">The transform to apply to the geometry prior to testing for containment.</param>
    <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="contains">When this method returns, contains a bool value that is true if the area filled by the geometry contains <i>point</i>; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetBounds">
    <summary>Retrieves the bounds of the geometry.</summary>
    <param name="worldTransform">The transform to apply to this geometry before calculating its bounds, or <b>NULL</b>.</param>
    <param name="bounds">When this method returns, contains the bounds of this geometry. If the bounds are empty, this parameter will be a rect where <i>bounds.left</i> &gt; <i>bounds.right</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetBounds">
    <summary>Retrieves the bounds of the geometry.</summary>
    <param name="worldTransform">The transform to apply to this geometry before calculating its bounds.</param>
    <param name="bounds">When this method returns, contains the bounds of this geometry. If the bounds are empty, this parameter will be a rect where <i>bounds.left</i> &gt; <i>bounds.right</i>. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetWidenedBounds">
    <summary>Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline.</param>
    <param name="strokeStyle">The style of the stroke that widens the geometry.</param>
    <param name="worldTransform">A transform to apply to the geometry after the geometry is transformed and after the geometry has been stroked, or <b>NULL</b>.</param>
    <param name="bounds">When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetWidenedBounds">
    <summary>Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline.</param>
    <param name="strokeStyle">The style of the stroke that widens the geometry.</param>
    <param name="worldTransform">A transform to apply to the geometry after the geometry is transformed and after the geometry has been stroked, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="bounds">When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetWidenedBounds">
    <summary>Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline.</param>
    <param name="strokeStyle">The style of the stroke that widens the geometry.</param>
    <param name="worldTransform">A transform to apply to the geometry after the geometry is transformed and after the geometry has been stroked.</param>
    <param name="bounds">When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.GetWidenedBounds">
    <summary>Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline.</param>
    <param name="strokeStyle">The style of the stroke that widens the geometry.</param>
    <param name="worldTransform">A transform to apply to the geometry after the geometry is transformed and after the geometry has been stroked.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="bounds">When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Outline">
    <summary>Computes the outline of the geometry and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="worldTransform">The transform to apply to the geometry outline.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the geometry transformed outline is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Simplify">
    <summary>Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
    <param name="worldTransform">The transform to apply to the simplified geometry, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the simplified geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Simplify">
    <summary>Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
    <param name="worldTransform">The transform to apply to the simplified geometry.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the simplified geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Simplify">
    <summary>Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
    <param name="worldTransform">The transform to apply to the simplified geometry.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the simplified geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Simplify">
    <summary>Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" />.</summary>
    <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
    <param name="worldTransform">The transform to apply to the simplified geometry.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the simplified geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.StrokeContainsPoint">
    <summary>Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform.</summary>
    <param name="point">The point to test for containment.</param>
    <param name="strokeWidth">The thickness of the stroke to apply.</param>
    <param name="strokeStyle">The style of stroke to apply.</param>
    <param name="worldTransform">The transform to apply to the stroked geometry.</param>
    <param name="contains">When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.StrokeContainsPoint">
    <summary>Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform.</summary>
    <param name="point">The point to test for containment.</param>
    <param name="strokeWidth">The thickness of the stroke to apply.</param>
    <param name="strokeStyle">The style of stroke to apply.</param>
    <param name="worldTransform">The transform to apply to the stroked geometry.</param>
    <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the stroke by less than the tolerance are still considered inside. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="contains">When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.StrokeContainsPoint">
    <summary>Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform.</summary>
    <param name="point">The point to test for containment.</param>
    <param name="strokeWidth">The thickness of the stroke to apply.</param>
    <param name="strokeStyle">The style of stroke to apply.</param>
    <param name="worldTransform">The transform to apply to the stroked geometry.</param>
    <param name="contains">When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.StrokeContainsPoint">
    <summary>Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform.</summary>
    <param name="point">The point to test for containment.</param>
    <param name="strokeWidth">The thickness of the stroke to apply.</param>
    <param name="strokeStyle">The style of stroke to apply.</param>
    <param name="worldTransform">The transform to apply to the stroked geometry.</param>
    <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the stroke by less than the tolerance are still considered inside. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="contains">When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Tessellate">
    <summary>Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="tessellationSink">The <see cref="ID2D1TessellationSink" /> to which the tessellated is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Tessellate">
    <summary>Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the default tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry.</param>
    <param name="tessellationSink">The <see cref="ID2D1TessellationSink" /> to which the tessellated is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Tessellate">
    <summary>Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="tessellationSink">The <see cref="ID2D1TessellationSink" /> to which the tessellated is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Tessellate">
    <summary>Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the default tolerance.</summary>
    <param name="worldTransform">The transform to apply to this geometry.</param>
    <param name="tessellationSink">The <see cref="ID2D1TessellationSink" /> to which the tessellated is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Widen">
    <summary>Widens the geometry by the specified stroke and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" /> after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry.</param>
    <param name="strokeStyle">The style of stroke to apply to the geometry, or <b>NULL</b>.</param>
    <param name="worldTransform">The transform to apply to the geometry after widening it, or <b>NULL</b>.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the widened geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Widen">
    <summary>Widens the geometry by the specified stroke and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" /> after it has been transformed by the specified matrix and flattened using the default tolerance.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry.</param>
    <param name="strokeStyle">The style of stroke to apply to the geometry, or <b>NULL</b>.</param>
    <param name="worldTransform">The transform to apply to the geometry after widening it.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the widened geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Widen">
    <summary>Widens the geometry by the specified stroke and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" /> after it has been transformed by the specified matrix and flattened using the specified tolerance.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry.</param>
    <param name="strokeStyle">The style of stroke to apply to the geometry, or <b>NULL</b>.</param>
    <param name="worldTransform">The transform to apply to the geometry after widening it.</param>
    <param name="flatteningTolerance">The maximum error allowed when constructing a polygonal approximation of the geometry. No point in the polygonal representation will diverge from the original geometry by more than the flattening tolerance. Smaller values produce more accurate results but cause slower execution.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the widened geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry.Widen">
    <summary>Widens the geometry by the specified stroke and writes the result to an <see cref="ID2D1SimplifiedGeometrySink" /> after it has been transformed by the specified matrix and flattened using the default tolerance.</summary>
    <param name="strokeWidth">The amount by which to widen the geometry.</param>
    <param name="strokeStyle">The style of stroke to apply to the geometry, or <b>NULL</b>.</param>
    <param name="worldTransform">The transform to apply to the geometry after widening it.</param>
    <param name="geometrySink">The <see cref="ID2D1SimplifiedGeometrySink" /> to which the widened geometry is appended.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</returns>
  </member>
  <member name="ID2D1Geometry">
    <summary>Represents a geometry resource and defines a set of helper methods for manipulating and measuring geometric shapes. Interfaces that inherit from <b>ID2D1Geometry</b> define specific shapes.</summary>
  </member>
</doc>