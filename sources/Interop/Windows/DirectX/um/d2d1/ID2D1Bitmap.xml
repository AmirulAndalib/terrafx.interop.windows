<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID2D1Bitmap.CopyFromBitmap">
    <summary>
      <para>Copies the specified region from the specified bitmap into the current bitmap.</para>
    </summary>
    <param name="destPoint">
      <para>Type: <b>const <a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-point-2u">D2D1_POINT_2U</a>*</b></para>
      <para>In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</para>
    </param>
    <param name="bitmap">
      <para>Type: <b><see cref="ID2D1Bitmap" />*</b></para>
      <para>The bitmap to copy from.</para>
    </param>
    <param name="srcRect">
      <para>Type: <b>const <a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-rect-u">D2D1_RECT_U</a>*</b></para>
      <para>The area of <i>bitmap</i> to copy.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</para>
    </returns>
    <remarks>
      <para>This method does not update the size of the  current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match.</para>
      <para>Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a> and tag state will be returned at the next call to <see cref="EndDraw" /> or <see cref="Flush" />.</para>
      <para>Starting with Windows 8.1,  this method supports block compressed bitmaps.  If you are using a block compressed format, the end coordinates of the <i>srcRect</i> parameter must be multiples of 4 or the method returns <b>E_INVALIDARG</b>.</para>
    </remarks>
    <seealso cref="ID2D1Bitmap" />
  </member>
  <member name="ID2D1Bitmap.CopyFromMemory">
    <summary>
      <para>Copies the specified region from memory into the current bitmap.</para>
    </summary>
    <param name="dstRect">
      <para>Type: <b>const <a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-rect-u">D2D1_RECT_U</a>*</b></para>
      <para>In the current bitmap, the rectangle to which the region specified by <i>srcRect</i> is copied.</para>
    </param>
    <param name="srcData">
      <para>Type: <b>const void*</b></para>
      <para>The data to copy.</para>
    </param>
    <param name="pitch">
      <para>Type: <b>UINT32</b></para>
      <para>The stride, or pitch, of the source bitmap stored in <i>srcData</i>. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</para>
    </returns>
    <remarks>
      <para>This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.</para>
      <para>If this method is passed invalid input (such as an invalid destination rectangle), can produce unpredictable results, such as a distorted image or device failure.</para>
      <para>Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a> and tag state will be returned at the next call to <see cref="EndDraw" /> or <see cref="Flush" />.</para>
      <para>Starting with Windows 8.1,  this method supports block compressed bitmaps.  If you are using a block compressed format, the end coordinates of the <i>srcRect</i> parameter must be multiples of 4 or the method returns <b>E_INVALIDARG</b>.</para>
    </remarks>
    <seealso cref="ID2D1Bitmap" />
  </member>
  <member name="ID2D1Bitmap.CopyFromRenderTarget">
    <summary>
      <para>Copies the specified region from the specified render target into the current bitmap.</para>
    </summary>
    <param name="destPoint">
      <para>Type: <b>const <a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-point-2u">D2D1_POINT_2U</a>*</b></para>
      <para>In the current bitmap, the upper-left corner of the area to which the region specified by <i>srcRect</i> is copied.</para>
    </param>
    <param name="renderTarget">
      <para>Type: <b><see cref="ID2D1RenderTarget" />*</b></para>
      <para>The render target that contains the region to copy.</para>
    </param>
    <param name="srcRect">
      <para>Type: <b>const <a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-rect-u">D2D1_RECT_U</a>*</b></para>
      <para>The area of <i>renderTarget</i> to copy.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a> error code.</para>
    </returns>
    <remarks>
      <para>This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match.</para>
      <para>Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a> and tag state will be returned at the next call to <see cref="EndDraw" /> or <see cref="Flush" />.</para>
      <para>All clips and layers must be popped off of the render target before calling this method.  The method returns <a href="https://docs.microsoft.com//windows/win32/Direct2D/direct2d-error-codes">D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT</a>  if any clips or layers are currently applied to the render target.</para>
    </remarks>
    <seealso cref="ID2D1Bitmap" />
  </member>
  <member name="ID2D1Bitmap.GetDpi">
    <summary>
      <para>Return the dots per inch (DPI) of the bitmap.</para>
    </summary>
    <param name="dpiX">
      <para>Type: <b>FLOAT*</b></para>
      <para>The horizontal DPI of the image. You must allocate storage for this parameter.</para>
    </param>
    <param name="dpiY">
      <para>Type: <b>FLOAT*</b></para>
      <para>The vertical DPI of the image.  You must allocate storage for this parameter.</para>
    </param>
    <seealso cref="ID2D1Bitmap" />
  </member>
  <member name="ID2D1Bitmap.GetPixelFormat">
    <summary>
      <para>Retrieves the pixel format and alpha mode of the bitmap.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="D2D1_PIXEL_FORMAT" /></b></para>
      <para>The pixel format and alpha mode of the bitmap.</para>
    </returns>
    <seealso cref="ID2D1Bitmap" />
  </member>
  <member name="ID2D1Bitmap.GetPixelSize">
    <summary>
      <para>Returns the size, in device-dependent units (pixels), of the bitmap.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-size-u">D2D1_SIZE_U</a></b></para>
      <para>The size, in pixels, of the bitmap.</para>
    </returns>
    <seealso cref="ID2D1Bitmap" />
    <seealso cref="ID2D1Bitmap.GetSize" />
  </member>
  <member name="ID2D1Bitmap.GetSize">
    <summary>
      <para>Returns the size, in device-independent pixels (DIPs), of the bitmap.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/Direct2D/d2d1-size-f">D2D1_SIZE_F</a></b></para>
      <para>The size, in DIPs, of the bitmap.</para>
    </returns>
    <remarks>
      <para>A DIP is 1/96 of an inch. To retrieve the size in device pixels, use the <see cref="ID2D1Bitmap.GetPixelSize" /> method.</para>
    </remarks>
    <seealso cref="ID2D1Bitmap" />
    <seealso cref="ID2D1Bitmap.GetPixelSize" />
  </member>
</doc>