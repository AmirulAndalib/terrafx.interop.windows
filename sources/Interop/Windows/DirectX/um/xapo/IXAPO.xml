<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IXAPO.CalcInputFrames">
    <summary>
      <para>Returns the number of input frames required to generate the given number of output frames.</para>
    </summary>
    <param name="OutputFrameCount">
      <para>The number of output frames desired.</para>
    </param>
    <returns>
      <para>Returns the number of input frames required.</para>
    </returns>
    <remarks>
      <para>XAudio2 calls this method to determine what size input buffer an XAPO requires to generate the given number of output frames. This method only needs to be called once while an XAPO is locked. <b>CalcInputFrames</b> is only called by XAudio2 if the XAPO is locked.</para>
      <para>This function should not block, because it may be called from the realtime audio processing thread.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.CalcOutputFrames">
    <summary>
      <para>Returns the number of output frames that will be generated from a given number of input frames.</para>
    </summary>
    <param name="InputFrameCount">
      <para>The number of input frames.</para>
    </param>
    <returns>
      <para>Returns the number of output frames that will be produced.</para>
    </returns>
    <remarks>
      <para>XAudio2 calls this method to determine how large of an output buffer an XAPO will require for a certain number of input frames. <b>CalcOutputFrames</b> is only called by XAudio2 if the XAPO is locked.</para>
      <para>This function should not block, because it may be called from the realtime audio processing thread.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.GetRegistrationProperties">
    <summary>
      <para>Returns the registration properties of an XAPO.</para>
    </summary>
    <param name="ppRegistrationProperties">
      <para>Receives a pointer to a <see cref="XAPO_REGISTRATION_PROPERTIES" /> structure containing the registration properties the XAPO was created with; use <see cref="XAPOFree" /> to free the structure.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful; returns an error code otherwise.</para>
    </returns>
    <remarks>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.Initialize">
    <summary>
      <para>Performs any effect-specific initialization.</para>
    </summary>
    <param name="pData">
      <para>Effect-specific initialization parameters, may be NULL if <i>DataByteSize</i> is 0.</para>
    </param>
    <param name="DataByteSize">
      <para>Size of <i>pData</i> in bytes, may be 0 if <i>pData</i> is NULL.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful, an error code otherwise.</para>
    </returns>
    <remarks>
      <para>The contents of <i>pData</i> are defined by a given XAPO. Immutable parameters (constant for the lifetime of the XAPO) should be set in this method. Once initialized, an XAPO cannot be initialized again. An XAPO should be initialized before passing it to XAudio2 as part of an effect chain.</para>
      <para>
        <b>Note</b>  XAudio2 does not call this method, it should be called by the client before passing the XAPO to XAudio2.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.IsInputFormatSupported">
    <summary>
      <para>Queries if a specific input format is supported for a given output format.</para>
    </summary>
    <param name="pOutputFormat">
      <para>Output format.</para>
    </param>
    <param name="pRequestedInputFormat">
      <para>Input format to check for being supported.</para>
    </param>
    <param name="ppSupportedInputFormat">
      <para>If not NULL, and the input format is not supported for the given output format, <i>ppSupportedInputFormat</i> returns a pointer to the closest input format that is supported. Use <see cref="XAPOFree" /> to free the returned structure.</para>
    </param>
    <returns>
      <para>Returns S_OK if the format pair is supported. Returns XAPO_E_FORMAT_UNSUPPORTED if the format pair is not supported.</para>
    </returns>
    <remarks>
      <para>The <see cref="IXAPO.IsOutputFormatSupported" /> and <b>IsInputFormatSupported</b> methods allow an XAPO to indicate which audio formats it is capable of processing. If a requested format is not supported, the XAPO should return the closest format that it does support. The closest format should be determined based on frame rate, bit depth, and channel count, in that order of importance. The behavior of <b>IsInputFormatSupported</b> is allowed to change, based on the internal state of the XAPO, but its behavior should remain constant between calls to the <see cref="IXAPO.LockForProcess" /> and <see cref="IXAPO.UnlockForProcess" /> methods.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.IsOutputFormatSupported">
    <summary>
      <para>Queries if a specific output format is supported for a given input format.</para>
    </summary>
    <param name="pInputFormat">
      <para>Input format.</para>
    </param>
    <param name="pRequestedOutputFormat">
      <para>Output format to check for being supported.</para>
    </param>
    <param name="ppSupportedOutputFormat">
      <para>If not NULL and the output format is not supported for the given input format, <i>ppSupportedOutputFormat</i> returns a pointer to the closest output format that is supported. Use <see cref="XAPOFree" /> to free the returned structure.</para>
    </param>
    <returns>
      <para>Returns S_OK if the format pair is supported. Returns XAPO_E_FORMAT_UNSUPPORTED if the format pair is not supported.</para>
    </returns>
    <remarks>
      <para>The <see cref="IXAPO.IsInputFormatSupported" /> and <b>IsOutputFormatSupported</b> methods allow an XAPO to indicate which audio formats it is capable of processing. If a requested format is not supported, the XAPO should return the closest format that it does support. The closest format should be determined based on frame rate, bit depth, and channel count, in that order of importance. The behavior of <b>IsOutputFormatSupported</b> is allowed to change, based on the internal state of the XAPO, but its behavior should remain constant between calls to the <see cref="IXAPO.LockForProcess" /> and <see cref="IXAPO.UnlockForProcess" /> methods.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.LockForProcess">
    <summary>
      <para>Called by XAudio2 to lock the input and output configurations of an XAPO allowing it to do any final initialization before <see cref="Process" /> is called on the realtime thread.</para>
    </summary>
    <param name="InputLockedParameterCount">
      <para>Number of elements in <i>ppInputLockedParameters</i>. Must be within the <see cref="XAPO_REGISTRATION_PROPERTIES" />.MinInputBufferCount and <b>XAPO_REGISTRATION_PROPERTIES</b>.MaxInputBufferCount values passed to <see cref="CXAPOBase.CXAPOBase" />.</para>
    </param>
    <param name="pInputLockedParameters">
      <para>Array of input <see cref="XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS" /> structures. <i>pInputLockedParameters</i> may be NULL if <i>InputLockedParameterCount</i> is 0, otherwise it must have <i>InputLockedParameterCount</i> elements.</para>
    </param>
    <param name="OutputLockedParameterCount">
      <para>Number of elements in ppOutputLockedParameters. Must be within the <see cref="XAPO_REGISTRATION_PROPERTIES" />.MinOutputBufferCount and <b>XAPO_REGISTRATION_PROPERTIES</b>.MaxOutputBufferCount values passed to <see cref="CXAPOBase.CXAPOBase" />. If the XAPO_FLAG_BUFFERCOUNT_MUST_MATCH flag was specified in <b>XAPO_REGISTRATION_PROPERTIES</b>.Flags then <i>OutputLockedParameterCount</i> must equal <i>InputLockedParameterCount</i>.</para>
    </param>
    <param name="pOutputLockedParameters">
      <para>Array of output <see cref="XAPO_LOCKFORPROCESS_BUFFER_PARAMETERS" /> structures. <i>pOutputLockedParameters</i> may be NULL if <i>OutputLockedParameterCount</i> is 0, otherwise it must have <i>OutputLockedParameterCount</i> elements.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful, an error code otherwise.</para>
    </returns>
    <remarks>
      <para>Once locked, the input and output configuration and any other locked parameters remain constant until <see cref="UnLockForProcess" /> is called. After an XAPO is locked, further calls to <b>LockForProcess</b> have no effect until the <b>UnLockForProcess</b> function is called.</para>
      <para>An XAPO indicates what specific formats it supports through its implementation of the <see cref="IsInputFormatSupported" /> and <see cref="IsOutputFormatSupported" /> methods. An XAPO should assert the input and output configurations are supported and that any required effect-specific initialization is complete. The <b>IsInputFormatSupported</b>, <b>IsOutputFormatSupported</b>, and <see cref="Initialize" /> methods should be used as necessary before calling this method.</para>
      <para>Because <see cref="Process" /> is a nonblocking method, all internal memory buffers required for <b>Process</b> should be allocated in <b>LockForProcess</b>.</para>
      <para>
        <see cref="Process" /> is never called before <b>LockForProcess</b> returns successfully.</para>
      <para>
        <b>LockForProcess</b> is called directly by XAudio2 and should not be called by the client code.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.Process">
    <summary>
      <para>Runs the XAPO's digital signal processing (DSP) code on the given input and output buffers.</para>
    </summary>
    <param name="InputProcessParameterCount">
      <para>Number of elements in pInputProcessParameters.</para>
      <para>
        <b>Note</b>  XAudio2 currently supports only one input stream and one output stream.</para>
    </param>
    <param name="pInputProcessParameters">
      <para>Input array of <see cref="XAPO_PROCESS_BUFFER_PARAMETERS" /> structures.</para>
    </param>
    <param name="OutputProcessParameterCount">
      <para>Number of elements in <i>pOutputProcessParameters</i>.</para>
      <para>
        <b>Note</b>  XAudio2 currently supports only one input stream and one output stream.</para>
    </param>
    <param name="pOutputProcessParameters">
      <para>Output array of <see cref="XAPO_PROCESS_BUFFER_PARAMETERS" /> structures. On input, the value of <b>XAPO_PROCESS_BUFFER_PARAMETERS</b>. <b>ValidFrameCount</b> indicates the number of frames that the XAPO should write to the output buffer. On output, the value of <b>XAPO_PROCESS_BUFFER_PARAMETERS</b>. <b>ValidFrameCount</b> indicates the actual number of frames written.</para>
    </param>
    <param name="IsEnabled">
      <para>TRUE to process normally; FALSE to process thru. See Remarks for additional information.</para>
    </param>
    <remarks>
      <para>Implementations of this function should not block, as the function is called from the realtime audio processing thread.</para>
      <para>All code that could cause a delay, such as format validation and memory allocation, should be put in the <see cref="IXAPO.LockForProcess" /> method, which is not called from the realtime audio processing thread.</para>
      <para>For in-place processing, the <i>pInputProcessParameters</i> parameter will not necessarily be the same as <i>pOutputProcessParameters</i>. Rather, their <i>pBuffer</i> members will point to the same memory.</para>
      <para>Multiple input and output buffers may be used with in-place XAPOs, though the input buffer count must equal the output buffer count. For in-place processing when multiple input and output buffers are used, the XAPO may assume the number of input buffers equals the number of output buffers.</para>
      <para>In addition to writing to the output buffer, as appropriate, an XAPO is responsible for setting the output stream's buffer flags and valid frame count.</para>
      <para>When <i>IsEnabled</i> is FALSE, the XAPO should not apply its normal processing to the given input/output buffers during. It should instead pass data from input to output with as little modification possible. Effects that perform format conversion should continue to do so. Effects must ensure transitions between normal and thru processing do not introduce discontinuities into the signal.</para>
      <para>When writing a <b>Process</b> method, it is important to note XAudio2 audio data is interleaved, which means data from each channel is adjacent for a particular sample number. For example, if there was a 4-channel wave playing into an XAudio2 source voice, the audio data would be a sample of channel 0, a sample of channel 1, a sample of channel 2, a sample of channel 3, and then the next sample of channels 0, 1, 2, 3, and so on.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.Reset">
    <summary>
      <para>Resets variables dependent on frame history.</para>
    </summary>
    <remarks>
      <para>Constant and locked parameters such as the input and output formats remain unchanged. Variables set by <see cref="IXAPOParameters.SetParameters" /> remain unchanged.</para>
      <para>For example, an effect with delay should zero out its delay line during this method, but should not reallocate anything as the XAPO remains locked with a constant input and output configuration.</para>
      <para>XAudio2 only calls this method if the XAPO is locked.</para>
      <para>This method is called from the realtime thread and should not block.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO.UnlockForProcess">
    <summary>
      <para>Deallocates variables that were allocated with the <see cref="LockForProcess" /> method.</para>
    </summary>
    <remarks>
      <para>Unlocking an XAPO instance allows it to be reused with different input and output formats.</para>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso cref="IXAPO" />
  </member>
  <member name="IXAPO">
    <summary>
      <para>The interface for an Audio Processing Object which be used in an XAudio2 effect chain.</para>
    </summary>
    <remarks>
      <h3>Platform Requirements</h3>
      <para>Windows 10 (XAudio2.9); Windows 8, Windows Phone 8 (XAudio 2.8); DirectX SDK (XAudio 2.7)</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/xaudio2/interfaces">Interfaces</seealso>
  </member>
</doc>