<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXCoreAdapterFactory.CreateAdapterList">
    <summary>Generates a list of adapter objects representing the current adapter state of the system, and meeting the criteria specified. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="numAttributes">The number of elements in the array pointed to by the <i>filterAttributes</i> argument.</param>
    <param name="filterAttributes">A pointer to an array of adapter attribute GUIDs. For a list of attribute GUIDs, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-adapter-attribute-guids">DXCore adapter attribute GUIDs</a>. At least one GUID must be provided. In the case that more than one GUID is provided in the array, only adapters that meet <i>all</i> of the requested attributes will be included in the returned list.</param>
    <param name="riid">A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppvAdapterList</i>. This is expected to be the interface identifier (IID) of <see cref="IDXCoreAdapterList" />.</param>
    <param name="ppvAdapterList">The address of a pointer to an interface with the IID specified in the <i>riid</i> parameter. Upon successful return, <i>*ppvAdapterList</i> (the dereferenced address) contains a pointer to the adapter list created.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |E_INVALIDARG|<code>nullptr</code> was provided for <i>filterAttributes</i>, or 0 was provided for <i>numAttributes</i>.| |E_NOINTERFACE|An invalid value was provided for <i>riid</i>.| |E_POINTER|<code>nullptr</code> was provided for <i>ppvAdapterList</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapterFactory.GetAdapterByLuid">
    <summary>Retrieves the DXCore adapter object (<see cref="IDXCoreAdapter" />) for a specified LUID, if available. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="adapterLUID">The locally unique value that identifies the adapter instance.</param>
    <param name="riid">A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppvAdapter</i>. This is expected to be the interface identifier (IID) of <see cref="IDXCoreAdapter" />.</param>
    <param name="ppvAdapter">The address of a pointer to an interface with the IID specified in the <i>riid</i> parameter. Upon successful return, <i>*ppvAdapter</i> (the dereferenced address) contains a pointer to the DXCore adapter created.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_DEVICE_REMOVED|The adapter LUID passed in <i>adapterLUID</i> is recognized, but the adapter is no longer in a valid state.| |E_INVALIDARG|No such adapter LUID as the value passed in <i>adapterLUID</i> is available through DXCore.| |E_NOINTERFACE|An invalid value was provided for <i>riid</i>.| |E_POINTER|<code>nullptr</code> was provided for <i>ppvAdapter</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapterFactory.IsNotificationTypeSupported">
    <summary>Determines whether a specified notification type is supported by the operating system (OS). For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="notificationType">The type of notification that you're querying about support for. See the table in <see cref="DXCoreNotificationType" /> for info about the notification types.</param>
    <returns>Returns <code>true</code> if the notification type is supported by the system. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapterFactory.RegisterEventNotification">
    <summary>Registers to receive notifications of specific conditions from a DXCore adapter or adapter list. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="dxCoreObject">The DXCore object (<see cref="IDXCoreAdapter" /> or <see cref="IDXCoreAdapterList" />) whose notifications you're subscribing to.</param>
    <param name="notificationType">The type of notification that you're registering for. See the table in <see cref="DXCoreNotificationType" /> for info about what types are valid with which kinds of objects.</param>
    <param name="callbackFunction">A pointer to a callback function (implemented by your application), which is called by the DXCore object for notification events. For the signature of the function, see <a href="https://docs.microsoft.com//windows/win32/api/dxcore_interface/nc-dxcore_interface-pfn_dxcore_notification_callback">PFN_DXCORE_NOTIFICATION_CALLBACK</a>.</param>
    <param name="callbackContext">An optional pointer to an object containing context info. This object is passed to your callback function when the notification is raised.</param>
    <param name="eventCookie">
      <para>A pointer to a <b>uint32_t</b> value. If successful, the function dereferences the pointer and sets the value to a non-zero cookie value representing this registration. Use this cookie value to unregister from the notification by calling <see cref="IDXCoreAdapterFactory.UnregisterEventNotification" />. See <b>Remarks</b>.</para>
      <para>If unsuccessful, the function dereferences the pointer and sets the value to zero, which represents an invalid cookie value.</para>
    </param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_INVALID_CALL|<i>notificationType</i> is unsupported by the operating system (OS).| |E_INVALIDARG|<code>nullptr</code> was provided for <i>dxCoreObject</i>, or if an invalid <i>notificationType</i> and <i>dxCoreObject</i> combination was provided.| |E_POINTER|<code>nullptr</code> was provided for either <i>callbackFunction</i> or <i>eventCookie</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapterFactory.UnregisterEventNotification">
    <summary>Unregisters from a notification that you previously registered for. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="eventCookie">The cookie value (returned when you called <see cref="IDXCoreAdapterFactory.RegisterEventNotification" />) representing a prior registration that you now wish to unregister for.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |E_INVALIDARG|The value of <i>eventCookie</i> is not a valid cookie representing a prior registration.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapterFactory">
    <summary>The <b>IDXCoreAdapterFactory</b> interface implements methods for generating DXCore adapter enumeration objects, and for retrieving their details. <b>IDXCoreAdapterFactory</b> inherits from the <see cref="IUnknown" /> interface. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
  </member>
</doc>