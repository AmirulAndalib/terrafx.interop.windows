<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3DDestructionNotifier.RegisterDestructionCallback">
    <summary>
      <para>Registers a user-defined callback to be invoked on destruction of the object from which this <see cref="ID3DDestructionNotifier" /> was created.</para>
    </summary>
    <param name="callbackFn">
      <para>Type: <b>PFN_DESTRUCTION_CALLBACK</b></para>
      <para>A user-defined callback to be invoked when the object is destroyed.</para>
    </param>
    <param name="pData">
      <para>Type: <b>void*</b></para>
      <para>The data to pass to <i>callbackFn</i> when invoked</para>
    </param>
    <param name="pCallbackID">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a>*</b></para>
      <para>Pointer to a <b>UINT</b> used to identify the callback, and to pass to <see cref="ID3DDestructionNotifier.UnregisterDestructionCallback" /> to unregister the callback.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this function succeeds, it returns <b>S_OK</b>.</para>
    </returns>
    <remarks>
      <para>An example of this interface being used to log the destruction of an <b>ID3D12Resource</b>.</para>
      <code>#include &lt;d3dcommon.h&gt; // for ID3DDestructionNotifier

ComPtr&lt;ID3D12Resource&gt; resource = ...;

ComPtr&lt;ID3DDestructionNotifier&gt; notifier;
if (SUCCEEDED(resource.As(&amp;amp;amp;amp;amp;amp;notifier)))
{
    UINT callbackId;
    ThrowIfFailed(notifier-&gt;RegisterDestructionCallback(LogResourceReleased, nullptr, &amp;amp;amp;amp;amp;amp;callbackId));
}

void LogResourceReleased(void* context)
{
    OutputDebugString("Resource released!\n");
}
</code>
    </remarks>
    <seealso cref="ID3DDestructionNotifier" />
    <seealso cref="ID3DDestructionNotifier.UnregisterDestructionCallback" />
  </member>
  <member name="ID3DDestructionNotifier.UnregisterDestructionCallback">
    <summary>
      <para>Unregisters a callback that was registered with <see cref="ID3DDestructionNotifier.RegisterDestructionCallback" />.</para>
    </summary>
    <param name="callbackID">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/winprog/windows-data-types">UINT</a></b></para>
      <para>The <b>UINT</b> that was created by the <i>pCallbackID</i> argument to <b><see cref="ID3DDestructionNotifier.RegisterDestructionCallback" /></b>.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If this function succeeds, it returns <b>S_OK</b>.</para>
    </returns>
    <seealso cref="ID3DDestructionNotifier" />
    <seealso cref="ID3DDestructionNotifier.RegisterDestructionCallback" />
  </member>
</doc>