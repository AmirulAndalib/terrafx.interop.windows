<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12VideoDecodeCommandList.BeginEvent">
    <summary>
      <para>For internal use only. Not intended to be called directly.</para>
    </summary>
    <param name="Metadata">
      <para>Internal.</para>
    </param>
    <param name="pData">
      <para>Internal.</para>
    </param>
    <param name="Size">
      <para>Internal.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.BeginQuery">
    <summary>
      <para>Starts a query running.</para>
    </summary>
    <param name="pQueryHeap">
      <para>A pointer to an <see cref="ID3D12QueryHeap" /> specifying the storage for this query.</para>
    </param>
    <param name="Type">
      <para>A member of the <see cref="D3D12_QUERY_TYPE" /> enumeration specifying the type of the query.</para>
    </param>
    <param name="Index">
      <para>The index of the query within the query heap.</para>
    </param>
    <remarks>
      <para>Some queries do not use <b>BeginQuery</b> and only have an <b>EndQuery</b>.  See each query type in <see cref="D3D12_QUERY_TYPE" /> to determine proper usage.</para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList.ClearState">
    <summary>
      <para>Resets the state of a direct command list back to the state it was in when the command list was created.</para>
    </summary>
  </member>
  <member name="ID3D12VideoDecodeCommandList.Close">
    <summary>
      <para>Indicates that recording to the command list has finished.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns <b>S_OK</b> if successful; otherwise, returns one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <b>E_FAIL</b> if the command list has already been closed, or an invalid API was called during command list recording.
</description>
        </item>
        <item>
          <description>
            <b>E_OUTOFMEMORY</b> if the operating system ran out of memory during recording.
</description>
        </item>
        <item>
          <description>
            <b>E_INVALIDARG</b> if an invalid argument was passed to the command list API during recording.
</description>
        </item>
      </list>
      <para>See <a href="https://docs.microsoft.com//windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
    </returns>
    <remarks>
      <para>The runtime will validate that the command list has not previously been closed.  If an error was encountered during recording, the error code is returned here.  The runtime won't call the close device driver interface (DDI) in this case.</para>
      <para>For an example of creating a command list, see <see cref="ID3D12GraphicsCommandList.Close method" /></para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList.DecodeFrame">
    <summary>
      <para>Records a decode frame operation to the command list.  Inputs, outputs, and parameters for the decode are specified as arguments to this method.</para>
    </summary>
    <param name="pDecoder">
      <para>A pointer to an <see cref="ID3D12VideoDecoder" /> interface representing a decoder instance.</para>
    </param>
    <param name="pOutputArguments">
      <para>A <see cref="D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS" /> structure specifying the output surface and output arguments.</para>
    </param>
    <param name="pInputArguments">
      <para>A <see cref="D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS" /> structure specifying the input bitstream, reference frames, and other input parameters.</para>
    </param>
    <remarks>
      <para>The <see cref="ID3D12VideoDecodeCommandList1.DecodeFrame1" /> method provides the same functionality as this method, but adds support for decode histograms.</para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList.DiscardResource">
    <summary>
      <para>Indicate that the current contents of a resource can be discarded.  The current contents of the resource are no longer valid allowing optimizations for subsequent operations such as <see cref="ResourceBarrier" />.</para>
    </summary>
    <param name="pResource">
      <para>A pointer to the <see cref="ID3D12Resource" /> interface for the resource to discard.</para>
    </param>
    <param name="pRegion">
      <para>A pointer to a <see cref="D3D12_DISCARD_REGION" /> structure that describes details for the discard-resource operation.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.EndEvent">
    <summary>
      <para>For internal use only. Not intended to be called directly.</para>
    </summary>
  </member>
  <member name="ID3D12VideoDecodeCommandList.EndQuery">
    <summary>
      <para>Ends a query.</para>
    </summary>
    <param name="pQueryHeap">
      <para>A pointer to an <see cref="ID3D12QueryHeap" /> specifying the storage for this query.</para>
    </param>
    <param name="Type">
      <para>A member of the <see cref="D3D12_QUERY_TYPE" /> enumeration specifying the type of the query.</para>
    </param>
    <param name="Index">
      <para>The index of the query within the query heap.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.Reset">
    <summary>
      <para>Resets a command list back to its initial state as if a new command list was just created.</para>
    </summary>
    <param name="pAllocator">
      <para>Type: <b>ID3D12CommandAllocator*</b></para>
      <para>A pointer to the <see cref="ID3D12CommandAllocator" /> object that the device creates command lists from.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns <b>S_OK</b> if successful; otherwise, returns one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <b>E_FAIL</b> if the command list was not in the "closed" state when the <b>Reset</b> call was made, or the per-device limit would have been exceeded.
</description>
        </item>
        <item>
          <description>
            <b>E_OUTOFMEMORY</b> if the operating system ran out of memory.
</description>
        </item>
        <item>
          <description>
            <b>E_INVALIDARG</b> if the allocator is currently being used with another command list in the "recording" state or if the specified allocator was created with the wrong type.
</description>
        </item>
      </list>
      <para>See <a href="https://docs.microsoft.com//windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 Return Codes</a> for other possible return values.</para>
    </returns>
    <remarks>
      <para>For additional information and examples of using this method, see <see cref="ID3D12GraphicsCommandList.Reset method" /></para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList.ResolveQueryData">
    <summary>
      <para>Extracts data from a query.</para>
    </summary>
    <param name="pQueryHeap">
      <para>A pointer to an <see cref="ID3D12QueryHeap" /> specifying the storage containing the queries to resolve.</para>
    </param>
    <param name="Type">
      <para>A member of the <see cref="D3D12_QUERY_TYPE" /> enumeration specifying the type of the query.</para>
    </param>
    <param name="StartIndex">
      <para>The index of the first query to resolve.</para>
    </param>
    <param name="NumQueries">
      <para>The number of queries to resolve.</para>
    </param>
    <param name="pDestinationBuffer">
      <para>A pointer to an <see cref="ID3D12Resource" /> representing the destination buffer. The resource must be in the state <see cref="D3D12_RESOURCE_STATE_COPY_DEST" />.</para>
    </param>
    <param name="AlignedDestinationBufferOffset">
      <para>The alignment offset into the destination buffer. This must be a multiple of 8 bytes.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.ResourceBarrier">
    <summary>
      <para>Notifies the driver that it needs to synchronize multiple accesses to resources.</para>
    </summary>
    <param name="NumBarriers">
      <para>Type: <b>UINT</b></para>
      <para>The number of submitted barrier descriptions.</para>
    </param>
    <param name="pBarriers">
      <para>Type: <b>const <see cref="D3D12_RESOURCE_BARRIER" />*</b></para>
      <para>Pointer to an array of barrier descriptions.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.SetMarker">
    <summary>
      <para>For internal use only. Not intended to be called directly.</para>
    </summary>
    <param name="Metadata">
      <para>Internal.</para>
    </param>
    <param name="pData">
      <para>Internal.</para>
    </param>
    <param name="Size">
      <para>Internal.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.SetPredication">
    <summary>
      <para>Specifies that subsequent commands should not be performed if the predicate value passes the specified operation.</para>
    </summary>
    <param name="pBuffer">
      <para>A pointer to an <see cref="ID3D12Resource" /> representing the buffer from which to read the 64-bit predication value.</para>
    </param>
    <param name="AlignedBufferOffset">
      <para>The UINT64-aligned buffer offset.</para>
    </param>
    <param name="Operation">
      <para>A member of the <see cref="D3D12_PREDICATION_OP" /> enumeration specifying the predicate operation.</para>
    </param>
  </member>
  <member name="ID3D12VideoDecodeCommandList.WriteBufferImmediate">
    <summary>
      <para>Writes a number of 32-bit immediate values to the specified buffer locations directly from the command stream.</para>
    </summary>
    <param name="Count">
      <para>The number of elements in the <i>pParams</i> and <i>pModes</i> arrays.</para>
    </param>
    <param name="pParams">
      <para>The address of an array of <see cref="D3D12_WRITEBUFFERIMMEDIATE_PARAMETER" /> structures of size <i>Count</i>.</para>
    </param>
    <param name="pModes">
      <para>The address of an array of <see cref="D3D12_WRITEBUFFERIMMEDIATE_MODE" /> structures of size <i>Count</i>. The default value is <b>null</b>. Passing <b>null</b> causes the system to write all immediate values using <b>D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT</b>.</para>
    </param>
    <remarks>
      <para>The capability for this feature is specified with <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS3.WriteBufferImmediateSupportFlags" /></para>
    </remarks>
  </member>
  <member name="ID3D12VideoDecodeCommandList">
    <summary>
      <para>Encapsulates a list of graphics commands for video decoding. This interface is inherited by <see cref="ID3D12VideoDecodeCommandList1" />.</para>
    </summary>
    <seealso cref="ID3D12VideoDecodeCommandList1" />
    <seealso cref="ID3D12VideoDecodeCommandList2" />
  </member>
</doc>