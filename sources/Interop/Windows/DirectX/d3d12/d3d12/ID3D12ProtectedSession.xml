<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12ProtectedSession.GetSessionStatus">
    <summary>Gets the status of the protected session.</summary>
    <returns>The status of the protected session. If the returned value is <see cref="D3D12_PROTECTED_SESSION_STATUS_INVALID" />, then you need to wait for a uniqueness value bump to reuse the resource if the session is an <see cref="ID3D12ProtectedResourceSession" />.</returns>
  </member>
  <member name="ID3D12ProtectedSession.GetStatusFence">
    <summary>Retrieves the fence for the protected session. From the fence, you can retrieve the current uniqueness validity value (using <see cref="ID3D12Fence.GetCompletedValue" />), and add monitors for changes to its value. This is a read-only fence.</summary>
    <param name="riid">The GUID of the interface to a fence. Most commonly, <see cref="ID3D12Fence" />, although it may be any GUID for any interface. If the protected session object doesn’t support the interface for this GUID, the function returns <b>E_NOINTERFACE</b>.</param>
    <param name="ppFence">A pointer to a memory block that receives a pointer to the fence for the given protected session.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ID3D12ProtectedSession">
    <summary>Offers base functionality that allows for a consistent way to monitor the validity of a session across the different types of sessions. The only type of session currently available is of type <see cref="ID3D12ProtectedResourceSession" />.</summary>
  </member>
</doc>