<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC">
    <summary>Describes a raytracing acceleration structure. Pass this structure into <see cref="ID3D12GraphicsCommandList4.BuildRaytracingAccelerationStructure" /> to describe the acceleration structure to be built.</summary>
  </member>
  <member name="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.DestAccelerationStructureData">
    <summary>
      <para>Location to store resulting acceleration structure. <see cref="ID3D12Device5.GetRaytracingAccelerationStructurePrebuildInfo" /> reports the amount of memory required for the result here given a set of acceleration structure build parameters.</para>
      <para>The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com//windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>.</para>
      <blockquote>[!IMPORTANT] The memory must be in state <see cref="D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE" />.</blockquote>
    </summary>
  </member>
  <member name="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.Inputs">
    <summary>Description of the input data for the acceleration structure build. This is data is stored in a separate structure because it is also used with <b>GetRaytracingAccelerationStructurePrebuildInfo</b>.</summary>
  </member>
  <member name="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.SourceAccelerationStructureData">
    <summary>
      <para>Address of an existing acceleration structure if an acceleration structure update (an incremental build) is being requested, by setting <see cref="D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE" /> in the Flags parameter. Otherwise this address must be NULL.</para>
      <para>If this address is the same as <i>DestAccelerationStructureData</i>, the update is to be performed in-place. Any other form of overlap of the source and destination memory is invalid and produces undefined behavior.</para>
      <para>The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com//windows/desktop/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>, which should automatically be the case because any existing acceleration structure passed in here would have already been required to be placed with such alignment.</para>
      <blockquote>[!IMPORTANT] The memory must be in state <see cref="D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE" />.</blockquote>
      <h4>ScratchAccelerationStructureData</h4>
      <para>Location where the build will store temporary data. <b>GetRaytracingAccelerationStructurePrebuildInfo</b> reports the amount of scratch memory the implementation will need for a given set of acceleration structure build parameters.</para>
      <blockquote>[!IMPORTANT] The memory must be in state <see cref="D3D12_RESOURCE_STATE_UNORDERED_ACCESS" />.</blockquote>
    </summary>
  </member>
  <member name="D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC.ScratchAccelerationStructureData"></member>
</doc>