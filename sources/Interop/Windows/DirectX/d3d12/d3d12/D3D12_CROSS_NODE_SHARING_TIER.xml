<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_CROSS_NODE_SHARING_TIER">
    <summary>Specifies the level of sharing across nodes of an adapter, such as Tier 1 Emulated, Tier 1, or Tier 2.</summary>
  </member>
  <member name="D3D12_CROSS_NODE_SHARING_TIER.D3D12_CROSS_NODE_SHARING_TIER_NOT_SUPPORTED">
    <summary>If an adapter has only 1 node, then cross-node sharing doesn't apply, so the <b>CrossNodeSharingTier</b> member of the <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS" /> structure is set to D3D12_CROSS_NODE_SHARING_NOT_SUPPORTED.</summary>
  </member>
  <member name="D3D12_CROSS_NODE_SHARING_TIER.D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED">
    <summary>Tier 1 Emulated. Devices that set the <b>CrossNodeSharingTier</b> member of the <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS" /> structure to D3D12_CROSS_NODE_SHARING_TIER_1_EMULATED have Tier 1 support. However, drivers stage these copy operations through a driver-internal system memory allocation. This will cause these copy operations to consume time on the destination GPU as well as the source.</summary>
  </member>
  <member name="D3D12_CROSS_NODE_SHARING_TIER.D3D12_CROSS_NODE_SHARING_TIER_1">
    <summary>
      <para>Tier 1. Devices that set the <b>CrossNodeSharingTier</b> member of the <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS" /> structure to D3D12_CROSS_NODE_SHARING_TIER_1 only support the following cross-node copy operations:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="ID3D12CommandList.CopyBufferRegion" />
          </description>
        </item>
        <item>
          <description>
            <see cref="ID3D12CommandList.CopyTextureRegion" />
          </description>
        </item>
        <item>
          <description>
            <see cref="ID3D12CommandList.CopyResource" />
          </description>
        </item>
      </list>
      <para>Additionally, the cross-node resource must be the destination of the copy operation.</para>
    </summary>
  </member>
  <member name="D3D12_CROSS_NODE_SHARING_TIER.D3D12_CROSS_NODE_SHARING_TIER_2">
    <summary>
      <para>Tier 2. Devices that set the <b>CrossNodeSharingTier</b> member of the <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS" /> structure to D3D12_CROSS_NODE_SHARING_TIER_2 support all operations across nodes, except for the following:</para>
      <list type="bullet">
        <item>
          <description>Render target views.</description>
        </item>
        <item>
          <description>Depth stencil views.</description>
        </item>
        <item>
          <description>UAV atomic operations. Similar to CPU/GPU interop, shaders may perform UAV atomic operations; however, no atomicity across adapters is guaranteed.</description>
        </item>
      </list>Applications can retrieve the node where a resource/heap exists from the <see cref="D3D12_HEAP_DESC" /> structure. These values are retrievable for opened resources. The runtime performs the appropriate re-mapping in case the 2 devices are using different UMD-specified node re-mappings.</summary>
  </member>
  <member name="D3D12_CROSS_NODE_SHARING_TIER.D3D12_CROSS_NODE_SHARING_TIER_3">
    <summary>Indicates support for <see cref="D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS" /> on heaps that are visible to multiple nodes.</summary>
  </member>
</doc>