<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12VersionedRootSignatureDeserializer.GetRootSignatureDescAtVersion">
    <summary>
      <para>Converts root signature description structures to a requested version.</para>
    </summary>
    <param name="convertToVersion">
      <para>Type: <b><see cref="D3D_ROOT_SIGNATURE_VERSION" /></b></para>
      <para>Specifies the required <see cref="D3D_ROOT_SIGNATURE_VERSION" />.</para>
    </param>
    <param name="ppDesc">
      <para>Type: <b>const <see cref="D3D12_VERSIONED_ROOT_SIGNATURE_DESC" />**</b></para>
      <para>Contains the deserialized root signature in a  <see cref="D3D12_VERSIONED_ROOT_SIGNATURE_DESC" /> structure.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code. The method can fail with E_OUTOFMEMORY.</para>
    </returns>
    <remarks>
      <para>This method allocates additional storage if needed for the converted root signature (memory owned by the deserializer interface).  If conversion is done, the deserializer interface doesn’t free the original deserialized root signature memory – all versions the interface has been asked to convert to are available until the deserializer is destroyed.</para>
      <para>Converting a root signature from 1.1 to 1.0 will drop all <see cref="D3D12_DESCRIPTOR_RANGE_FLAGS" /> and <see cref="D3D12_ROOT_DESCRIPTOR_FLAGS" /> can be useful for generating compatible root signatures that need to run on old operating systems, though does lose optimization opportunities.  For instance, multiple root signature versions can be serialized and stored with application assets, with the appropriate version used at runtime based on the operating system capabilities.</para>
      <para>Converting a root signature from 1.0 to 1.1 just adds the appropriate flags to match 1.0 semantics.</para>
    </remarks>
    <seealso cref="ID3D12VersionedRootSignatureDeserializer" />
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/root-signature-version-1-1">Root Signature Version 1.1</seealso>
  </member>
  <member name="ID3D12VersionedRootSignatureDeserializer.GetUnconvertedRootSignatureDesc">
    <summary>
      <para>Gets the layout of the root signature, without converting between root signature versions.</para>
    </summary>
    <returns>
      <para>Type: <b><see cref="D3D12_VERSIONED_ROOT_SIGNATURE_DESC" /></b></para>
      <para>This method returns a deserialized root signature in a <see cref="D3D12_VERSIONED_ROOT_SIGNATURE_DESC" /> structure that describes the layout of the root signature.</para>
    </returns>
    <seealso cref="ID3D12VersionedRootSignatureDeserializer" />
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/root-signature-version-1-1">Root Signature Version 1.1</seealso>
  </member>
  <member name="ID3D12VersionedRootSignatureDeserializer">
    <summary>
      <para>Contains methods to  return the deserialized
<see cref="D3D12_ROOT_SIGNATURE_DESC1" /></para>
      <para>data structure, of any version of a serialized root signature.</para>
    </summary>
    <remarks>
      <para>This interface supercedes <see cref="ID3D12RootSignatureDeserializer" />.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-interfaces">Core Interfaces</seealso>
    <seealso cref="IUnknown" />
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/root-signature-version-1-1">Root Signature Version 1.1</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/root-signatures">Root Signatures</seealso>
  </member>
</doc>