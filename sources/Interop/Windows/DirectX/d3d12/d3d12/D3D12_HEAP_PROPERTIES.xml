<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_HEAP_PROPERTIES">
    <summary>Describes heap properties.</summary>
  </member>
  <member name="D3D12_HEAP_PROPERTIES.Type">
    <summary>A <see cref="D3D12_HEAP_TYPE" />-typed value that specifies the type of heap.</summary>
  </member>
  <member name="D3D12_HEAP_PROPERTIES.CPUPageProperty">
    <summary>A <see cref="D3D12_CPU_PAGE_PROPERTY" />-typed value that specifies the CPU-page properties for the heap.</summary>
  </member>
  <member name="D3D12_HEAP_PROPERTIES.MemoryPoolPreference">
    <summary>A <see cref="D3D12_MEMORY_POOL" />-typed value that specifies the memory pool for the heap.</summary>
  </member>
  <member name="D3D12_HEAP_PROPERTIES.CreationNodeMask">
    <summary>
      <para>For multi-adapter operation, this indicates the node where the resource should be created.</para>
      <para>Exactly one bit of this UINT must be set. See <a href="https://docs.microsoft.com//windows/win32/direct3d12/multi-engine">Multi-adapter systems</a>.</para>
      <para>Passing zero is equivalent to passing one, in order to simplify the usage of single-GPU adapters.</para>
    </summary>
  </member>
  <member name="D3D12_HEAP_PROPERTIES.VisibleNodeMask">
    <summary>
      <para>For multi-adapter operation, this indicates the set of nodes where the resource is visible.</para>
      <para>
        <i>VisibleNodeMask</i> must have the same bit set that is set in <i>CreationNodeMask</i>. <i>VisibleNodeMask</i> can <i>also</i> have additional bits set for cross-node resources, but doing so can potentially reduce performance for resource accesses, so you should do so only when needed.</para>
      <para>Passing zero is equivalent to passing one, in order to simplify the usage of single-GPU adapters.</para>
    </summary>
  </member>
</doc>