<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC">
    <summary>Describes an instance of a raytracing acceleration structure used in GPU memory during the acceleration structure build process.</summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.Transform">
    <summary>
      <para>A 3x4 transform matrix in row-major layout representing the instance-to-world transformation. Implementations transform rays, as opposed to transforming all of the geometry or AABBs.</para>
      <blockquote>[!NOTE] The layout of <code>Transform</code> is a transpose of how affine matrices are typically stored in memory. Instead of four 3-vectors, <code>Transform</code> is laid out as three 4-vectors.</blockquote>
    </summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.InstanceID">
    <summary>An arbitrary 24-bit value that can be accessed using the <code>InstanceID</code> intrinsic function in supported shader types.</summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.InstanceMask">
    <summary>An 8-bit mask assigned to the instance, which can be used to include/reject groups of instances on a per-ray basis. If the value is zero, then the instance will never be included, so typically this should be set to some non-zero value. For more information see, the <code>InstanceInclusionMask</code> parameter to the <a href="https://docs.microsoft.com//windows/win32/direct3d12/traceray-function">TraceRay</a> function.</summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.InstanceContributionToHitGroupIndex">
    <summary>An arbitrary 24-bit value representing per-instance contribution to add into shader table indexing to select the hit group to use.</summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.Flags">
    <summary>An 8-bit mask representing flags from <see cref="D3D12_RAYTRACING_INSTANCE_FLAGS" /> to apply to the instance.</summary>
  </member>
  <member name="D3D12_RAYTRACING_INSTANCE_DESC.AccelerationStructure">
    <summary>
      <para>Address of the bottom-level acceleration structure that is being instanced. The address must be aligned to 256 bytes, defined as <a href="https://docs.microsoft.com//windows/win32/direct3d12/constants">D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BYTE_ALIGNMENT</a>. Any existing acceleration structure passed in here would already have been required to be placed with such alignment.</para>
      <para>The memory pointed to must be in state <see cref="D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE" />.</para>
    </summary>
  </member>
</doc>