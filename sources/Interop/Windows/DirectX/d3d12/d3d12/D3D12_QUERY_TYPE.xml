<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_QUERY_TYPE">
    <summary>
      <para>Specifies the type of query.</para>
    </summary>
    <remarks>
      <para>This enum is used by <see cref="BeginQuery" />, <see cref="EndQuery" /> and <see cref="ResolveQueryData." /></para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-enumerations">Core Enumerations</seealso>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_OCCLUSION">
    <summary>
      <para>Indicates the query is for depth/stencil occlusion counts.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_BINARY_OCCLUSION">
    <summary>
      <para>Indicates the query is for a binary depth/stencil occlusion statistics.</para>
      <para>This new query type acts like D3D12_QUERY_TYPE_OCCLUSION except that it returns simply a binary 0/1 result:  0 indicates that no samples passed depth and stencil testing, 1 indicates that at least one sample passed depth and stencil testing.  This enables occlusion queries to not interfere with any GPU performance optimization associated with depth/stencil testing.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_TIMESTAMP">
    <summary>
      <para>Indicates the query is for high definition GPU and CPU timestamps.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_PIPELINE_STATISTICS">
    <summary>
      <para>Indicates the query type is for graphics pipeline statistics, refer to <see cref="D3D12_QUERY_DATA_PIPELINE_STATISTICS" />.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0">
    <summary>
      <para>Stream 0 output statistics. In Direct3D 12 there is no single stream output (SO) overflow query for all the output streams. Apps need to issue multiple single-stream queries, and then correlate the results. Stream output is the ability of the GPU to write vertices to a buffer. The stream output counters monitor progress.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1">
    <summary>
      <para>Stream 1 output statistics.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2">
    <summary>
      <para>Stream 2 output statistics.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3">
    <summary>
      <para>Stream 3 output statistics.</para>
    </summary>
  </member>
  <member name="D3D12_QUERY_TYPE.D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS">
    <summary>
      <para>Video decode statistics. Refer to <see cref="D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS" />.</para>
      <para>Use this query type to determine if a video was successfully decoded. If decoding fails due to insufficient BitRate or FrameRate parameters set during creation of the decode heap, then the status field of the query is set to <see cref="D3D12_VIDEO_DECODE_STATUS_RATE_EXCEEDED" /> and the query also contains new BitRate and FrameRate values that would succeed.</para>
      <para>This query type can only be performed on video decode command lists <see cref="(D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE)" />. This query type does not use <see cref="ID3D12VideoDecodeCommandList.BeginQuery" />, only <see cref="ID3D12VideoDecodeCommandList.EndQuery" />. Statistics are recorded only for the most recent <see cref="ID3D12VideoDecodeCommandList.DecodeFrame" /> call in the same command list.</para>
      <para>Decode status structures are defined by the codec specification.</para>
    </summary>
  </member>
</doc>