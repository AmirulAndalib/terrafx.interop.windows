<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12Device9.CreateCommandQueue1">
    <summary>
      <para>Creates a command queue with a creator ID.</para>
      <para>Also see <see cref="ID3D12Device.CreateCommandQueue" />.</para>
    </summary>
    <param name="pDesc">
      <para>Type: _In_ <b>const <see cref="D3D12_COMMAND_QUEUE_DESC" />*</b></para>
      <para>Specifies a <b>D3D12_COMMAND_QUEUE_DESC</b> that describes the command queue.</para>
    </param>
    <param name="CreatorID">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/bbde795f-5398-42d8-9f59-3613da03c318">REFIID</a></b></para>
      <para>A creator ID. See <b>Remarks</b>.</para>
    </param>
    <param name="riid">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/bbde795f-5398-42d8-9f59-3613da03c318">REFIID</a></b></para>
      <para>The globally unique identifier (GUID) for the command queue interface.</para>
    </param>
    <param name="ppCommandQueue">
      <para>Type: _COM_Outptr_ <b>void**</b></para>
      <para>A pointer to a memory block that receives a pointer to the <see cref="ID3D12CommandQueue" /> interface for the command queue.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns <b>E_OUTOFMEMORY</b> if there's insufficient memory to create the command queue; otherwise <b>S_OK</b>. See <a href="https://docs.microsoft.com//windows/win32/direct3d12/d3d12-graphics-reference-returnvalues">Direct3D 12 return codes</a> for other possible return values.</para>
    </returns>
    <remarks>
      <para>When multiple components in the same process are sharing a single Direct3D 12 device, often they will end up with separate workloads on independent command queues. In some hardware implementations, independent queues can run in parallel only with specific other command queues.</para>
      <para>Direct3D 12 applies a first-come, first-serve grouping for queues, which might not work well for all application or component designs. To help inform Direct3D 12's grouping of queues, you can specify a <i>creator ID</i> (which is unique per component) that restricts the grouping to other queues with the same ID. When possible, a component should choose the same unique ID for all of its queues. Microsoft has reserved a few well-known creator IDs for use by Microsoft-developed implementations of APIs on top of Direct3D 12.</para>
    </remarks>
    <seealso cref="ID3D12Device.CreateCommandQueue" />
  </member>
  <member name="ID3D12Device9.CreateShaderCacheSession">
    <summary>
      <para>Creates an object that grants access to a shader cache, potentially opening an existing cache or creating a new one.</para>
    </summary>
    <param name="pDesc">
      <para>Type: _In_ <b>const <see cref="D3D12_SHADER_CACHE_SESSION_DESC" />*</b></para>
      <para>A <b>D3D12_SHADER_CACHE_SESSION_DESC</b> structure describing the shader cache session to create.</para>
    </param>
    <param name="riid">
      <para>Type: <b><a href="https://docs.microsoft.com//openspecs/windows_protocols/ms-oaut/bbde795f-5398-42d8-9f59-3613da03c318">REFIID</a></b></para>
      <para>The globally unique identifier (GUID) for the shader cache session interface.</para>
    </param>
    <param name="ppvSession">
      <para>Type: _COM_Outptr_opt_ <b>void**</b></para>
      <para>A pointer to a memory block that receives a pointer to the <see cref="ID3D12ShaderCacheSession" /> interface for the shader cache session.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/desktop/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description|
|-|-|
| DXGI_ERROR_ALREADY_EXISTS | You tried to create a cache with an existing identifier. See <see cref="D3D12_SHADER_CACHE_SESSION_DESC.Identifier" />. |</para>
    </returns>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12Device9.ShaderCacheControl">
    <summary>
      <para>Modifies the behavior of caches used internally by Direct3D or by the driver. <b>ShaderCacheControl</b> may be used only in developer mode.</para>
    </summary>
    <param name="Kinds">
      <para>Type: <b><see cref="D3D12_SHADER_CACHE_KIND_FLAGS" /></b></para>
      <para>The caches to modify. Any one of these caches may or may not exist.</para>
    </param>
    <param name="Control">
      <para>Type: <b><see cref="D3D12_SHADER_CACHE_CONTROL_FLAGS" /></b></para>
      <para>The way in which to modify the caches. You can't pass both <b>DISABLE</b> and <b>ENABLE</b> at the same time; and you must pass at least one flag.</para>
    </param>
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
  <member name="ID3D12Device9">
    <summary>
      <para>Represents a virtual adapter. This interface extends <see cref="ID3D12Device8" /> to add methods to manage shader caches.</para>
    </summary>
    <seealso cref="ID3D12Device8" />
    <seealso href="https://microsoft.github.io/directx-specs/d3d/shadercache.html">D3D12 shader cache APIs</seealso>
  </member>
</doc>