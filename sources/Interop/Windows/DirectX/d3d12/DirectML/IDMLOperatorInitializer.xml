<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDMLOperatorInitializer.Reset">
    <summary>
      <para>Resets the initializer to handle initialization of a new set of operators.</para>
      <para>You may use an initializer only to initialize a fixed set of operators, which are provided either during creation (<see cref="IDMLDevice.CreateOperatorInitializer" />), or when the initializer is reset. Resetting the initializer allows your application to reuse an existing initializer object to initialize a new set of operators.</para>
      <para>You must not call <b>Reset</b> until all outstanding work using the initializer has completed execution on the GPU.</para>
      <para>This method is not thread-safe.</para>
    </summary>
    <param name="operatorCount">This parameter determines the number of elements in the array passed in the <i>operators</i> parameter.</param>
    <param name="operators">An optional pointer to a constant array of <see cref="IDMLCompiledOperator" /> pointers containing the operators that the initializer should initialize.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IDMLOperatorInitializer">
    <summary>
      <para>Represents a specialized object whose purpose is to initialize compiled operators. To create an instance of this object, call <see cref="IDMLDevice.CreateOperatorInitializer" />. The <b>IDMLOperatorInitializer</b> interface inherits from <see cref="IDMLDispatchable" />.</para>
      <para>An operator initializer is associated with one or more compiled operators, which are the targets for initialization. You can record operator initialization onto a command list using <see cref="IDMLCommandRecorder.RecordDispatch" />. When the initialization completes execution on the GPU, all of the target operators enter the initialized state. You must initialize all operators exactly once before they can be executed.</para>
    </summary>
  </member>
</doc>