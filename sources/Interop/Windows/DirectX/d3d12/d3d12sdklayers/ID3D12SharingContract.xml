<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12SharingContract.Present">
    <summary>
      <para>Notifies diagnostic tools about an end-of-frame operation without the use of a swap chain. Calling this API enables usage of tools like PIX with applications that either don't render to a window, or that do so in non-traditional ways.</para>
    </summary>
    <param name="pResource">
      <para>Type: <b><see cref="ID3D12Resource" />*</b></para>
      <para>A pointer to the resource that contains the final frame contents. This resource is treated as the <i>back buffer</i> of the <b>Present</b>.</para>
    </param>
    <param name="Subresource">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>An unsigned 32bit subresource id.</para>
    </param>
    <param name="window">
      <para>If provided, indicates which window the tools should use for displaying additional diagnostic information.</para>
    </param>
    <seealso cref="ID3D12SharingContract" />
  </member>
  <member name="ID3D12SharingContract.SharedFenceSignal">
    <summary>
      <para>Signals a shared fence between the D3D layers and diagnostics tools.</para>
    </summary>
    <param name="pFence">
      <para>Type: <b><see cref="ID3D12Fence" />*</b></para>
      <para>A pointer to the shared fence to signal.</para>
    </param>
    <param name="FenceValue">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT64</a></b></para>
      <para>An unsigned 64bit value to signal the shared fence with.</para>
    </param>
    <seealso cref="ID3D12SharingContract" />
  </member>
  <member name="ID3D12SharingContract">
    <summary>
      <para>Part of a contract between D3D11On12 diagnostic layers and graphics diagnostics tools. This interface facilitates diagnostics tools to capture information at a lower level than the DXGI swapchain.</para>
      <para>You may want to use this interface to enable diagnostic tools to capture usage patterns that don't use DXGI swap chains for presentation. If so, you can access this interface via <b>QueryInterface</b> from a D3D12 command queue. Note that this interface is not supported when there are no diagnostic tools present, so your application mustn't rely on it existing.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-interfaces">Core interfaces</seealso>
    <seealso cref="IUnknown" />
  </member>
</doc>