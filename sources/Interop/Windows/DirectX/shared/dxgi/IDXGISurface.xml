<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGISurface.GetDesc">
    <summary>
      <para>Get a description of the surface.</para>
    </summary>
    <param name="pDesc">
      <para>Type: <b><see cref="DXGI_SURFACE_DESC" />*</b></para>
      <para>A pointer to the surface description (see <see cref="DXGI_SURFACE_DESC" />).</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
    </returns>
    <seealso cref="IDXGISurface" />
  </member>
  <member name="IDXGISurface.Map">
    <summary>
      <para>Get a pointer to the data contained in the surface, and deny GPU access to the surface.</para>
    </summary>
    <param name="pLockedRect">
      <para>Type: <b><see cref="DXGI_MAPPED_RECT" />*</b></para>
      <para>A pointer to the surface data (see <see cref="DXGI_MAPPED_RECT" />).</para>
    </param>
    <param name="MapFlags">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>CPU read-write flags. These flags can be combined with a logical OR.</para>
      <list type="bullet">
        <item>
          <description>DXGI_MAP_READ - Allow CPU read access.</description>
        </item>
        <item>
          <description>DXGI_MAP_WRITE - Allow CPU write access.</description>
        </item>
        <item>
          <description>DXGI_MAP_DISCARD - Discard the previous contents of a resource when it is mapped.</description>
        </item>
      </list>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
    </returns>
    <remarks>
      <para>Use <b>IDXGISurface.Map</b> to access a surface from the CPU. To release a mapped surface (and allow GPU access) call <see cref="IDXGISurface.Unmap" />.</para>
    </remarks>
    <seealso cref="IDXGISurface" />
  </member>
  <member name="IDXGISurface.Unmap">
    <summary>
      <para>Invalidate the pointer to the surface retrieved by <see cref="IDXGISurface.Map" /> and re-enable GPU access to the resource.</para>
    </summary>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the error codes that are described in the <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</para>
    </returns>
    <seealso cref="IDXGISurface" />
  </member>
  <member name="IDXGISurface">
    <summary>
      <para>The  <b>IDXGISurface</b> interface implements methods for image-data objects.</para>
    </summary>
    <remarks>
      <para>An image-data object is a 2D section of memory, commonly called a surface. To get the surface from an output, call <see cref="IDXGIOutput.GetDisplaySurfaceData" />.</para>
      <para>Runtimes earlier than Direct3D 12 automatically create an <b>IDXGISurface</b> interface when they create a Direct3D resource object that represents a surface. <b>IDXGISurface</b> interfaces are not supported in Direct3D 12. For example, the runtime creates an <b>IDXGISurface</b> interface when you call <see cref="ID3D11Device.CreateTexture2D" /> or <see cref="ID3D10Device.CreateTexture2D" /> to create a 2D texture. To retrieve the <b>IDXGISurface</b> interface that represents the 2D texture surface, call <see cref="ID3D11Texture2D.QueryInterface" /> or <b>ID3D10Texture2D.QueryInterface</b>. In this call, you must pass the identifier of <b>IDXGISurface</b>. If the 2D texture has only a single MIP-map level and does not consist of an array of textures, <b>QueryInterface</b> succeeds and returns a pointer to the <b>IDXGISurface</b> interface pointer. Otherwise, <b>QueryInterface</b> fails and does not return the pointer to <b>IDXGISurface</b>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/win32/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIDeviceSubObject" />
  </member>
</doc>