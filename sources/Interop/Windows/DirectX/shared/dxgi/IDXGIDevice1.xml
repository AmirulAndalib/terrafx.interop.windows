<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGIDevice1.GetMaximumFrameLatency">
    <summary>
      <para>Gets the number of frames that the system is allowed to queue for rendering.</para>
    </summary>
    <param name="pMaxLatency">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a>*</b></para>
      <para>This value is set to the number of frames that can be queued for render.
This value defaults to 3, but can range from 1 to 16.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, returns one of the following members of the <a href="https://docs.microsoft.com//windows/desktop/direct3d9/d3derr">D3DERR</a> enumerated type:</para>
      <list type="bullet">
        <item>
          <description>
            <b>D3DERR_DEVICELOST</b>
          </description>
        </item>
        <item>
          <description>
            <b>D3DERR_DEVICEREMOVED</b>
          </description>
        </item>
        <item>
          <description>
            <b>D3DERR_DRIVERINTERNALERROR</b>
          </description>
        </item>
        <item>
          <description>
            <b>D3DERR_INVALIDCALL</b>
          </description>
        </item>
        <item>
          <description>
            <b>D3DERR_OUTOFVIDEOMEMORY</b>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method is not supported by DXGI 1.0, which shipped in Windows Vista and Windows Server 2008. DXGI 1.1 support is required, which is available on
Windows 7, Windows Server 2008 R2, and as an update to Windows Vista with Service Pack 2 (SP2) (<a href="https://support.microsoft.com/kb/971644">KB 971644</a>) and Windows Server 2008 (<a href="https://support.microsoft.com/kb/971512/">KB 971512</a>).</para>
      <para>Frame latency is the number of frames that are allowed to be stored in a queue before submission for rendering.  Latency is often
used to control how the CPU chooses between responding to user input and frames that are in the render queue.  It is often beneficial for applications
that have no user input (for example, video playback) to queue more than 3 frames of data.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIDevice1" />
    <seealso cref="IDXGIDevice1.SetMaximumFrameLatency" />
  </member>
  <member name="IDXGIDevice1.SetMaximumFrameLatency">
    <summary>
      <para>Sets the number of frames that the system is allowed to queue for rendering.</para>
    </summary>
    <param name="MaxLatency">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT</a></b></para>
      <para>The maximum number of back buffer frames that a driver can queue. The value defaults to 3, but
can range from 1 to 16. A value of 0 will reset latency to the default.  For multi-head devices, this value is specified per-head.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful; otherwise, DXGI_ERROR_DEVICE_REMOVED if the device was removed.</para>
    </returns>
    <remarks>
      <para>This method is not supported by DXGI 1.0, which shipped in Windows Vista and Windows Server 2008. DXGI 1.1 support is required, which is available on
Windows 7, Windows Server 2008 R2, and as an update to Windows Vista with Service Pack 2 (SP2) (<a href="https://support.microsoft.com/kb/971644">KB 971644</a>) and Windows Server 2008 (<a href="https://support.microsoft.com/kb/971512/">KB 971512</a>).</para>
      <para>Frame latency is the number of frames that are allowed to be stored in a queue before submission for rendering.  Latency is often used to
control how the CPU chooses between responding to user input and frames that are in the render queue.  It is often beneficial for applications that
have no user input (for example, video playback) to queue more than 3 frames of data.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIDevice1" />
    <seealso cref="IDXGIDevice1.GetMaximumFrameLatency" />
  </member>
  <member name="IDXGIDevice1">
    <summary>
      <para>An <b>IDXGIDevice1</b> interface implements a derived class for DXGI objects that produce image data.</para>
    </summary>
    <remarks>
      <para>This interface is not supported by Direct3D 12 devices. Direct3D 12 applications have direct control over their swapchain management, so better latency control should be handled by the application. You can make use of Waitable objects (refer to <see cref="DXGI_SWAP_CHAIN_FLAG_FRAME_LATENCY_WAITABLE_OBJECT" />) and the <see cref="IDXGISwapChain2.SetMaximumFrameLatency" /> method if desired.</para>
      <para>This interface is not supported by DXGI 1.0, which shipped in Windows Vista and Windows Server 2008. DXGI 1.1 support is required, which is available on
Windows 7, Windows Server 2008 R2, and as an update to Windows Vista with Service Pack 2 (SP2) (<a href="https://support.microsoft.com/kb/971644">KB 971644</a>) and Windows Server 2008 (<a href="https://support.microsoft.com/kb/971512/">KB 971512</a>).</para>
      <para>The <b>IDXGIDevice1</b> interface is designed for use by DXGI objects that need access to other DXGI objects. This interface is useful to
applications that do not use Direct3D to communicate with DXGI.</para>
      <para>The Direct3D create device functions return a Direct3D device object. This Direct3D device object implements the <see cref="IUnknown" /> interface. You can query this Direct3D device object for the device's
corresponding <b>IDXGIDevice1</b> interface. To retrieve the <b>IDXGIDevice1</b>  interface of a Direct3D device, use the following code:</para>
      <code>IDXGIDevice1 * pDXGIDevice;
hr = g_pd3dDevice-&gt;QueryInterface(__uuidof(IDXGIDevice1), (void **)&amp;amp;amp;amp;amp;amp;pDXGIDevice);

</code>
      <para>
        <b>Windows Phone 8:
</b> This API is supported.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIDevice" />
  </member>
</doc>