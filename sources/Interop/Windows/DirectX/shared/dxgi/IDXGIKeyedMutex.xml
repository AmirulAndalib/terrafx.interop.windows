<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGIKeyedMutex.ReleaseSync">
    <summary>
      <para>Using a key, releases exclusive rendering access to a shared resource.</para>
    </summary>
    <param name="Key">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">UINT64</a></b></para>
      <para>A value that indicates which device to give access to. This method succeeds when the device that currently owns the surface calls the <b>ReleaseSync</b> method using the same value. This value can be any UINT64 value.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>Returns S_OK if successful.</para>
      <para>If the device attempted to release a keyed mutex that is not valid or owned by the device, <b>ReleaseSync</b> returns E_FAIL.</para>
    </returns>
    <remarks>
      <para>The <b>ReleaseSync</b> method releases a lock to a surface that is shared between multiple devices.  This method uses a key to determine which device currently has exclusive access to the surface.</para>
      <para>When a surface is created using the <b>D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX</b> value of the <see cref="D3D10_RESOURCE_MISC_FLAG" /> enumeration,
you must call the <see cref="IDXGIKeyedMutex.AcquireSync" /> method before rendering to the surface.  You must call the <b>ReleaseSync</b> method when you are done
rendering to a surface.</para>
      <para>After you call the <b>ReleaseSync</b> method, the shared resource is unset from the rendering pipeline.</para>
      <para>To acquire a reference to the keyed mutex object of a shared resource, call the <see cref="QueryInterface" /> method of the resource and pass in
the <b>UUID</b> of the <see cref="IDXGIKeyedMutex" /> interface.  For more information about acquiring this reference, see the following code example.</para>
      <h4>Examples</h4>
      <para>
        <b>Acquiring a Keyed Mutex</b>
      </para>
      <para>The following code example demonstrates how to acquire a lock to a shared resource and how to specify a key upon release.</para>
      <code>
// pDesc has already been set up with texture description.
pDesc.MiscFlags = D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX;

// Create a shared texture resource.
pD3D10DeviceD-&gt;CreateTexture2D(pDesc, NULL, pD3D10Texture);

// Acquire a reference to the keyed mutex.
pD3D10Texture-&gt;QueryInterface(_uuidof(IDXGIKeyedMutex), pDXGIKeyedMutex);

// Acquire a lock to the resource.
pDXGIKeyedMutex-&gt;AcquireSync(0, INFINITE);

// Release the lock and specify a key.
pDXGIKeyedMutex-&gt;ReleaseSync(1);

</code>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIKeyedMutex" />
    <seealso cref="IDXGIKeyedMutex.AcquireSync" />
  </member>
  <member name="IDXGIKeyedMutex">
    <summary>
      <para>Represents a keyed mutex, which allows exclusive access to a shared resource that is used by multiple devices.</para>
    </summary>
    <remarks>
      <para>The <see cref="IDXGIFactory1" /> is required to create a resource capable of supporting the <b>IDXGIKeyedMutex</b> interface.</para>
      <para>An <b>IDXGIKeyedMutex</b> should be retrieved for each device sharing a resource. In Direct3D 10.1, such a resource that is shared between two or more devices is created with the <see cref="D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX" />  flag. In Direct3D 11, such a resource that is shared between two or more devices is created with the <see cref="D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX" />  flag.</para>
      <para>For information about creating a keyed mutex, see the <see cref="IDXGIKeyedMutex.AcquireSync" /> method.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIDeviceSubObject" />
  </member>
</doc>