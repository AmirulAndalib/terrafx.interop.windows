<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGISwapChainMedia.CheckPresentDurationSupport">
    <summary>
      <para>Queries the graphics driver for a supported frame present duration corresponding to a custom refresh rate.</para>
    </summary>
    <param name="DesiredPresentDuration">
      <para>Indicates the frame duration to check. This value is the duration of one frame at the desired refresh rate, specified in hundreds of nanoseconds. For example, set this field to 167777 to check for 60 Hz refresh rate support.</para>
    </param>
    <param name="pClosestSmallerPresentDuration">
      <para>A variable that will be set to the closest supported frame present duration that's smaller than the requested value, or zero if the device does not support any lower duration.</para>
    </param>
    <param name="pClosestLargerPresentDuration">
      <para>A variable that will be set to the closest supported frame present duration that's larger than the requested value, or zero if the device does not support any higher duration.</para>
    </param>
    <returns>
      <para>This method returns S_OK on success, or a DXGI error code on failure.</para>
    </returns>
    <remarks>
      <para>If the DXGI output adapter does not support custom refresh rates (for example, an external display) then the display driver will set upper and lower bounds to (0, 0).</para>
    </remarks>
    <seealso cref="IDXGISwapChainMedia" />
  </member>
  <member name="IDXGISwapChainMedia.GetFrameStatisticsMedia">
    <summary>
      <para>Queries the system for a  <see cref="DXGI_FRAME_STATISTICS_MEDIA" /> structure that indicates whether a custom refresh rate is currently approved by the system.</para>
    </summary>
    <param name="pStats">
      <para>A <see cref="DXGI_FRAME_STATISTICS_MEDIA" /> structure indicating whether the system currently approves the custom refresh rate request.</para>
    </param>
    <returns>
      <para>This method returns S_OK on success, or a DXGI error code on failure.</para>
    </returns>
    <seealso cref="IDXGISwapChainMedia" />
  </member>
  <member name="IDXGISwapChainMedia.SetPresentDuration">
    <summary>
      <para>Requests a custom presentation duration (custom refresh rate).</para>
    </summary>
    <param name="Duration">
      <para>The custom presentation duration, specified in hundreds of nanoseconds.</para>
    </param>
    <returns>
      <para>This method returns S_OK on success, or a DXGI error code on failure.</para>
    </returns>
    <seealso cref="IDXGISwapChainMedia" />
  </member>
  <member name="IDXGISwapChainMedia">
    <summary>
      <para>This swap chain interface allows desktop media applications to request a seamless change to a specific refresh rate.</para>
      <para>For example, a media application presenting video at a typical framerate of 23.997 frames per second can request a custom refresh rate of 24 or 48 Hz to eliminate jitter. If the request is approved, the app starts presenting frames at the custom refresh rate immediately - without the typical 'mode switch' a user would experience when changing the refresh rate themselves by using the control panel.</para>
    </summary>
    <remarks>
      <para>Seamless changes to custom framerates can only be done on integrated panels. Custom frame rates cannot be applied to external displays. If the DXGI output adapter is attached to an external display then <see cref="CheckPresentDurationSupport" /> will return (0, 0) for upper and lower bounds, indicating that the device does not support seamless refresh rate changes.</para>
      <para>Custom refresh rates can be used when displaying video with a dynamic framerate. However, the refresh rate change should be kept imperceptible to the user. A best practice for keeping the refresh rate transition imperceptible  is to only set the custom framerate if the app determines it can present at that rate for least 5 seconds.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-interfaces">DXGI Interfaces</seealso>
    <seealso cref="IDXGIFactoryMedia" />
    <seealso cref="IUnknown" />
  </member>
</doc>