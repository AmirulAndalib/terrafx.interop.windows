<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGIResource1.CreateSharedHandle">
    <summary>Creates a handle to a shared resource. You can then use the returned handle with multiple Direct3D devices.</summary>
    <param name="pAttributes">
      <para>A pointer to a <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa379560(v=vs.85)">SECURITY_ATTRIBUTES</a>structure that contains two separate but related data members: an optional security descriptor, and a Boolean value that determines whether child processes can inherit the returned handle.</para>
      <para>Set this parameter to <b>NULL</b> if you want child processes that the application might create to not inherit the handle returned by<b>CreateSharedHandle</b>, and if you want the resource that is associated with the returned handle to get a default security descriptor.</para>
      <para>The <b>lpSecurityDescriptor</b> member of the structure specifies a<see cref="SECURITY_DESCRIPTOR" /> for the resource. Set this member to <b>NULL</b> if you want the runtime to assign a default security descriptor to the resource that is associated with the returned handle. The ACLs in the default security descriptor for the resource come from the primary or impersonation token of the creator. For more info, see <a href="https://docs.microsoft.com//windows/desktop/Sync/synchronization-object-security-and-access-rights">Synchronization Object Security and Access Rights</a>.</para>
    </param>
    <param name="dwAccess">
      <para>The requested access rights to the resource. In addition to the <a href="https://docs.microsoft.com//windows/desktop/SecAuthZ/generic-access-rights">generic access rights</a>, DXGI defines the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <b>DXGI_SHARED_RESOURCE_READ</b> ( 0x80000000L ) - specifies read access to the resource.</description>
        </item>
        <item>
          <description>
            <b>DXGI_SHARED_RESOURCE_WRITE</b>	( 1 ) - specifies write access to the resource.</description>
        </item>
      </list>You can combine these values by using a bitwise OR operation.</param>
    <param name="lpName">
      <para>The name of the resource to share. The name is limited to MAX_PATH characters. Name comparison is case sensitive.</para>
      <para>You will need the resource name if you call the <see cref="ID3D11Device1.OpenSharedResourceByName" /> method to access the shared resource by name. If you instead call the <see cref="ID3D11Device1.OpenSharedResource1" /> method to access the shared resource by handle, set this parameter to <b>NULL</b>.</para>
      <para>If <i>lpName</i> matches the name of an existing resource, <b>CreateSharedHandle</b> fails with <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NAME_ALREADY_EXISTS</a>. This occurs because these objects share the same namespace.</para>
      <para>The name can have a "Global" or "Local" prefix to explicitly create the object in the global or session namespace. The remainder of the name can contain any character except the backslash character (\). For more information, see<a href="https://docs.microsoft.com//windows/desktop/TermServ/kernel-object-namespaces">Kernel Object Namespaces</a>. Fast user switching is implemented using Terminal Services sessions. Kernel object names must follow the guidelines outlined for Terminal Services so that applications can support multiple users.</para>
      <para>The object can be created in a private namespace. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Sync/object-namespaces">Object Namespaces</a>.</para>
    </param>
    <param name="pHandle">A pointer to a variable that receives the NT HANDLE value to the resource to share. You can use this handle in calls to access the resource.</param>
    <returns>
      <para>Returns S_OK if successful; otherwise, returns one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if one of the parameters is invalid.</description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_NAME_ALREADY_EXISTS</a> if the supplied name of the resource to share is already associated with another resource.</description>
        </item>
        <item>
          <description>E_ACCESSDENIED if the object is being created in a protected namespace.</description>
        </item>
        <item>
          <description>E_OUTOFMEMORY if sufficient memory is not available to create the handle.</description>
        </item>
        <item>
          <description>Possibly other error codes that are described in the <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR</a> topic.</description>
        </item>
      </list>
      <b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>CreateSharedHandle</b> fails with E_NOTIMPL. For more info about the Platform Update for Windows 7, see <a href="https://docs.microsoft.com//windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</returns>
  </member>
  <member name="IDXGIResource1.CreateSubresourceSurface">
    <summary>Creates a subresource surface object.</summary>
    <param name="index">The index of the subresource surface object to enumerate.</param>
    <param name="ppSurface">The address of a pointer to a <see cref="IDXGISurface2" /> interface that represents the created subresource surface object at the position specified by the <i>index</i> parameter.</param>
    <returns>
      <para>Returns S_OK if successful; otherwise, returns one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/dxgi-error">DXGI_ERROR_INVALID_CALL</a> if the index is out of range or if the subresource is not a valid surface.</description>
        </item>
        <item>
          <description>E_OUTOFMEMORY if insufficient memory is available to create the subresource surface object.</description>
        </item>
      </list>A subresource is a valid surface if the original resource would have been a valid surface had its array size been equal to 1.</returns>
  </member>
  <member name="IDXGIResource1">
    <summary>An <b>IDXGIResource1</b> interface extends the <see cref="IDXGIResource" /> interface by adding support for creating a subresource surface object and for creating a handle to a shared resource.</summary>
  </member>
</doc>