<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DXGI_SCALING">
    <summary>
      <para>Identifies resize behavior when the back-buffer size does not match the size of the target output.</para>
    </summary>
    <remarks>
      <para>The DXGI_SCALING_NONE value is supported only for flip presentation model swap chains that you create with the <see cref="DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL" /> value. You pass these values in a call to <see cref="IDXGIFactory2.CreateSwapChainForHwnd" />, <see cref="IDXGIFactory2.CreateSwapChainForCoreWindow" />, or  <see cref="IDXGIFactory2.CreateSwapChainForComposition" />.</para>
      <para>DXGI_SCALING_ASPECT_RATIO_STRETCH will prefer to use a horizontal fill, otherwise it will use a vertical fill, using the following logic.</para>
      <code>float aspectRatio = backBufferWidth / float(backBufferHeight);

 // Horizontal fill
 float scaledWidth = outputWidth;
 float scaledHeight = outputWidth / aspectRatio;
 if (scaledHeight &gt;= outputHeight)
 {
   // Do vertical fill
   scaledWidth = outputHeight * aspectRatio;
   scaledHeight = outputHeight;
 }

 float offsetX = (outputWidth - scaledWidth) * 0.5f;
 float offsetY = (outputHeight - scaledHeight) * 0.5f;

 rect.left = static_cast&lt;LONG&gt;(offsetX);
 rect.top = static_cast&lt;LONG&gt;(offsetY);
 rect.right = static_cast&lt;LONG&gt;(offsetX + scaledWidth);
 rect.bottom = static_cast&lt;LONG&gt;(offsetY + scaledHeight);

 rect.left = std.max&lt;LONG&gt;(0, rect.left);
 rect.top = std.max&lt;LONG&gt;(0, rect.top);
 rect.right = std.min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputWidth), rect.right);
 rect.bottom = std.min&lt;LONG&gt;(static_cast&lt;LONG&gt;(outputHeight), rect.bottom);

</code>
      <para>Note that <i>outputWidth</i> and <i>outputHeight</i> are the pixel sizes of the presentation target size. In the case of <b>CoreWindow</b>, this requires converting the <i>logicalWidth</i> and <i>logicalHeight</i> values from DIPS to pixels using the window's DPI property.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3ddxgi/d3d10-graphics-reference-dxgi-enums">DXGI Enumerations</seealso>
    <seealso cref="DXGI_SWAP_CHAIN_DESC1" />
  </member>
  <member name="DXGI_SCALING.DXGI_SCALING_STRETCH">
    <summary>
      <para>Directs DXGI to make the back-buffer contents scale to fit the presentation target size. This is the implicit behavior of DXGI when you call the <see cref="IDXGIFactory.CreateSwapChain" /> method.</para>
    </summary>
  </member>
  <member name="DXGI_SCALING.DXGI_SCALING_NONE">
    <summary>
      <para>Directs DXGI to make the back-buffer contents appear without any scaling when the presentation target size is not equal to the back-buffer size. The top edges of the back buffer and presentation target are aligned together. If the WS_EX_LAYOUTRTL style is associated with the <a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a> handle to the target output window, the right edges of the back buffer and presentation target are aligned together; otherwise, the left edges are aligned together. All target area outside the back buffer is filled with window background color.</para>
      <para>This value specifies that all target areas outside the back buffer of a swap chain are filled with the background color that you specify in a call to <see cref="IDXGISwapChain1.SetBackgroundColor" />.</para>
    </summary>
  </member>
  <member name="DXGI_SCALING.DXGI_SCALING_ASPECT_RATIO_STRETCH">
    <summary>
      <para>Directs DXGI to make the back-buffer contents scale to fit the presentation target size, while preserving the aspect ratio of the back-buffer. If the scaled back-buffer does not fill the presentation area, it will be centered with black borders.</para>
      <para>This constant is supported on Windows Phone 8 and Windows 10.</para>
      <para>Note that with legacy Win32 window swapchains, this works the same as DXGI_SCALING_STRETCH.</para>
    </summary>
  </member>
</doc>