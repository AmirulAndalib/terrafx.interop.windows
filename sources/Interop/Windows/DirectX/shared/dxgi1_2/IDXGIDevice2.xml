<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXGIDevice2.EnqueueSetEvent">
    <summary>Flushes any outstanding rendering commands and sets the specified event object to the signaled state after all previously submitted rendering commands complete.</summary>
    <param name="hEvent">
      <para>A handle to the event object. The <see cref="CreateEvent" /> or <see cref="OpenEvent" /> function returns this handle. All types of event objects (manual-reset, auto-reset, and so on) are supported.</para>
      <para>The handle must have the EVENT_MODIFY_STATE access right. For more information about access rights, see <a href="https://docs.microsoft.com//windows/desktop/Sync/synchronization-object-security-and-access-rights">Synchronization Object Security and Access Rights</a>.</para>
    </param>
    <returns>
      <para>Returns <b>S_OK</b> if successful; otherwise, returns one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <b>E_OUTOFMEMORY</b> if insufficient memory is available to complete the operation.</description>
        </item>
        <item>
          <description>
            <b>E_INVALIDARG</b> if the parameter was validated and determined to be incorrect.</description>
        </item>
      </list>
      <b>Platform Update for Windows 7:  </b>On Windows 7 or Windows Server 2008 R2 with the <a href="https://support.microsoft.com/help/2670838">Platform Update for Windows 7</a> installed, <b>EnqueueSetEvent</b> fails with E_NOTIMPL. For more info about the Platform Update for Windows 7, see <a href="https://docs.microsoft.com//windows/desktop/direct3darticles/platform-update-for-windows-7">Platform Update for Windows 7</a>.</returns>
  </member>
  <member name="IDXGIDevice2.OfferResources">
    <summary>Allows the operating system to free the video memory of resources by discarding their content.</summary>
    <param name="NumResources">The number of resources in the <i>ppResources</i> argument array.</param>
    <param name="ppResources">An array of pointers to <see cref="IDXGIResource" /> interfaces for the resources to offer.</param>
    <param name="Priority">A <see cref="DXGI_OFFER_RESOURCE_PRIORITY" />-typed value that indicates how valuable data is.</param>
    <returns>
      <para>
        <b>OfferResources</b> returns:</para>
      <list type="bullet">
        <item>
          <description>S_OK if resources were successfully offered</description>
        </item>
        <item>
          <description>E_INVALIDARG if a resource in the array or the priority is invalid</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="IDXGIDevice2.ReclaimResources">
    <summary>Restores access to resources that were previously offered by calling <see cref="IDXGIDevice2.OfferResources" />.</summary>
    <param name="NumResources">The number of resources in the <i>ppResources</i> argument and <i>pDiscarded</i> argument arrays.</param>
    <param name="ppResources">An array of pointers to <see cref="IDXGIResource" /> interfaces for the resources to reclaim.</param>
    <param name="pDiscarded">A pointer to an array that receives Boolean values. Each value in the array corresponds to a resource at the same index that the <i>ppResources</i> parameter specifies. The runtime sets each Boolean value to TRUE if the corresponding resource’s content was discarded and is now undefined, or to FALSE if the corresponding resource’s old content is still intact. The caller can pass in <b>NULL</b>, if the caller intends to fill the resources with new content regardless of whether the old content was discarded.</param>
    <returns>
      <para>
        <b>ReclaimResources</b> returns:</para>
      <list type="bullet">
        <item>
          <description>S_OK if resources were successfully reclaimed</description>
        </item>
        <item>
          <description>E_INVALIDARG if the resources are invalid</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="IDXGIDevice2">
    <summary>The <b>IDXGIDevice2</b> interface implements a derived class for DXGI objects that produce image data. The interface exposes methods to block CPU processing until the GPU completes processing, and to offer resources to the operating system.</summary>
  </member>
</doc>