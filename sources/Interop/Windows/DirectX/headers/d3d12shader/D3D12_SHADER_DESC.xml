<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_SHADER_DESC">
    <summary>
      <para>Describes a shader.</para>
    </summary>
    <remarks>
      <para>A shader is written in HLSL and compiled into an intermediate language by the HLSL compiler.
The shader description returns information about the compiled shader.
To get a shader description, call <see cref="ID3D12ShaderReflection.GetDesc" />.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/d3d12-graphics-reference-shader-structures">Shader Structures</seealso>
  </member>
  <member name="D3D12_SHADER_DESC.Version">
    <summary>
      <para>The Shader version, as an encoded UINT that corresponds to a shader model, such as "ps_5_0".
<b>Version</b> describes the program type, a major version number, and a minor version number.
The program type is a <see cref="D3D12_SHADER_VERSION_TYPE" /> enumeration constant.
<b>Version</b> is decoded in the following way:</para>
      <list type="bullet">
        <item>
          <description>Program type = (Version &amp; 0xFFFF0000) &gt;&gt; 16</description>
        </item>
        <item>
          <description>Major version = (Version &amp; 0x000000F0) &gt;&gt; 4</description>
        </item>
        <item>
          <description>Minor version = (Version &amp; 0x0000000F)</description>
        </item>
      </list>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.Creator">
    <summary>
      <para>The name of the originator of the shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.Flags">
    <summary>
      <para>Shader compilation/parse flags.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.ConstantBuffers">
    <summary>
      <para>The number of shader-constant buffers.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.BoundResources">
    <summary>
      <para>The number of resource (textures and buffers) bound to a shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.InputParameters">
    <summary>
      <para>The number of parameters in the input signature.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.OutputParameters">
    <summary>
      <para>The number of parameters in the output signature.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.InstructionCount">
    <summary>
      <para>The number of intermediate-language instructions in the compiled shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TempRegisterCount">
    <summary>
      <para>The number of temporary registers in the compiled shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TempArrayCount">
    <summary>
      <para>Number of temporary arrays used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.DefCount">
    <summary>
      <para>Number of constant defines.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.DclCount">
    <summary>
      <para>Number of declarations (input + output).</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TextureNormalInstructions">
    <summary>
      <para>Number of non-categorized texture instructions.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TextureLoadInstructions">
    <summary>
      <para>Number of texture load instructions</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TextureCompInstructions">
    <summary>
      <para>Number of texture comparison instructions</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TextureBiasInstructions">
    <summary>
      <para>Number of texture bias instructions</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TextureGradientInstructions">
    <summary>
      <para>Number of texture gradient instructions.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.FloatInstructionCount">
    <summary>
      <para>Number of floating point arithmetic instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.IntInstructionCount">
    <summary>
      <para>Number of signed integer arithmetic instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.UintInstructionCount">
    <summary>
      <para>Number of unsigned integer arithmetic instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.StaticFlowControlCount">
    <summary>
      <para>Number of static flow control instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.DynamicFlowControlCount">
    <summary>
      <para>Number of dynamic flow control instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.MacroInstructionCount">
    <summary>
      <para>Number of macro instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.ArrayInstructionCount">
    <summary>
      <para>Number of array instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.CutInstructionCount">
    <summary>
      <para>Number of cut instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.EmitInstructionCount">
    <summary>
      <para>Number of emit instructions used.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.GSOutputTopology">
    <summary>
      <para>The <see cref="D3D_PRIMITIVE_TOPOLOGY" />-typed value that represents the geometry shader output topology.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.GSMaxOutputVertexCount">
    <summary>
      <para>Geometry shader maximum output vertex count.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.InputPrimitive">
    <summary>
      <para>The <see cref="D3D_PRIMITIVE" />-typed value that represents the input primitive for a  geometry shader or hull shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.PatchConstantParameters">
    <summary>
      <para>Number of parameters in the patch-constant signature.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.cGSInstanceCount">
    <summary>
      <para>Number of geometry shader instances.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.cControlPoints">
    <summary>
      <para>Number of control points in the hull shader and domain shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.HSOutputPrimitive">
    <summary>
      <para>The <see cref="D3D_TESSELLATOR_OUTPUT_PRIMITIVE" />-typed value that represents the tessellator output-primitive type.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.HSPartitioning">
    <summary>
      <para>The <see cref="D3D_TESSELLATOR_PARTITIONING" />-typed value that represents the tessellator partitioning mode.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.TessellatorDomain">
    <summary>
      <para>The <see cref="D3D_TESSELLATOR_DOMAIN" />-typed value that represents the tessellator domain.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.cBarrierInstructions">
    <summary>
      <para>Number of barrier instructions in a compute shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.cInterlockedInstructions">
    <summary>
      <para>Number of interlocked instructions in a compute shader.</para>
    </summary>
  </member>
  <member name="D3D12_SHADER_DESC.cTextureStoreInstructions">
    <summary>
      <para>Number of texture writes in a compute shader.</para>
    </summary>
  </member>
</doc>