<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12PipelineLibrary1.LoadPipeline">
    <summary>
      <para>Retrieves the requested PSO from the library. The pipeline stream description is matched against the library database and remembered in order to prevent duplication of PSO contents.</para>
    </summary>
    <param name="pName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>
        <a href="https://docs.microsoft.com//cpp/code-quality/annotating-function-parameters-and-return-values">SAL</a>: <code><i>In</i></code></para>
      <para>The unique name of the PSO.</para>
    </param>
    <param name="pDesc">
      <para>Type: <b>const <see cref="D3D12_PIPELINE_STATE_STREAM_DESC" />*</b></para>
      <para>
        <a href="https://docs.microsoft.com//cpp/code-quality/annotating-function-parameters-and-return-values">SAL</a>: <code><i>In</i></code></para>
      <para>Describes the required PSO using a <see cref="D3D12_PIPELINE_STATE_STREAM_DESC" /> structure. This description is matched against the library database and stored in order to prevent duplication of PSO contents.</para>
    </param>
    <param name="riid">
      <para>Type: <b>REFIID</b></para>
      <para>Specifies a REFIID for the ID3D12PipelineStateState object.</para>
      <para>Applications should typically set this argument and the following argument, ppPipelineState, by using the macro IID_PPV_ARGS(&amp;PSO1), where PSO1 is the name of the object.</para>
    </param>
    <param name="ppPipelineState">
      <para>Type: <b>void**</b></para>
      <para>
        <a href="https://docs.microsoft.com//cpp/code-quality/annotating-function-parameters-and-return-values">SAL</a>: <code><i>COM_Outptr</i></code></para>
      <para>Specifies the pointer that will reference the PSO after the function successfully returns.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a></b></para>
      <para>This method returns an HRESULT success or error code, which can include E_INVALIDARG if the name doesn't exist or the stream description doesn't match the data in the library, and E_OUTOFMEMORY if the function is unable to allocate the resulting PSO.</para>
    </returns>
    <remarks>
      <para>This function takes the pipeline description as a <see cref="D3D12_PIPELINE_STATE_STREAM_DESC" /> and is a replacement for the <see cref="ID3D12PipelineLibrary.LoadGraphicsPipeline" /> and <see cref="ID3D12PipelineLibrary.LoadComputePipeline" /> functions, which take their pipeline description as the less-flexible <see cref="D3D12_GRAPHICS_PIPELINE_STATE_DESC" /> and <see cref="D3D12_COMPUTE_PIPELINE_STATE_DESC" /> structs, respectively.</para>
    </remarks>
    <seealso cref="D3D12_PIPELINE_STATE_STREAM_DESC" />
    <seealso cref="ID3D12PipelineLibrary1" />
  </member>
  <member name="ID3D12PipelineLibrary1">
    <summary>
      <para>Manages a pipeline library. This interface extends <see cref="ID3D12PipelineLibrary" /> to load PSOs from a pipeline state stream description.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-interfaces">Core Interfaces</seealso>
    <seealso cref="ID3D12PipelineLibrary" />
  </member>
</doc>