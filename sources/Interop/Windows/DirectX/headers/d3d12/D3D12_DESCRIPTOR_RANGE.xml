<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_DESCRIPTOR_RANGE">
    <summary>Describes a descriptor range.</summary>
  </member>
  <member name="D3D12_DESCRIPTOR_RANGE.RangeType">
    <summary>A <see cref="D3D12_DESCRIPTOR_RANGE_TYPE" />-typed value that specifies the type of descriptor range.</summary>
  </member>
  <member name="D3D12_DESCRIPTOR_RANGE.NumDescriptors">
    <summary>The number of descriptors in the range. Use -1 or UINT_MAX to specify an unbounded size. If a given descriptor range is unbounded, then it must either be the last range in the table definition, or else the following range in the table definition must have a value for <i>OffsetInDescriptorsFromTableStart</i> that is not .</summary>
  </member>
  <member name="D3D12_DESCRIPTOR_RANGE.BaseShaderRegister">
    <summary>The base shader register in the range. For example, for shader-resource views (SRVs), 3 maps to ": register(t3);" in HLSL.</summary>
  </member>
  <member name="D3D12_DESCRIPTOR_RANGE.RegisterSpace">
    <summary>The register space. Can typically be 0, but allows multiple descriptor arrays of unknown size to not appear to overlap. For example, for SRVs, by extending the example in the <b>BaseShaderRegister</b> member description, 5 maps to ": register(t3,space5);" in HLSL.</summary>
  </member>
  <member name="D3D12_DESCRIPTOR_RANGE.OffsetInDescriptorsFromTableStart">
    <summary>The offset in descriptors, from the start of the descriptor table which was set as the root argument value for this parameter slot. This value can be <b>D3D12_DESCRIPTOR_RANGE_OFFSET_APPEND</b>, which indicates this range should immediately follow the preceding range.</summary>
  </member>
</doc>