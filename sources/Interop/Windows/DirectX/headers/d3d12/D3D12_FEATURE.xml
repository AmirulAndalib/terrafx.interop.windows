<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_FEATURE">
    <summary>Defines constants that specify a Direct3D 12 feature or feature set to query about. When you want to query for the level to which an adapter supports a feature, pass one of these values to <see cref="ID3D12Device.CheckFeatureSupport" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS">
    <summary>Indicates a query for the level of support for basic Direct3D 12 feature options. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_ARCHITECTURE">
    <summary>
      <para>Indicates a query for the adapter's architectural details, so that your application can better optimize for certain adapter properties. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_ARCHITECTURE" />.</para>
      <div>
        <b>Note</b>  This value has been superseded by the <b>D3D_FEATURE_DATA_ARCHITECTURE1</b> value. If your application targets Windows 10, version 1703 (Creators' Update) or higher, then use the <b>D3D_FEATURE_DATA_ARCHITECTURE1</b> value instead.</div>
    </summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_FEATURE_LEVELS">
    <summary>Indicates a query for info about the <a href="https://docs.microsoft.com//windows/win32/direct3d11/overviews-direct3d-11-devices-downlevel-intro">feature levels</a> supported. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_FEATURE_LEVELS" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_FORMAT_SUPPORT">
    <summary>Indicates a query for the resources supported by the current graphics driver for a given format. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_FORMAT_SUPPORT" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS">
    <summary>Indicates a query for the image quality levels for a given format and sample count. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_FORMAT_INFO">
    <summary>Indicates a query for the DXGI data format. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_FORMAT_INFO" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_GPU_VIRTUAL_ADDRESS_SUPPORT">
    <summary>Indicates a query for the GPU's virtual address space limitations. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_GPU_VIRTUAL_ADDRESS_SUPPORT" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_SHADER_MODEL">
    <summary>Indicates a query for the supported shader model. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_SHADER_MODEL" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS1">
    <summary>Indicates a query for the level of support for HLSL 6.0 wave operations. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS1" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_SUPPORT">
    <summary>Indicates a query for the level of support for protected resource sessions. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_SUPPORT" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_ROOT_SIGNATURE">
    <summary>Indicates a query for root signature version support. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_ROOT_SIGNATURE" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_ARCHITECTURE1">
    <summary>
      <para>Indicates a query for each adapter's architectural details, so that your application can better optimize for certain adapter properties. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_ARCHITECTURE1" />.</para>
      <div>
        <b>Note</b>  This value supersedes the <b>D3D_FEATURE_DATA_ARCHITECTURE</b> value. If your application targets Windows 10, version 1703 (Creators' Update) or higher, then use <b>D3D_FEATURE_DATA_ARCHITECTURE1</b>.</div>
    </summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS2">
    <summary>Indicates a query for the level of support for depth-bounds tests and programmable sample positions. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS2" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_SHADER_CACHE">
    <summary>Indicates a query for the level of support for shader caching. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_SHADER_CACHE" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_COMMAND_QUEUE_PRIORITY">
    <summary>Indicates a query for the adapter's support for prioritization of different command queue types. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_COMMAND_QUEUE_PRIORITY" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS3">
    <summary>Indicates a query for the level of support for timestamp queries, format-casting, immediate write, view instancing, and barycentrics. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS3" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_EXISTING_HEAPS">
    <summary>Indicates a query for whether or not the adapter supports creating heaps from existing system memory. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_EXISTING_HEAPS" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS4">
    <summary>Indicates a query for the level of support for 64KB-aligned MSAA textures, cross-API sharing, and native 16-bit shader operations. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS4" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_SERIALIZATION">
    <summary>Indicates a query for the level of support for heap serialization. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_SERIALIZATION" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_CROSS_NODE">
    <summary>Indicates a query for the level of support for the sharing of resources between different adapters—for example, multiple GPUs. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_CROSS_NODE" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS5">
    <summary>Starting with Windows 10, version 1809 (10.0; Build 17763), indicates a query for the level of support for render passes, ray tracing, and shader-resource view tier 3 tiled resources. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS5" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_DISPLAYABLE">
    <summary>Starting with Windows 11 (Build 10.0.22000.194). The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_DISPLAYABLE" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS6">
    <summary>
      <para>Starting with Windows 10, version 1903 (10.0; Build 18362), indicates a query for the level of support for variable-rate shading (VRS), and indicates whether or not background processing is supported. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS6" />.</para>
      <para>For more info, see <a href="https://docs.microsoft.com//windows/win32/direct3d12/vrs">Variable-rate shading (VRS)</a>, and the <a href="https://microsoft.github.io/directx-specs/d3d/backgroundprocessing.html">Direct3D 12 background processing spec</a>.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_QUERY_META_COMMAND">
    <summary>Indicates a query for the level of support for metacommands. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_QUERY_META_COMMAND" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS7">
    <summary>
      <para>Starting with Windows 10, version 2004 (10.0; Build 19041), indicates a query for the level of support for mesh and amplification shaders, and for sampler feedback. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS7" />.</para>
      <para>For more info, see the <a href="https://microsoft.github.io/directx-specs/d3d/meshshader.html">Mesh shader</a> and <a href="https://microsoft.github.io/directx-specs/d3d/samplerfeedback.html">Sampler feedback</a> specs.</para>
    </summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT">
    <summary>Starting with Windows 10, version 2004 (10.0; Build 19041), indicates a query to retrieve the count of protected resource session types. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPE_COUNT" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES">
    <summary>Starting with Windows 10, version 2004 (10.0; Build 19041), indicates a query to retrieve the list of protected resource session types. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_PROTECTED_RESOURCE_SESSION_TYPES" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS8">
    <summary>Starting with Windows 11 (Build 10.0.22000.194), indicates whether or not unaligned block-compressed textures are supported. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS8" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS9">
    <summary>Starting with Windows 11 (Build 10.0.22000.194), indicates whether or not support exists for mesh shaders, values of <i>SV_RenderTargetArrayIndex</i> that are 8 or greater, typed resource 64-bit integer atomics, derivative and derivative-dependent texture sample operations, and the level of support for WaveMMA (wave_matrix) operations. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS9" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS10">
    <summary>Starting with Windows 11 (Build 10.0.22000.194), indicates whether or not the SUM combiner can be used, and whether or not <i>SV_ShadingRate</i> can be set from a mesh shader. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS10" />.</summary>
  </member>
  <member name="D3D12_FEATURE.D3D12_FEATURE_D3D12_OPTIONS11">
    <summary>Starting with Windows 11 (Build 10.0.22000.194), indicates whether or not 64-bit integer atomics on resources in descriptor heaps are supported. The corresponding data structure for this value is <see cref="D3D12_FEATURE_DATA_D3D12_OPTIONS11" />.</summary>
  </member>
</doc>