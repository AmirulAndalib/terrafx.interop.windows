<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_RAYTRACING_GEOMETRY_FLAGS">
    <summary>
      <para>Specifies flags for raytracing geometry in a <see cref="D3D12_RAYTRACING_GEOMETRY_DESC" /> structure.</para>
    </summary>
  </member>
  <member name="D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_NONE">
    <summary>
      <para>No options specified.</para>
    </summary>
  </member>
  <member name="D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE">
    <summary>
      <para>When rays encounter this geometry, the geometry acts as if no any hit shader is present.  It is recommended that apps use this flag liberally, as it can enable important ray-processing optimizations.  Note that this behavior can be overridden on a per-instance basis with <see cref="D3D12_RAYTRACING_INSTANCE_FLAGS" /> and on a per-ray basis using ray flags in <b>TraceRay</b>.</para>
    </summary>
  </member>
  <member name="D3D12_RAYTRACING_GEOMETRY_FLAGS.D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION">
    <summary>
      <para>By default, the system is free to trigger an any hit shader more than once for a given ray-primitive intersection. This flexibility helps improve the traversal efficiency of acceleration structures in certain cases.  For instance, if the acceleration structure is implemented internally with bounding volumes, the implementation may find it beneficial to store relatively long triangles in multiple bounding boxes rather than a larger single box. However, some application use cases require that intersections be reported to the any hit shader at most once. This flag enables that guarantee for the given geometry, potentially with some performance impact.</para>
      <para>This flag applies to all geometry types.</para>
    </summary>
  </member>
</doc>