<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="D3D12_STATIC_SAMPLER_DESC">
    <summary>
      <para>Describes a static sampler.</para>
    </summary>
    <remarks>
      <para>Use this structure with the <see cref="D3D12_ROOT_SIGNATURE_DESC" /> structure.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/cd3dx12-static-sampler-desc">CD3DX12_STATIC_SAMPLER_DESC</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-structures">Core Structures</seealso>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.Filter">
    <summary>
      <para>The filtering method to use when sampling a texture, as a <see cref="D3D12_FILTER" /> enumeration constant.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.AddressU">
    <summary>
      <para>Specifies the <see cref="D3D12_TEXTURE_ADDRESS_MODE" /> mode to use for resolving a <i>u</i> texture coordinate that is outside the 0 to 1 range.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.AddressV">
    <summary>
      <para>Specifies the <see cref="D3D12_TEXTURE_ADDRESS_MODE" /> mode to use for resolving a <i>v</i> texture coordinate that is outside the 0 to 1 range.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.AddressW">
    <summary>
      <para>Specifies the <see cref="D3D12_TEXTURE_ADDRESS_MODE" /> mode to use for resolving a <i>w</i> texture coordinate that is outside the 0 to 1 range.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.MipLODBias">
    <summary>
      <para>Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.MaxAnisotropy">
    <summary>
      <para>Clamping value used if D3D12_FILTER_ANISOTROPIC or D3D12_FILTER_COMPARISON_ANISOTROPIC is specified as the filter. Valid values are between 1 and 16.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.ComparisonFunc">
    <summary>
      <para>A function that compares sampled data against existing sampled data.
The function options are listed in <see cref="D3D12_COMPARISON_FUNC" />.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.BorderColor">
    <summary>
      <para>One member of <see cref="D3D12_STATIC_BORDER_COLOR" />, the border color to use if D3D12_TEXTURE_ADDRESS_MODE_BORDER is specified for AddressU, AddressV, or AddressW.
Range must be between 0.0 and 1.0 inclusive.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.MinLOD">
    <summary>
      <para>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.MaxLOD">
    <summary>
      <para>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D12_FLOAT32_MAX.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.ShaderRegister">
    <summary>
      <para>The <i>ShaderRegister</i> and <i>RegisterSpace</i> parameters correspond to the binding syntax of HLSL.  For example, in HLSL:</para>
      <code>Texture2D&lt;float4&gt; a : register(t2, space3);
</code>
      <para>This corresponds to a  <i>ShaderRegister</i> of 2 (indicating the type is SRV), and <i>RegisterSpace</i> is 3.</para>
      <para>The  <i>ShaderRegister</i> and <i>RegisterSpace</i> pair is needed to establish correspondence between shader resources and runtime heap descriptors, using the root signature data structure.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.RegisterSpace">
    <summary>
      <para>See the description for <i>ShaderRegister</i>.
Register space is optional; the default register space is 0.</para>
    </summary>
  </member>
  <member name="D3D12_STATIC_SAMPLER_DESC.ShaderVisibility">
    <summary>
      <para>Specifies the visibility of the sampler to the pipeline shaders, one member of <see cref="D3D12_SHADER_VISIBILITY" />.</para>
    </summary>
  </member>
</doc>