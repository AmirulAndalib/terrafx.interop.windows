<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IDXCoreAdapter.GetFactory">
    <summary>Retrieves an <see cref="IDXCoreAdapterFactory" /> interface pointer to the DXCore adapter factory object. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <param name="riid">A reference to the globally unique identifier (GUID) of the interface that you wish to be returned in <i>ppvFactory</i>. This is expected to be the interface identifier (IID) of <see cref="IDXCoreAdapterFactory" />.</param>
    <param name="ppvFactory">The address of a pointer to an interface with the IID specified in the <i>riid</i> parameter. Upon successful return, <i>*ppvFactory</i> (the dereferenced address) contains a pointer to the existing DXCore adapter factory object. Before returning, the function increments the reference count on the factory object's <see cref="IDXCoreAdapterFactory" /> interface.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |E_NOINTERFACE|An invalid value was provided for <i>riid</i>.| |E_POINTER|<code>nullptr</code> was provided for <i>ppvFactory</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapter.GetProperty">
    <summary>Retrieves the value of the specified adapter property. Before calling <b>GetProperty</b> for a property type, call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS). Also before calling <b>GetProperty</b>, call <see cref="GetPropertySize" /> to determine the necessary size of the buffer in which to receive the property value.</summary>
    <param name="bufferSize">The size, in bytes, of the output buffer that you allocate and provide in <i>propertyData</i>.</param>
    <param name="propertyData">A pointer to an output buffer that you allocate in your application, and that the function fills in. Call <see cref="GetPropertySize" /> to determine the size that the <i>propertyData</i> buffer should be for a given adapter property.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_INVALID_CALL|The property type specified in <i>property</i> is not recognized by this operating system (OS). Call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS).| |DXGI_ERROR_UNSUPPORTED|The property type specified in <i>property</i> is not supported by the adapter. Call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS).| |E_INVALIDARG|An insufficient buffer size is provided in <i>propertyData</i>. Call <see cref="GetPropertySize" /> to determine the size that the <i>propertyData</i> buffer should be for a given adapter property.| |E_POINTER|<code>nullptr</code> was provided for <i>propertyData</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapter.GetPropertySize">
    <summary>For a specified adapter property, retrieves the size of buffer, in bytes, that is required for a call to <see cref="GetProperty" />. Before calling <b>GetPropertySize</b> for a property type, call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS).</summary>
    <param name="bufferSize">A pointer to a <b>size_t</b> value. The function dereferences the pointer and sets the value to the size, in bytes, of the output buffer that you should allocate and pass as the <i>propertyData</i> argument in your call to <see cref="GetProperty" />.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_INVALID_CALL|The property type specified in <i>property</i> is not recognized by this operating system (OS). Call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS).| |DXGI_ERROR_UNSUPPORTED|The property type specified in <i>property</i> is not supported by the adapter. Call <see cref="IsPropertySupported" /> to confirm that the property type is available for this adapter and operating system (OS).| |E_POINTER|<code>nullptr</code> was provided for <i>bufferSize</i>.|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapter.IsAttributeSupported">
    <summary>Determines whether this DXCore adapter object supports the specified adapter attribute.</summary>
    <returns>Returns <code>true</code> if this DXCore adapter object supports the specified adapter attribute. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapter.IsPropertySupported">
    <summary>Determines whether this DXCore adapter object and the current operating system (OS) support the specified adapter property.</summary>
    <returns>Returns <code>true</code> if this DXCore adapter object and the current operating system (OS) support the specified adapter property. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapter.IsQueryStateSupported">
    <summary>Determines whether this DXCore adapter object and the current operating system (OS) support querying the value of the specified adapter state.</summary>
    <param name="state">The kind of state item that you're querying about support for. See the table in <see cref="DXCoreAdapterState" /> for more info about each adapter state kind.</param>
    <returns>Returns <code>true</code> if this DXCore adapter object and the current operating system (OS) support querying the specified adapter state. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapter.IsSetStateSupported">
    <summary>Determines whether this DXCore adapter object and the current operating system (OS) support setting the value of the specified adapter state.</summary>
    <param name="state">The kind of state item that you're querying about support for. See the table in <see cref="DXCoreAdapterState" /> for more info about each adapter state kind.</param>
    <returns>Returns <code>true</code> if this DXCore adapter object and the current operating system (OS) support setting the specified adapter state. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapter.IsValid">
    <summary>Determines whether this DXCore adapter object is still valid. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
    <returns>Returns <code>true</code> if this DXCore adapter object is still valid. Otherwise, returns <code>false</code>.</returns>
  </member>
  <member name="IDXCoreAdapter.QueryState">
    <summary>Retrieves the current state of the specified item on the adapter. Before calling <b>QueryState</b> for a property type, call <see cref="IsQueryStateSupported" /> to confirm that querying the state kind is available for this adapter and operating system (OS).</summary>
    <param name="inputStateDetailsSize">The size, in bytes, of the input state details buffer that you (optionally) allocate and provide in <i>inputStateDetails</i>.</param>
    <param name="inputStateDetails">An optional pointer to a constant input state details buffer that you allocate in your application, containing any information about your request that's required for the state kind you specify in <i>state</i>. See the table in <see cref="DXCoreAdapterState" /> for more info about any input buffer requirement for a given state kind.</param>
    <param name="outputBufferSize">The size, in bytes, of the output buffer that you allocate and provide in <i>outputBuffer</i>.</param>
    <param name="outputBuffer">A pointer to an output buffer that you allocate in your application, and that the function fills in. See the table in <see cref="DXCoreAdapterState" /> for more info about the output buffer requirement for a given state kind.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_DEVICE_REMOVED|The adapter is no longer in a valid state.| |DXGI_ERROR_INVALID_CALL|The state kind specified in <i>state</i> is not recognized by this operating system (OS). Call <see cref="IsQueryStateSupported" /> to confirm that querying the state kind is available for this adapter and operating system (OS).| |DXGI_ERROR_UNSUPPORTED|The state kind specified in <i>state</i> is not supported by the adapter. Call <see cref="IsQueryStateSupported" /> to confirm that querying the state kind is available for this adapter and operating system (OS).| |E_INVALIDARG|An insufficient buffer size is provided for <i>outputBuffer</i> (or for <i>inputStateDetails</i> where an input state details buffer is necessary).| |E_POINTER|<code>nullptr</code> was provided for <i>outputBuffer</i> (or for <i>inputStateDetails</i> where an input state details buffer is necessary).|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapter.SetState">
    <summary>Sets the state of the specified item on the adapter. Before calling <b>SetState</b> for a property type, call <see cref="IsSetStateSupported" /> to confirm that setting the state kind is available for this adapter and operating system (OS).</summary>
    <param name="inputStateDetailsSize">The size, in bytes, of the input state details buffer that you (optionally) allocate and provide in <i>inputStateDetails</i>.</param>
    <param name="inputStateDetails">An optional pointer to a constant input state details buffer that you allocate in your application, containing any information about your request that's required for the state kind you specify in <i>state</i>. See the table in <see cref="DXCoreAdapterState" /> for more info about any input buffer requirement for a given state kind.</param>
    <param name="inputDataSize">The size, in bytes, of the input buffer that you allocate and provide in <i>inputData</i>.</param>
    <param name="inputData">A pointer to an input buffer that you allocate in your application, containing the state information to set for the state item whose kind you specify in <i>state</i>. See the table in <see cref="DXCoreAdapterState" /> for more info about the input buffer requirement for a given state kind.</param>
    <returns>
      <para>If the function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <a href="https://docs.microsoft.com//windows/win32/com/structure-of-com-error-codes">HRESULT</a><a href="https://docs.microsoft.com//windows/win32/com/com-error-codes-10">error code</a>.</para>
      <para>|Return value|Description| |-|-| |DXGI_ERROR_DEVICE_REMOVED|The adapter is no longer in a valid state.| |DXGI_ERROR_INVALID_CALL|The state kind specified in <i>state</i> is not recognized by this operating system (OS). Call <see cref="IsSetStateSupported" /> to confirm that setting the state kind is available for this adapter and operating system (OS).| |DXGI_ERROR_UNSUPPORTED|The state kind specified in <i>state</i> is not supported by the adapter. Call <see cref="IsSetStateSupported" /> to confirm that setting the state kind is available for this adapter and operating system (OS).| |E_INVALIDARG|An insufficient buffer size is provided for <i>inputData</i> (or for <i>inputStateDetails</i> where an input state details buffer is necessary).| |E_POINTER|<code>nullptr</code> was provided for <i>inputData</i> (or for <i>inputStateDetails</i> where an input state details buffer is necessary).|</para>
    </returns>
  </member>
  <member name="IDXCoreAdapter">
    <summary>The <b>IDXCoreAdapter</b> interface implements methods for retrieving details about an adapter item. <b>IDXCoreAdapter</b> inherits from the <see cref="IUnknown" /> interface. For programming guidance, and code examples, see <a href="https://docs.microsoft.com//windows/win32/dxcore/dxcore-enum-adapters">Using DXCore to enumerate adapters</a>.</summary>
  </member>
</doc>