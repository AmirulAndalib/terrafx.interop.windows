<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ID3D12Debug3.SetEnableGPUBasedValidation">
    <summary>
      <para>This method enables or disables GPU-based validation (GBV) before creating a device with the debug layer enabled.</para>
    </summary>
    <param name="Enable">
      <para>Type: <b>BOOL</b></para>
      <para>TRUE to enable GPU-based validation, otherwise FALSE.</para>
    </param>
    <remarks>
      <para>GPU-based validation can be enabled/disabled only prior to creating a device. By default, GPU-based validation is disabled. To disable GPU-based validation after initially enabling it, the device must be fully released and recreated.</para>
      <para>For more information, see <a href="https://docs.microsoft.com//windows/win32/direct3d12/using-d3d12-debug-layer-gpu-based-validation">Using D3D12 Debug Layer GPU-based validation</a>.</para>
    </remarks>
    <seealso cref="ID3D12Debug3" />
  </member>
  <member name="ID3D12Debug3.SetEnableSynchronizedCommandQueueValidation">
    <summary>
      <para>Enables or disables dependent command queue synchronization when using a Direct3D 12 device with the debug layer enabled.</para>
    </summary>
    <param name="Enable">
      <para>Type: <b>BOOL</b></para>
      <para>TRUE to enable Dependent Command Queue Synchronization, otherwise FALSE.</para>
    </param>
    <remarks>
      <para>Dependent Command Queue Synchronization is a D3D12 Debug Layer feature that gives the debug layer the ability to track resource states more accurately when enabled. Dependent Command Queue Synchronization is enabled by default.</para>
      <para>When Dependent Command Queue Synchronization is enabled, the debug layer holds back actual submission of GPU work until all outstanding fence <see cref="Wait" /> conditions are met. This gives the debug layer the ability to make reasonable assumptions about GPU state (such as resource states) on the CPU-timeline when multiple command queues are potentially doing concurrent work.</para>
      <para>With Dependent Command Queue Synchronization disabled, all resource states tracked by the debug layer are cleared each time <see cref="ID3D12CommandQueue.Signal" /> is called. This results in significantly less useful resource state validation.</para>
      <para>Disabling Dependent Command Queue Synchronization may reduce some debug layer performance overhead when using multiple command queues. However, it is suggested to leave it enabled unless this overhead is problematic. Note that applications that use only a single command queue will see no performance changes with Dependent Command Queue Synchronization disabled.</para>
    </remarks>
    <seealso cref="ID3D12Debug3" />
  </member>
  <member name="ID3D12Debug3.SetGPUBasedValidationFlags">
    <summary>
      <para>This method configures the level of GPU-based validation that the debug device is to perform at runtime.</para>
    </summary>
    <param name="Flags">
      <para>Type: <b><see cref="D3D12_GPU_BASED_VALIDATION_FLAGS" /></b></para>
      <para>Specifies the level of GPU-based validation to perform at runtime.</para>
    </param>
    <remarks>
      <para>This method overrides the default behavior of GPU-based validation so it must be called before creating the D3D12 Device. These settings can't be changed or cancelled after the device is created. If you want to change the behavior of GPU-based validation at a later time, the device must be destroyed and recreated with different parameters.</para>
    </remarks>
    <seealso cref="ID3D12Debug3" />
  </member>
  <member name="ID3D12Debug3">
    <summary>
      <para>Adds configurable levels of GPU-based validation to the debug layer.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/direct3d12/direct3d-12-sdklayers-interfaces">Debug Layer Interfaces</seealso>
    <seealso cref="IUnknown" />
  </member>
</doc>