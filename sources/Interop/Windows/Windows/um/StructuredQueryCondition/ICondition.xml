<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICondition.Clone">
    <summary>Creates a deep copy of this <see cref="ICondition" /> object.</summary>
    <param name="ppc">Receives a pointer to the clone of this <see cref="ICondition" />.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICondition.GetComparisonInfo">
    <summary>Retrieves the property name, operation, and value from a leaf search condition node.</summary>
    <param name="ppszPropertyName">Receives the name of the property of the leaf condition as a Unicode string.</param>
    <param name="pcop">Receives the operation of the leaf condition as a <see cref="CONDITION_OPERATION" /> enumeration.</param>
    <param name="ppropvar">Receives the value of the leaf condition as a <see cref="PROPVARIANT" />.</param>
    <returns>Returns S_OK if successful, E_FAIL if this is not a leaf node, or an error value otherwise.</returns>
  </member>
  <member name="ICondition.GetConditionType">
    <summary>Retrieves the condition type for this search condition node, identifying it as a logical AND, OR, or NOT, or as a leaf node.</summary>
    <param name="pNodeType">Receives the <see cref="CONDITION_TYPE" /> enumeration for this node.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICondition.GetInputTerms">
    <summary>For a leaf node, <b>ICondition.GetInputTerms</b> retrieves information about what parts (or ranges) of the input string produced the property, the operation, and the value for the search condition node.</summary>
    <param name="ppPropertyTerm">Receives a pointer to an <see cref="IRichChunk" /> interface that provides information about what part of the input string produced the property of the leaf node, if that can be determined; otherwise, this parameter is set to <b>NULL</b>.</param>
    <param name="ppOperationTerm">Receives a pointer to an <see cref="IRichChunk" /> interface that provides information about what part of the input string produced the operation of the leaf node, if that can be determined; otherwise, this parameter is set to <b>NULL</b>.</param>
    <param name="ppValueTerm">Receives a pointer to an <see cref="IRichChunk" /> interface that provides information about what part of the input string produced the value of the leaf node, if that can be determined; otherwise, this parameter is set to <b>NULL</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICondition.GetSubConditions">
    <summary>Retrieves a collection of the subconditions of the search condition node and the IID of the interface for enumerating the collection.</summary>
    <param name="riid">The desired IID of the enumerating interface: either IID_IEnumUnknown, IID_IEnumVARIANT or (for a negation condition) IID_ICondition.</param>
    <param name="ppv">Receives a collection of zero or more <see cref="ICondition" /> objects. Each object is a subcondition of this condition node. If <i>riid</i> was IID_ICondition and this is a negation condition, this parameter receives the single subcondition.</param>
    <returns>Returns S_OK if successful, E_FAIL if this is a leaf node, or an error value otherwise.</returns>
  </member>
  <member name="ICondition.GetValueNormalization">
    <summary>Retrieves the character-normalized value of the search condition node.</summary>
    <param name="ppszNormalization">Receives a pointer to a Unicode string representation of the value.</param>
    <returns>Returns S_OK if successful, E_FAIL if this is not a leaf node, or an error value otherwise.</returns>
  </member>
  <member name="ICondition.GetValueType">
    <summary>Retrieves the semantic type of the value of the search condition node.</summary>
    <param name="ppszValueTypeName">Receives either a pointer to the semantic type of the value as a Unicode string or <b>NULL</b>.</param>
    <returns>Returns S_OK if successful, E_FAIL if this is not a leaf node, or an error value otherwise.</returns>
  </member>
  <member name="ICondition">
    <summary>Provides methods for retrieving information about a search condition. An <b>ICondition</b> object represents the result of parsing an input string (using methods such as <see cref="IQueryParser.Parse" /> or <see cref="IQuerySolution.GetQuery" />) into a tree of search condition nodes. A node can be a logical AND, OR, or NOT for comparing subnodes, or it can be a leaf node comparing a property and a constant value.</summary>
  </member>
</doc>