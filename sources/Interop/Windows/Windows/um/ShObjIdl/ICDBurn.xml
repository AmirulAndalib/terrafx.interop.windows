<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICDBurn.Burn">
    <summary>Instructs data to be copied from the staging area to a writable CD.</summary>
    <param name="hwnd">The handle of the parent window of the UI.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICDBurn.GetRecorderDriveLetter">
    <summary>Gets the drive letter of a CD drive that has been marked as write-enabled.</summary>
    <param name="pszDrive">A pointer to a string containing the drive letter, for example "F:".</param>
    <param name="cch">The size of the string, in characters, pointed to by pszDrive. This value will normally be 4. Values larger than 4 are allowed, but the extra characters will be ignored by this method. Values less than 4 will generate an E_INVALIDARG error.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICDBurn.HasRecordableDrive">
    <summary>Scans the system for a CD drive with write-capability, returning <b>TRUE</b> if one is found.</summary>
    <param name="pfHasRecorder">A pointer to a Boolean value containing <b>TRUE</b> if a suitable device is located, <b>FALSE</b> otherwise.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICDBurn">
    <summary>Exposes methods that determine whether a system has hardware for writing to CD, the drive letter of a CD writer device, and programmatically initiate a CD writing session.</summary>
  </member>
</doc>