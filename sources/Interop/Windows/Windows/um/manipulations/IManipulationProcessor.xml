<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IManipulationProcessor.CompleteManipulation">
    <summary>The <b>CompleteManipulation</b> method is called when the developer chooses to end the manipulation.</summary>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.GetAngularVelocity">
    <summary>The <b>GetAngularVelocity</b> method calculates the rotational velocity that the target object is moving at.</summary>
    <param name="angularVelocity">The calculated rotational velocity.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.GetExpansionVelocity">
    <summary>The <b>GetExpansionVelocity</b> method calculates the rate that the target object is expanding at.</summary>
    <param name="expansionVelocity">The rate of expansion.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.GetVelocityX">
    <summary>Calculates and returns the horizontal velocity for the target object.</summary>
    <param name="velocityX">The calculated horizontal velocity.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an HRESULT error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.GetVelocityY">
    <summary>Calculates and returns the vertical velocity.</summary>
    <param name="velocityY">The calculated vertical velocity.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an HRESULT error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.get_MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.ProcessDown">
    <summary>The <b>ProcessDown</b> method feeds touch down data to the manipulation processor associated with a target.</summary>
    <param name="manipulatorId">The identifier for the touch contact that you want to process.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.ProcessDownWithTime">
    <summary>Feeds touch down data, including a timestamp, to the manipulation processor associated with a target.</summary>
    <param name="manipulatorId">The identifier for the touch contact to be processed.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <param name="timestamp">The time of the data event.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an HRESULT error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.ProcessMove">
    <summary>The <b>ProcessMove</b> method feeds movement data for the target object to its manipulation processor.</summary>
    <param name="manipulatorId">The identifier for the touch contact that you want to process.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.ProcessMoveWithTime">
    <summary>Feeds movement data, including a time stamp, for the target object to its manipulation processor.</summary>
    <param name="manipulatorId">The identifier for the touch contact to be processed.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <param name="timestamp">The time of the data event.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an HRESULT error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.ProcessUp">
    <summary>The <b>ProcessUp</b> method feeds data to a target's manipulation processor for touch up sequences.</summary>
    <param name="manipulatorId">The identifier for the touch contact that you want to process.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.ProcessUpWithTime">
    <summary>Feeds data, including a timestamp, to a target's manipulation processor for touch-up sequences.</summary>
    <param name="manipulatorId">The identifier for the touch contact to be processed.</param>
    <param name="x">The horizontal coordinate data associated with the target.</param>
    <param name="y">The vertical coordinate data associated with the target.</param>
    <param name="timestamp">The time of the data event.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an HRESULT error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IManipulationProcessor.get_MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_MinimumScaleRotateRadius">
    <summary>
      <para>Specifies how large the distance contacts on a scale or rotate gesture need to be to trigger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotPointX">
    <summary>
      <para>The <b>PivotPointX</b> property is the horizontal center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotPointY">
    <summary>
      <para>The <b>PivotPointY</b> property is the vertical center of the object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_PivotRadius">
    <summary>
      <para>The <b>PivotRadius</b> property is used to determine how much rotation is used in single finger manipulation.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.get_SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.put_SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor.SupportedManipulations">
    <summary>
      <para>The <b>SupportedManipulations</b> property is used to indicate which manipulations are supported by an object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IManipulationProcessor">
    <summary>The IManipulationProcessor provides functionality for monitoring and responding to multitouch input.</summary>
  </member>
</doc>