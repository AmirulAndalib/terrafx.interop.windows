<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IInertiaProcessor.Complete">
    <summary>The <b>Complete</b> method finishes the current manipulation and stops inertia on the inertia processor.</summary>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IInertiaProcessor.CompleteTime">
    <summary>Finishes the current manipulation at the given tick, stops inertia on the inertia processor, and raises the <see cref="ManipulationCompleted" /> event.</summary>
    <param name="timestamp">A parameter containing a timestamp (in milliseconds) to process.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IInertiaProcessor.BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.Process">
    <summary>The <b>Process</b> method performs calculations and can raise the <b>Started</b>, <b>Delta</b>, or <b>Completed</b> event depending on whether extrapolation is completed or not. If extrapolation finished at the previous tick, the method is no-op.</summary>
    <param name="completed">Indicates whether an operation was performed. A value of false indicates extrapolation was finished at a previous tick and the operation was a no-op.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IInertiaProcessor.ProcessTime">
    <summary>The <b>ProcessTime</b> method performs calculations for the given tick and can raise the <b>Started</b>, <b>Delta</b>, or <b>Completed</b> event depending on whether extrapolation is completed or not. If extrapolation finished at the previous tick, the method is no-op.</summary>
    <param name="timestamp">A parameter that contains a timestamp (in millisecs) to process.</param>
    <param name="completed">Indicates whether an operation was performed. A value of false indicates extrapolation was finished at a previous tick and the operation was a no-op.</param>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IInertiaProcessor.BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryBottom">
    <summary>
      <para>The <b>BoundaryBottom</b> property limits how far towards the bottom of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryLeft">
    <summary>
      <para>The <b>BoundaryLeft</b> property limits how far towards the left of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryRight">
    <summary>
      <para>The <b>BoundaryRight</b> property limits how far towards the right of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_BoundaryTop">
    <summary>
      <para>The <b>BoundaryTop</b> property limits how far towards the top of the screen the target object can move.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredAngularDeceleration">
    <summary>
      <para>The <b>DesiredAngularDeceleration</b> property specifies the desired rate that the target object will stop spinning in radians per msec squared.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredDeceleration">
    <summary>
      <para>The <b>DesiredDeceleration</b> property specifies the desired rate at which translation operations will decelerate.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredDisplacement">
    <summary>
      <para>The <b>DesiredDisplacement</b> property specifies the desired distance that the object will travel.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredExpansion">
    <summary>
      <para>The <b>DesiredExpansion</b> property specifies the desired change in the object's average radius.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredExpansionDeceleration">
    <summary>
      <para>The <b>DesiredExpansionDeceleration</b> property specifies the rate at which the object will stop expanding.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_DesiredRotation">
    <summary>
      <para>The DesiredRotation property specifies how far the current inertia processor object should manipulate the target object in radians.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginBottom">
    <summary>
      <para>The <b>ElasticMarginBottom</b> property specifies the bottom region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginLeft">
    <summary>
      <para>The <b>ElasticMarginLeft</b> property specifies the leftmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginRight">
    <summary>
      <para>The <b>ElasticMarginRight</b> property specifies the rightmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_ElasticMarginTop">
    <summary>
      <para>The <b>ElasticMarginTop</b> property specifies the topmost region for bouncing the target object.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialAngularVelocity">
    <summary>
      <para>The <b>InitialAngularVelocity</b> property specifies the rotational (angular) velocity of the target when movement begins.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialExpansionVelocity">
    <summary>
      <para>The <b>InitialExpansionVelocity</b> property specifies the rate of radius expansion for a target when the target was affected by inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialOriginX">
    <summary>
      <para>The <b>InitialOriginX</b> property specifies the starting horizontal location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialOriginY">
    <summary>
      <para>The <b>InitialOriginY</b> property specifies the starting vertical location for a target with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialRadius">
    <summary>
      <para>The <b>InitialRadius</b> property specifies the distance from the edge of the target to its center before the object was changed.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialTimestamp">
    <summary>
      <para>The <b>InitialTimestamp</b> property specifies the starting time stamp for a target object with inertia.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialVelocityX">
    <summary>
      <para>The <b>InitialVelocityX</b> property specifies the initial movement of the target object on the horizontal axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.get_InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.put_InitialVelocityY">
    <summary>
      <para>The <b>InitialVelocityY</b> property specifies the initial movement of the target object on the vertical axis.</para>
      <para>This property is read/write.</para>
    </summary>
  </member>
  <member name="IInertiaProcessor.Reset">
    <summary>The <b>Reset</b> method initializes the processor with initial timestamp and restarts inertia.</summary>
    <returns>Returns <b>S_OK</b> on success, otherwise returns an error code such as <b>E_FAIL</b>.</returns>
  </member>
  <member name="IInertiaProcessor">
    <summary>The IInertiaProcessor interface handles calculations regarding object motion for Windows Touch.</summary>
  </member>
</doc>