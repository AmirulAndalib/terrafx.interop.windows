<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.AddSIDToBoundaryDescriptor">
    <summary>Adds a security identifier (SID) to the specified boundary descriptor.</summary>
    <param name="BoundaryDescriptor">A handle to the boundary descriptor. The <see cref="CreateBoundaryDescriptor" /> function returns this handle.</param>
    <param name="RequiredSid">A pointer to a <see cref="SID" /> structure.</param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.ClosePrivateNamespace">
    <summary>Closes an open namespace handle.</summary>
    <param name="Handle">The namespace handle. This handle is created by <see cref="CreatePrivateNamespace" /> or <see cref="OpenPrivateNamespace" />.</param>
    <param name="Flags">If this parameter is <b>PRIVATE_NAMESPACE_FLAG_DESTROY</b> (0x00000001), the namespace is destroyed.</param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.CreatePrivateNamespaceW">
    <summary>Creates a private namespace.</summary>
    <param name="lpPrivateNamespaceAttributes">A pointer to a <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa379560(v=vs.85)">SECURITY_ATTRIBUTES</a> structure that specifies the security attributes of the namespace object.</param>
    <param name="lpBoundaryDescriptor">A descriptor that defines how the namespace is to be isolated. The caller must be within this boundary. The <see cref="CreateBoundaryDescriptor" /> function creates a boundary descriptor.</param>
    <param name="lpAliasPrefix">
      <para>The prefix for the namespace. To create an object in this namespace, specify the object name as <i>prefix</i>\<i>objectname</i>.</para>
      <para>The system supports multiple private namespaces with the same name, as long as they define different boundaries.</para>
    </param>
    <returns>
      <para>If the function succeeds, it returns a handle to the new namespace.</para>
      <para>If the function fails, the return value is <b>NULL</b>. To get extended error information, call <see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.DeleteBoundaryDescriptor">
    <summary>Deletes the specified boundary descriptor.</summary>
    <param name="BoundaryDescriptor">A handle to the boundary descriptor. The <see cref="CreateBoundaryDescriptor" /> function returns this handle.</param>
  </member>
  <member name="Windows.OpenPrivateNamespaceW">
    <summary>Opens a private namespace.</summary>
    <param name="lpBoundaryDescriptor">A descriptor that defines how the namespace is to be isolated. The <see cref="CreateBoundaryDescriptor" /> function creates a boundary descriptor.</param>
    <param name="lpAliasPrefix">The prefix for the namespace. To create an object in this namespace, specify the object name as <i>prefix</i>\<i>objectname</i>.</param>
    <returns>The function returns the handle to the existing namespace.</returns>
  </member>
</doc>