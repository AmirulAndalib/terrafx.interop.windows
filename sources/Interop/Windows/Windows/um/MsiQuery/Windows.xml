<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.MsiCreateRecord">
    <summary>The<b>MsiCreateRecord</b> function creates a new record object with the specified number of fields. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="cParams">Specifies the number of fields the record will have. The maximum number of fields in a record is limited to 65535.</param>
    <returns>
      <para>If the function succeeds, the return value is handle to a new record object.</para>
      <para>If the function fails, the return value is null.</para>
    </returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfo">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfoA">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfoW">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfo">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfoA">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiCreateTransformSummaryInfoW">
    <summary>The<b>MsiCreateTransformSummaryInfo</b> function creates summary information of an existing transform to include validation and error conditions. Execution of this function sets the error record, which is accessible by using<see cref="MsiGetLastErrorRecord" />.</summary>
    <param name="hDatabase">The handle to the database that contains the new database summary information.</param>
    <param name="hDatabaseReference">The handle to the database that contains the original summary information.</param>
    <param name="szTransformFile">The name of the transform to which the summary information is added.</param>
    <param name="iErrorConditions">
      <para>The error conditions that should be suppressed when the transform is applied. Use one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>None of the following conditions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match, and their code pages are neutral.</description>
        </listheader>
      </list>
    </param>
    <param name="iValidation">
      <para>Specifies the properties to be validated to verify that the transform can be applied to the database. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Validation flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>Do not validate properties.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_LANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Default language must match base database.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_VALIDATE_PRODUCT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Product must match base database.</description>
        </listheader>
      </list> <para>Validate product version flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MAJORVERSION</b></term></listheader><listheader><term>0x00000008</term></listheader></list></description><description>Check major version only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_MINORVERSION</b></term></listheader><listheader><term>0x00000010</term></listheader></list></description><description>Check major and minor versions only.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPDATEVERSION</b></term></listheader><listheader><term>0x00000020</term></listheader></list></description><description>Check major, minor, and update versions.</description></listheader></list> <para>Product version relationship flags. In the following table the installed version is the version of the package that is being transformed, and the base version is the version of the package that is used to create the transform.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION</b></term></listheader><listheader><term>0x00000040</term></listheader></list></description><description>Installed version &lt; base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000080</term></listheader></list></description><description>Installed version &lt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION</b></term></listheader><listheader><term>0x00000100</term></listheader></list></description><description>Installed version = base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION</b></term></listheader><listheader><term>0x00000200</term></listheader></list></description><description>Installed version &gt;= base version.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION</b></term></listheader><listheader><term>0x00000400</term></listheader></list></description><description>Installed version &gt; base version.</description></listheader></list> <para>Upgrade code validation flags.</para><list type="table"><listheader><description>Validation flag</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSITRANSFORM_VALIDATE_UPGRADECODE</b></term></listheader><listheader><term>0x00000800</term></listheader></list></description><description>UpgradeCode must match base database.</description></listheader></list></param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransform">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransformA">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransformW">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransform">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransformA">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseApplyTransformW">
    <summary>The<b>MsiDatabaseApplyTransform</b> function applies a transform to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> to the transform.</param>
    <param name="szTransformFile">Specifies the name of the transform file to apply.</param>
    <param name="iErrorConditions">
      <para>Error conditions that should be suppressed. This parameter is a bit field that can contain the following bits.</para>
      <list type="table">
        <listheader>
          <description>Error condition</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Adding a row that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_ADDEXISTINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>Adding a table that already exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_DELMISSINGTABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>Deleting a table that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_UPDATEMISSINGROW</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>Updating a row that does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_CHANGECODEPAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>Transform and database code pages do not match and neither has a neutral code page.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSITRANSFORM_ERROR_VIEWTRANSFORM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>Create the temporary <a href="https://docs.microsoft.com//windows/desktop/Msi/-transformview-table">_TransformView table</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiDatabaseApplyTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseCommit">
    <summary>The<b>MsiDatabaseCommit</b> function commits changes to a database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <returns>The<b>MsiDatabaseCommit</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseExport">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseExportA">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseExportW">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseExport">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseExportA">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseExportW">
    <summary>The<b>MsiDatabaseExport</b> function exports a Microsoft Installer table from an open database to a <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">Text Archive File</a>.</summary>
    <param name="hDatabase">The handle to a database from <see cref="MsiOpenDatabase" />.</param>
    <param name="szTableName">The name of the table to export.</param>
    <param name="szFolderPath">The name of the folder that contains archive files.</param>
    <param name="szFileName">The name of the exported table archive file.</param>
    <returns>
      <para>The<b>MsiDatabaseExport</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_PATHNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle is supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransform">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransformA">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransformW">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransform">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransformA">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGenerateTransformW">
    <summary>The<b>MsiDatabaseGenerateTransform</b> function generates a transform file of differences between two databases. A transform is a way of recording changes to a database without altering the original database. You can also use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that includes the changes.</param>
    <param name="hDatabaseReference">Handle to the database obtained from <see cref="MsiOpenDatabase" /> that does not include the changes.</param>
    <param name="szTransformFile">A null-terminated string that specifies the name of the transform file being generated. This parameter can be null. If <i>szTransformFile</i> is null, you can use<b>MsiDatabaseGenerateTransform</b> to test whether two databases are identical without creating a transform. If the databases are identical, the function returns ERROR_NO_DATA. If the databases are different the function returns NOERROR.</param>
    <param name="iReserved1">This is a reserved argument and must be set to 0.</param>
    <param name="iReserved2">This is a reserved argument and must be set to 0.</param>
    <returns>The<b>MsiDatabaseGenerateTransform</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeys">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeysA">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeysW">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeys">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeysA">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseGetPrimaryKeysW">
    <summary>The<b>MsiDatabaseGetPrimaryKeys</b> function returns a record containing the names of all the primary key columns for a specified table. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database. See<a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the table from which to obtain primary key names.</param>
    <param name="phRecord">Pointer to the handle of the record that holds the primary key names.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDatabaseImport">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseImportA">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseImportW">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseImport">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseImportA">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseImportW">
    <summary>The<b>MsiDatabaseImport</b> function imports an installer <a href="https://docs.microsoft.com//windows/desktop/Msi/text-archive-files">text archive file</a> into an open database table.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="szFolderPath">Specifies the path to the folder that contains archive files.</param>
    <param name="szFileName">Specifies the name of the file to import.</param>
    <returns>The<b>MsiDatabaseImport</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistent">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistentA">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistentW">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistent">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistentA">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseIsTablePersistentW">
    <summary>The<b>MsiDatabaseIsTablePersistent</b> function returns an enumeration that describes the state of a specific table.</summary>
    <param name="hDatabase">Handle to the database that belongs to the relevant table. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szTableName">Specifies the name of the relevant table.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiDatabaseMerge">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseMergeA">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseMergeW">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseMerge">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseMergeA">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseMergeW">
    <summary>The<b>MsiDatabaseMerge</b> function merges two databases together, which allows duplicate rows.</summary>
    <param name="hDatabase">The handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <param name="hDatabaseMerge">The handle to the database obtained from <see cref="MsiOpenDatabase" /> to merge into the base database.</param>
    <param name="szTableName">The name of the table to receive merge conflict information.</param>
    <returns>
      <para>The<b>MsiDatabaseMerge</b> function returns one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Row merge conflicts were reported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid or inactive handle was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_TABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid table was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_DATATYPE_MISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema difference between the two databases.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseOpenView">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>
      <para>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</para>
      <para>ERROR_SUCCESS if successful, and the view handle which the phView [out] parameter points to is set.</para>
      <para>ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_BAD_QUERY_SYNTAX or ERROR_GEN_FAILURE if failure, and sets the error record, accessible via MsiGetLastErrorRecord.</para>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseOpenViewA">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>
      <para>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</para>
      <para>ERROR_SUCCESS if successful, and the view handle which the phView [out] parameter points to is set.</para>
      <para>ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_BAD_QUERY_SYNTAX or ERROR_GEN_FAILURE if failure, and sets the error record, accessible via MsiGetLastErrorRecord.</para>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseOpenViewW">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>
      <para>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</para>
      <para>ERROR_SUCCESS if successful, and the view handle which the phView [out] parameter points to is set.</para>
      <para>ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_BAD_QUERY_SYNTAX or ERROR_GEN_FAILURE if failure, and sets the error record, accessible via MsiGetLastErrorRecord.</para>
    </returns>
  </member>
  <member name="Windows.MsiDatabaseOpenView">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseOpenViewA">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDatabaseOpenViewW">
    <summary>The<b>MsiDatabaseOpenView</b> function prepares a database query and creates a view object. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database to which you want to open a view object. You can get the handle as described in <a href="https://docs.microsoft.com//windows/desktop/Msi/obtaining-a-database-handle">Obtaining a Database Handle</a>.</param>
    <param name="szQuery">Specifies a SQL query string for querying the database. For correct syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <param name="phView">Pointer to a handle for the returned view.</param>
    <returns>The<b>MsiDatabaseOpenView</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiDoAction">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDoActionA">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDoActionW">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDoAction">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDoActionA">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiDoActionW">
    <summary>The<b>MsiDoAction</b> function executes a built-in action, custom action, or user-interface wizard action.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szAction">Specifies the action to execute.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiEnableUIPreview">
    <summary>The<b>MsiEnableUIPreview</b> function enables preview mode of the user interface to facilitate authoring of user-interface dialog boxes. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="phPreview">Pointer to a returned handle for user-interface preview capability.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiEnumComponentCosts">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentCostsA">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentCostsW">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentCosts">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentCostsA">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentCostsW">
    <summary>
      <para>The<b>MsiEnumComponentCosts</b> function enumerates the disk-space per drive required to install a component. This information is needed to display the disk-space cost required for all drives in the user interface. The returned disk-space costs are expressed in multiples of 512 bytes.</para>
      <para>
        <b>MsiEnumComponentCosts</b> should only be run after the installer has completed file costing and after the<a href="https://docs.microsoft.com//windows/desktop/Msi/costfinalize-action">CostFinalize action</a>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/file-costing">File Costing</a>.</para>
    </summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string specifying the component's name as it is listed in the Component column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component table</a>. This parameter can be null. If <i>szComponent</i> is null or an empty string,<b>MsiEnumComponentCosts</b> enumerates the total disk-space per drive used during the installation. In this case, <i>iState</i> is ignored. The costs of the installer include those costs for caching the database in the secure folder as well as the cost to create the installation script. Note that the total disk-space used during the installation may be larger than the space used after the component is installed.</param>
    <param name="dwIndex">0-based index for drives. This parameter should be zero for the first call to the<b>MsiEnumComponentCosts</b> function and then incremented for subsequent calls.</param>
    <param name="iState">Requested component state to be enumerated. If <i>szComponent</i> is passed as Null or an empty string, the installer ignores the <i>iState</i> parameter.</param>
    <param name="szDriveBuf">Buffer that holds the drive name including the null terminator. This is an empty string in case of an error.</param>
    <param name="pcchDriveBuf">Pointer to a variable that specifies the size, in TCHARs, of the buffer pointed to by the <i>lpDriveBuf</i> parameter. This size should include the terminating null character. If the buffer provided is too small, the variable pointed to by <i>pcchDriveBuf</i> contains the count of characters not including the null terminator.</param>
    <param name="piCost">Cost of the component per drive expressed in multiples of 512 bytes. This value is 0 if an error has occurred. The value returned in <i>piCost</i> is final disk-space used by the component after installation. If <i>szComponent</i> is passed as Null or an empty string, the installer sets the value at <i>piCost</i> to 0.</param>
    <param name="piTempCost">The component cost per drive for the duration of the installation, or 0 if an error occurred. The value in *<i>piTempCost</i> represents the temporary space requirements for the duration of the installation. This temporary space requirement is space needed only for the duration of the installation. This does not affect the final disk space requirement.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more drives to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is missing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Costing is not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer not large enough for the drive name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied handle is invalid or inactive.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEvaluateCondition">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiEvaluateConditionA">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiEvaluateConditionW">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiEvaluateCondition">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiEvaluateConditionA">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiEvaluateConditionW">
    <summary>The<b>MsiEvaluateCondition</b> function evaluates a conditional expression containing property names and values.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szCondition">Specifies the conditional expression. This parameter must not be <b>NULL</b>. For the syntax of conditional expressions see<a href="https://docs.microsoft.com//windows/desktop/Msi/conditional-statement-syntax">Conditional Statement Syntax</a>.</param>
    <returns>This function returns MSICONDITION.</returns>
  </member>
  <member name="Windows.MsiGetActiveDatabase">
    <summary>The<b>MsiGetActiveDatabase</b> function returns the active database for the installation. This function returns a read-only handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <returns>If the function succeeds, it returns a read-only handle to the database currently in use by the installer. If the function fails, the function returns zero, 0.</returns>
  </member>
  <member name="Windows.MsiGetComponentState">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetComponentStateA">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetComponentStateW">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetComponentState">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetComponentStateA">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetComponentStateW">
    <summary>The<b>MsiGetComponentState</b> function obtains the state of a component.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">A null-terminated string that specifies the component name within the product.</param>
    <param name="piInstalled">
      <para>Receives the current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed in the default location: local or source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_REMOVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is being removed. In action state and not settable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component runs from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature name was passed to the function.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetDatabaseState">
    <summary>The<b>MsiGetDatabaseState</b> function returns the state of the database.</summary>
    <param name="hDatabase">Handle to the database obtained from <see cref="MsiOpenDatabase" />.</param>
    <returns>This function returns MSIDBSTATE.</returns>
  </member>
  <member name="Windows.MsiGetFeatureCost">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureCostA">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureCostW">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureCost">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureCostA">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureCostW">
    <summary>The<b>MsiGetFeatureCost</b> function returns the disk space required by a feature and its selected children and parent features.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iCostTree">
      <para>Specifies the value the function uses to determine disk space requirements. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The children of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_PARENTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parent features of the indicated feature are included in the cost.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOSTTREE_SELFONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature only is included in the cost.</description>
        </listheader>
      </list>
    </param>
    <param name="iState">
      <para>Specifies the installation state. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature is installed to run from source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or feature will be installed to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piCost">Receives the disk space requirements in units of 512 bytes. This parameter must not be null.</param>
    <returns>The<b>MsiGetFeatureCost</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureState">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureStateA">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureStateW">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureState">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureStateA">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureStateW">
    <summary>The<b>MsiGetFeatureState</b> function gets the requested state of a feature.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="piInstalled">
      <para>Specifies the returned current installed state. This parameter must not be null. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INCOMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation is suspended or in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, and the source is unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The return buffer is full.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or feature was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is broken.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertised feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature must run from the source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed in the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <param name="piAction">Receives the action taken during the installation session. This parameter must not be null. For return values, see <i>piInstalled</i>.</param>
    <returns>The<b>MsiGetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStates">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStatesA">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStatesW">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStates">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStatesA">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetFeatureValidStatesW">
    <summary>The<b>MsiGetFeatureValidStates</b> function returns a valid installation state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name.</param>
    <param name="lpInstallStates">
      <para>Receives the location to hold the valid installation states. For each valid installation state, the installer sets <i>pInstallState</i> to a combination of the following values. This parameter should not be null.</para>
      <list type="table">
        <listheader>
          <description>Decimal Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>2</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ADVERTISED</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>4</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_ABSENT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>8</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_LOCAL</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>16</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_SOURCE</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to run from source, CD-ROM, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>32</b>
                </term>
              </listheader>
              <listheader>
                <term>INSTALLSTATE_DEFAULT</term>
              </listheader>
            </list>
          </description>
          <description>The feature can be configured to use the default location: local or source.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiGetFeatureValidStates</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetLanguage">
    <summary>The<b>MsiGetLanguage</b> function returns the numeric language of the installation that is currently running.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <returns>
      <para>If the function succeeds, the return value is the numeric LANGID for the install.</para>
      <para>If the function fails, the return value can be the following value.</para>
    </returns>
  </member>
  <member name="Windows.MsiGetLastErrorRecord">
    <summary>The<b>MsiGetLastErrorRecord</b> function returns the error record that was last returned for the calling process. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <returns>A handle to the error record. If the last function was successful,<b>MsiGetLastErrorRecord</b> returns a null <b>MSIHANDLE</b>.</returns>
  </member>
  <member name="Windows.MsiGetMode">
    <summary>The<b>MsiGetMode</b> function is used to determine whether the installer is currently running in a specified mode, as listed in the table. The function returns a Boolean value of <b>TRUE</b> or <b>FALSE</b>, indicating whether the specific property passed into the function is currently set (<b>TRUE</b>) or not set (<b>FALSE</b>).</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="eRunMode">
      <para>Specifies the run mode. This parameter must have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_ADMIN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The administrative mode is installing, or the product is installing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_ADVERTISE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The advertisements are installing or the product is installing or updating.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_MAINTENANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An existing installation is being modified or there is a new installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_ROLLBACKENABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Rollback is enabled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_LOGENABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The log file is active. It was enabled prior to the installation session.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_OPERATIONS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Execute operations are in the determination phase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_REBOOTATEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A reboot is necessary after a successful installation (settable).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_REBOOTNOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A reboot is necessary to continue the installation (settable).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_CABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files from cabinets and <a href="https://docs.microsoft.com//windows/desktop/Msi/media-table">Media table</a> files are installing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_SOURCESHORTNAMES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source LongFileNames is suppressed through the PID_MSISOURCE summary property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_TARGETSHORTNAMES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The target LongFileNames is suppressed through the <a href="https://docs.microsoft.com//windows/desktop/Msi/shortfilenames">SHORTFILENAMES</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_RESERVED11</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Reserved for future use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_WINDOWS9X</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operating system is a 9x version.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_ZAWENABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operating system supports demand installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_RESERVED14</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Reserved for future use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_RESERVED15</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Reserved for future use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_SCHEDULED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A custom action called from install script execution.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_ROLLBACK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A custom action called from rollback execution script.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_COMMIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A custom action called from commit execution script.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>
        <b>TRUE</b> indicates the specific property passed into the function is currently set.</para>
      <para>
        <b>FALSE</b> indicates the specific property passed into the function is currently not set.</para>
    </returns>
  </member>
  <member name="Windows.MsiGetProperty">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetPropertyA">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetPropertyW">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetProperty">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetPropertyA">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetPropertyW">
    <summary>The<b>MsiGetProperty</b> function gets the value for an installer property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">A null-terminated string that specifies the name of the property.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the property. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function will then return ERROR_MORE_DATA and <i>pchValueBuf</i> will contain the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pchValueBuf</i>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetSourcePath">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSourcePathA">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSourcePathW">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSourcePath">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSourcePathA">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSourcePathW">
    <summary>The<b>MsiGetSourcePath</b> function returns the full source path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full source path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szPathBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetSourcePath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformation">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformationA">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformationW">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformation">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformationA">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetSummaryInformationW">
    <summary>The<b>MsiGetSummaryInformation</b> function obtains a handle to the _SummaryInformation stream for an installer database. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hDatabase">Handle to the database.</param>
    <param name="szDatabasePath">Specifies the path to the database.</param>
    <param name="uiUpdateCount">Specifies the maximum number of updated values.</param>
    <param name="phSummaryInfo">Pointer to the location from which to receive the summary information handle.</param>
    <returns>The<b>MsiGetSummaryInformation</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPath">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPathA">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPathW">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPath">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPathA">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiGetTargetPathW">
    <summary>The<b>MsiGetTargetPath</b> function returns the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">A null-terminated string that specifies a record of the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>. If the directory is a root directory, this can be a value from the DefaultDir column. Otherwise it must be a value from the Directory column.</param>
    <param name="szPathBuf">Pointer to the buffer that receives the null terminated full target path. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szPathBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchPathBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchPathBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character.</param>
    <param name="pcchPathBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szPathBuf</i> When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szPathBuf</i>, not including the terminating null character. If <i>szPathBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchPathBuf</i>.</param>
    <returns>The<b>MsiGetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabase">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabaseA">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabaseW">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabase">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabaseA">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiOpenDatabaseW">
    <summary>The<b>MsiOpenDatabase</b> function opens a database file for data access. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="szDatabasePath">Specifies the full path or relative path to the database file.</param>
    <param name="szPersist">
      <para>Receives the full path to the file or the persistence mode. You can use the <i>szPersist</i> parameter to direct the persistent output to a new file or to specify one of the following predefined persistence modes.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATEDIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, direct mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_CREATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Create a new database, transact mode read/write.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database direct read/write without transaction.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_READONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read-only, no persistent changes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_TRANSACT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Open a database read/write in transaction mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBOPEN_PATCHFILE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Add this flag to indicate a patch file.</description>
        </listheader>
      </list>
    </param>
    <param name="phDatabase">Pointer to the location of the returned database handle.</param>
    <returns>The<b>MsiOpenDatabase</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiPreviewBillboard">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewBillboardA">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewBillboardW">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewBillboard">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewBillboardA">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewBillboardW">
    <summary>The<b>MsiPreviewBillboard</b> function displays a billboard with the host control in the displayed dialog box.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szControlName">Specifies the name of the host control.</param>
    <param name="szBillboard">Specifies the name of the billboard to display.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialog">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialogA">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialogW">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialog">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialogA">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiPreviewDialogW">
    <summary>The<b>MsiPreviewDialog</b> function displays a dialog box as modeless and inactive.</summary>
    <param name="hPreview">Handle to the preview.</param>
    <param name="szDialogName">Specifies the name of the dialog box to preview.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiProcessMessage">
    <summary>The<b>MsiProcessMessage</b> function sends an error record to the installer for processing.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="eMessageType">
      <para>The <i>eMessage</i> parameter must be a value specifying one of the following message types. To display a message box with push buttons or icons, use OR-operators to add INSTALLMESSAGE_ERROR, INSTALLMESSAGE_WARNING, or INSTALLMESSAGE_USER to the standard message box styles used by the <see cref="MessageBox" /> and<see cref="MessageBoxEx" /> functions. For more information, see the Remarks below.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination, possibly fatal out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Formatted error message,[1] is message number in <a href="https://docs.microsoft.com//windows/desktop/Msi/error-table">Error table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Formatted warning message,[1] is message number in Error table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>User request message,[1] is message number in Error table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Informative message for log, not to be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>List of files currently in use that must be closed before being replaced.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>List of files currently in use that must be closed before being replaced. Available beginning with Windows Installer version 4.0. For more information about this message see <a href="https://docs.microsoft.com//windows/desktop/Msi/using-restart-manager-with-an-external-ui-">Using Restart Manager with an External UI</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient disk space message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Progress: start of action,[1] action name,[2] description,[3] template for ACTIONDATA messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Action data. Record fields correspond to the template of ACTIONSTART message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Progress bar information. See the description of record fields below.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMESSAGE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>To enable the Cancel button set [1] to 2 and [2] to 1. <para>To disable the Cancel button set [1] to 2 and [2] to 0</para></description>
        </listheader>
      </list>
    </param>
    <param name="hRecord">Handle to a record containing message format and data.</param>
    <returns>This function returns int.</returns>
  </member>
  <member name="Windows.MsiRecordClearData">
    <summary>The<b>MsiRecordClearData</b> function sets all fields in a record to null.</summary>
    <param name="hRecord">Handle to the record.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordDataSize">
    <summary>The<b>MsiRecordDataSize</b> function returns the length of a record field. The count does not include the terminating null character.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies a field of the record.</param>
    <returns>
      <para>The<b>MsiRecordDataSize</b> function returns 0 if the field is null, nonexistent, or an internal object pointer. The function also returns 0 if the handle is not a valid record handle.</para>
      <para>If the data is in integer format, the function returns sizeof(int).</para>
      <para>If the data is in string format, the function returns the character count (not including the null character).</para>
      <para>If the data is in stream format, the function returns the byte count.</para>
    </returns>
  </member>
  <member name="Windows.MsiRecordGetFieldCount">
    <summary>The<b>MsiRecordGetFieldCount</b> function returns the number of fields in a record.</summary>
    <param name="hRecord">Handle to a record.</param>
    <returns>If the function succeeds, the return value is the number of fields in the record.</returns>
  </member>
  <member name="Windows.MsiRecordGetInteger">
    <summary>The<b>MsiRecordGetInteger</b> function returns the integer value from a record field.</summary>
    <param name="hRecord">Handle to a record.</param>
    <param name="iField">Specifies the field of the record from which to obtain the value.</param>
    <returns>If the function succeeds, the return value is the integer value of the field.</returns>
  </member>
  <member name="Windows.MsiRecordGetString">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordGetStringA">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordGetStringW">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordGetString">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordGetStringA">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordGetStringW">
    <summary>The<b>MsiRecordGetString</b> function returns the string value of a record field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field requested.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated string containing the value of the record field. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns <b>ERROR_MORE_DATA</b> and <i>pcchValueBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of <b>ERROR_SUCCESS</b>, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHAR</b>s, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns <b>ERROR_SUCCESS</b>, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns <b>ERROR_MORE_DATA</b> and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiRecordGetString</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiRecordIsNull">
    <summary>The<b>MsiRecordIsNull</b> function reports a null record field.</summary>
    <param name="hRecord">Handle to a record.</param>
    <param name="iField">Specifies the field to check.</param>
    <returns>This function returns BOOL.</returns>
  </member>
  <member name="Windows.MsiRecordReadStream">
    <summary>The<b>MsiRecordReadStream</b> function reads bytes from a record stream field into a buffer.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record.</param>
    <param name="szDataBuf">A buffer to receive the stream field. You should ensure the destination buffer is the same size or larger than the source buffer. See the Remarks section.</param>
    <param name="pcbDataBuf">Specifies the in and out buffer count. On input, this is the full size of the buffer. On output, this is the number of bytes that were actually written to the buffer. See the Remarks section.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetInteger">
    <summary>The<b>MsiRecordSetInteger</b> function sets a record field to an integer field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="iValue">Specifies the value to which to set the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetStream">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetStreamA">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetStreamW">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetStream">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetStreamA">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetStreamW">
    <summary>The<b>MsiRecordSetStream</b> function sets a record stream field from a file. Stream data cannot be inserted into temporary fields.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szFilePath">Specifies the path to the file containing the stream.</param>
    <returns>The<b>MsiRecordSetStream</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiRecordSetString">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetStringA">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetStringW">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetString">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetStringA">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiRecordSetStringW">
    <summary>The<b>MsiRecordSetString</b> function copies a string into the designated field.</summary>
    <param name="hRecord">Handle to the record.</param>
    <param name="iField">Specifies the field of the record to set.</param>
    <param name="szValue">Specifies the string value of the field.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequence">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequenceA">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequenceW">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequence">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequenceA">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSequenceW">
    <summary>The<b>MsiSequence</b> function executes another action sequence, as described in the specified table.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szTable">Specifies the name of the table containing the action sequence.</param>
    <param name="iSequenceMode">This parameter is currently unimplemented. It is reserved for future use and must be 0.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetComponentState">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetComponentStateA">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetComponentStateW">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetComponentState">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetComponentStateA">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetComponentStateW">
    <summary>The<b>MsiSetComponentState</b> function sets a component to the requested state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szComponent">Specifies the name of the component.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component was installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component will run from source, CD, or network.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetComponentState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributes">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributesA">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributesW">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributes">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributesA">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureAttributesW">
    <summary>The<b>MsiSetFeatureAttributes</b> function can modify the default attributes of a feature at runtime. Note that the default attributes of features are authored in the Attributes column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the feature name within the product.</param>
    <param name="dwAttributes">
      <para>Feature attributes specified at run time as a set of bit flags:</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORLOCAL</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorLocal at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorSource at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFollowParent at run time. Note that this is not a valid attribute to be set for top-level features. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesFavorAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>16</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesDisallowAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE</b>
                </term>
              </listheader>
              <listheader>
                <term>32</term>
              </listheader>
            </list>
          </description>
          <description>Modifies default feature attributes to msidbFeatureAttributesNoUnsupportedAdvertise at run time. See Attributes column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a> for a description.</description>
        </listheader>
      </list>
    </param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetFeatureState">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureStateA">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureStateW">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureState">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureStateA">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetFeatureStateW">
    <summary>The<b>MsiSetFeatureState</b> function sets a feature to a specified state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Specifies the name of the feature.</param>
    <param name="iState">
      <para>Specifies the state to set. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed on the local drive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is run from the source, CD, or network.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>The<b>MsiSetFeatureState</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetInstallLevel">
    <summary>The<b>MsiSetInstallLevel</b> function sets the installation level for a full product installation.</summary>
    <param name="hInstall">Handle to the installation that is provided to a DLL custom action or obtained by using <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="iInstallLevel">The installation level.</param>
    <returns>The<b>MsiSetInstallLevel</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSetMode">
    <summary>The<b>MsiSetMode</b> function sets an internal engine Boolean state.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="eRunMode">
      <para>Specifies the run mode. This parameter must be one of the following values. While there are many values for this parameter, as described in<see cref="MsiGetMode" />, only one of the following values can be set.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_REBOOTATEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A reboot is necessary after a successful installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIRUNMODE_REBOOTNOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A reboot is necessary to continue installation.</description>
        </listheader>
      </list>
    </param>
    <param name="fState">Specifies the state to set to <b>TRUE</b> or <b>FALSE</b>.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetProperty">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetPropertyA">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetPropertyW">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetProperty">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetPropertyA">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetPropertyW">
    <summary>The<b>MsiSetProperty</b> function sets the value for an installation property.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szName">Specifies the name of the property.</param>
    <param name="szValue">Specifies the value of the property.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSetTargetPath">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetTargetPathA">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetTargetPathW">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetTargetPath">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetTargetPathA">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSetTargetPathW">
    <summary>The<b>MsiSetTargetPath</b> function sets the full target path for a folder in the<a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory table</a>.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <param name="szFolder">Specifies the folder identifier. This is a primary key in the Directory table.</param>
    <param name="szFolderPath">Specifies the full path for the folder, ending in a directory separator.</param>
    <returns>The<b>MsiSetTargetPath</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetProperty">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetPropertyA">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetPropertyW">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetPropertyCount">
    <summary>The<b>MsiSummaryInfoGetPropertyCount</b> function returns the number of existing properties in the summary information stream.</summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="puiPropertyCount">Location to receive the total property count.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetProperty">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetPropertyA">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoGetPropertyW">
    <summary>
      <para>The<b>MsiSummaryInfoGetProperty</b> function gets a single property from the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream">summary information stream</a>.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not return values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="puiDataType">Receives the returned property type. This parameter can be a type listed in the<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="piValue">Receives the returned integer property data.</param>
    <param name="pftValue">Pointer to a file value.</param>
    <param name="szValueBuf">Pointer to the buffer that receives the null terminated summary information property value. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szValueBuf</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns ERROR_MORE_DATA and <i>pcchValueBuf</i> contains the required buffer size in <b>TCHARs</b>, not including the terminating null character. On return of ERROR_SUCCESS, <i>pcchValueBuf</i> contains the number of <b>TCHARs</b> written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchValueBuf">Pointer to the variable that specifies the size, in <b>TCHARs</b>, of the buffer pointed to by the variable <i>szValueBuf</i>. When the function returns ERROR_SUCCESS, this variable contains the size of the data copied to <i>szValueBuf</i>, not including the terminating null character. If <i>szValueBuf</i> is not large enough, the function returns ERROR_MORE_DATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchValueBuf</i>.</param>
    <returns>The<b>MsiSummaryInfoGetProperty</b> function returns one of the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoPersist">
    <summary>The<b>MsiSummaryInfoPersist</b> function writes changed summary information back to the summary information stream.</summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetProperty">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetPropertyA">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetPropertyW">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetProperty">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetPropertyA">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiSummaryInfoSetPropertyW">
    <summary>
      <para>The<b>MsiSummaryInfoSetProperty</b> function sets a single summary information property.</para>
      <div>
        <b>Note</b>  The meaning of the property value depends on whether the summary information stream is for an installation database (.msi file), transform (.mst file) or patch (.msp file). See <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-property-descriptions">Summary Property Descriptions</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a> for more information about summary information properties.</div>
    </summary>
    <param name="hSummaryInfo">Handle to summary information.</param>
    <param name="uiProperty">Specifies the property ID of the summary property being set. This parameter can be a property ID listed in the <a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>. This function does not set values for PID_DICTIONARY OR PID_THUMBNAIL property.</param>
    <param name="uiDataType">Specifies the type of property to set. This parameter can be a type listed in the<a href="https://docs.microsoft.com//windows/desktop/Msi/summary-information-stream-property-set">Summary Information Stream Property Set</a>.</param>
    <param name="iValue">Specifies the integer value.</param>
    <param name="pftValue">Specifies the file-time value.</param>
    <param name="szValue">Specifies the text value.</param>
    <returns>The<b>MsiSummaryInfoSetProperty</b> function returns the following values:</returns>
  </member>
  <member name="Windows.MsiVerifyDiskSpace">
    <summary>The<b>MsiVerifyDiskSpace</b> function checks to see if sufficient disk space is present for the current installation.</summary>
    <param name="hInstall">Handle to the installation provided to a DLL custom action or obtained through <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" />.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiViewClose">
    <summary>The<b>MsiViewClose</b> function releases the result set for an executed view.</summary>
    <param name="hView">Handle to a view that is set to release.</param>
    <returns>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</returns>
  </member>
  <member name="Windows.MsiViewExecute">
    <summary>The<b>MsiViewExecute</b> function executes a SQL view query and supplies any required parameters. The query uses the question mark token to represent parameters as described in<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>. The values of these parameters are passed in as the corresponding fields of a parameter record.</summary>
    <param name="hView">Handle to the view upon which to execute the query.</param>
    <param name="hRecord">Handle to a record that supplies the parameters. This parameter contains values to replace the parameter tokens in the SQL query. It is optional, so <i>hRecord</i> can be zero. For a reference on syntax, see<a href="https://docs.microsoft.com//windows/desktop/Msi/sql-syntax">SQL Syntax</a>.</param>
    <returns>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</returns>
  </member>
  <member name="Windows.MsiViewFetch">
    <summary>The<b>MsiViewFetch</b> function fetches the next sequential record from the view. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hView">Handle to the view to fetch from.</param>
    <param name="phRecord">Pointer to the handle for the fetched record.</param>
    <returns>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</returns>
  </member>
  <member name="Windows.MsiViewGetColumnInfo">
    <summary>The<b>MsiViewGetColumnInfo</b> function returns a record containing column names or definitions. This function returns a handle that should be closed using<see cref="MsiCloseHandle" />.</summary>
    <param name="hView">Handle to the view from which to obtain column information.</param>
    <param name="eColumnInfo">
      <para>Specifies a flag indicating what type of information is needed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOLINFO_NAMES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Column names are returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICOLINFO_TYPES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Definitions are returned.</description>
        </listheader>
      </list>
    </param>
    <param name="phRecord">Pointer to a handle to receive the column information data record.</param>
    <returns>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</returns>
  </member>
  <member name="Windows.MsiViewGetError">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewGetErrorA">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewGetErrorW">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewGetError">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewGetErrorA">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewGetErrorW">
    <summary>The<b>MsiViewGetError</b> function returns the error that occurred in the<see cref="MsiViewModify" /> function.</summary>
    <param name="hView">Handle to the view.</param>
    <param name="szColumnNameBuffer">Pointer to the buffer that receives the null-terminated column name. Do not attempt to determine the size of the buffer by passing in a null (value=0) for <i>szColumnName</i>. You can get the size of the buffer by passing in an empty string (for example ""). The function then returns MSIDBERROR_MOREDATA and <i>pcchBuf</i> contains the required buffer size in TCHARs, not including the terminating null character. On return of MSIDBERROR_NOERROR, <i>pcchBuf</i> contains the number of TCHARs written to the buffer, not including the terminating null character. This parameter is an empty string if there are no errors.</param>
    <param name="pcchBuf">Pointer to the variable that specifies the size, in TCHARs, of the buffer pointed to by the variable <i>szColumnNameBuffer</i>. When the function returns MSIDBERROR_NOERROR, this variable contains the size of the data copied to <i>szColumnNameBuffer</i>, not including the terminating null character. If <i>szColumnNameBuffer</i> is not large enough, the function returns MSIDBERROR_MOREDATA and stores the required size, not including the terminating null character, in the variable pointed to by <i>pcchBuf</i>.</param>
    <returns>
      <para>This function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Error code</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer was too small to receive data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_FUNCTIONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully with no errors.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_DUPLICATEKEY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new record duplicates primary keys of the existing record in a table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no null values allowed; or the column is about to be deleted, but is referenced by another row.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The corresponding record in a foreign table was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_OVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is greater than the maximum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_UNDERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is less than the minimum value allowed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_NOTINSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data is not a member of the values permitted in the set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid version string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCASE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The case was invalid. The case must be all uppercase or all lowercase.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADGUID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid GUID was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADWILDCARD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid wildcard file name was supplied, or the use of wildcards was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADIDENTIFIER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid identifier was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid language IDs were supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFILENAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid file name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid path was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCONDITION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid conditional statement was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADFORMATTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid format string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADTEMPLATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid template string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADDEFAULTDIR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the DefaultDir column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/directory-table">Directory</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADREGPATH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid registry path string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCUSTOMSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid string was supplied in the CustomSource column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/customaction-table">CustomAction</a> table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADPROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid property string was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_MISSINGDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is missing a reference to a column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCATEGORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The category column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table for the column is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADCABINET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid cabinet name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADKEYTABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The table in the Keytable column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table was not found or loaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADMAXMINVALUES</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value in the MaxValue column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/-validation-table">_Validation</a> table is less than the value in the MinValue column.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADSHORTCUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid shortcut target name was supplied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_STRINGOVERFLOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is too long for the length specified by the column definition.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIDBERROR_BADLOCALIZEATTRIB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid localization attribute was supplied. (Primary keys cannot be localized.)</description>
        </listheader>
      </list> <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para></returns>
  </member>
  <member name="Windows.MsiViewModify">
    <summary>The<b>MsiViewModify</b> function updates a fetched record.</summary>
    <param name="hView">Handle to a view.</param>
    <param name="eModifyMode">
      <para>Specifies the modify mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_SEEK</b>
                </term>
              </listheader>
              <listheader>
                <term>-1</term>
              </listheader>
            </list>
          </description>
          <description>Refreshes the information in the supplied record without changing the position in the result set and without affecting subsequent fetch operations. The record may then be used for subsequent Update, Delete, and Refresh. All primary key columns of the table must be in the query and the record must have at least as many fields as the query. Seek cannot be used with multi-table queries. This mode cannot be used with a view containing joins. See also the remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_REFRESH</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Refreshes the information in the record. Must first call <see cref="MsiViewFetch" /> with the same record. Fails for a deleted row. Works with read-write and read-only records.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_INSERT</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Inserts a record. Fails if a row with the same primary keys exists. Fails with a read-only database. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_UPDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Updates an existing record. Nonprimary keys only. Must first call <see cref="MsiViewFetch" />. Fails with a deleted record. Works only with read-write records.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_ASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>Writes current data in the cursor to a table row. Updates record if the primary keys match an existing row and inserts if they do not match. Fails with a read-only database. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_REPLACE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Updates or deletes and inserts a record into a table. Must first call <see cref="MsiViewFetch" /> with the same record. Updates record if the primary keys are unchanged. Deletes old row and inserts new if primary keys have changed. Fails with a read-only database. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_MERGE</b>
                </term>
              </listheader>
              <listheader>
                <term>5</term>
              </listheader>
            </list>
          </description>
          <description>Inserts or validates a record in a table. Inserts if primary keys do not match any row and validates if there is a match. Fails if the record does not match the data in the table. Fails if there is a record with a duplicate key that is not identical. Works only with read-write records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_DELETE</b>
                </term>
              </listheader>
              <listheader>
                <term>6</term>
              </listheader>
            </list>
          </description>
          <description>Remove a row from the table. You must first call the <see cref="MsiViewFetch" /> function with the same record. Fails if the row has been deleted. Works only with read-write records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_INSERT_TEMPORARY</b>
                </term>
              </listheader>
              <listheader>
                <term>7</term>
              </listheader>
            </list>
          </description>
          <description>Inserts a temporary record. The information is not persistent. Fails if a row with the same primary key exists. Works only with read-write records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_VALIDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>Validates a record. Does not validate across joins. You must first call the <see cref="MsiViewFetch" /> function with the same record. Obtain validation errors with <see cref="MsiViewGetError" />. Works with read-write and read-only records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_VALIDATE_NEW</b>
                </term>
              </listheader>
              <listheader>
                <term>9</term>
              </listheader>
            </list>
          </description>
          <description>Validate a new record. Does not validate across joins. Checks for duplicate keys. Obtain validation errors by calling <see cref="MsiViewGetError" />. Works with read-write and read-only records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_VALIDATE_FIELD</b>
                </term>
              </listheader>
              <listheader>
                <term>10</term>
              </listheader>
            </list>
          </description>
          <description>Validates fields of a fetched or new record. Can validate one or more fields of an incomplete record. Obtain validation errors by calling <see cref="MsiViewGetError" />. Works with read-write and read-only records. This mode cannot be used with a view containing joins.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIMODIFY_VALIDATE_DELETE</b>
                </term>
              </listheader>
              <listheader>
                <term>11</term>
              </listheader>
            </list>
          </description>
          <description>Validates a record that will be deleted later. You must first call <see cref="MsiViewFetch" />. Fails if another row refers to the primary keys of this row. Validation does not check for the existence of the primary keys of this row in properties or strings. Does not check if a column is a foreign key to multiple tables. Obtain validation errors by calling <see cref="MsiViewGetError" />. Works with read-write and read-only records. This mode cannot be used with a view that contains joins.</description>
        </listheader>
      </list>
    </param>
    <param name="hRecord">Handle to the record to modify.</param>
    <returns>
      <para>The<b>MsiViewModify</b> function returns the following values:</para>
      <para>Note that in low memory situations, this function can raise a STATUS_NO_MEMORY exception.</para>
    </returns>
  </member>
</doc>