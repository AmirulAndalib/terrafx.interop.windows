<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IThumbnailCache.GetThumbnail">
    <summary>
      <para>Gets a cached thumbnail for a given Shell item.</para>
    </summary>
    <param name="pShellItem">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to the Shell item for which to retrieve a thumbnail.</para>
    </param>
    <param name="cxyRequestedThumbSize">
      <para>Type: <b>UINT</b></para>
      <para>The requested thumbnail size in pixels. The maximum value is 1024.</para>
    </param>
    <param name="flags">
      <para>Type: <b><see cref="WTS_FLAGS" /></b></para>
      <para>A combination of values from the <see cref="WTS_FLAGS" /> enumeration. See the Remarks section for rules and a list of possible combinations.</para>
    </param>
    <param name="ppvThumb">
      <para>Type: <b><see cref="ISharedBitmap" />**</b></para>
      <para>The address of an <see cref="ISharedBitmap" /> pointer that, when this method returns successfully, receives the object used to access the thumbnail. This parameter may be <b>NULL</b>.</para>
    </param>
    <param name="pOutFlags">
      <para>Type: <b>WTS_CACHEFLAGS*</b></para>
      <para>A pointer to a value that, when this method returns successfully, receives a combination of the following flags from the WTS_CACHEFLAGS enumeration.</para>
      <h4>WTS_DEFAULT (0x00000000)</h4>
      <para>0x00000000.</para>
      <h4>WTS_LOWQUALITY (0x00000001)</h4>
      <para>0x00000001. Set when the returned bitmap dimensions are less than <i>cxyRequestedThumbSize</i>.</para>
      <h4>WTS_CACHED (0x00000002)</h4>
      <para>0x00000002. Set when the returned image is in the cache.</para>
    </param>
    <param name="pThumbnailID">
      <para>Type: <b><see cref="WTS_THUMBNAILID" />*</b></para>
      <para>A pointer to a value that, when this method returns successfully, receives a unique ID for the returned thumbnail. This parameter may be <b>NULL</b>, in which case the thumbnail ID is discarded.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Returns S_OK if successful or a standard COM error value otherwise, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>A parameter is invalid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_FAILEDEXTRACTION</b>
            </para>
          </description>
          <description>
            <para>The Shell item does not support thumbnail extraction. For example, .exe or .lnk items.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_EXTRACTIONTIMEDOUT</b>
            </para>
          </description>
          <description>
            <para>The extraction took longer than the maximum allowable time. The extraction was not completed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_SURROGATEUNAVAILABLE</b>
            </para>
          </description>
          <description>
            <para>A surrogate process was not available to be used for the extraction process.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_FASTEXTRACTIONNOTSUPPORTED</b>
            </para>
          </description>
          <description>
            <para>The WTS_FASTEXTRACT flag was set, but fast extraction is not available.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If a thumbnail is extracted, it will be cached unless WTS_EXTRACTDONOTCACHE is specified.</para>
      <para>The following combinations are valid for the flags parameter.</para>
      <list type="table">
        <listheader>
          <description>WTS_INCACHEONLY</description>
        </listheader>
        <item>
          <description>WTS_FASTEXTRACT</description>
        </item>
        <item>
          <description>WTS_EXTRACT</description>
        </item>
        <item>
          <description>WTS_EXTRACT | WTS_SLOWRECLAIM</description>
        </item>
        <item>
          <description>WTS_FORCEEXTRACTION</description>
        </item>
        <item>
          <description>WTS_FORCEEXTRACTION | WTS_SLOWRECLAIM</description>
        </item>
        <item>
          <description>WTS_EXTRACTDONOTCACHE</description>
        </item>
      </list>
      <para>
        <see cref="GetImage" /> also uses this cache and can provide an easier way to retrieve the thumbnail. However, <b>GetImage</b> is more general and will retrieve an icon as a fallback.</para>
    </remarks>
    <seealso cref="IShellItemImageFactory.GetImage" />
    <seealso cref="IThumbnailCache" />
  </member>
  <member name="IThumbnailCache.GetThumbnailByID">
    <summary>
      <para>Gets a thumbnail from the thumbnail cache, given its ID.</para>
    </summary>
    <param name="thumbnailID">
      <para>Type: <b><see cref="WTS_THUMBNAILID" /></b></para>
      <para>The ID of the thumbnail to retrieve. The ID is obtained by calling <see cref="GetThumbnail" />.</para>
    </param>
    <param name="cxyRequestedThumbSize">
      <para>Type: <b>UINT</b></para>
      <para>The requested thumbnail size in pixels. This value cannot be larger than 1024.</para>
    </param>
    <param name="ppvThumb">
      <para>Type: <b><see cref="ISharedBitmap" />**</b></para>
      <para>The address of a <see cref="ISharedBitmap" /> interface pointer that, when this method returns successfully, receives the object for accessing the requested thumbnail. This parameter can be <b>NULL</b>.</para>
    </param>
    <param name="pOutFlags">
      <para>Type: <b>WTS_CACHEFLAGS*</b></para>
      <para>A pointer to a value that, when this method returns successfully, receives a combination of the following flags. This value can be set to <b>NULL</b> if this information is not needed.</para>
      <h4>WTS_DEFAULT (0x00000000)</h4>
      <para>0x00000000.</para>
      <h4>WTS_LOWQUALITY (0x00000001)</h4>
      <para>0x00000001. Set when the returned bitmap dimensions are less than <i>cxyRequestedThumbSize</i>.</para>
      <h4>WTS_CACHED (0x00000002)</h4>
      <para>0x00000002. Set when the returned image is in the cache.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Returns S_OK if successful, or an error value otherwise, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>A parameter is invalid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_FAILEDEXTRACTION</b>
            </para>
          </description>
          <description>
            <para>The Shell item does not support thumbnail extraction. For example, .exe or .lnk items.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_EXTRACTIONTIMEDOUT</b>
            </para>
          </description>
          <description>
            <para>The extraction took longer than the maximum allowable time. The extraction was not completed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_SURROGATEUNAVAILABLE</b>
            </para>
          </description>
          <description>
            <para>A surrogate process was not available to be used for the extraction process.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>WTS_E_FASTEXTRACTIONNOTSUPPORTED</b>
            </para>
          </description>
          <description>
            <para>The WTS_FASTEXTRACT flag was set, but fast extraction is not available.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method is typically called after <see cref="GetThumbnail" /> has already been called to retrieve the thumbnail ID.</para>
    </remarks>
  </member>
  <member name="IThumbnailCache">
    <summary>
      <para>Exposes methods for a system thumbnail cache that is shared across applications.</para>
    </summary>
    <remarks>
      <para>The Thumbnail Cache API is designed to provide applications with a unified method to retrieve and cache thumbnails. In Windows XP, thumbnail caching is done on a per-folder basis, and the cache is maintained in a Thumbs.db file within each folder. While this approach provides spatial locality, it does not support previews and queries across folders. The thumbnail cache in Windows Vista addresses this shortcoming by providing a global cache.</para>
      <para>To cache a thumbnail, an application must first obtain an <see cref="IShellItem" /> that represents the item for which a thumbnail will be obtained, and then pass the <b>IShellItem</b> to a call to <see cref="IThumbnailCache.GetThumbnail" />. If the flags parameter to <b>IThumbnailCache.GetThumbnail</b> includes the flag WTS_EXTRACT, and the thumbnail is not already cached, a thumbnail will be extracted and placed in the cache. If the flag WTS_FORCEEXTRACTION is set, the cache is ignored and a new thumbnail is always extracted. See the <b>IThumbnailCache.GetThumbnail</b> topic for more details on the flags passed to <b>IThumbnailCache.GetThumbnail</b>.</para>
      <para>If a thumbnail is not already in the cache, it will be automatically extracted
from the source file using the existing implementation(s) of <see cref="IExtractImage" /> or <see cref="IThumbnailProvider" /> that is registered on the operating system. Your application does not have to provide an implementation of the thumbnail extractor.</para>
      <para>When <see cref="IThumbnailCache.GetThumbnail" /> returns, its <i>pThumbnailID</i> parameter receives a WTS_THUMBNAILID structure that contains the unique ID of the thumbnail. If this ID is saved, it can then be passed to <see cref="IThumbnailCache.GetThumbnailByID" /> to retrieve the cached thumbnail. Alternatively, <b>IThumbnailCache.GetThumbnail</b> may be called with the WTS_CACHEONLY flag set. In this case, a thumbnail will be returned only if it is already cached. The disadvantage of using <b>IThumbnailCache.GetThumbnail</b> rather than <b>IThumbnailCache.GetThumbnailByID</b>, is that an <see cref="IShellItem" /> must still be provided.</para>
      <para>Multiple threads can be used to access the thumbnail cache to improve performance.
<see cref="IThumbnailCache.GetThumbnail" /> may be called on a higher priority thread with either the WTS_INCACHEONLY or the WTS_FASTEXTRACT flag set, so that cached thumbnails are retrieved immediately. Then if the image is not in the cache, or WTS_LOWQUALITY indicates the cached image was not of ideal quality, a lower priority thread may be used to call <b>IThumbnailCache.GetThumbnail</b> with the WTS_EXTRACT flag set,
so that a thumbnail may be extracted.</para>
    </remarks>
  </member>
</doc>