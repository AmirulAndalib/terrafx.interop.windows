<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWbemClassObject.BeginEnumeration">
    <summary>The<b>IWbemClassObject.BeginEnumeration</b> method resets an enumeration back to the beginning of the enumeration. The caller must call this method prior to the first call to<see cref="IWbemClassObject.Next" /> to enumerate all of the properties on an object. The order in which properties are enumerated is guaranteed to be invariant for a given instance of<see cref="IWbemClassObject" />.</summary>
    <param name="lEnumFlags">Combination of flags described in Remarks.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.BeginMethodEnumeration">
    <summary>
      <para>Use the<b>IWbemClassObject.BeginMethodEnumeration</b> method call to begin an enumeration of the methods available for the object.</para>
      <para>This call is only supported if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers which point to CIM instances. The order in which methods are enumerated is guaranteed to be invariant for a given instance of<b>IWbemClassObject</b>.</para>
    </summary>
    <param name="lEnumFlags">
      <para>Specifies the scope of the enumeration.</para>
      <para>Possible values:</para>
      <h4>WBEM_FLAG_LOCAL_ONLY</h4>
      <para>Only include methods that are defined in the class itself.</para>
      <h4>WBEM_FLAG_PROPAGATED_ONLY</h4>
      <para>Only include methods that are inherited from parent classes.</para>
    </param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.Clone">
    <summary>The<b>IWbemClassObject.Clone</b> method returns a new object that is a complete clone of the current object. The new object has a COM reference count of 1.</summary>
    <param name="ppCopy">
      <para>This parameter cannot be <b>NULL</b>. It receives the copy of the current object. You must call <b>IWbemClassObject.Release</b> on this object when it is no longer required.</para>
      <para>A new object is not returned on error.</para>
    </param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.CompareTo">
    <summary>The <b>IWbemClassObject.CompareTo</b> method compares an object to another Windows Management object. Note that there are certain constraints in this comparison process.</summary>
    <param name="lFlags">
      <para>Specifies the object characteristics to consider in comparison to another object. It can be <b>WBEM_COMPARISON_INCLUDE_ALL</b> to consider all features, or any combination of these flags.</para>
      <h4>WBEM_FLAG_IGNORE_OBJECT_SOURCE</h4>
      <para>Ignore the source of the objects, namely the server and the namespace they came from, in comparison to other objects.</para>
      <h4>WBEM_FLAG_IGNORE_QUALIFIERS</h4>
      <para>Ignore all qualifiers (including <b>Key</b> and <b>Dynamic</b>) in comparison.</para>
      <h4>WBEM_FLAG_IGNORE_DEFAULT_VALUES</h4>
      <para>Ignore default values of properties. This flag is only meaningful when comparing classes.</para>
      <h4>WBEM_FLAG_IGNORE_FLAVOR</h4>
      <para>Ignore qualifier flavors. This flag still takes qualifier values into account, but ignores flavor distinctions such as propagation rules and override restrictions (for more information, see<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a>).</para>
      <h4>WBEM_FLAG_IGNORE_CASE</h4>
      <para>Compare string values in a case-insensitive manner. This applies both to strings and to qualifier values. Property and qualifier names are always compared in a case-insensitive manner whether this flag is specified or not.</para>
      <h4>WBEM_FLAG_IGNORE_CLASS</h4>
      <para>Assume that the objects being compared are instances of the same class. Consequently, this flag compares instance-related information only. Use this flag to optimize performance. If the objects are not of the same class, the results are undefined.</para>
    </param>
    <param name="pCompareTo">Object in comparison. This pointer must point to a valid<see cref="IWbemClassObject" /> instance. It cannot be <b>NULL</b>.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.Delete">
    <summary>
      <para>The<b>IWbemClassObject.Delete</b> method deletes the specified property from a CIM class definition and all of its qualifiers. Because instances cannot have contents that are different from the owning class, delete operations for properties are only possible on class definitions. If you invoke<b>Delete</b> on a property in an instance, the operation succeeds; however, rather than removing the value, it is simply reset to the default value for the class.</para>
      <para>It is not possible to delete a property inherited from a parent class. However, if an override default value for a property inherited from a parent class was specified, it is possible to revert to the parent's default value by invoking this method. In this case, <b>WBEM_S_RESET_TO_DEFAULT</b> is returned.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/wmi-system-properties">System properties</a> cannot be deleted.</para>
    </summary>
    <param name="wszName">Property name to delete. This must point to a valid <b>LPCWSTR</b>. It is treated as read-only.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.DeleteMethod">
    <summary>Use the<b>IWbemClassObject.DeleteMethod</b> method to delete a method. This call is supported only if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers which point to CIM instances.</summary>
    <param name="wszName">Method name to be removed from the class definition.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.EndEnumeration">
    <summary>The<b>IWbemClassObject.EndEnumeration</b> method terminates an enumeration sequence started with<see cref="IWbemClassObject.BeginEnumeration" />. This call is not required, but it is recommended to developers because it releases resources associated with the enumeration. However, the resources are deallocated automatically when the next enumeration is started or the object is released.</summary>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.EndMethodEnumeration">
    <summary>
      <para>The<b>IWbemClassObject.EndMethodEnumeration</b> method is used to terminate a method enumeration sequence started with<see cref="IWbemClassObject.BeginMethodEnumeration" />.</para>
      <para>This call is only supported if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers which point to CIM instances.</para>
    </summary>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.Get">
    <summary>The<b>IWbemClassObject.Get</b> method retrieves the specified property value, if it exists. This method can also return<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/wmi-system-properties">system properties</a>.</summary>
    <param name="wszName">Name of the desired property. It is treated as read-only.</param>
    <param name="lFlags">Reserved. This parameter must be 0 (zero).</param>
    <param name="pVal">When successful, this parameter is assigned the correct type and value for the qualifier, and the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantinit">VariantInit</a> function is called on <i>pVal</i>. It is the responsibility of the caller to call <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> on <i>pVal</i> when the value is not needed. If there is an error, the value that <i>pVal</i> points to is not modified. If an uninitialized <i>pVal</i> value is passed to the method, then the caller must check the return value of the method, and call <b>VariantClear</b> only when the method succeeds.</param>
    <param name="pType">Can be <b>NULL</b>. If it is not <b>NULL</b>, it receives the CIM type of the property, that is, one of the CIM-type constants, such as <b>CIM_SINT32</b>, <b>CIM_STRING</b>, and so on. For more information about these values, see <see cref="CIMTYPE_ENUMERATION" />. This indicates the CIM semantics of the property value packed into <b>VARIANT</b>.</param>
    <param name="plFlavor">
      <para>Can be <b>NULL</b>. If not <b>NULL</b>, the LONG value pointed to receives information about the origin of the property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a> and <see cref="WBEM_FLAVOR_TYPE" />.</para>
      <h4>WBEM_FLAVOR_ORIGIN_SYSTEM</h4>
      <para>The property is a standard system property.</para>
      <h4>WBEM_FLAVOR_ORIGIN_PROPAGATED</h4>
      <para>For classes only. The property was inherited from the parent class.</para>
      <para>For instances only. The property is inherited from the parent class, but has not been modified at the instance level.</para>
      <h4>WBEM_FLAVOR_ORIGIN_LOCAL</h4>
      <para>For classes only. The property belongs to the derived child class.</para>
      <para>For instances only. The property is modified at the instance level—that is, a value was supplied, or a qualifier was added or modified.</para>
    </param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained in an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetMethod">
    <summary>The<b>IWbemClassObject.GetMethod</b> method returns information about the requested method. This call is only supported if the current object is a CIM class definition. Method information is not available from<see cref="IWbemClassObject" /> pointers which point to CIM instances.</summary>
    <param name="wszName">The method name. This cannot be <b>NULL</b>, and must point to a valid <b>LPCWSTR</b>.</param>
    <param name="lFlags">Reserved. This parameter must be 0.</param>
    <param name="ppInSignature">A pointer that receives an<see cref="IWbemClassObject" /> pointer which describes the in parameters to the method. This parameter is ignored if set to <b>NULL</b>. Be aware that Windows Management can set the<b>IWbemClassObject</b> pointer to <b>NULL</b> if this method has no in parameters. For more information, see Remarks.</param>
    <param name="ppOutSignature">A pointer that receives an<see cref="IWbemClassObject" /> pointer which describes the out-parameters to the method. This parameter will be ignored if set to <b>NULL</b>.</param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetMethodOrigin">
    <summary>
      <para>The<b>IWbemClassObject.GetMethodOrigin</b> method is used to determine the class for which a method was declared.</para>
      <para>This call is only supported if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers which point to CIM instances.</para>
    </summary>
    <param name="wszMethodName">Name of the method for the object whose owning class is being requested.</param>
    <param name="pstrClassName">Receives the name of the class which owns the method. The user must call <b>SysFreeString</b> on the returned <i>BSTR</i> when it is no longer required.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetMethodQualifierSet">
    <summary>
      <para>The<b>IWbemClassObject.GetMethodQualifierSet</b> is used to retrieve the qualifier set for a particular method.</para>
      <para>This call is supported only if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers, which point to CIM instances.</para>
    </summary>
    <param name="wszMethod">Must point to a valid <b>LPCWSTR</b> containing the method name.</param>
    <param name="ppQualSet">Receives the interface pointer that allows access to the qualifiers for the method. The returned object has a positive reference count upon return from the call. The caller must call <b>IWbemQualifierSet.Release</b> when the object is no longer needed. This parameter cannot be <b>NULL</b>. On error, a new object is not returned, and the pointer is set to point to <b>NULL</b>.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetNames">
    <summary>The <b>IWbemClassObject.GetNames</b> method retrieves the names of the properties in the object. Furthermore, depending on user-supplied selection criteria, it can retrieve all or a subset of the properties. These properties can then be accessed by using <see cref="IWbemClassObject.Get" /> for each name. This method can also return <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/wmi-system-properties">system properties</a>.</summary>
    <param name="wszQualifierName">A parameter that can be <b>NULL</b>. If not <b>NULL</b>, it must point to a valid <b>LPCWSTR</b> specifying a qualifier name which operates as part of a filter. This is handled as read-only. For more information, see Remarks.</param>
    <param name="lFlags">For more information, see Remarks.</param>
    <param name="pQualifierVal">A parameter that can be <b>NULL</b>. If not <b>NULL</b>, it must point to a valid <b>VARIANT</b> structure initialized to a filter value. This <b>VARIANT</b> is handled as read-only by the method. Thus, the caller must call <b>VariantClear</b> on it, if required. For more information, see Remarks.</param>
    <param name="pNames">A parameter that cannot be <b>NULL</b>, but on entry this parameter must point to <b>NULL</b>. A new <b>SAFEARRAY</b> structure is always allocated, and the pointer is set to point to it. The returned array can have 0 elements, but is always allocated when <b>WBEM_S_NO_ERROR</b> returns. On error, a new <b>SAFEARRAY</b> structure is not returned.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetObjectText">
    <summary>The<b>IWbemClassObject.GetObjectText</b> method returns a textual rendering of the object in the MOF syntax. Notice that the MOF text returned does not contain all the information about the object, but only enough information for the MOF compiler to be able to re-create the original object. For instance, no propagated qualifiers or parent class properties are displayed.</summary>
    <param name="lFlags">Normally 0. If <b>WBEM_FLAG_NO_FLAVORS</b> is specified, qualifiers will be presented without propagation or flavor information.</param>
    <param name="pstrObjectText">This must point to <b>NULL</b> on entry. This parameter receives from Windows Management a newly allocated <b>BSTR</b> that was initialized with <b>SysAllocString</b>. You must call <b>SysFreeString</b> on the pointer when the string is no longer required. This pointer points to a MOF syntax rendering of the object upon return from the call. Because this is an out parameter, the pointer must not point to a string that is valid before this method is called, because the pointer will not be deallocated.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetPropertyOrigin">
    <summary>The<b>IWbemClassObject.GetPropertyOrigin</b> method retrieves the name of the class in which a particular property was introduced. For classes with deep inheritance hierarchies, it is often desirable to know which properties were declared in which classes. If the object does not inherit from a parent class, as in the case of a base class, for example, then the current class name is returned.</summary>
    <param name="wszName">Property name for which the owning class name is desired. This must point to a valid <b>LPCWSTR</b>, which is treated as read-only.</param>
    <param name="pstrClassName">Pointer to the address of a new <b>BSTR</b> that receives the parent class name. To prevent memory leaks in the client process, the caller must call <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a> when the name is no longer required. This parameter must not point to a valid string before the method is called because this is an output parameter, and this pointer is not deallocated after the call is complete.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetPropertyQualifierSet">
    <summary>The<b>IWbemClassObject.GetPropertyQualifierSet</b> method gets the qualifier set for a particular property in the class object. You can use this method with properties that are a member of an instance or a class definition.</summary>
    <param name="wszProperty">Property for which the qualifier set is requested. This cannot be <b>NULL</b> and must point to a valid <b>LPCWSTR</b>. The property can be local or propagated from the parent class. Note that system properties have no qualifiers so this method returns the error code <b>WBEM_E_SYSTEM_PROPERTY</b> if you attempt to obtain the<see cref="IWbemQualifierSet" /> pointer for a system property.</param>
    <param name="ppQualSet">Receives an interface pointer that allows access to the qualifiers for the named property. The caller must call <b>IWbemQualifierSet.Release</b> on the pointer when access to the object is no longer required. The property is set to point to <b>NULL</b> when there are error conditions. A new object is not returned.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.GetQualifierSet">
    <summary>The<b>IWbemClassObject.GetQualifierSet</b> method returns an interface pointer that allows read and write operations on the set of qualifiers for the entire class object, whether the object is an instance or a class definition. Any qualifiers added, deleted, or edited using the returned pointer apply to the entire instance or class definition.</summary>
    <param name="ppQualSet">Receives the interface pointer that allows access to the qualifiers for the class object. The returned object has a positive reference count upon return from the call. The caller must call <b>IWbemQualifierSet.Release</b> when the object is no longer needed. This parameter cannot be <b>NULL</b>. On error, a new object is not returned and the pointer is left unmodified.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.InheritsFrom">
    <summary>The<b>IWbemClassObject.InheritsFrom</b> method determines if the current class or instance derives from a specified parent class.</summary>
    <param name="strAncestor">Cannot be <b>NULL</b>. It contains the class name that is being tested. If the current object has this class for one of its ancestor classes, <b>WBEM_S_NO_ERROR</b> returns. This must point to a valid <b>LPCWSTR</b>, which is treated as read-only.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.Next">
    <summary>
      <para>The <b>IWbemClassObject.Next</b> method retrieves the next property in an enumeration that started with<see cref="IWbemClassObject.BeginEnumeration" />. This should be called repeatedly to enumerate all the properties until<b>WBEM_S_NO_MORE_DATA</b> returns. If the enumeration is to be terminated early, then<see cref="IWbemClassObject.EndEnumeration" /> should be called.</para>
      <para>The order of the properties returned during the enumeration is not defined.</para>
    </summary>
    <param name="lFlags">Reserved. This parameter must be 0.</param>
    <param name="strName">Receives a new <b>BSTR</b> that contains the property name. To prevent memory leaks in the client process, the caller must call<a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a> when the name is no longer required. You can set this parameter to <b>NULL</b> if the name is not required.</param>
    <param name="pVal">
      <para>This <b>VARIANT</b> is filled with the value of the property. The method calls<a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantinit">VariantInit</a> on this<b>VARIANT</b>, so the caller should ensure that the <b>VARIANT</b>is not active prior to the call. The caller must use<a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> when the value is no longer required.</para>
      <para>You can set this parameter to <b>NULL</b> if the value is not required. If an error code is returned, the <b>VARIANT</b> pointed to by <i>pVal</i> is left unmodified.</para>
    </param>
    <param name="pType">This parameter can be <b>NULL</b>. If it is not <b>NULL</b>, it must point to a <b>CIMTYPE</b> variable (a <b>LONG</b>) into which the type of the property is placed. It is possible that the value of this property can be a<b>VT_NULL</b><b>VARIANT</b>, in which case it is necessary to determine the actual type of the property.</param>
    <param name="plFlavor">
      <para>Can be <b>NULL</b>. If not <b>NULL</b>, the<b>LONG</b> value pointed to receives information on the origin of the property as follows. For more information, see <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a> and <see cref="WBEM_FLAVOR_TYPE" />.</para>
      <h4>WBEM_FLAVOR_ORIGIN_SYSTEM</h4>
      <para>The property is a standard system property.</para>
      <para>For classes:</para>
      <h4>WBEM_FLAVOR_ORIGIN_PROPAGATED</h4>
      <para>The property was inherited from the parent class.</para>
      <para>The property, while inherited from the parent class, has not been modified at the instance level.</para>
      <h4>WBEM_FLAVOR_ORIGIN_LOCAL</h4>
      <para>The property belongs to the derived-most class.</para>
      <para>The property is modified at the instance level (that is, either a value was supplied or a qualifier was added/modified).</para>
      <para>For instances:</para>
    </param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general<b>HRESULT</b> values, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.NextMethod">
    <summary>
      <para>The<b>IWbemClassObject.NextMethod</b> method is used to retrieve the next method in a method enumeration sequence that starts with a call to <see cref="IWbemClassObject.BeginMethodEnumeration" />.</para>
      <para>This call is only supported if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers that point to CIM instances.</para>
    </summary>
    <param name="lFlags">Reserved. This parameter must be 0 (zero).</param>
    <param name="pstrName">A pointer that should point to <b>NULL</b> prior to the call. This parameter receives the address of a <b>BSTR</b> value containing the method name. The caller must release the string using <b>SysFreeString</b> when it is no longer required.</param>
    <param name="ppInSignature">A pointer that receives a pointer to an<see cref="IWbemClassObject" /> containing the in parameters for the method.</param>
    <param name="ppOutSignature">A pointer that receives a pointer to an<see cref="IWbemClassObject" /> containing the out parameters for the method.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.Put">
    <summary>
      <para>The<b>IWbemClassObject.Put</b> method sets a named property to a new value. This method always overwrites the current value with a new one. When<see cref="IWbemClassObject" /> points to a CIM class definition,<b>Put</b> creates or updates the property value. When<b>IWbemClassObject</b> points to a CIM instance,<b>Put</b> updates a property value only. <b>Put</b> cannot create a property value.</para>
      <para>A user cannot create properties with names that begin or end with an underscore (_). This is reserved for system classes and properties.</para>
    </summary>
    <param name="wszName">A parameter that must point to a valid property name. This parameter cannot be <b>NULL</b>.</param>
    <param name="lFlags">Reserved. This parameter must be 0 (zero).</param>
    <param name="pVal">A parameter that must point to a valid <b>VARIANT</b>, which becomes the new property value. If <i>pVal</i> is <b>NULL</b> or points to a <b>VARIANT</b> of type <b>VT_NULL</b>, the property is set to <b>NULL</b>, that is, no value.</param>
    <param name="Type">
      <para>A type of <b>VARIANT</b> pointed to by <i>pVal</i>.</para>
      <para>The <b>NULL</b> value for a property designated by a <b>VARIANT</b> of type <b>VT_NULL</b> is distinguished from a property of type <b>VT_I4</b> with a 0 (zero) value.</para>
      <para>When creating new properties, if <i>pVal</i> is <b>NULL</b> or points to a <b>VT_NULL</b>, the type of the property is determined from the <i>vtType</i> parameter.</para>
      <para>If <i>pVal</i> is to contain an embedded<see cref="IWbemClassObject" />, the caller must call <b>IWbemClassObject.QueryInterface</b> for <b>IID_IUnknown</b> and place the resulting pointer in the <b>VARIANT</b> using a type of <b>VT_UNKNOWN</b>. The original embedded object is copied during the<b>Put</b> operation, and so cannot be modified by the operation.</para>
      <para>The pointer is treated as read-only. The caller must call <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> after this call is complete.</para>
      <para>Use this parameter only when creating new properties in a CIM class definition and <i>pVal</i> is <b>NULL</b> or points to a <b>VARIANT</b> of type <b>VT_NULL</b>. In such a case, the <i>vtType</i> parameter specifies the CIM type of the property. In every other case, <i>vtType</i> must be 0 (zero). Also, <i>vtType</i> must be 0 (zero) when the underlying object is an instance (even if <i>pVal</i> is <b>NULL</b>), because the type of the property is fixed and cannot be changed. In other words, use <i>vtType</i> if, and only if, <i>pVal</i> is <b>NULL</b> or points to a <b>VT_NULL</b><b>VARIANT</b>, and the underlying object is a CIM class.</para>
      <para>When using<b>IWbemClassObject.Put</b> to assign empty array values to a property, you do not need to specify the exact VT type; you can assign a value to <i>pVal</i> that is a <b>VARIANT</b> with a variant type of <b>VT_ARRAY</b>|<b>VT_VARIANT</b>.</para>
    </param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the values contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.PutMethod">
    <summary>
      <para>The <b>IWbemClassObject.PutMethod</b> is used to create a method. This call is only supported if the current object is a CIM class definition. Method manipulation is not available from<see cref="IWbemClassObject" /> pointers that point to CIM instances.</para>
      <para>The user cannot create methods with names that begin or end with an underscore. This is reserved for system classes and properties.</para>
    </summary>
    <param name="wszName">The method name that is created.</param>
    <param name="lFlags">Reserved. This parameter must be 0 (zero).</param>
    <param name="pInSignature">A pointer to a copy of the <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/--parameters">__Parameters</a> system class that contains the in parameters for the method. This parameter is ignored if set to <b>NULL</b>.</param>
    <param name="pOutSignature">A pointer to a copy of the <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/--parameters">__Parameters</a> system class that contains the out parameters for the object. This parameter is ignored if set to <b>NULL</b>.</param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.SpawnDerivedClass">
    <summary>Use the<b>IWbemClassObject.SpawnDerivedClass</b> method to create a newly derived class object from the current object. The current object must be a class definition that becomes the parent class of the spawned object. The returned object becomes a subclass of the current object.</summary>
    <param name="lFlags">Reserved. This parameter must be 0.</param>
    <param name="ppNewClass">Cannot be <b>NULL</b>. This receives the pointer to the new class definition object. The caller must invoke <b>IWbemClassObject.Release</b> when the object is no longer required, typically after you have invoked<see cref="IWbemServices.PutClass" /> to write the class definition. On error, a new object is not returned, and <i>ppNewClass</i> is left unmodified.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject.SpawnInstance">
    <summary>
      <para>Use the<b>IWbemClassObject.SpawnInstance</b> method to create a new instance of a class. The current object must be a class definition obtained from Windows Management using<see cref="IWbemServices.GetObject" />,<see cref="IWbemServices.CreateClassEnum" />, or<see cref="IWbemServices.CreateClassEnumAsync" /> Then, use this class definition to create new instances.</para>
      <para>A call to<see cref="IWbemServices.PutInstance" /> is required to actually write the instance to Windows Management. If you intend to discard the object before calling<b>IWbemServices.PutInstance</b>, simply make a call to <b>IWbemClassObject.Release</b>.</para>
      <para>Note that spawning an instance from an instance is supported but the returned instance will be empty.</para>
    </summary>
    <param name="lFlags">Reserved. This parameter must be 0.</param>
    <param name="ppNewInstance">Cannot be <b>NULL</b>. It receives a new instance of the class. The caller must invoke <b>IWbemClassObject.Release</b> when the pointer is no longer required. On error, a new object is not returned and the pointer is left unmodified.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>. For general <b>HRESULT</b> values, see <a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</returns>
  </member>
  <member name="IWbemClassObject">
    <summary>The <b>IWbemClassObject</b> interface contains and manipulates both class definitions and class object instances.</summary>
  </member>
</doc>