<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWbemObjectAccess.GetPropertyHandle">
    <summary>The<b>GetPropertyHandle</b> method returns a unique handle that identifies a property. You can use this handle to identify properties when using<see cref="IWbemObjectAccess" /> methods to read or write property values.</summary>
    <param name="wszPropertyName">Constant, null-terminated string of 16-bit Unicode characters that contains the property name.</param>
    <param name="pType">Pointer to a <b>CIMTYPE</b> used to return the CIM type of the property.</param>
    <param name="plHandle">Pointer to an integer used to return the property handle.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</returns>
  </member>
  <member name="IWbemObjectAccess.GetPropertyInfoByHandle">
    <summary>The<b>GetPropertyInfoByHandle</b> method returns the name and data type of the property that is associated with a property handle.</summary>
    <param name="lHandle">Integer that contains the handle identifying the property.</param>
    <param name="pstrName">Pointer to a string used to return the name of the specified property.</param>
    <param name="pType">Pointer to a <b>CIMTYPE</b> used to return the type of the property.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</returns>
  </member>
  <member name="IWbemObjectAccess.Lock">
    <summary>The<b>Lock</b> method prevents other threads from updating an<see cref="IWbemObjectAccess" /> object until it is unlocked.</summary>
    <param name="lFlags">Reserved. This parameter is currently ignored and is reserved for future use.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful.</returns>
  </member>
  <member name="IWbemObjectAccess.ReadDWORD">
    <summary>The <b>ReadDWORD</b> method reads 32 bits of property data using a property handle.</summary>
    <param name="lHandle">Integer that contains the handle that identifies this property.</param>
    <param name="pdw">Pointer to a 32-bit unsigned integer used to return the data.</param>
    <returns>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</returns>
  </member>
  <member name="IWbemObjectAccess.ReadPropertyValue">
    <summary>The <b>ReadPropertyValue</b> method returns a specified number of bytes of a property associated with a property handle. Use this method to read the value of a property that contains a string or to read a property that contains a value that is not 32 (<b>DWORD</b>) or 64 (<b>QWORD</b>) bits long.</summary>
    <param name="lHandle">Integer that contains the handle identifying this property.</param>
    <param name="lBufferSize">Integer that contains the buffer size.</param>
    <param name="plNumBytes">Pointer to an integer used to return the number of bytes read.</param>
    <param name="aData">Pointer to an array used to return the property data.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful; otherwise, this method returns an <b>HRESULT</b> with one of the following values.</returns>
  </member>
  <member name="IWbemObjectAccess.ReadQWORD">
    <summary>The <b>ReadQWORD</b> method reads 64 bits of property data identified by a property handle.</summary>
    <param name="lHandle">Integer that contains the handle identifying the property.</param>
    <param name="pqw">Pointer to a unsigned 64-bit integer used to return the data being read.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful. If the property was <b>NULL</b>, then the method returns <b>WBEM_S_FALSE</b>.</returns>
  </member>
  <member name="IWbemObjectAccess.Unlock">
    <summary>The <b>Unlock</b> method allows other threads to update the property values of an<see cref="IWbemObjectAccess" /> object.</summary>
    <param name="lFlags">Reserved. This parameter is currently ignored and is reserved for future use.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful.</returns>
  </member>
  <member name="IWbemObjectAccess.WriteDWORD">
    <summary>The <b>WriteDWORD</b> method writes 32 bits of data to a property identified by a property handle.</summary>
    <param name="lHandle">Integer that contains the handle identifying this property.</param>
    <param name="dw">Unsigned 32-bit integer that contains the data being written.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful.</returns>
  </member>
  <member name="IWbemObjectAccess.WritePropertyValue">
    <summary>The <b>WritePropertyValue</b> method writes a specified number of bytes to a property identified by a property handle. Use this method to set string and all other non-<b>DWORD</b> or non-<b>QWORD</b> data.</summary>
    <param name="lHandle">Integer that contains the handle that identifies this property.</param>
    <param name="lNumBytes">Integer that contains the number of bytes being written to the property. For nonstring property values, <i>lNumBytes</i> must be the correct data size of the property type specified. For string property values such as reference, string, and datetime, <i>lNumBytes</i> must be the length of the specified string in bytes, and the string itself must be of an even length in bytes and be followed with a null-termination character.</param>
    <param name="aData">Pointer to the constant byte type array that contains the data.</param>
    <returns>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</returns>
  </member>
  <member name="IWbemObjectAccess.WriteQWORD">
    <summary>The <b>WriteQWORD</b> method writes 64 bits of data to a property by using a property handle.</summary>
    <param name="lHandle">Integer that contains the handle that identifies this property.</param>
    <param name="pw">Unsigned 64-bit integer that contains the data written to the specified property.</param>
    <returns>This method returns <b>WBEM_S_NO_ERROR</b> if successful.</returns>
  </member>
  <member name="IWbemObjectAccess">
    <summary>
      <para>The<b>IWbemObjectAccess</b> interface provides access to the methods and properties of an object. An<b>IWbemObjectAccess</b> object is a container for an instance updated by a <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/gloss-r">refresher</a>. With the<b>IWbemObjectAccess</b> interface, you can get and set properties by using property handles instead of object property names.</para>
      <div>
        <b>Note</b>  This interface is not implemented by client applications or providers under any circumstances. The implementation provided by WMI is the only one that is supported. A pointer to the interface can be retrieved by calling <see cref="IWbemClassObject.QueryInterface" />.</div>
    </summary>
  </member>
</doc>