<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWbemQualifierSet.BeginEnumeration">
    <summary>
      <para>The
<b>IWbemQualifierSet.BeginEnumeration</b> method resets before there is an enumeration of all the qualifiers in the object. To enumerate all of the qualifiers on an object, this method must be called before the first call to
<see cref="IWbemQualifierSet.Next" />. The order in which qualifiers are enumerated is guaranteed to be invariant for a given instance of
<see cref="IWbemQualifierSet" />.</para>
    </summary>
    <param name="lFlags">
      <para>Specifies the qualifiers to include in the enumeration. It must be one of the following constants.</para>
      <h4>0 (Zero)</h4>
      <para>Return the names of all qualifiers.</para>
      <h4>WBEM_FLAG_LOCAL_ONLY</h4>
      <para>Return only the names of qualifiers specific to the current property or object. If the current qualifiers set refers to a property, return only the qualifiers specific to the property (including overrides), and not those qualifiers propagated from the class definition. If the current qualifiers set refers to an instance, return only instance-specific qualifier names. If the current qualifiers set refers to a class, return only qualifiers specific to the class being derived.</para>
      <h4>WBEM_FLAG_PROPAGATED_ONLY</h4>
      <para>Return only the names of qualifiers propagated from another object. For example, if the current qualifier set refers to a property, return only the qualifiers propagated to this property from the class definition, and not those from the property itself. If the current qualifier set refers to an instance, only return those qualifiers propagated from the class definition. If the current qualifier set refers to a class, only return those qualifier names inherited from the parent classes.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso cref="IWbemQualifierSet" />
    <seealso cref="IWbemQualifierSet.Next" />
  </member>
  <member name="IWbemQualifierSet.Delete">
    <summary>
      <para>The <b>IWbemQualifierSet.Delete</b> method deletes the specified qualifier by name. Due to qualifier propagation rules, a particular qualifier may have been inherited from another object and merely overridden in the current class or instance. In this case, use the
<b>Delete</b> method to reset the qualifier to the original inherited value.</para>
    </summary>
    <param name="wszName">
      <para>Name of the qualifier to delete. The pointer is treated as read-only.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</seealso>
  </member>
  <member name="IWbemQualifierSet.EndEnumeration">
    <summary>
      <para>Call the
<b>IWbemQualifierSet.EndEnumeration</b> method when you plan to terminate enumerations initiated with
<see cref="IWbemQualifierSet.BeginEnumeration" /> and
<see cref="IWbemQualifierSet.Next" />. This call is recommended, but not required. It immediately releases resources associated with the enumeration.</para>
    </summary>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso cref="IWbemQualifierSet" />
    <seealso cref="IWbemQualifierSet.BeginEnumeration" />
    <seealso cref="IWbemQualifierSet.Next" />
  </member>
  <member name="IWbemQualifierSet.Get">
    <summary>
      <para>The <b>IWbemQualifierSet.Get</b> method gets the specified named qualifier, if found.</para>
    </summary>
    <param name="wszName">
      <para>Name of the qualifier for which the value is being requested. The pointer is treated as read-only.</para>
    </param>
    <param name="lFlags">
      <para>Reserved. This parameter must be 0.</para>
    </param>
    <param name="pVal">
      <para>When successful, <b>VARIANT</b> is assigned to the correct type and value for the qualifier. <b>VariantInit</b> is called on this <b>VARIANT</b>.</para>
      <para>It is the responsibility of the caller to call <b>VariantClear</b> on the pointer when the value is no longer required. If there is an error code, the <b>VARIANT</b> pointed to by <i>pVal</i> is not modified.</para>
      <para>If this parameter is <b>NULL</b>, the parameter is ignored.</para>
    </param>
    <param name="plFlavor">
      <para>Can be <b>NULL</b>. If not <b>NULL</b>, this must point to a <b>LONG</b> that receives the qualifier flavor bits for the requested qualifier. For more information, see
<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a> and <see cref="WBEM_FLAVOR_TYPE" />.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</seealso>
  </member>
  <member name="IWbemQualifierSet.GetNames">
    <summary>
      <para>The
<b>IWbemQualifierSet.GetNames</b> method retrieves the names of all of the qualifiers available from the current object or property. Alternately, depending on the filter value of <i>IFlags</i>, this method retrieves the names of certain qualifiers.</para>
      <para>You can access these qualifiers by name, using
<see cref="IWbemQualifierSet.Get" /> for each name. It is not an error for any given object to have zero qualifiers, so the number of strings in <i>pstrNames</i> on return can be 0, even though <b>WBEM_S_NO_ERROR</b> returns.</para>
    </summary>
    <param name="lFlags">
      <para>One of the following constants.</para>
      <h4>0 (Zero)</h4>
      <para>Return the names of all qualifiers.</para>
      <h4>WBEM_FLAG_LOCAL_ONLY</h4>
      <para>Return only the names of qualifiers specific to the current property or object. If the current qualifiers set refers to a property, return only the qualifiers specific to the property (including overrides), and not those qualifiers propagated from the class definition. If the current qualifiers set refers to an instance, return only instance-specific qualifier names. If the current qualifiers set refers to a class, return only qualifiers specific to the class being derived.</para>
      <h4>WBEM_FLAG_PROPAGATED_ONLY</h4>
      <para>Return only the names of qualifiers propagated from another object. For example, if the current qualifier set refers to a property, return only the qualifiers propagated to this property from the class definition, and not those from the property itself. If the current qualifier set refers to an instance, return only those qualifiers propagated from the class definition. If the current qualifier set refers to a class, return only those qualifier names inherited from the parent classes.</para>
    </param>
    <param name="pNames">
      <para>A new <b>SAFEARRAY</b> is created that contains the requested names.</para>
      <para>In all cases where no error is returned, a new array is created and <i>pstrNames</i> is set to point to it. This occurs even though the resulting array has zero elements. On error, a new <b>SAFEARRAY</b> is not returned.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <remarks>
      <para>For an example of using <b>SAFEARRAY</b>s of <b>BSTR</b>s, see
<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/retrieving-part-of-an-instance">Retrieving Part of a WMI Instance</a>.</para>
    </remarks>
    <seealso cref="IWbemQualifierSet" />
    <seealso cref="IWbemQualifierSet.BeginEnumeration" />
    <seealso cref="IWbemQualifierSet.Get" />
  </member>
  <member name="IWbemQualifierSet.Next">
    <summary>
      <para>The <b>IWbemQualifierSet.Next</b> method retrieves the next qualifier in an enumeration that started with
<see cref="IWbemQualifierSet.BeginEnumeration" />. This method is called repeatedly to enumerate all the qualifiers until <b>WBEM_S_NO_MORE_DATA</b> returns. To terminate the enumeration early, call
<see cref="IWbemQualifierSet.EndEnumeration" />.</para>
      <para>The order of the qualifiers returned during the enumeration is not defined.</para>
    </summary>
    <param name="lFlags">
      <para>Reserved. This parameter must be 0 (zero).</para>
    </param>
    <param name="pstrName">
      <para>This parameter receives the name of the qualifier. A new <b>BSTR</b> is always allocated whenever <b>WBEM_S_NO_ERROR</b> returns.</para>
      <para>If <i>pstrName</i> is <b>NULL</b>, it is ignored; otherwise, the caller must ensure that this parameter does not point to a valid <b>BSTR</b> on entry, or else there will be a memory leak. Also, the caller must remember to call <b>SysFreeString</b> on the returned string when it is no longer required.</para>
    </param>
    <param name="pVal">
      <para>This parameter receives the value for the qualifier. <b>VariantInit</b> is called on the <b>VARIANT</b> by this method. The caller must call <b>VariantClear</b> on this pointer when the value is no longer required. If an error code is returned, the <b>VARIANT</b> pointed to by <i>pVal</i> is left unmodified. This parameter is ignored if set to <b>NULL</b>.</para>
    </param>
    <param name="plFlavor">
      <para>If not <b>NULL</b>, the value pointed to is set to the qualifier flavor. For more information, see
<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a> and <see cref="WBEM_FLAVOR_TYPE" />.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> indicating the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso cref="IWbemQualifierSet.BeginEnumeration" />
    <seealso cref="IWbemQualifierSet.EndEnumeration" />
    <seealso href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</seealso>
  </member>
  <member name="IWbemQualifierSet.Put">
    <summary>
      <para>The <b>IWbemQualifierSet.Put</b> method writes the named qualifier and value. The new qualifier overwrites the previous  value of the same name. If the qualifier does not exist, it is created.</para>
      <para>Sometimes it is not possible to write the value of a qualifier, for example, if the qualifier is  propagated from another object. Typically, propagated qualifiers are read-only, but they can be overridden. For more information, see
<a href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</a>.</para>
      <para>When using the <a href="https://docs.microsoft.com//windows/desktop/WmiSdk/standard-qualifiers">Key</a> qualifier, it is not necessary to specify any flavors or propagation rules.</para>
      <para>The user may not create qualifiers with names that begin or end with an underscore (_). This is reserved for system classes and properties.</para>
    </summary>
    <param name="wszName">
      <para>Name of the qualifier that is being written. The pointer is treated as read-only.</para>
    </param>
    <param name="pVal">
      <para>Cannot be <b>NULL</b>. This must point to a valid <b>VARIANT</b> that contains the qualifier value to be written. The pointer is treated as read-only. It is the caller's responsibility to call <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> on this pointer after the value is not required.</para>
      <para>Only variants and arrays of type <b>VT_I4</b>, <b>VT_R8</b>, <b>VT_BSTR</b>, <b>VT_BOOL</b> are supported.</para>
    </param>
    <param name="lFlavor">
      <para>Desired qualifier flavors for this qualifier.  The following list lists the appropriate constants for <i>lFlavor</i>. The default value is zero (0).</para>
      <h4>WBEM_FLAVOR_OVERRIDABLE (0 (0x0))</h4>
      <para>The qualifier value can be overridden in a derived class or an instance. This is the default. Using this constant is the same as using the <b>EnableOverride</b> flag.</para>
      <h4>WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE (1 (0x1))</h4>
      <para>The qualifier is propagated to instances. Using this constant is the same as using the <b>ToInstance</b> flag.</para>
      <h4>WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS (2 (0x2))</h4>
      <para>The qualifier is propagated to derived classes. Using this constant is the same as using the <b>ToSubClass</b> flag.</para>
      <h4>WBEM_FLAVOR_NOT_OVERRIDABLE (16 (0x10))</h4>
      <para>The qualifier value cannot be overridden in a derived class or an instance. Using this constant is the same as using the <b>DisableOverride</b> flag.</para>
      <h4>WBEM_FLAVOR_AMENDED (128 (0x80))</h4>
      <para>The qualifier is localized. Using this constant is the same as using the <b>Amended</b> flag.</para>
    </param>
    <returns>
      <para>This method returns an <b>HRESULT</b> that indicates the status of the method call. The following list lists the value contained within an <b>HRESULT</b>.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WmiSdk/qualifier-flavors">Qualifier Flavors</seealso>
  </member>
  <member name="IWbemQualifierSet">
    <summary>
      <para>The
<b>IWbemQualifierSet</b> interface acts as a container for the entire set of named qualifiers for a single property or entire object (a class or instance). The contents of the container depend on how the pointer was obtained. If the pointer was obtained from
<see cref="IWbemClassObject.GetQualifierSet" />, the object consists of the set of qualifiers for an entire object. If the pointer was obtained from
<see cref="IWbemClassObject.GetPropertyQualifierSet" />, then the object represents the qualifiers for a particular property.</para>
    </summary>
    <remarks>
      <para>It is strongly recommended that Windows Management dynamic providers never implement this interface because  WMI provides the implementation. For more information, see
<see cref="IWbemClassObject" />.</para>
      <para>Within WMI, this interface is always in-process. Put operations only affect the local copy of the object. Get operations retrieve values from the local copy. Updates are performed only when entire objects are read or written using methods on the
<see cref="IWbemServices" /> interface.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WmiSdk/com-api-for-wmi">COM API for WMI</seealso>
  </member>
</doc>