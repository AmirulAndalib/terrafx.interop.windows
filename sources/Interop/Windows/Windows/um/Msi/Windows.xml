<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.MsiAdvertiseProduct">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductA">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductW">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductEx">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductExA">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductExW">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductEx">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductExA">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductExW">
    <summary>The<b>MsiAdvertiseProductEx</b> function generates an advertise script or advertises a product to the computer. This function enables Windows Installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<b>MsiAdvertiseProductEx</b>. The <b>MsiAdvertiseProductEx</b> function provides the same functionality as<see cref="MsiAdvertiseProduct" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to the script file to be created with the advertised information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-computer installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon–delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path–transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The language to use if the source supports multiple languages.</param>
    <param name="dwPlatform">
      <para>Bit flags that control for which platform the installer should create the script. This parameter is ignored if <i>szScriptfilePath</i> is null. If <i>dwPlatform</i> is zero (0), then the script is created based on the current platform. This is the same functionality as<see cref="MsiAdvertiseProduct" />. If <i>dwPlatform</i> is 1 or 2, the installer creates script for the specified platform.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>none</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the current platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_X86</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x86 platform.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for Itanium-based systems.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIARCHITECTUREFLAGS_AMD64</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Creates a script for the x64 platform.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>Bit flags that specify extra advertisement options. Nonzero value is only available in Windows Installer versions shipped with Windows Server 2003 and Windows XP with SP1 and later.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIADVERTISEOPTIONS_INSTANCE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Multiple instances through product code changing transform support flag. Advertises a new instance of the product. Requires that the <i>szTransforms</i> parameter includes the instance transform that changes the product code. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProduct">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductA">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseProductW">
    <summary>The<b>MsiAdvertiseProduct</b> function generates an advertise script or advertises a product to the computer. The<b>MsiAdvertiseProduct</b> function enables the installer to write to a script the registry and shortcut information used to assign or publish a product. The script can be written to be consistent with a specified platform by using<see cref="MsiAdvertiseProductEx" />.</summary>
    <param name="szPackagePath">The full path to the package of the product being advertised.</param>
    <param name="szScriptfilePath">
      <para>The full path to script file that will be created with the advertise information. To advertise the product locally to the computer, set ADVERTISEFLAGS_MACHINEASSIGN or ADVERTISEFLAGS_USERASSIGN.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-machine installation of the product available to all users.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ADVERTISEFLAGS_USERASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Set to advertise a per-user installation of the product available to a particular user.</description>
        </listheader>
      </list>
    </param>
    <param name="szTransforms">A semicolon-delimited list of transforms to be applied. The list of transforms can be prefixed with the @ or | character to specify the secure caching of transforms. The @ prefix specifies secure-at-source transforms and the | prefix indicates secure full path transforms. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/secured-transforms">Secured Transforms</a>. This parameter may be null.</param>
    <param name="lgidLanguage">The installation language to use if the source supports multiple languages.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An initialization error occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error is returned if an attempt is made to generate an advertise script on any platform other than Windows 2000 or Windows XP. Advertisement to the local computer is supported on all platforms.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiAdvertiseScript">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiAdvertiseScriptA">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiAdvertiseScriptW">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiAdvertiseScript">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiAdvertiseScriptA">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiAdvertiseScriptW">
    <summary>The<b>MsiAdvertiseScript</b> function copies an advertised script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="dwFlags">
      <para>The following bit flags from SCRIPTFLAGS control advertisement. The value of <i>dwFlags</i> can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_CACHEINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x001</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the icons need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_SHORTCUTS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x004</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the shortcuts need to be created or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_MACHINEASSIGN</b>
                </term>
              </listheader>
              <listheader>
                <term>0x008</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the product to be assigned to a computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CNFGINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x020</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the configuration and management information in the registry data needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x040</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag to force validation of the transforms listed in the script against previously registered transforms for this product. Note that transform conflicts are detected using a string comparison that is case insensitive and are evaluated between per-user and per-machine installations across all contexts. If the list of transforms in the script does not match the transforms registered for the product, the function returns ERROR_INSTALL_TRANSFORM_FAILURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_CLASSINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x080</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to COM classes needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_EXTENSIONINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x100</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if advertisement information in the registry related to an extension needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA_APPINFO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x180</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCRIPTFLAGS_REGDATA</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1A0</term>
              </listheader>
            </list>
          </description>
          <description>Include this flag if the advertisement information in the registry needs to be written or removed.</description>
        </listheader>
      </list>
    </param>
    <param name="phRegData">
      <para>A registry key under which temporary information about registry data is to be written. If this parameter is null, the registry data is placed under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-null, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</para>
      <para>Note that this registry key cannot be used when generating an advertisement of a product for a user or a computer because the provider of the registry key generally deletes the key. The registry key is located outside of the normal registry locations for shell, class, and .msi configuration information and it is not under <b>HKEY_CLASSES_ROOT</b>. This registry key is only intended for getting temporary information about registry data in a script.</para>
    </param>
    <param name="fRemoveItems">TRUE if specified items are to be removed instead of being created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatches">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatchesA">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatchesW">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatches">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatchesA">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiApplyMultiplePatchesW">
    <summary>The <b>MsiApplyMultiplePatches</b> function applies one or more patches to products eligible to receive the patches. The <b>MsiApplyMultiplePatches</b> function sets the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property with a list of patches delimited by semicolons and invokes the patching of the target products. Other properties can be set using a properties list.</summary>
    <param name="szPatchPackages">A semicolon-delimited list of the paths to patch files as a single string. For example: ""c:\sus\download\cache\Office\sp1.msp; c:\sus\download\cache\Office\QFE1.msp; c:\sus\download\cache\Office\QFEn.msp" "</param>
    <param name="szProductCode">This parameter is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be patched. The user or application calling <b>MsiApplyMultiplePatches</b> must have privileges to apply patches. When this parameter is <b>NULL</b>, the patches are applied to all eligible products. When this parameter is non-<b>NULL</b>, the patches are applied only to the specified product.</param>
    <param name="szPropertiesList">
      <para>A null-terminated string that specifies command–line property settings used during the patching of products. If there are no command–line property settings, pass in a <b>NULL</b> pointer. An empty string is an invalid parameter. These properties are shared by all target products. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>.</para>
      <div>
        <b>Note</b>  The properties list should not contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/patch">PATCH</a> property. If the <b>PATCH</b> property is set in the command line the value is ignored and is overwritten with the patches being applied.</div>
    </param>
    <returns>
      <para>The <b>MsiApplyMultiplePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some arguments passed in are incorrect or contradicting.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed and all products are successfully patched. <b>ERROR_SUCCESS</b> is returned only if all the products eligible for the patches are patched successfully. If none of the new patches are applicable, <see cref="MsiApplyMultiplePatches" /> returns <b>ERROR_SUCCESS</b> and product state remains unchanged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_INITIATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart initiated by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All the target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS_REBOOT_REQUIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The restart required by the last transaction terminated this call to <see cref="MsiApplyMultiplePatches" />. All target products may not have been patched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages provide is not a valid one.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the patch packages is unsupported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any error in Winerror.h</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Implies possible partial completion or that one or more transactions failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransaction">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransactionA">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransactionW">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransaction">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransactionA">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiBeginTransactionW">
    <summary>
      <para>The <b>MsiBeginTransaction</b> function starts <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction processing</a> of a multiple-package installation and returns an identifier for the transaction. The <see cref="MsiEndTransaction" /> function ends the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="szName">Name of the multiple-package installation.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set it Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
      </list>
    </param>
    <param name="phTransactionHandle">Transaction ID is a <b>MSIHANDLE</b> value that identifies the transaction. Only one process can own a transaction at a time.</param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <see cref="MsiJoinTransaction" /> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiBeginTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed. This function requires the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only one transaction can be open on a system at a time. The function returns this error if called while another transaction is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installations</a> have been disabled by the <a href="https://docs.microsoft.com//windows/desktop/Msi/-disablerollback">DISABLEROLLBACK</a> property or <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback">DisableRollback</a> policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiCloseAllHandles">
    <summary>The<b>MsiCloseAllHandles</b> function closes all open installation handles allocated by the current thread. This is a diagnostic function and should not be used for cleanup.</summary>
    <returns>This function returns 0 if all handles are closed. Otherwise, the function returns the number of handles open prior to its call.</returns>
  </member>
  <member name="Windows.MsiCloseHandle">
    <summary>The<b>MsiCloseHandle</b> function closes an open installation handle.</summary>
    <param name="hAny">Specifies any open installation handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfo">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfoA">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfoW">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfo">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfoA">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiCollectUserInfoW">
    <summary>The<b>MsiCollectUserInfo</b> function obtains and stores the user information and product ID from an installation wizard.</summary>
    <param name="szProduct">Specifies the product code of the product for which the user information is collected.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiConfigureFeature">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureFeatureA">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureFeatureW">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureFeature">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureFeatureA">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureFeatureW">
    <summary>The<b>MsiConfigureFeature</b> function configures the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="szFeature">Specifies the feature ID for the feature to be configured.</param>
    <param name="eInstallState">
      <para>Specifies the installation state for the feature. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to its default location.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to the initialization has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProduct">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductA">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductW">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductEx">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductExA">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductExW">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductEx">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductExA">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductExW">
    <summary>The<b>MsiConfigureProductEx</b> function installs or uninstalls a product. A product command line can also be specified.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameters are ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any value other than <b>INSTALLSTATE_DEFAULT</b>.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between <b>INSTALLLEVEL_MINIMUM</b> and <b>INSTALLLEVEL_MAXIMUM</b> to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <param name="szCommandLine">Specifies the command-line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProduct">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductA">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiConfigureProductW">
    <summary>The<b>MsiConfigureProduct</b> function installs or uninstalls a product.</summary>
    <param name="szProduct">Specifies the product code for the product to be configured.</param>
    <param name="iInstallLevel">
      <para>Specifies how much of the product should be installed when installing the product to its default state. The <i>iInstallLevel</i> parameter is ignored, and all features are installed, if the <i>eInstallState</i> parameter is set to any other value than INSTALLSTATE_DEFAULT.</para>
      <para>This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The authored default features are installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MINIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Only the required features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLEVEL_MAXIMUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All features are installed. You can specify a value between INSTALLLEVEL_MINIMUM and INSTALLLEVEL_MAXIMUM to install a subset of available features.</description>
        </listheader>
      </list>
    </param>
    <param name="eInstallState">
      <para>Specifies the installation state for the product. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is to be installed with all features installed to the default states specified in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error that relates to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatches">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatchesA">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatchesW">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatches">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatchesA">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDetermineApplicablePatchesW">
    <summary>The <b>MsiDetermineApplicablePatches</b> function takes a set of patch files, XML files, and XML blobs and determines which patches apply to a specified Windows Installer package and in what sequence. The function can account for superseded or obsolete patches. This function does not account for products or patches that are installed on the system that are not specified in the set.</summary>
    <param name="szProductPackagePath">Full path to an .msi file. The function determines the patches that are applicable to this package and in what sequence.</param>
    <param name="cPatchInfo">Number of patches in the array. Must be greater than zero.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The<b>MsiDetermineApplicablePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequence">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequenceA">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequenceW">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequence">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequenceA">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiDeterminePatchSequenceW">
    <summary>The <b>MsiDeterminePatchSequence</b> function takes a set of patch files, XML files, and XML blobs and determines the best sequence of application for the patches to a specified installed product. This function accounts for patches that have already been applied to the product and accounts for obsolete and superseded patches.</summary>
    <param name="szProductCode">The product that is the target for the set of patches. The value must be the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product.</param>
    <param name="szUserSid">Null-terminated string that specifies a security identifier (SID) of a user. This parameter restricts the context of enumeration for this user account. This parameter cannot be the special SID strings "S-1-1-0" (everyone) or "S-1-5-18" (local system). For the machine context <i>dwContext</i> is set to<b> MSIINSTALLCONTEXT_MACHINE</b> and <i>szUserSid</i> must be <b>NULL</b>. For the current user context <i>szUserSid</i> can be null and <i>dwContext</i> can be set to <b>MSIINSTALLCONTEXT_USERMANAGED</b> or <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>.</param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-managed installations of the product for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for all per-user-unmanaged installations for the user specified by <i>szUserSid</i>. A null <i>szUserSid</i> with this context means the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patches are considered for the per-machine installation. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> the <i>szUserSid</i> parameter must be null.</description>
        </listheader>
      </list>
    </param>
    <param name="cPatchInfo">The number of patches in the array.</param>
    <param name="pPatchInfo">Pointer to an array of <see cref="MSIPATCHSEQUENCEINFO" /> structures.</param>
    <returns>
      <para>The <b>MsiDeterminePatchSequence</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a manner not covered in the other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An argument is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_NO_SEQUENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No valid sequence could be found for the set of patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation package referenced by path cannot be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patches were successfully sorted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATH_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The path to the .msi file was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PATCH_XML</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The XML patch data is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation package was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user that is not an administrator attempted to call the function with a context of a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data for a registered patch or product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID specified is not registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_NOT_CALLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer version 3.0 is required to determine the best patch sequence. The function was called with <i>szProductCode</i> not yet installed with Windows Installer version 3.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if the function was called from a <a href="https://docs.microsoft.com//windows/desktop/Msi/custom-actions">custom action</a> or if MSXML 3.0 is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLog">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLogA">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLogW">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLog">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLogA">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnableLogW">
    <summary>The<b>MsiEnableLog</b> function sets the log mode for all subsequent installations that are initiated in the calling process.</summary>
    <param name="dwLogMode">
      <para>Specifies the log mode. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs out of memory or fatal exit information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the error messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_EXTRADEBUG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sends extra debugging information, such as handle creation information, to the log file. <para><b>Windows 2000 and Windows XP:  </b>This feature is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the warning messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the user requests.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the status messages that are not displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the start of new installation actions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the data record with the installation action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the parameters for user-interface initialization.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROPERTYDUMP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the property values at termination.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_VERBOSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logs the information in all the other log modes, except for <b>INSTALLLOGMODE_EXTRADEBUG</b>. This sends large amounts of information to a log file not generally useful to users. May be used for technical support.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_LOGONLYONERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Logging information is collected but is less frequently saved to the log file. This can improve the performance of some installations, but may have little benefit for large installations. The log file is removed when the installation succeeds. If the installation fails, all logging information is saved to the log file. <para><b>Windows Installer 2.0:  </b>This log mode is not available.</para></description>
        </listheader>
      </list>
    </param>
    <param name="szLogFile">Specifies the string that holds the full path to the log file. Entering a null disables logging, in which case <i>dwlogmode</i> is ignored. If a path is supplied, then <i>dwlogmode</i> must not be zero.</param>
    <param name="dwLogAttributes">
      <para>Specifies how frequently the log buffer is to be flushed.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_APPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this value is set, the installer appends the existing log specified by <i>szLogFile</i>. If not set, any existing log specified by <i>szLogFile</i> is overwritten.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGATTRIBUTES_FLUSHEACHLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces the log buffer to be flushed after each line. If this value is not set, the installer flushes the log buffer after 20 lines by calling <see cref="FlushFileBuffers" />.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid log mode was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEndTransaction">
    <summary>
      <para>The <b>MsiEndTransaction</b> function can commit or roll back all the installations belonging to the transaction opened by the <see cref="MsiBeginTransaction" /> function. This function should be called by the current owner of the transaction.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="dwTransactionState">
      <para>The value of this parameter determines whether the installer commits or rolls back all the installations belonging to the transaction. The value can be one of the following.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTIONSTATE_ROLLBACK</term>
              </listheader>
            </list>
          </description>
          <description>Performs a <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installation</a> to undo changes to the system belonging to the transaction opened by the <see cref="MsiBeginTransaction" /> function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTIONSTATE_COMMIT</term>
              </listheader>
            </list>
          </description>
          <description>Commits all changes to the system belonging to the transaction. Runs any <a href="https://docs.microsoft.com//windows/desktop/Msi/commit-custom-actions">Commit Custom Actions</a> and commits to the system any changes to Win32 or common language runtime assemblies. Deletes the rollback script, and after using this option, the transaction's changes can no longer be undone with a <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">Rollback Installation</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiEndTransaction</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A transaction can be ended only by the current owner.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation belonging to the transaction could not be completed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation belonging to the transaction is still in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ROLLBACK_DISABLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An installation belonging to the transaction did not complete. During the installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/disablerollback-action">DisableRollback</a> action disabled <a href="https://docs.microsoft.com//windows/desktop/Msi/rollback-installation">rollback installations</a> of the package. The installer rolls back the installation up to the point where rollback was disabled, and the function returns this error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClients">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsA">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsW">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsEx">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsExA">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsExW">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsEx">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsExA">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsExW">
    <summary>
      <para>The<b>MsiEnumClientsEx</b> function enumerates the installed applications that use a specified component. The function retrieves a <a href="https://docs.microsoft.com//windows/desktop/Msi/product-codes">product code</a> for an application each time it is called.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 or earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 5.0.</para>
    </summary>
    <param name="szComponent">The component code GUID that identifies the component. The function enumerates the applications that use this component.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that contains a security identifier (SID.) The enumeration of applications extends to users identified by this SID. The special SID string s-1-1-0 (Everyone) enumerates all applications for all users in the system. A SID value other than s-1-1-0 specifies a user SID for a particular user and enumerates the instances of applications installed by the specified user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for a particular user. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies an enumeration for all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate applications that exist in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that extends the enumeration to instances of applications installed in the specified installation context. The enumeration includes only instances of applications that are installed by the users identified by <i>szUserSid</i>.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the value of the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwProductIndex">Specifies the index of the application to retrieve. The value of this parameter must be zero (0) in the first call to the function. For each subsequent call, the index must be incremented by 1. The index should only be incremented if the previous call to the function returns <b>ERROR_SUCCESS</b>.</param>
    <param name="szProductBuf">A string value that receives the product code for the application. The length of the buffer at this location should be large enough to hold a null-terminated string value containing the product code. The first 38 <b>TCHAR</b> characters receives the GUID for the component, and the 39th character receives a terminating NULL character.</param>
    <param name="pdwInstalledContext">
      <para>A flag that gives the installation context of the application.</para>
      <para>This can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The application is in the per-machine installation installation context.</description>
        </listheader>
      </list>
    </param>
    <param name="szSid">
      <para>Receives the security identifier (SID) that identifies the user that installed the application. The location receives an empty string value if this instance of the application exists in a per-machine installation context.</para>
      <para>The length of the buffer should be large enough to hold a null-terminated string value containing the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and the location pointed to by <i>pcchSid</i> receives the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is a valid pointer to a location in memory, the function returns <b>ERROR_SUCCESS</b> and the location receives the number of <b>TCHAR</b> in the SID, not including the terminating null character. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer resized large enough to contain *pcchSid + 1 characters.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>Empty string</term>
              </listheader>
            </list>
          </description>
          <description>The application is installed in a per-machine installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The SID for the user that installed the product.</description>
        </listheader>
      </list>
    </param>
    <param name="pcchSid">
      <para>Pointer to a location in memory that contains a variable that specifies the number of <b>TCHAR</b> in the SID, not including the terminating null character. When the function returns, this variable is set to the size of the requested SID whether or not the function can successfully copy the SID and terminating null character into the buffer location pointed to by <i>szSid</i>. The size is returned as the number of TCHAR in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns <b>ERROR_INVALID_PARAMETER</b>. If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the SID exists, without retrieving the SID value.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumClientsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Administratator privileges are required to enumerate components of applications installed by users other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more applications to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClients">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsA">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumClientsW">
    <summary>The<b>MsiEnumClients</b> function enumerates the clients for a given installed component. The function retrieves one product code each time it is called.</summary>
    <param name="szComponent">Specifies the component whose clients are to be enumerated.</param>
    <param name="iProductIndex">Specifies the index of the client to retrieve. This parameter should be zero for the first call to the<b>MsiEnumClients</b> function and then incremented for subsequent calls. Because clients are not ordered, any new client has an arbitrary index. This means that the function can return clients in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no clients to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiers">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiersA">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiersW">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiers">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiersA">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponentQualifiersW">
    <summary>The<b>MsiEnumComponentQualifiers</b> function enumerates the advertised qualifiers for the given component. This function retrieves one qualifier each time it is called.</summary>
    <param name="szComponent">Specifies component whose qualifiers are to be enumerated.</param>
    <param name="iIndex">Specifies the index of the qualifier to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponentQualifiers</b> function and then incremented for subsequent calls. Because qualifiers are not ordered, any new qualifier has an arbitrary index. This means that the function can return qualifiers in any order.</param>
    <param name="lpQualifierBuf">Pointer to a buffer that receives the qualifier code.</param>
    <param name="pcchQualifierBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpQualifierBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character.</param>
    <param name="lpApplicationDataBuf">Pointer to a buffer that receives the application registered data for the qualifier. This parameter can be null.</param>
    <param name="pcchApplicationDataBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpApplicationDataBuf</i> parameter. On input, this size should include the terminating null character. On return, the value does not include the null character. This parameter can be null only if the <i>lpApplicationDataBuf</i> parameter is null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no qualifiers to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumComponents">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentsA">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentsW">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponents">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentsA">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumComponentsW">
    <summary>The<b>MsiEnumComponents</b> function enumerates the installed components for all products. This function retrieves one component code each time it is called.</summary>
    <param name="iComponentIndex">Specifies the index of the component to retrieve. This parameter should be zero for the first call to the<b>MsiEnumComponents</b> function and then incremented for subsequent calls. Because components are not ordered, any new component has an arbitrary index. This means that the function can return components in any order.</param>
    <param name="lpComponentBuf">Pointer to a buffer that receives the component code. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no components to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeatures">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeaturesA">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeaturesW">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeatures">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeaturesA">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumFeaturesW">
    <summary>The<b>MsiEnumFeatures</b> function enumerates the published features for a given product. This function retrieves one feature ID each time it is called.</summary>
    <param name="szProduct">Null-terminated string specifying the product code of the product whose features are to be enumerated.</param>
    <param name="iFeatureIndex">Specifies the index of the feature to retrieve. This parameter should be zero for the first call to the<b>MsiEnumFeatures</b> function and then incremented for subsequent calls. Because features are not ordered, any new feature has an arbitrary index. This means that the function can return features in any order.</param>
    <param name="lpFeatureBuf">Pointer to a buffer that receives the feature ID. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. The function returns <b>ERROR_MORE_DATA</b> if the length of the feature ID exceeds <b>MAX_FEATURE_CHARS</b>.</param>
    <param name="lpParentBuf">Pointer to a buffer that receives the feature ID of the parent of the feature. The size of the buffer must hold a string value of length MAX_FEATURE_CHARS+1. If the length of the feature ID of the parent feature exceeds <b>MAX_FEATURE_CHARS</b>, only the first <b>MAX_FEATURE_CHARS</b> characters get copied into the buffer.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no features to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiEnumPatches">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesA">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesW">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesEx">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesExA">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesExW">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesEx">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesExA">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesExW">
    <summary>The <b>MsiEnumPatchesEx</b> function enumerates all patches in a specific context or across all contexts. Patches already applied to products are enumerated. Patches that have been registered but not yet applied to products are also enumerated.</summary>
    <param name="szProductCode">A null-terminated string that specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product whose patches are enumerated. If non-<b>NULL</b>, patch enumeration is restricted to instances of this product under the user and context specified by <i>szUserSid</i> and <i>dwContext</i>. If <b>NULL</b>, the patches for all products under the specified context are enumerated.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string "S-1-1-0" (Everyone) specifies enumeration across all users in the system. A SID value other than "S-1-1-0" is considered a user SID and restricts enumeration to that user. When enumerating for a user other than current user, any patches that were applied in a per-user-unmanaged context using a version less than Windows Installer version 3.0, are not enumerated. This parameter can be set to <b>NULL</b> to specify the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (System) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to "S-1-5-18" returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to one or a combination of contexts. This parameter can be any one or a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration that is extended to all per-user-managed installations for the users that <i>szUserSid</i> specifies. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>In this context, only patches installed with Windows Installer version 3.0 are enumerated for users that are not the current user. For the current user, the function enumerates all installed and new patches. An invalid SID for <i>szUserSid</i> returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration that is extended to all per-machine installations. When <i>dwContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSid</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFilter">
      <para>The filter for enumeration. This parameter can be one or a combination of the following parameters.</para>
      <list type="table">
        <listheader>
          <description>Filter</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_APPLIED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that have been applied. Enumeration does not include superseded or obsolete patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_SUPERSEDED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as superseded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_OBSOLETED</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are marked as obsolete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_REGISTERED</b>
                </term>
              </listheader>
              <listheader>
                <term>8</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes patches that are registered but not yet applied. The <see cref="MsiSourceListAddSourceEx" /> function can register new patches.<div><b>Note</b>  Patches registered for users other than current user and applied in the per-user-unmanaged context are not enumerated.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIPATCHSTATE_ALL</b>
                </term>
              </listheader>
              <listheader>
                <term>15</term>
              </listheader>
            </list>
          </description>
          <description>The enumeration includes all applied, obsolete, superseded, and registered patches.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the patch to retrieve. This parameter must be zero for the first call to the <b>MsiEnumPatchesEx</b> function and then incremented for subsequent calls. The <i>dwIndex</i> parameter should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szPatchCode">An output buffer to contain the GUID of the patch being enumerated. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetProductCode">An output buffer to contain the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that receives this patch. The buffer should be large enough to hold the GUID. This parameter can be <b>NULL</b>.</param>
    <param name="pdwTargetProductContext">Returns the context of the patch being enumerated. The output value can be <b>MSIINSTALLCONTEXT_USERMANAGED</b>, <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>, or <b>MSIINSTALLCONTEXT_MACHINE</b>. This parameter can be <b>NULL</b>.</param>
    <param name="szTargetUserSid">
      <para>An output buffer that receives the string SID of the account under which this patch instance exists. This buffer returns an empty string for a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szTargetUserSid</i> is set to <b>NULL</b> and <i>pcchTargetUserSid</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchTargetUserSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>szTargetUserSid</i> buffer large enough to contain *<i>pcchTargetUserSid</i> + 1 characters.</para>
      <para>If <i>szTargetUserSid</i> and <i>pcchTargetUserSid</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchTargetUserSid">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szTargetUserSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szTargetUserSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumPatchesEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more patches to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is successfully enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned when <i>pcchTargetUserSid</i> points to a buffer size less than required to copy the SID. In this case, the user can fix the buffer and call <see cref="MsiEnumPatchesEx" /> again for the same index value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatches">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesA">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumPatchesW">
    <summary>
      <para>The<b>MsiEnumPatches</b> function enumerates all of the patches that have been applied to a product. The function returns the patch code GUID for each patch that has been applied to the product and returns a list of transforms from each patch that apply to the product. Note that patches may have many transforms only some of which are applicable to a particular product. The list of transforms are returned in the same format as the value of the<a href="https://docs.microsoft.com//windows/desktop/Msi/transforms">TRANSFORMS</a> property.</para>
      <div>
        <b>Note</b>  <i>pcchTransformsBuf</i> is not set to the number of characters copied to <i>lpTransformsBuf</i> upon a successful return of <b>MsiEnumPatches</b>.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product for which patches are to be enumerated.</param>
    <param name="iPatchIndex">Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the<b>MsiEnumPatches</b> function and then incremented for subsequent calls.</param>
    <param name="lpPatchBuf">Pointer to a buffer that receives the patch's GUID. This argument is required.</param>
    <param name="lpTransformsBuf">Pointer to a buffer that receives the list of transforms in the patch that are applicable to the product. This argument is required and cannot be Null.</param>
    <param name="pcchTransformsBuf">Set to the number of characters copied to <i>lpTransformsBuf</i> upon an unsuccessful return of the function. Not set for a successful return. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no patches to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProducts">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsA">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsW">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsEx">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsExA">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsExW">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsEx">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsExA">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsExW">
    <summary>The <b>MsiEnumProductsEx</b> function enumerates through one or all the instances of products that are currently advertised or installed in the specified contexts. This function supersedes <see cref="MsiEnumProducts" />.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product to be enumerated. Only instances of products within the scope of the context specified by the <i>szUserSid</i> and <i>dwContext</i> parameters are enumerated. This parameter can be set to <b>NULL</b> to enumerate all products in the specified context.</param>
    <param name="szUserSid">
      <para>Null-terminated string that specifies a security identifier (SID) that restricts the context of enumeration. The special SID string s-1-1-0 (Everyone) specifies enumeration across all users in the system. A SID value other than s-1-1-0 is considered a user-SID and restricts enumeration to the current user or any user in the system. This parameter can be set to <b>NULL</b> to restrict the enumeration scope to the current user.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to enumerate products or patches installed as per-machine. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a context. This parameter can be any one or a combination of the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–managed installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per–user–unmanaged installations for the users specified by <i>szUserSid</i>. An invalid SID returns no items.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Enumeration extended to all per-machine installations. When <i>dwInstallContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">Specifies the index of the product to retrieve. This parameter must be zero for the first call to the <b>MsiEnumProductsEx</b> function and then incremented for subsequent calls. The index should be incremented, only if the previous call has returned ERROR_SUCCESS. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="szInstalledProductCode">Null-terminated string of <b>TCHAR</b> that gives the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance being enumerated. This parameter can be <b>NULL</b>.</param>
    <param name="pdwInstalledContext">Returns the context of the product instance being enumerated. The output value can be MSIINSTALLCONTEXT_USERMANAGED, MSIINSTALLCONTEXT_USERUNMANAGED, or MSIINSTALLCONTEXT_MACHINE. This parameter can be <b>NULL</b>.</param>
    <param name="szSid">
      <para>An output buffer that receives the string SID of the account under which this product instance exists. This buffer returns an empty string for an instance installed in a per-machine context.</para>
      <para>This buffer should be large enough to contain the SID. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the SID, not including the terminating NULL character.</para>
      <para>If <i>szSid</i> is set to <b>NULL</b> and <i>pcchSid</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSid</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b>. The function can then be called again to retrieve the value, with the <i>szSid</i> buffer large enough to contain *<i>pcchSid</i> + 1 characters.</para>
      <para>If <i>szSid</i> and <i>pcchSid</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSid">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSid</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSid</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiEnumProductsEx</b> function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If the scope includes users other than the current user, you need administrator privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more products to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A product is enumerated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>szSid</i> parameter is too small to get the user SID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not installed on the computer in the specified context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProducts">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsA">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumProductsW">
    <summary>The<b>MsiEnumProducts</b> function enumerates through all the products currently advertised or installed. Products that are installed in both the per-user and per-machine <a href="https://docs.microsoft.com//windows/desktop/Msi/installation-context">installation context</a> and advertisements are enumerated.</summary>
    <param name="iProductIndex">Specifies the index of the product to retrieve. This parameter should be zero for the first call to the<b>MsiEnumProducts</b> function and then incremented for subsequent calls. Because products are not ordered, any new product has an arbitrary index. This means that the function can return products in any order.</param>
    <param name="lpProductBuf">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProducts">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProductsA">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProductsW">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProducts">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProductsA">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiEnumRelatedProductsW">
    <summary>The<b>MsiEnumRelatedProducts</b> function enumerates products with a specified upgrade code. This function lists the currently installed and advertised products that have the specified<a href="https://docs.microsoft.com//windows/desktop/Msi/upgradecode">UpgradeCode</a> property in their<a href="https://docs.microsoft.com//windows/desktop/Msi/property-table">Property table</a>.</summary>
    <param name="lpUpgradeCode">The null-terminated string specifying the upgrade code of related products that the installer is to enumerate.</param>
    <param name="dwReserved">This parameter is reserved and must be 0.</param>
    <param name="iProductIndex">The zero-based index into the registered products.</param>
    <param name="lpProductBuf">A buffer to receive the product code GUID. This buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no products to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available starting with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A value was enumerated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLData">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLDataA">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLDataW">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLData">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLDataA">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiExtractPatchXMLDataW">
    <summary>The <b>MsiExtractPatchXMLData</b> function extracts information from a patch that can be used to determine if the patch applies to a target system. The function returns an XML string that can be provided to <see cref="MsiDeterminePatchSequence" /> and <see cref="MsiDetermineApplicablePatches" /> instead of the full patch file. The returned information can be used to determine whether the patch is applicable.</summary>
    <param name="szPatchPath">The full path to the patch that is being queried. Pass in as a null-terminated string. This parameter cannot be <b>NULL</b>.</param>
    <param name="dwReserved">A reserved argument that must be 0 (zero).</param>
    <param name="szXMLData">
      <para>A pointer to a buffer to hold the XML string that contains the extracted patch information. This buffer should be large enough to contain the received information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szXMLData</i> is set to <b>NULL</b> and <i>pcchXMLData</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchXMLData</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szXMLData</i> buffer large enough to contain *<i>pcchXMLData</i> + 1 characters.</para>
    </param>
    <param name="pcchXMLData">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szXMLData</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>If this parameter is set to <b>NULL</b>, the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiExtractPatchXMLData</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed in a way that is not identified by any of the return values in this table.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This error can be returned if MSXML 3.0 is not installed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPath">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathA">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathW">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathEx">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathExA">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathExW">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathEx">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathExA">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathExW">
    <summary>
      <para>The<b>MsiGetComponentPathEx</b> function returns the full path to an installed component. If the key path for the component is a registry key then the function returns the registry key.</para>
      <para>This function extends the existing <see cref="MsiGetComponentPath" /> function to enable searches for components across user accounts and installation contexts.</para>
    </summary>
    <param name="szProductCode">A null-terminated string value that specifies an application's product code GUID. The function gets the path of installed components used by this application.</param>
    <param name="szComponentCode">A null-terminated string value that specifies a component code GUID. The function gets the path of an installed component having this component code.</param>
    <param name="szUserSid">
      <para>A null-terminated string value that specifies the security identifier (SID) for a user in the system. The function gets the paths of installed components of applications installed under the user accounts identified by this SID. The special SID string s-1-1-0 (Everyone) specifies all users in the system. If this parameter is <b>NULL</b>, the function gets the path of an installed component for the currently logged-on user only.</para>
      <list type="table">
        <listheader>
          <description>SID type</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies a particular user in the system. An example of an user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (System) cannot be used to search applications installed in the per-machine installation context. Setting the SID value to s-1-5-18 returns <b>ERROR_INVALID_PARAMETER</b>. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>A flag that specifies the installation context. The function gets the paths of installed components of applications installed in the specified installation context. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–managed installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per–user–unmanaged installation context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Include applications installed in the per-machine installation context. When <i>dwInstallContext</i> is set to <b>MSIINSTALLCONTEXT_MACHINE</b> only, the <i>szUserSID</i> parameter must be <b>NULL</b>.</description>
        </listheader>
      </list>
    </param>
    <param name="lpOutPathBuffer">
      <para>A string value that receives the path to the component. This parameter can be <b>NULL</b>. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchOutPathBuffer">Pointer to a location that receives the size of the buffer, in <b>TCHAR</b>, pointed to by the <i>szPathBuf</i> parameter. The value in this location should be set to the count of <b>TCHAR</b> in the string including the terminating null character. If the size of the buffer is too small, this parameter receives the length of the string value without including the terminating null character in the count.</param>
    <returns>
      <para>The<b>MsiGetComponentPathEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BROKEN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is corrupt or partially missing in some way and requires repair.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPath">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathA">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetComponentPathW">
    <summary>The<b>MsiGetComponentPath</b> function returns the full path to an installed component. If the key path for the component is a registry key then the registry key is returned.</summary>
    <param name="szProduct">Specifies the product code for the client product.</param>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">
      <para>Pointer to a variable that receives the path to the component. This parameter can be null. If the component is a registry key, the registry roots are represented numerically. If this is a registry subkey path, there is a backslash at the end of the Key Path. If this is a registry value key path, there is no backslash at the end. For example, a registry path on a 32-bit operating system of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "01:\SOFTWARE\Microsoft". The registry roots returned on 32-bit operating systems are defined as shown in the following table.</para>
      <div>
        <b>Note</b>  On 64-bit operating systems, a value of 20 is added to the numerical registry roots in this table to distinguish them from registry key paths on 32-bit operating systems. For example, a registry key path of <b>HKEY_CURRENT_USER</b>\<b>SOFTWARE</b>\<b>Microsoft</b> is returned as "21:\SOFTWARE\Microsoft\", if the component path is a registry key on a 64-bit operating system.</div>
      <list type="table">
        <listheader>
          <description>Root</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CLASSES_ROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>00</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_CURRENT_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>01</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_LOCAL_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>02</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HKEY_USERS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>03</description>
        </listheader>
      </list>
    </param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetComponentPath</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfo">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfoA">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfoW">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfo">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">
      <para>As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h5>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfoA">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">
      <para>As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h5>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureInfoW">
    <summary>The<b>MsiGetFeatureInfo</b> function returns descriptive information for a feature.</summary>
    <param name="hProduct">Handle to the product that owns the feature. This handle is obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szFeature">Feature code for the feature about which information should be returned.</param>
    <param name="lpAttributes">
      <para>Pointer to a location containing one or more of the following Attribute flags.</para>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h4>
      <h4>INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h4>
      <para>For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>. The values that <b>MsiGetFeatureInfo</b> returns are double the values in the Attributes column of the Feature Table.</para>
    </param>
    <param name="lpTitleBuf">
      <para>Pointer to a buffer to receive the localized name of the feature, which corresponds to the Title field in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature Table</a>.</para>
      <para>This parameter is optional and can be null.</para>
    </param>
    <param name="pcchTitleBuf">As input, the size of <i>lpTitleBuf</i>. As output, the number of characters returned in <i>lpTitleBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer that is passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpHelpBuf">Pointer to a buffer to receive the localized description of the feature, which corresponds to the Description field for the feature in the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>. This parameter is optional and can be null.</param>
    <param name="pcchHelpBuf">
      <para>As input, the size of <i>lpHelpBuf</i>. As output, the number of characters returned in <i>lpHelpBuf</i>. On input, this is the full size of the buffer, and includes a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE (16)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORADVERTISE (8)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORLOCAL (1)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FAVORSOURCE (2)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_FOLLOWPARENT (4)</h5>
      <h5>- lpAttributes.INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE (32)</h5>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function returns successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not known.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsage">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsageA">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsageW">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsage">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsageA">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFeatureUsageW">
    <summary>The<b>MsiGetFeatureUsage</b> function returns the usage metrics for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature.</param>
    <param name="szFeature">Specifies the feature code for the feature for which metrics are to be returned.</param>
    <param name="pdwUseCount">Indicates the number of times the feature has been used.</param>
    <param name="pwDateUsed">
      <para>Specifies the date that the feature was last used. The date is in the MS-DOS date format, as shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Bits</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0 – 4</term>
              </listheader>
            </list>
          </description>
          <description>Day of the month (1-31)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>5 – 8</term>
              </listheader>
            </list>
          </description>
          <description>Month (1 = January, 2 = February, and so on)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>9 – 15</term>
              </listheader>
            </list>
          </description>
          <description>Year offset from 1980 (add 1980 to get actual year)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The<b>MsiGetFeatureUsage</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No usage information is available or the product or feature is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileHash">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileHashA">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileHashW">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileHash">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileHashA">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileHashW">
    <summary>
      <para>The<b>MsiGetFileHash</b> function takes the path to a file and returns a 128-bit hash of that file. Authoring tools may use<b>MsiGetFileHash</b> to obtain the file hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msifilehash-table">MsiFileHash table</a>.</para>
      <para>Windows Installer uses file hashing as a means to detect and eliminate unnecessary file copying. A file hash stored in the MsiFileHash table may be compared to a hash of an existing file on the user's computer.</para>
    </summary>
    <param name="szFilePath">Path to file that is to be hashed.</param>
    <param name="dwOptions">The value in this column must be 0. This parameter is reserved for future use.</param>
    <param name="pHash">Pointer to the returned file hash information.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error has occurred.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformation">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformationA">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformationW">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformation">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformationA">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileSignatureInformationW">
    <summary>
      <para>The<b>MsiGetFileSignatureInformation</b> function takes the path to a file that has been digitally signed and returns the file's signer certificate and hash.<b>MsiGetFileSignatureInformation</b> may be called to obtain the signer certificate and hash needed to populate the<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a>, <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a>, and<a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> tables.</para>
      <para>
        <b>Windows Installer 3.0 and later:  </b>Beginning with Windows Installer 3.0, the Windows Installer can verify the digital signatures of patches (.msp files) by using the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchcertificate-table">MsiPatchCertificate</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables. For more information see <a href="https://docs.microsoft.com//windows/desktop/Msi/guidelines-for-authoring-secure-installations">Guidelines for Authoring Secure Installations</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>.</para>
      <para>
        <b>Windows Installer 2.0:  </b>Digital signatures of patches is not supported. Windows Installer 2.0 uses digital signatures as a means to detect corrupted resources, and can only verify the digital signatures of external cabinets, and only by the use of the <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalsignature-table">MsiDigitalSignature</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/msidigitalcertificate-table">MsiDigitalCertificate</a> tables.</para>
    </summary>
    <param name="szSignedObjectPath">Pointer to a null-terminated string specifying the full path to the file that contains the digital signature.</param>
    <param name="dwFlags">
      <para>Special error case flags.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSI_INVALID_HASH_IS_FATAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x1</term>
              </listheader>
            </list>
          </description>
          <description>Without this flag set, and when requesting only the certificate context, an invalid hash in the digital signature does not cause <b>MsiGetFileSignatureInformation</b> to return a fatal error. <para>To return a fatal error for an invalid hash, set the MSI_INVALID_HASH_IS_FATAL flag.</para></description>
        </listheader>
      </list>
    </param>
    <param name="ppcCertContext">Returned signer certificate context</param>
    <param name="pbHashData">Returned hash buffer. This parameter can be <b>NULL</b> if the hash data is not being requested.</param>
    <param name="pcbHashData">Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pbHashData</i> parameter. This parameter cannot be <b>NULL</b> if <i>pbHashData</i> is non-<b>NULL</b>. If ERROR_MORE_DATA is returned, <i>pbHashData</i> gives the size of the buffer required to hold the hash data. If ERROR_SUCCESS is returned, it gives the number of bytes written to the hash buffer. The <i>pcbHashData</i> parameter is ignored if <i>pbHashData</i> is <b>NULL</b>.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS/S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid parameter was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="WinVerifyTrust" /> is not available on the system.<b>MsiGetFileSignatureInformation</b> requires the presence of the Wintrust.dll file on the system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data. If ERROR_MORE_DATA is returned, <i>pcbHashData</i> gives the size of the buffer required to hold the hash data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_NOSIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File is not signed</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_BAD_DIGEST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's current hash is invalid according to the hash stored in the file's digital signature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_REVOKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file's signer certificate has been revoked. The file's digital signature is compromised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_NOT_TRUSTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The subject failed the specified verification action. Most trust providers return a more detailed error code that describes the reason for the failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_PROVIDER_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider is not recognized on this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_ACTION_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the specified action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUST_E_SUBJECT_FORM_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The trust provider does not support the form specified for the subject.</description>
        </listheader>
      </list> <para><b>MsiGetFileSignatureInformation</b> also returns all the Win32 error values mapped to their equivalent <b>HRESULT</b> data type by<b>HRESULT_FROM_WIN32</b>.</para></returns>
  </member>
  <member name="Windows.MsiGetFileVersion">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileVersionA">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileVersionW">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileVersion">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileVersionA">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetFileVersionW">
    <summary>The<b>MsiGetFileVersion</b> returns the version string and language string in the format that the installer expects to find them in the database. If you want only version information, set <i>lpLangBuf</i> and <i>pcchLangBuf</i> to 0 (zero). If you just want language information, set <i>lpVersionBuf</i> and <i>pcchVersionBuf</i> to 0 (zero).</summary>
    <param name="szFilePath">Specifies the path to the file.</param>
    <param name="lpVersionBuf">
      <para>Returns the file version.</para>
      <para>Set to 0 for language information only.</para>
    </param>
    <param name="pcchVersionBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for language information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <param name="lpLangBuf">
      <para>Returns the file language.</para>
      <para>Set to 0 (zero) for version information only.</para>
    </param>
    <param name="pcchLangBuf">
      <para>In and out buffer count as the number of <b>TCHAR</b>.</para>
      <para>Set to 0 (zero) for version information only. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successful completion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not exist.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File cannot be opened to get version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>File does not contain version information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The version information is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected error.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileList">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileListA">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileListW">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileList">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileListA">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchFileListW">
    <summary>The <b>MsiGetPatchFileList</b> function is provided a list of .msp files, delimited by semicolons, and retrieves the list of files that can be updated by the patches.</summary>
    <param name="szProductCode">A null-terminated string value containing the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product which is the target of the patches. This parameter cannot be <b>NULL</b>.</param>
    <param name="szPatchPackages">A null-terminated string value that contains the list of Windows Installer patches (.msp files). Each patch can be specified by the full path to the patch package. The patches in the list are delimited by semicolons. At least one patch must be specified.</param>
    <param name="pcFiles">A pointer to a location that receives the number of files that will be updated on this system by this list of patches specified by <i>szPatchList</i>. This parameter is required.</param>
    <param name="pphFileRecords">A pointer to a location that receives a pointer to an array of records. The first field (0-index) of each record contains the full file path of a file that can be updated when the list of patches in <i>szPatchList</i> are applied on this computer. This parameter is required.</param>
    <returns>
      <para>The <b>MsiGetPatchFileList</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfo">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoA">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoW">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoEx">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoExA">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoExW">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoEx">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoExA">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoExW">
    <summary>The <b>MsiGetPatchInfoEx</b> function queries for information about the application of a patch to a specified instance of a product.</summary>
    <param name="szPatchCode">A null-terminated string that contains the GUID of the patch. This parameter cannot be <b>NULL</b>.</param>
    <param name="szProductCode">A null-terminated string that contains the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A null-terminated string that specifies the security identifier (SID) under which the instance of the patch being queried exists. Using a <b>NULL</b> value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the user that is logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the enumeration for a specific user ID in the system. The following example identifies a possible user SID: "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>Restricts the enumeration to a per-user-unmanaged, per-user-managed, or per-machine context. This parameter can be any one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-managed installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per–user-unmanaged installations for the users that <i>szUserSid</i> specifies.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>Query that is extended to all per-machine installations.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following:</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LocalPackage"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the cached patch file that the product uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_TRANSFORMS</b>
                </term>
              </listheader>
              <listheader>
                <term>"Transforms"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the set of patch transforms that the last patch installation applied to the product. This value may not be available for per-user, non-managed applications if the user is not logged on.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"InstallDate"</term>
              </listheader>
            </list>
          </description>
          <description>Gets the last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_UNINSTALLABLE</b>
                </term>
              </listheader>
              <listheader>
                <term>"Uninstallable"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if the patch is marked as possible to uninstall from the product. In this case, the installer can still block the uninstallation if this patch is required by another patch that cannot be uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PATCHSTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>"State"</term>
              </listheader>
            </list>
          </description>
          <description>Returns "1" if this patch is currently applied to the product. Returns "2" if this patch is superseded by another patch. Returns "4" if this patch is obsolete. These values correspond to the constants the <i>dwFilter</i> parameter of <see cref="MsiEnumPatchesEx" /> uses.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISPLAYNAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"DisplayName"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered display name for the patch. For patches that do not include the DisplayName property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned display name is an empty string ("").</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MOREINFOURL</b>
                </term>
              </listheader>
              <listheader>
                <term>"MoreInfoURL"</term>
              </listheader>
            </list>
          </description>
          <description>Get the registered support information URL for the patch. For patches that do not include the MoreInfoURL property in the <a href="https://docs.microsoft.com//windows/desktop/Msi/msipatchmetadata-table">MsiPatchMetadata</a> table, the returned support information URL is an empty string ("").</description>
        </listheader>
      </list>
    </param>
    <param name="lpValue">
      <para>This parameter is a pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the property value, not including the terminating <b>NULL</b> character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating <b>NULL</b> character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>When calling the function, this parameter should be a pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails trying to access a resource with insufficient privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function fails and the error is not identified in other error codes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value does not fit in the provided buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product that <i>szProduct</i> specifies is not installed on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is unrecognized.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetPatchInfo">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoA">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetPatchInfoW">
    <summary>The<b>MsiGetPatchInfo</b> function returns information about a patch.</summary>
    <param name="szPatch">Specifies the patch code for the patch package.</param>
    <param name="szAttribute">
      <para>Specifies the attribute to be retrieved.</para>
      <list type="table">
        <listheader>
          <description>Attribute</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
      </list>
    </param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The <b>MsiGetPatchInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCode">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCodeA">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCodeW">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCode">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCodeA">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductCodeW">
    <summary>The<b>MsiGetProductCode</b> function returns the product code of an application by using the component code of an installed or advertised component of the application. During initialization, an application must determine under which product code it has been installed or advertised.</summary>
    <param name="szComponent">This parameter specifies the component code of a component that has been installed by the application. This will be typically the component code of the component containing the executable file of the application.</param>
    <param name="lpBuf39">Pointer to a buffer that receives the product code. This buffer must be 39 characters long. The first 38 characters are for the GUID, and the last character is for the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code could not be determined.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductInfo">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoA">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoW">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoEx">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoExA">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoExW">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoEx">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoExA">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoExW">
    <summary>
      <para>The <b>MsiGetProductInfoEx</b> function returns product information for advertised and installed products. This function can retrieve information</para>
      <para>about an instance of a product that is installed under a user account other than the current user.</para>
      <para>The calling process must have administrative privileges for a user who is different from the current user. The <b>MsiGetProductInfoEx</b> function cannot query an instance of a product that is advertised under a per-user-unmanaged context for a user account other than the current user.</para>
      <para>This function is an extension of the <see cref="MsiGetProductInfo" /> function.</para>
    </summary>
    <param name="szProductCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product instance that is being queried.</param>
    <param name="szUserSid">
      <para>The security identifier (SID) of the account under which the instance of the product that is being queried exists. A <b>NULL</b> specifies the current user SID.</para>
      <list type="table">
        <listheader>
          <description>SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The currently logged-on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumeration for a specific user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is "MSIINSTALLCONTEXT_MACHINE", <i>szUserSid</i> must be <b>NULL</b>.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance that is being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per–user–unmanaged instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the product property for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>Property being queried.</para>
      <para>The property to be retrieved. The properties in the following table can only be retrieved from applications that are already installed. All required properties are guaranteed to be available, but other properties are available only if the property is set. For more information, see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> and <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PRODUCTSTATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state of the product returned in string form as "1" for advertised and "5" for installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minor product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The major product version that is derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company that is registered to use the product.</description></listheader><listheader><description>RegOwner</description><description>The owner who is registered to use the product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of one (1) indicates a product installed using a multiple instance transform and the <a href="https://docs.microsoft.com//windows/desktop/Msi/msinewinstance">MSINEWINSTANCE</a> property. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The properties in the following table can be retrieved from applications that are advertised or installed. These properties cannot be retrieved for product instances that are installed under a per-user-unmanaged context for user accounts other than current user account.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description><b>INSTALLPROPERTY_TRANSFORMS</b></description><description>Transforms.</description></listheader><listheader><description><b>INSTALLPROPERTY_LANGUAGE</b></description><description>Product language.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTNAME</b></description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_ASSIGNMENTTYPE</b></description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals one (1) if the product is advertised or installed per-computer for all users.</para></description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGECODE</b></description><description>Identifier of the package that a product is installed from. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_VERSION</b></description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PRODUCTICON</b></description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description><b>INSTALLPROPERTY_PACKAGENAME</b></description><description>Name of the original installation package.</description></listheader><listheader><description><b>INSTALLPROPERTY_AUTHORIZED_LUA_APP</b></description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="szValue">
      <para>A pointer to a buffer that receives the property value. This buffer should be large enough to contain the information. If the buffer is too small, the function returns <b>ERROR_MORE_DATA</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>lpValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns <b>ERROR_SUCCESS</b> and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>lpValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>lpValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns <b>ERROR_SUCCESS</b> if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>lpValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>lpValue</i> is also <b>NULL</b>. Otherwise, the function returns <b>ERROR_INVALID_PARAMETER</b>.</para>
    </param>
    <returns>
      <para>The <b>MsiGetProductInfoEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized. <div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns <b>ERROR_UNKNOWN_PROPERTY</b> if the application being queried is advertised and not installed.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScript">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScriptA">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScriptW">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScript">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScriptA">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoFromScriptW">
    <summary>The<b>MsiGetProductInfoFromScript</b> function returns product information for a Windows Installer script file.</summary>
    <param name="szScriptFile">A null-terminated string specifying the full path to the script file. The script file is the advertise script that was created by calling <see cref="MsiAdvertiseProduct" /> or <see cref="MsiAdvertiseProductEx" />.</param>
    <param name="lpProductBuf39">Points to a buffer that receives the product code. The buffer must be 39 characters long. The first 38 characters are for the product code<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character.</param>
    <param name="plgidLanguage">Points to a variable that receives the product language.</param>
    <param name="pdwVersion">Points to a buffer that receives the product version.</param>
    <param name="lpNameBuf">Points to a buffer that receives the product name. The buffer includes a terminating null character.</param>
    <param name="pcchNameBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <param name="lpPackageBuf">Points to a buffer that receives the package name. The buffer includes the terminating null character.</param>
    <param name="pcchPackageBuf">Points to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPackageNameBuf</i> parameter. This size should include the terminating null character. When the function returns, this variable contains the length of the string stored in the buffer. The count returned does not include the terminating null character. If the buffer is not large enough, the function returns ERROR_MORE_DATA, and the variable contains the size of the string in characters, without counting the null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer was too small to hold the entire value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not get script information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is only available on Windows 2000 and Windows XP.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfo">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoA">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductInfoW">
    <summary>The<b>MsiGetProductInfo</b> function returns product information for published and installed products.</summary>
    <param name="szProduct">Specifies the product code for the product.</param>
    <param name="szAttribute">
      <para>Specifies the property to be retrieved.</para>
      <para>The<a href="https://docs.microsoft.com//windows/desktop/Msi/required-properties">Required Properties</a> are guaranteed to be available, but other properties are available only if that property is set. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/properties">Properties</a>. The properties in the following list can be retrieved only from applications that are installed.</para>
      <list type="table">
        <listheader>
          <description>Property</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPLINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support link. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelplink">ARPHELPLINK</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_HELPTELEPHONE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Support telephone. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arphelptelephone">ARPHELPTELEPHONE</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The last time this product received service. The value of this property is replaced each time a patch is applied or removed from the product or the /v <a href="https://docs.microsoft.com//windows/desktop/Msi/command-line-options">Command-Line Option</a> is used to repair the product. If the product has received no repairs or patches this property contains the time this product was installed on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDLANGUAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed language.<para><b><a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-5">Windows Installer 4.5 and earlier</a>:  </b>Not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLEDPRODUCTNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installed product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLLOCATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation location. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpinstalllocation">ARPINSTALLLOCATION</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_INSTALLSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation source. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcedir">SourceDir</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LOCALPACKAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Local cached package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PUBLISHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Publisher. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/manufacturer">Manufacturer</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLINFOABOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlinfoabout">ARPURLINFOABOUT</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_URLUPDATEINFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>URL update information. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpurlupdateinfo">ARPURLUPDATEINFO</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMINOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Minor product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONMAJOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Major product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_VERSIONSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Product version. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description>
        </listheader>
      </list> <para>To retrieve the product ID, registered owner, or registered company from applications that are installed, set <i>szProperty</i> to one of the following text string values.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>ProductID</description><description>The product identifier for the product. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productid">ProductID</a> property.</description></listheader><listheader><description>RegCompany</description><description>The company registered to use this product.</description></listheader><listheader><description>RegOwner</description><description>The owner registered to use this product.</description></listheader></list> <para>To retrieve the instance type of the product, set <i>szProperty</i> to the following value. This property is available for advertised or installed products.</para><list type="table"><listheader><description>Value</description><description>Description</description></listheader><listheader><description>InstanceType</description><description>A missing value or a value of 0 (zero) indicates a normal product installation. A value of 1 (one) indicates a product installed using a multiple instance transform and the MSINEWINSTANCE property. Available with the installer running Windows Server 2003 or Windows XP with SP1. For more information see, <a href="https://docs.microsoft.com//windows/desktop/Msi/installing-multiple-instances-of-products-and-patches">Installing Multiple Instances of Products and Patches</a>.</description></listheader></list> <para>The advertised properties in the following list can be retrieved from applications that are advertised or installed.</para><list type="table"><listheader><description>Property</description><description>Description</description></listheader><listheader><description>INSTALLPROPERTY_TRANSFORMS</description><description>Transforms.</description></listheader><listheader><description>INSTALLPROPERTY_LANGUAGE</description><description>Product language.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTNAME</description><description>Human readable product name. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/productname">ProductName</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_ASSIGNMENTTYPE</description><description>Equals 0 (zero) if the product is advertised or installed per-user. <para>Equals 1 (one) if the product is advertised or installed per-machine for all users.</para></description></listheader><listheader><description>INSTALLPROPERTY_PACKAGECODE</description><description>Identifier of the package this product was installed from. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/package-codes">Package Codes</a>.</description></listheader><listheader><description>INSTALLPROPERTY_VERSION</description><description>Product version derived from the <a href="https://docs.microsoft.com//windows/desktop/Msi/productversion">ProductVersion</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PRODUCTICON</description><description>Primary icon for the package. For more information, see the <a href="https://docs.microsoft.com//windows/desktop/Msi/arpproducticon">ARPPRODUCTICON</a> property.</description></listheader><listheader><description>INSTALLPROPERTY_PACKAGENAME</description><description>Name of the original installation package.</description></listheader><listheader><description>INSTALLPROPERTY_AUTHORIZED_LUA_APP</description><description>A value of one (1) indicates a product that can be serviced by non-administrators using <a href="https://docs.microsoft.com//windows/desktop/Msi/user-account-control--uac--patching">User Account Control (UAC) Patching</a>. A missing value or a value of 0 (zero) indicates that least-privilege patching is not enabled. Available in Windows Installer 3.0 or later.</description></listheader></list></param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null. In this case, the function checks that the property is registered correctly with the product.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is unadvertised or uninstalled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is unrecognized.<div><b>Note</b>  The <see cref="MsiGetProductInfo" /> function returns ERROR_UNKNOWN_PROPERTY if the application being queried is advertised and not installed.</div></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiGetProductProperty">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductPropertyA">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductPropertyW">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductProperty">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductPropertyA">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetProductPropertyW">
    <summary>The<b>MsiGetProductProperty</b> function retrieves product properties. These properties are in the product database.</summary>
    <param name="hProduct">Handle to the product obtained from<see cref="MsiOpenProduct" />.</param>
    <param name="szProperty">Specifies the property to retrieve. This is case-sensitive.</param>
    <param name="lpValueBuf">Pointer to a buffer that receives the property value. The value is truncated and null-terminated if <i>lpValueBuf</i> is too small. This parameter can be null.</param>
    <param name="pcchValueBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpValueBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpValueBuf</i> is null, <i>pcchValueBuf</i> can be null.</para>
    </param>
    <returns>
      <para>The<b>MsiGetProductProperty</b> function return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid handle was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the entire property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetShortcutTarget">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetShortcutTargetA">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetShortcutTargetW">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetShortcutTarget">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetShortcutTargetA">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetShortcutTargetW">
    <summary>The<b>MsiGetShortcutTarget</b> function examines a shortcut and returns its product, feature name, and component if available.</summary>
    <param name="szShortcutPath">A null-terminated string specifying the full path to a shortcut.</param>
    <param name="szProductCode">A GUID for the product code of the shortcut. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <param name="szFeatureId">The feature name of the shortcut. The string buffer must be MAX_FEATURE_CHARS+1 characters long. This parameter can be null.</param>
    <param name="szComponentCode">A GUID of the component code. This string buffer must be 39 characters long. The first 38 characters are for the<a href="https://docs.microsoft.com//windows/desktop/Msi/guid">GUID</a>, and the last character is for the terminating null character. This parameter can be null.</param>
    <returns>This function returns UINT.</returns>
  </member>
  <member name="Windows.MsiGetUserInfo">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetUserInfoA">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetUserInfoW">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetUserInfo">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetUserInfoA">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiGetUserInfoW">
    <summary>The<b>MsiGetUserInfo</b> function returns the registered user information for an installed product.</summary>
    <param name="szProduct">Specifies the product code for the product to be queried.</param>
    <param name="lpUserNameBuf">Pointer to a variable that receives the name of the user.</param>
    <param name="pcchUserNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpUserNameBuf</i> parameter. This size should include the terminating null character.</param>
    <param name="lpOrgNameBuf">Pointer to a buffer that receives the organization name.</param>
    <param name="pcchOrgNameBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpOrgNameBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <param name="lpSerialBuf">Pointer to a buffer that receives the product ID.</param>
    <param name="pcchSerialBuf">Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpSerialBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some or all of the user information is absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A buffer is too small to hold the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_PRESENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USERINFOSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiInstallMissingComponent">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingComponentA">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingComponentW">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingComponent">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingComponentA">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingComponentW">
    <summary>The<b>MsiInstallMissingComponent</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the component to be installed.</param>
    <param name="szComponent">Identifies the component to be installed.</param>
    <param name="eInstallState">
      <para>Specifies the way the component should be installed. This parameter must be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be locally installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed to run from the source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component should be installed according to the installer defaults.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a></para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFile">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFileA">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFileW">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFile">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFileA">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallMissingFileW">
    <summary>The<b>MsiInstallMissingFile</b> function installs files that are unexpectedly missing.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the file to be installed.</param>
    <param name="szFile">Specifies the file to be installed.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SUSPEND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation was suspended.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_USEREXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user exited the installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter was invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code is unrecognized.</description>
        </listheader>
      </list> <para>For more information about error messages, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProduct">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProductA">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProductW">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProduct">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProductA">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiInstallProductW">
    <summary>The<b>MsiInstallProduct</b> function installs or uninstalls a product.</summary>
    <param name="szPackagePath">A null-terminated string that specifies the path to the location of the Windows Installer package. The string value can contain a URL (e.g. <code>http://packageLocation/package/package.msi</code>), a network path (e.g. \packageLocation\package.msi), a file path (e.g. file://packageLocation/package.msi), or a local path (e.g. D:\packageLocation\package.msi).</param>
    <param name="szCommandLine">
      <para>A null-terminated string that specifies the command line property settings. This should be a list of the format <i>Property=Setting Property=Setting</i>. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a>.</para>
      <para>To perform an administrative installation, include ACTION=ADMIN in <i>szCommandLine</i>. For more information, see the<a href="https://docs.microsoft.com//windows/desktop/Msi/action">ACTION</a> property.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error that relates to initialization occurred.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiIsProductElevated">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiIsProductElevatedA">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiIsProductElevatedW">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiIsProductElevated">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiIsProductElevatedA">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiIsProductElevatedW">
    <summary>
      <para>The <b>MsiIsProductElevated</b> function returns whether or not the product is managed. Only applications that require elevated privileges for installation and being installed through advertisement are considered managed, which means that an application installed per-machine is always considered managed.</para>
      <para>An application that is installed per-user is only considered managed if it is advertised by a local system process that is impersonating the user. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Msi/advertising-a-per-user-application-to-be-installed-with-elevated-privileges">Advertising a Per-User Application to be Installed with Elevated Privileges</a>.</para>
      <para>
        <b>MsiIsProductElevated</b> verifies that the local system owns the product registry data. The function does not refer to account policies such as <a href="https://docs.microsoft.com//windows/desktop/Msi/alwaysinstallelevated">AlwaysInstallElevated</a>.</para>
    </summary>
    <param name="szProduct">
      <para>The full product code GUID of the product.</para>
      <para>This parameter is required and cannot be <b>NULL</b> or empty.</para>
    </param>
    <param name="pfElevated">
      <para>A pointer to a BOOL for the result.</para>
      <para>This parameter cannot be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is ERROR_SUCCESS, and <i>pfElevated</i> is set to <b>TRUE</b> if the product is a managed application.</para>
      <para>If the function fails, the return value is one of the error codes identified in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not currently known.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information for the product is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not available for a specific platform.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiJoinTransaction">
    <summary>
      <para>The <b>MsiJoinTransaction</b> function requests that the Windows Installer make the current process the owner of the <a href="https://docs.microsoft.com//windows/desktop/Msi/t-gly">transaction</a> installing the multiple-package installation.</para>
      <para>
        <b>
          <a href="https://docs.microsoft.com//windows/desktop/Msi/not-supported-in-windows-installer-4-0">Windows Installer 4.0 and earlier</a>:  </b>Not supported. This function is available beginning with Windows Installer 4.5.</para>
    </summary>
    <param name="hTransactionHandle">The transaction ID, which identifies the transaction and is the identifier returned by the <see cref="MsiBeginTransaction" /> function.</param>
    <param name="dwTransactionAttributes">
      <para>Attributes of the multiple-package installation.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>When 0 or no value is set, Windows Installer closes the UI from the previous installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_CHAIN_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer not shutdown the embedded UI until the transaction is complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>MSITRANSACTION_JOIN_EXISTING_EMBEDDEDUI</term>
              </listheader>
            </list>
          </description>
          <description>Set this attribute to request that the Windows Installer transfer the embedded UI from the original installation. If the original installation has no embedded UI, setting this attribute does nothing.</description>
        </listheader>
      </list>
    </param>
    <param name="phChangeOfOwnerEvent">This parameter returns a handle to an event that is set when the <b>MsiJoinTransaction</b> function changes the owner of the transaction to a new owner. The current owner can use this to determine when ownership of the transaction has changed. Leaving a transaction without an owner will roll back the transaction.</param>
    <returns>
      <para>The <b>MsiJoinTransaction</b> function can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user that owns the transaction and the user that joins the transaction are not the same.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A parameter that is not valid is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_ALREADY_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The owner cannot be changed while an active installation is in progress.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE_STATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The transaction ID provided is not valid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponent">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponentA">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponentW">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponent">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponentA">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiLocateComponentW">
    <summary>The<b>MsiLocateComponent</b> function returns the full path to an installed component without a product code. This function attempts to determine the product using<see cref="MsiGetProductCode" />, but is not guaranteed to find the correct product for the caller.<see cref="MsiGetComponentPath" /> should always be called when possible.</summary>
    <param name="szComponent">Specifies the component ID of the component to be located.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. The variable includes the terminating null character.</param>
    <param name="pcchBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. Upon success of the<b>MsiLocateComponent</b> function, the variable pointed to by <i>pcchBuf</i> contains the count of characters not including the terminating null character. If the size of the buffer passed in is too small, the function returns INSTALLSTATE_MOREDATA.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is not installed. See Remarks.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the function parameters is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_MOREDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer provided was too small.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCEABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component source is inaccessible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or component ID is unknown. See Remarks.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChange">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChangeA">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChangeW">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChange">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChangeA">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiNotifySidChangeW">
    <summary>The <b>MsiNotifySidChange</b> function notifies and updates the Windows Installer internal information with changes to user SIDs.</summary>
    <param name="pOldSid">Null-terminated string that specifies the string value of the previous security identifier(SID).</param>
    <param name="pNewSid">Null-terminated string that specifies the string value of the new security identifier(SID).</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function. This error returned if any of the parameters is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory was available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Internal failure during execution.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiOpenPackage">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageA">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageW">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageEx">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageExA">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageExW">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageEx">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageExA">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageExW">
    <summary>
      <para>The<b>MsiOpenPackageEx</b> function opens a package to use with functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.<div><b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <b>MsiOpenPackageEx</b>, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="dwOptions">
      <para>The bit flags to indicate whether or not to ignore the computer state. Pass in 0 (zero) to use<see cref="MsiOpenPackage" /> behavior.</para>
      <list type="table">
        <listheader>
          <description>Constant</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Ignore the computer state when creating the product handle.</description>
        </listheader>
      </list>
    </param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackage">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageA">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenPackageW">
    <summary>
      <para>The<b>MsiOpenPackage</b> function opens a package to use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is not needed. <div><b>Note</b>  Initialize COM on the same thread before calling the <b>MsiOpenPackage</b>, <see cref="MsiOpenPackageEx" />, or <see cref="MsiOpenProduct" /> function.</div></para>
    </summary>
    <param name="szPackagePath">The path to the package.</param>
    <param name="hProduct">A pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_REMOTE_PROHIBITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Windows Installer does not permit installation from a remote desktop connection.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
      </list> <para>If this function fails, it may return a system error code. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Debug/system-error-codes">System Error Codes</a>.</para></returns>
  </member>
  <member name="Windows.MsiOpenProduct">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiOpenProductA">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiOpenProductW">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiOpenProduct">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiOpenProductA">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiOpenProductW">
    <summary>
      <para>The<b>MsiOpenProduct</b> function opens a product for use with the functions that access the product database. The<see cref="MsiCloseHandle" /> function must be called with the handle when the handle is no longer needed.</para>
      <div>
        <b>Note</b>  Initialize COM on the same thread before calling the <see cref="MsiOpenPackage" />, <see cref="MsiOpenPackageEx" />, or <b>MsiOpenProduct</b> function.</div>
    </summary>
    <param name="szProduct">Specifies the product code of the product to be opened.</param>
    <param name="hProduct">Pointer to a variable that receives the product handle.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration information is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was unavailable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code was unrecognized.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScript">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScriptA">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScriptW">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScript">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScriptA">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProcessAdvertiseScriptW">
    <summary>The<b>MsiProcessAdvertiseScript</b> function processes an advertise script file into the specified locations.</summary>
    <param name="szScriptFile">The full path to a script file generated by<see cref="MsiAdvertiseProduct" /> or<see cref="MsiAdvertiseProductEx" />.</param>
    <param name="szIconFolder">An optional path to a folder in which advertised icon files and transform files are located. If this parameter is <b>NULL</b>, no icon or transform files are written.</param>
    <param name="hRegData">A registry key under which registry data is to be written. If this parameter is <b>NULL</b>, the installer writes the registry data under the appropriate key, based on whether the advertisement is per-user or per-machine. If this parameter is non-<b>NULL</b>, the script will write the registry data under the specified registry key rather than the normal location. In this case, the application will not get advertised to the user.</param>
    <param name="fShortcuts">
      <b>TRUE</b> if shortcuts should be created. If a special folder is returned by<see cref="SHGetSpecialFolderLocation" /> it will hold the shortcuts.</param>
    <param name="fRemoveItems">
      <b>TRUE</b> if specified items are to be removed instead of created.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process was not running under the LocalSystem account.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function is not available for this platform.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiProvideAssembly">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideAssemblyA">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideAssemblyW">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideAssembly">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideAssemblyA">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideAssemblyW">
    <summary>The<b>MsiProvideAssembly</b> function returns the full path to a Windows Installer component that contains an assembly. The function prompts for a source and performs any necessary installation.<b>MsiProvideAssembly</b> increments the usage count for the feature.</summary>
    <param name="szAssemblyName">The assembly name as a string.</param>
    <param name="szAppContext">Set to null for global assemblies. For private assemblies, set <i>szAppContext</i> to the full path of the application configuration file or to the full path of the executable file of the application to which the assembly has been made private.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION_ANY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component if a feature exists from any installed product. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file of the component exists. This flag is similar to the INSTALLMODE_NODETECTION flag except that with this flag we check for any product that has installed the assembly as opposed to the last product as is the case with the INSTALLMODE_NODETECTION flag. This flag can only be used with <b>MsiProvideAssembly</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
      </list>
    </param>
    <param name="dwAssemblyInfo">
      <para>Assembly information and assembly type. Set to one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_NETASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>.NET Assembly</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIASSEMBLYINFO_WIN32ASSEMBLY</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Win32 Assembly</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchPathBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not specify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system does not have enough memory to complete the operation. Available with Windows Server 2003.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponent">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponentA">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponentW">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponent">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponentA">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideComponentW">
    <summary>The<b>MsiProvideComponent</b> function returns the full component path, performing any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature with the necessary component.</param>
    <param name="szFeature">Specifies the feature ID of the feature with the necessary component.</param>
    <param name="szComponent">Specifies the component code of the necessary component.</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_NOTUSED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component being requested is disabled on the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unrecognized product or a feature name was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer overflow is returned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SOURCE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to detect a source.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponent">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentA">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentW">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentEx">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentExA">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentExW">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentEx">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentExA">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentExW">
    <summary>The<b>MsiProvideQualifiedComponentEx</b> function returns the full component path for a qualified component that is published by a product and performs any necessary installation. This function prompts for source if necessary and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID that for the requested component. This may not be the GUID for the component itself but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists, else return ERROR_FILE_NOT_FOUND.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise return ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="szProduct">Specifies the product to match that has published the qualified component. If this is null, then this API works the same as<see cref="MsiProvideQualifiedComponent" />.</param>
    <param name="dwUnused1">Reserved. Must be zero.</param>
    <param name="dwUnused2">Reserved. Must be zero.</param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Component qualifier invalid or not present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. this error is returned for <i>dwInstallMode</i> = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponent">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentA">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiProvideQualifiedComponentW">
    <summary>The<b>MsiProvideQualifiedComponent</b> function returns the full component path for a qualified component and performs any necessary installation. This function prompts for source if necessary, and increments the usage count for the feature.</summary>
    <param name="szCategory">Specifies the component ID for the requested component. This may not be the GUID for the component itself, but rather a server that provides the correct functionality, as in the ComponentId column of the<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent table</a>.</param>
    <param name="szQualifier">Specifies a qualifier into a list of advertising components (from<a href="https://docs.microsoft.com//windows/desktop/Msi/publishcomponent-table">PublishComponent Table</a>).</param>
    <param name="dwInstallMode">
      <para>Defines the installation mode. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component and perform any installation necessary to provide the component. If the key file of a component in the requested feature, or a feature parent, is missing, reinstall the feature using <see cref="MsiReinstallFeature" /> with the following flag bits set: REINSTALLMODE_FILEMISSING, REINSTALLMODE_FILEOLDERVERSION, REINSTALLMODE_FILEVERIFY, REINSTALLMODE_MACHINEDATA, REINSTALLMODE_USERDATA, and REINSTALLMODE_SHORTCUT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_EXISTING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode verifies that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature exists. Otherwise return ERROR_FILE_NOT_FOUND. <para>This mode only checks that the component is registered and does not verify that the key file of the component exists.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>combination of the REINSTALLMODE flags</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call <see cref="MsiReinstallFeature" /> to reinstall the feature using this parameter for the <i>dwReinstallMode</i> parameter, and then provide the component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NOSOURCERESOLUTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Provide the component only if the feature's installation state is INSTALLSTATE_LOCAL. If the feature's installation state is INSTALLSTATE_SOURCE, return ERROR_INSTALL_SOURCE_ABSENT. Otherwise, it returns ERROR_FILE_NOT_FOUND. This mode only checks that the component is registered and does not verify that the key file exists.</description>
        </listheader>
      </list>
    </param>
    <param name="lpPathBuf">Pointer to a variable that receives the path to the component. This parameter can be null.</param>
    <param name="pcchPathBuf">
      <para>Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the <i>lpPathBuf</i> parameter. On input, this is the full size of the buffer, including a space for a terminating null character. If the buffer passed in is too small, the count returned does not include the terminating null character.</para>
      <para>If <i>lpPathBuf</i> is null, <i>pcchBuf</i> can be null.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INDEX_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component qualifier is invalid or absent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FILE_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is absent or broken. This error is returned for dwInstallMode = INSTALLMODE_EXISTING.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified component is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>An error relating to an action</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>See <a href="https://docs.microsoft.com//windows/desktop/Msi/error-codes">Error Codes</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <a href="https://docs.microsoft.com//windows/desktop/Msi/initialization-errors">Initialization Error</a>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An error relating to initialization occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiQueryComponentState">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryComponentStateA">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryComponentStateW">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryComponentState">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryComponentStateA">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryComponentStateW">
    <summary>The <b>MsiQueryComponentState</b> function returns the installed state for a component. This function can query for a component of an instance of a product that is installed under user accounts other than the current user provided the product is not advertised under the per-user-unmanaged context for a user account other than the current user. The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">Specifies the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID for the product that contains the component.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account under which the instance of the product being queried exists. If <i>dwContext</i> is not MSIINSTALLCONTEXT_MACHINE, null specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string "S-1-5-18" (system) cannot be used to enumerate products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per–user–non-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the component's state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szComponentCode">Specifies the component being queried. Component code GUID of the component as found in the ComponentID column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/component-table">Component</a> table.</param>
    <param name="pdwState">
      <para>Installation state of the component for the specified product instance. This parameter can return one of the following or null values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component is installed to run from the source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryComponentState</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling process must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_COMPONENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The component ID does not identify a known component.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failures that cannot be ascribed to any Windows error code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer too small to get the user SID.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureState">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateA">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateW">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateEx">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateExA">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateExW">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateEx">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateExA">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateExW">
    <summary>The <b>MsiQueryFeatureStateEx</b> function returns the installed state for a product feature. This function can be used to query any feature of an instance of a product installed under the machine account or any context under the current user account or the per-user-managed context under any user account other than the current user. A user must have administrative privileges to get information for a product installed for a user other than the current user.</summary>
    <param name="szProductCode">
      <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> GUID of the product that contains the feature of interest.</param>
    <param name="szUserSid">
      <para>Specifies the security identifier (SID) of the account, under which, the instance of the product being queried exists. If <i>dwContext</i> is not <b>MSIINSTALLCONTEXT_MACHINE</b>, a null value specifies the current user.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>NULL denotes the currently logged on user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate features of products installed as per-machine. If <i>dwContext</i> is <b>MSIINSTALLCONTEXT_MACHINE</b>, <i>szUserSid</i> must be null.</div></param>
    <param name="dwContext">
      <para>The installation context of the product instance being queried.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-managed instance of the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-user-unmanaged instance of the product.<div><b>Note</b>  When the query is made on a product installed under the per-user-unmanaged context for a user account other than the current user, the function fails.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the feature state for the per-machine instance of the product.</description>
        </listheader>
      </list>
    </param>
    <param name="szFeature">Specifies the feature being queried. Identifier of the feature as found in the <b>Feature</b> column of the <a href="https://docs.microsoft.com//windows/desktop/Msi/feature-table">Feature table</a>.</param>
    <param name="pdwState">
      <para>Installation state of the feature for the specified product instance. This parameter can return one of the following or null.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This feature is advertised.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiQueryFeatureStateEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A user must have administrative privileges to get information for a product installed for a user other than the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_FEATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature ID does not identify a known feature.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code does not identify a known product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list> <para>For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/displayed-error-messages">Displayed Error Messages</a>.</para></returns>
  </member>
  <member name="Windows.MsiQueryFeatureState">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateA">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryFeatureStateW">
    <summary>The<b>MsiQueryFeatureState</b> function returns the installed state for a product feature.</summary>
    <param name="szProduct">Specifies the product code for the product that contains the feature of interest.</param>
    <param name="szFeature">Identifies the feature of interest.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed locally.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed to run from source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product code or feature ID is unknown.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductState">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductStateA">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductStateW">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductState">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductStateA">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiQueryProductStateW">
    <summary>The<b>MsiQueryProductState</b> function returns the installed state for a product.</summary>
    <param name="szProduct">Specifies the product code that identifies the product to be queried.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for a different user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is advertised but not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is installed for the current user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is neither advertised or installed.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiRemovePatches">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiRemovePatchesA">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiRemovePatchesW">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiRemovePatches">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiRemovePatchesA">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiRemovePatchesW">
    <summary>The <b>MsiRemovePatches</b> function removes one or more patches from a single product. To remove a patch from multiple products, <b>MsiRemovePatches</b> must be called for each product.</summary>
    <param name="szPatchList">A null-terminated string that represents the list of patches to remove. Each patch can be specified by the GUID of the patch or the full path to the patch package. The patches in the list are delimited by semicolons.</param>
    <param name="szProductCode">A null-terminated string that is the <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> (GUID) of the product from which the patches are removed. This parameter cannot be <b>NULL</b>.</param>
    <param name="eUninstallType">
      <para>Value that indicates the type of patch removal to perform. This parameter must be <b>INSTALLTYPE_SINGLE_INSTANCE</b>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLTYPE_SINGLE_INSTANCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is uninstalled for only the product specified by <i>szProduct</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="szPropertyList">A null-terminated string that specifies command-line property settings. For more information see<br /><a href="https://docs.microsoft.com//windows/desktop/Msi/about-properties">About Properties</a> and<a href="https://docs.microsoft.com//windows/desktop/Msi/setting-public-property-values-on-the-command-line">Setting Public Property Values on the Command Line</a>. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The <b>MsiRemovePatches</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was included.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was successfully removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified by <i>szProductList</i> is not installed either per-machine or per-user for the caller of <see cref="MsiRemovePatches" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_PACKAGE_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package cannot be processed by this version of the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_UNSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch package is not removable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch has not been applied to this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_PATCH_REMOVAL_DISALLOWED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Patch removal was disallowed by policy.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSetExternalUI">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSetExternalUIA">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSetExternalUIW">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSetExternalUIRecord">
    <summary>The <b>MsiSetExternalUIRecord</b> function enables an external user-interface (UI) handler.</summary>
    <param name="puiHandler">
      <para>Specifies a callback function that conforms to the <a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handler_record">INSTALLUI_HANDLER_RECORD</a> specification.</para>
      <para>To disable the current external UI handler, call the function with this parameter set to a <b>NULL</b> value.</para>
    </param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message is not sent to the UI, instead the message is logged if logging is enabled. For more information, see<see cref="MsiEnableLog" />.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information.<para>When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The is insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information.<para>This message includes information about units so far and total number of units. This message is only sent to an external user interface and is not logged. For more information, see<see cref="MsiProcessMessage" />.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> is initialized.<para>If this is a full UI installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">Full UI</a> is not yet initialized.</para><para>This message is only sent to an external user interface and is not logged.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a full UI is being used, the full UI has ended.<para>If this is not a quiet installation, the basic UI has not ended.</para><para>This message is only sent to an external user interface and is not logged.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the Full UI dialog.<para>This message is only sent to an external user interface and is not logged.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins.<para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends.<para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">
      <para>A pointer to an application context that is passed to the callback function.</para>
      <para>This parameter can be used for error checking.</para>
    </param>
    <param name="ppuiPrevHandler">Returns the pointer to the previously set callback function that conforms to the <a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handler_record">INSTALLUI_HANDLER_RECORD</a> specification, or <b>NULL</b> if no callback is previously set.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function completes successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_CALL_NOT_IMPLEMENTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This value indicates that an attempt is made to call this function from a custom action.<para>This function cannot be called from a custom action.</para></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSetExternalUI">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSetExternalUIA">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSetExternalUIW">
    <summary>The<b>MsiSetExternalUI</b> function enables an external user-interface handler. This external UI handler is called before the normal internal user-interface handler. The external UI handler has the option to suppress the internal UI by returning a non-zero value to indicate that it has handled the messages. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/about-the-user-interface">About the User Interface</a>.</summary>
    <param name="puiHandler">Specifies a callback function that conforms to the<a href="https://docs.microsoft.com//windows/desktop/api/msi/nc-msi-installui_handlera">INSTALLUI_HANDLER</a> specification.</param>
    <param name="dwMessageFilter">
      <para>Specifies which messages to handle using the external message handler. If the external handler returns a non-zero result, then that message will not be sent to the UI, instead the message will be logged if logging has been enabled. For more information, see the <see cref="MsiEnableLog" /> function.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/filesinuse-dialog">FilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_FATALEXIT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Premature termination of installation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ERROR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The error messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_WARNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The warning messages are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_USER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user requests are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INFO</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status messages that are not displayed are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RESOLVESOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Request to determine a valid source location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_RMFILESINUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Files in use information. When this message is received, a <a href="https://docs.microsoft.com//windows/desktop/Msi/msirmfilesinuse-dialog">MsiRMFilesInUse Dialog</a> should be displayed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_OUTOFDISKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient disk space.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONSTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The start of new installation actions are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_ACTIONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data record with the installation action is logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_COMMONDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameters for user-interface initialization are logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_PROGRESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Msi/p-gly">Progress bar</a> information. This message includes information on units so far and total number of units. For an explanation of the message format, see the <see cref="MsiProcessMessage" /> function. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_INITIALIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If this is not a quiet installation, then the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has been initialized. If this is a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> installation, the <i>full UI</i> is not yet initialized. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_TERMINATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> is being used, the <i>full UI</i> has ended. If this is not a quiet installation, the <a href="https://docs.microsoft.com//windows/desktop/Msi/b-gly">basic UI</a> has not yet ended. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLLOGMODE_SHOWDIALOG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sent prior to display of the <a href="https://docs.microsoft.com//windows/desktop/Msi/f-gly">full UI</a> dialog. This message is only sent to an external user interface and is not logged.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLSTART</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product begins. <para>The message contains the product's ProductName and ProductCode.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>INSTALLLOGMODE_INSTALLEND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Installation of product ends. <para>The message contains the product's ProductName, ProductCode, and return value.</para></description>
        </listheader>
      </list>
    </param>
    <param name="pvContext">Pointer to an application context that is passed to the callback function. This parameter can be used for error checking.</param>
    <returns>The return value is the previously set external handler, or zero (0) if there was no previously set handler.</returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDisk">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDiskA">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDiskW">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDisk">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDiskA">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddMediaDiskW">
    <summary>The <b>MsiSourceListAddMediaDisk</b> function adds or updates a disk of the media source of a registered product or patch. If the disk specified already exists, it is updated with the new values. If the disk specified does not exist, a new disk entry is created with the new values.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM .</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being added or updated.</param>
    <param name="szVolumeLabel">The <i>szVolumeLabel</i> provides the label of the disk being added or updated. An update overwrites the existing volume label in the registry. To change the disk prompt only, get the existing volume label from the registry and provide it in this call along with the new disk prompt. Passing a <b>NULL</b> or empty string for <i>szVolumeLabel</i> registers an empty string (0 bytes in length) as the volume label.</param>
    <param name="szDiskPrompt">On entry to <b>MsiSourceListAddMediaDisk</b>, <i>szDiskPrompt</i> provides the disk prompt of the disk being added or updated. An update overwrites the registered disk prompt.<br />To change the volume label only, get the existing disk prompt that is registered and provide it when calling <b>MsiSourceListAddMediaDisk</b> along with the new volume label. Passing <b>NULL</b> or an empty string registers an empty string (0 bytes in length) as the disk prompt.</param>
    <returns>
      <para>The <b>MsiSourceListAddMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully reordered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSource">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSourceA">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSourceW">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSource">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSourceA">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListAddSourceW">
    <summary>
      <para>The<b>MsiSourceListAddSource</b> function adds to the list of valid network sources that contain the specified type of sources for a product or patch in a specified user context.</para>
      <para>The number of sources in the <a href="https://docs.microsoft.com//windows/desktop/Msi/sourcelist">SOURCELIST</a> property is unlimited.</para>
    </summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. On Windows 2000 or Windows XP, the user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <param name="szSource">Pointer to the string specifying the source.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add a source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source was added.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAll">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllA">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllW">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllEx">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllExA">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllExW">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllEx">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllExA">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllExW">
    <summary>The<b>MsiSourceListClearAllEx</b> function removes all the existing sources of a given source type for the specified product or patch instance. The patch registration is also removed if the sole source of the patch gets removed and if the patch is not installed as a new patch by any client in the same context. Specifying that <b>MsiSourceListClearAllEx</b> remove the current source for this product or patch forces the installer to search the source list for a source the next time a source is required.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> MSISOURCETYPE_MEDIA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to add or move a source. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot access the Windows Installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All sources of the specified type were removed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified patch is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAll">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllA">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearAllW">
    <summary>The<b>MsiSourceListClearAll</b> function removes all network sources from the source list of a patch or product in a specified context. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Msi/source-resiliency">Source Resiliency</a>.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListClearAll</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to clear the source list for this product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USERNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not resolve the user name.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function did not succeed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access installer service.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDisk">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDiskA">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDiskW">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDisk">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDiskA">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListClearMediaDiskW">
    <summary>The <b>MsiSourceListClearMediaDisk</b> function provides the ability to remove an existing registered disk under the media source for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a particular user in the system. An example of user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER. When <i>dwContext</i> is set to MSIINSTALLCONTEXT_MACHINE only, <i>szUserSid</i> must be <b>NULL</b>.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwDiskId">This parameter provides the ID of the disk being removed.</param>
    <returns>
      <para>The <b>MsiSourceListClearMediaDisk</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows Installer service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value was successfully removed or not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisks">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisksA">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisksW">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisks">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisksA">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumMediaDisksW">
    <summary>The <b>MsiSourceListEnumMediaDisks</b> function enumerates the list of disks registered for the media source for a patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value that specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumMediaDisks</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS.</param>
    <param name="pdwDiskId">On entry to <b>MsiSourceListEnumMediaDisks</b> this parameter provides a pointer to a <b>DWORD</b> to receive the ID of the disk that is being enumerated. This parameter is optional.</param>
    <param name="szVolumeLabel">
      <para>An output buffer that receives the volume label of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchVolumeLabel</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szVolumeLabel</i> and <i>pcchVolumeLabel</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchVolumeLabel">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szVolumeLabel</i> buffer. When the function returns, this parameter is the number of <b>TCHAR</b> in the received value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szVolumeLabel</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <param name="szDiskPrompt">
      <para>An output buffer that receives the disk prompt of the disk that is being enumerated. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szDiskPrompt</i> is set to <b>NULL</b> and <i>pcchDiskPrompt</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchDiskPrompt</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szDiskPrompt</i> buffer large enough to contain *<i>pcchDiskPrompt</i> + 1 characters.</para>
      <para>If <i>szDiskPrompt</i> and <i>pcchDiskPrompt</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchDiskPrompt">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szDiskPrompt</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szDiskPrompt</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumMediaDisks</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified media source or the specified product or patch. This does not indicate whether a media source, product, or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more disks registered for this product or patch.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer that is provided is too small to contain the requested information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSources">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSourcesA">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSourcesW">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSources">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSourcesA">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListEnumSourcesW">
    <summary>The <b>MsiSourceListEnumSources</b> function enumerates the sources in the source list of a specified patch or product.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>A string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A <b>NULL</b> indicates the current user who is logged on. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>s-1-1-0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The special SID string s-1-1-0 (everyone) specifies enumeration across all users in the system.</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div></param>
    <param name="dwContext">
      <para>The context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value and the type of sources to clear. This parameter must be a combination of one of the following MSISOURCETYPE_* constants and one of the following MSICODE_* constants.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_NETWORK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a network type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSISOURCETYPE_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source is a URL type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">The index of the source to retrieve. This parameter must be 0 (zero) for the first call to the <b>MsiSourceListEnumSources</b> function, and then incremented for subsequent calls until the function returns ERROR_NO_MORE_ITEMS. The index should be incremented only if the previous call returned ERROR_SUCCESS.</param>
    <param name="szSource">
      <para>A pointer to a buffer that receives the path to the source that is being enumerated. This buffer should be large enough to contain the received value. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If <i>szSource</i> is set to <b>NULL</b> and <i>pcchSource</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchSource</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szSource</i> buffer large enough to contain *<i>pcchSource</i> + 1 characters.</para>
      <para>If <i>szSource</i> and <i>pcchSource</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchSource">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szSource</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szSource</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListEnumSources</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more sources in the specified list to enumerate.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A source is enumerated successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product specified is not installed on the computer in the specified contexts.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolution">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionA">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionW">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionEx">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionExA">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionExW">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionEx">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionExA">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionExW">
    <summary>The <b>MsiSourceListForceResolutionEx</b> function removes the registration of the property called "LastUsedSource". This function does not affect the registered source list. Whenever the installer requires the source to reinstall a product or patch, it first tries the source registered as "LastUsedSource". If that fails, or if that registration is missing, the installer searches the other registered sources until it finds a valid source or until the list of sources is exhausted. Clearing the "LastUsedSource" registration forces the installer to do a source resolution against the registered sources the next time it requires the source.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">This parameter can be a string SID that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE. Using the machine SID ("S-1-5-18") returns ERROR_INVALID PARAMETER. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value determines the interpretation of the <i>szProductCodeOrPatchCode</i> value .</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>The <b>MsiSourceListForceResolutionEx</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to modify the specified source list. Does not indicate whether the product or patch was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not access the Windows Installer service</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The "LastUsedSource" registration was cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product or patch was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolution">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionA">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListForceResolutionW">
    <summary>The<b>MsiSourceListForceResolution</b> function forces the installer to search the source list for a valid product source the next time a source is required. For example, when the installer performs an installation or reinstallation, or when it requires the path for a component that is set to run from source.</summary>
    <param name="szProduct">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> of the product to modify.</param>
    <param name="szUserName">
      <para>The user name for a per-user installation. The user name should always be in the format of DOMAIN\USERNAME (or MACHINENAME\USERNAME for a local user).</para>
      <para>An empty string or <b>NULL</b> for a per-machine installation.</para>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <para>The <b>MsiSourceListForceResolution</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller does not have sufficient access to force resolution for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_USER_NAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified user is not a valid user.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function could not complete.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_SERVICE_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The installation service could not be accessed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter was passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified product is unknown.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfo">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfoA">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfoW">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfo">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfoA">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiSourceListGetInfoW">
    <summary>The <b>MsiSourceListGetInfo</b> function retrieves information about the source list for a product or patch in a specific context.</summary>
    <param name="szProductCodeOrPatchCode">The <a href="https://docs.microsoft.com//windows/desktop/Msi/productcode">ProductCode</a> or patch GUID of the product or patch. Use a null-terminated string. If the string is longer than 39 characters, the function fails and returns ERROR_INVALID_PARAMETER. This parameter cannot be <b>NULL</b>.</param>
    <param name="szUserSid">
      <para>This parameter can be a string security identifier (SID) that specifies the user account that contains the product or patch. The SID is not validated or resolved. An incorrect SID can return ERROR_UNKNOWN_PRODUCT or ERROR_UNKNOWN_PATCH. When referencing a machine context, <i>szUserSID</i> must be <b>NULL</b> and <i>dwContext</i> must be MSIINSTALLCONTEXT_MACHINE.</para>
      <list type="table">
        <listheader>
          <description>Type of SID</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>NULL</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> denotes the currently logged on user. When referencing the current user account, <i>szUserSID</i> can be <b>NULL</b> and <i>dwContext</i> can be MSIINSTALLCONTEXT_USERMANAGED or MSIINSTALLCONTEXT_USERUNMANAGED.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>User SID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies enumeration for a specific user in the system. An example of a user SID is "S-1-3-64-2415071341-1358098788-3127455600-2561".</description>
        </listheader>
      </list> <div><b>Note</b>  The special SID string s-1-5-18 (system) cannot be used to enumerate products or patches installed as per-machine. Setting the SID value to s-1-5-18 returns ERROR_INVALID_PARAMETER.</div><div><b>Note</b>  The special SID string s-1-1-0 (everyone) should not be used. Setting the SID value to s-1-1-0 fails and returns ERROR_INVALID_PARAM.</div></param>
    <param name="dwContext">
      <para>This parameter specifies the context of the product or patch instance. This parameter can contain one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Type of context</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-user-managed context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_USERUNMANAGED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description> The product or patch instance exists in the per-user-unmanaged context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSIINSTALLCONTEXT_MACHINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product or patch instance exists in the per-machine context.</description>
        </listheader>
      </list>
    </param>
    <param name="dwOptions">
      <para>The <i>dwOptions</i> value specifies the meaning of <i>szProductCodeOrPatchCode</i>.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a product code GUID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSICODE_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>szProductCodeOrPatchCode</i> is a patch code GUID.</description>
        </listheader>
      </list>
    </param>
    <param name="szProperty">
      <para>A null-terminated string that specifies the property value to retrieve. The <i>szProperty</i> parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Name</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_MEDIAPACKAGEPATH</b>
                </term>
              </listheader>
              <listheader>
                <term>"MediaPackagePath"</term>
              </listheader>
            </list>
          </description>
          <description>The path relative to the root of the installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_DISKPROMPT</b>
                </term>
              </listheader>
              <listheader>
                <term>"DiskPrompt"</term>
              </listheader>
            </list>
          </description>
          <description>The prompt template that is used when prompting the user for installation media.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDSOURCE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedSource"</term>
              </listheader>
            </list>
          </description>
          <description>The most recently used source location for the product.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_LASTUSEDTYPE</b>
                </term>
              </listheader>
              <listheader>
                <term>"LastUsedType"</term>
              </listheader>
            </list>
          </description>
          <description>An "n" if the last-used source is a network location. A "u" if the last used source is a URL location. An "m" if the last used source is media. An empty string ("") if there is no last used source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLPROPERTY_PACKAGENAME</b>
                </term>
              </listheader>
              <listheader>
                <term>"PackageName"</term>
              </listheader>
            </list>
          </description>
          <description>The name of the Windows Installer package or patch package on the source.</description>
        </listheader>
      </list>
    </param>
    <param name="szValue">
      <para>An output buffer that receives the information. This buffer should be large enough to contain the information. If the buffer is too small, the function returns ERROR_MORE_DATA and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character.</para>
      <para>If the <i>szValue</i> is set to <b>NULL</b> and <i>pcchValue</i> is set to a valid pointer, the function returns ERROR_SUCCESS and sets *<i>pcchValue</i> to the number of <b>TCHAR</b> in the value, not including the terminating NULL character. The function can then be called again to retrieve the value, with <i>szValue</i> buffer large enough to contain *<i>pcchValue</i> + 1 characters.</para>
      <para>If <i>szValue</i> and <i>pcchValue</i> are both set to <b>NULL</b>, the function returns ERROR_SUCCESS if the value exists, without retrieving the value.</para>
    </param>
    <param name="pcchValue">
      <para>A pointer to a variable that specifies the number of <b>TCHAR</b> in the <i>szValue</i> buffer. When the function returns, this parameter is set to the size of the requested value whether or not the function copies the value into the specified buffer. The size is returned as the number of <b>TCHAR</b> in the requested value, not including the terminating null character.</para>
      <para>This parameter can be set to <b>NULL</b> only if <i>szValue</i> is also <b>NULL</b>, otherwise the function returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>The <b>MsiSourceListGetInfo</b> function returns the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user does not have the ability to read the specified source list. This does not indicate whether a product or patch is found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_CONFIGURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid parameter is passed to the function.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The provided buffer is not sufficient to contain the requested data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property is retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The patch is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PRODUCT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The product is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_UNKNOWN_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The source property is not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_FUNCTION_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected internal failure.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeature">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiUseFeatureA">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiUseFeatureW">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiUseFeatureEx">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeatureExA">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeatureExW">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeatureEx">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeatureExA">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeatureExW">
    <summary>The<b>MsiUseFeatureEx</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <param name="dwInstallMode">
      <para>This parameter can have the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLMODE_NODETECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return value indicates the installation state.</description>
        </listheader>
      </list>
    </param>
    <param name="dwReserved">Reserved for future use. This value must be set to 0.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MsiUseFeature">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiUseFeatureA">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiUseFeatureW">
    <summary>The<b>MsiUseFeature</b> function increments the usage count for a particular feature and indicates the installation state for that feature. This function should be used to indicate an application's intent to use a feature.</summary>
    <param name="szProduct">Specifies the product code for the product that owns the feature to be used.</param>
    <param name="szFeature">Identifies the feature to be used.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ABSENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_ADVERTISED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is advertised</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_BADCONFIG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The configuration data is corrupt.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid function argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_LOCAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is locally installed and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_SOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is installed from the source and available for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INSTALLSTATE_UNKNOWN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The feature is not published.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackage">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackageA">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackageW">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackage">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackageA">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
  <member name="Windows.MsiVerifyPackageW">
    <summary>The<b>MsiVerifyPackage</b> function verifies that the given file is an installation package.</summary>
    <param name="szPackagePath">Specifies the path and file name of the package.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_INVALID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is not a valid package.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INSTALL_PACKAGE_OPEN_FAILED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file could not be opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_SUCCESS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The file is a package.</description>
        </listheader>
      </list> </returns>
  </member>
</doc>