<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.PssCaptureSnapshot">
    <summary>Captures a snapshot of a target process.</summary>
    <param name="ProcessHandle">A handle to the target process.</param>
    <param name="CaptureFlags">Flags that specify what to capture. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/ne-processsnapshot-pss_capture_flags">PSS_CAPTURE_FLAGS</a>.</param>
    <param name="ThreadContextFlags">The <b>CONTEXT</b> record flags to capture if <i>CaptureFlags</i> specifies thread contexts.</param>
    <param name="SnapshotHandle">A handle to the snapshot that this function captures.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success.</para>
      <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para>
    </returns>
  </member>
  <member name="Windows.PssDuplicateSnapshot">
    <summary>Duplicates a snapshot handle from one process to another.</summary>
    <param name="SourceProcessHandle">A handle to the source process from which the original snapshot was captured. The handle must have <b>PROCESS_VM_READ</b> and <b>PROCESS_DUP_HANDLE</b> rights.</param>
    <param name="SnapshotHandle">A handle to the snapshot to duplicate. This handle must be in the context of the source process.</param>
    <param name="TargetProcessHandle">A handle to the target process that receives the duplicate snapshot. The handle must have <b>PROCESS_VM_OPERATION</b>, <b>PROCESS_VM_WRITE</b>, and <b>PROCESS_DUP_HANDLE</b> rights.</param>
    <param name="TargetSnapshotHandle">A handle to the duplicate snapshot that this function creates, in the context of the target process.</param>
    <param name="Flags">The duplication flags. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/ne-processsnapshot-pss_duplicate_flags">PSS_DUPLICATE_FLAGS</a>.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or the following error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is invalid.</description>
        </listheader>
      </list> <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para></returns>
  </member>
  <member name="Windows.PssFreeSnapshot">
    <summary>Frees a snapshot.</summary>
    <param name="ProcessHandle">A handle to the process that contains the snapshot. The handle must have <b>PROCESS_VM_READ</b>, <b>PROCESS_VM_OPERATION</b>, and <b>PROCESS_DUP_HANDLE</b> rights. If the snapshot was captured from the current process, or duplicated into the current process, then pass in the result of <see cref="GetCurrentProcess" />.</param>
    <param name="SnapshotHandle">A handle to the snapshot to free.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or one of the following error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_SUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote snapshot was not created with <b>PSS_CREATE_USE_VM_ALLOCATIONS</b>.</description>
        </listheader>
      </list> <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para></returns>
  </member>
  <member name="Windows.PssQuerySnapshot">
    <summary>Queries the snapshot.</summary>
    <param name="SnapshotHandle">A handle to the snapshot to query.</param>
    <param name="InformationClass">An enumerator member that selects what information to query. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/ne-processsnapshot-pss_query_information_class">PSS_QUERY_INFORMATION_CLASS</a>.</param>
    <param name="Buffer">The information that this function provides.</param>
    <param name="BufferLength">The size of <i>Buffer</i>, in bytes.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or one of the following error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified buffer length is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified information class is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The requested information is not in the snapshot.</description>
        </listheader>
      </list> <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para></returns>
  </member>
  <member name="Windows.PssWalkMarkerCreate">
    <summary>Creates a walk marker.</summary>
    <param name="Allocator">A structure that provides functions to allocate and free memory. If you provide the structure, <b>PssWalkMarkerCreate</b> uses the functions to allocate the internal walk marker structures. Otherwise it uses the default process heap. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/ns-processsnapshot-pss_allocator">PSS_ALLOCATOR</a>.</param>
    <param name="WalkMarkerHandle">A handle to the walk marker that this function creates.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or the following error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_ENOUGH_MEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not allocate memory for the walk marker.</description>
        </listheader>
      </list> <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para></returns>
  </member>
  <member name="Windows.PssWalkMarkerFree">
    <summary>Frees a walk marker created by <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/nf-processsnapshot-psswalkmarkercreate">PssWalkMarkerCreate</a>.</summary>
    <param name="WalkMarkerHandle">A handle to the walk marker.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success.</para>
      <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para>
    </returns>
  </member>
  <member name="Windows.PssWalkMarkerGetPosition">
    <summary>Returns the current position of a walk marker.</summary>
    <param name="WalkMarkerHandle">A handle to the walk marker.</param>
    <param name="Position">The walk marker position that this function returns.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success.</para>
      <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para>
    </returns>
  </member>
  <member name="Windows.PssWalkMarkerSeekToBeginning">
    <summary>Rewinds a walk marker back to the beginning.</summary>
    <param name="WalkMarkerHandle">A handle to the walk marker.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success.</para>
      <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para>
    </returns>
  </member>
  <member name="Windows.PssWalkMarkerSetPosition">
    <summary>Sets the position of a walk marker.</summary>
    <param name="WalkMarkerHandle">A handle to the walk marker.</param>
    <param name="Position">The position to set. This is a position that the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/nf-processsnapshot-psswalkmarkergetposition">PssWalkMarkerGetPosition</a> function provided.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or one of the following error codes.</para>
      <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para>
    </returns>
  </member>
  <member name="Windows.PssWalkSnapshot">
    <summary>Returns information from the current walk position and advanced the walk marker to the next position.</summary>
    <param name="SnapshotHandle">A handle to the snapshot.</param>
    <param name="InformationClass">The type of information to return. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/processsnapshot/ne-processsnapshot-pss_walk_information_class">PSS_WALK_INFORMATION_CLASS</a>.</param>
    <param name="WalkMarkerHandle">A handle to a walk marker. The walk marker indicates the walk position from which data is to be returned. <b>PssWalkSnapshot</b> advances the walk marker to the next walk position in time order before returning to the caller.</param>
    <param name="Buffer">The snapshot information that this function returns.</param>
    <param name="BufferLength">The size of <i>Buffer</i>, in bytes.</param>
    <returns>
      <para>This function returns <b>ERROR_SUCCESS</b> on success or one of the following error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_BAD_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified buffer length is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified information class is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>Buffer</i> is <b>NULL</b>, and there is data at the current position to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NO_MORE_ITEMS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The walk has completed and there are no more items to return.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The requested information is not in the snapshot.</description>
        </listheader>
      </list> <para>All error codes are defined in winerror.h. Use <see cref="FormatMessage" /> with the <b>FORMAT_MESSAGE_FROM_SYSTEM</b> flag to get a message for an error code.</para></returns>
  </member>
</doc>