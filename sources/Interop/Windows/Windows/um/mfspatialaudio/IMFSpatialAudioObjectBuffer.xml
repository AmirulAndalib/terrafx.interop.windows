<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFSpatialAudioObjectBuffer.GetID">
    <summary>Returns the unique, unsigned 32-bit ID of the spatial audio object represented by the buffer. If <see cref="SetID" /> method was not previously called, this method returns the invalid object ID, -1 (0xffffffff). The invalid ID indicates that the object buffer is unused and contains invalid data.</summary>
    <param name="pu32ID">Pointer to a 32-bit variable where the object ID will be stored.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied pointer is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSpatialAudioObjectBuffer.GetMetadataItems">
    <summary>Retrieves a pointer to a buffer that may contain spatial audio metadata.</summary>
    <param name="ppMetadataItems">A pointer to an <see cref="ISpatialAudioMetadataItems" /> object in which the collection of metadata items will be stored.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied pointer is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSpatialAudioObjectBuffer.GetType">
    <summary>Gets the type of the spatial audio object represented by the buffer. If <see cref="SetType" /> has not been called previously, this method returns the default value of <b>AudioObjectType_None</b>.</summary>
    <param name="pType">A pointer to an <see cref="AudioObjectType" /> variable where the audio object type will be stored.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied pointer is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSpatialAudioObjectBuffer.SetID">
    <summary>Sets the ID of the spatial audio object represented by the buffer.</summary>
    <param name="u32ID">A 32-bit unsigned unique ID of the audio object.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSpatialAudioObjectBuffer.SetType">
    <summary>Sets the type of the spatial audio object represented by the buffer.</summary>
    <param name="type">A value from the <see cref="AudioObjectType" /> enumeration specifying the type of audio object.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFSpatialAudioObjectBuffer">
    <summary>Represents a section of audio data with associated positional and rendering metadata. Spatial audio objects are stored in <see cref="IMFSpatialAudioSample" /> instances, and allow passing of spatial audio information between Media Foundation components.</summary>
  </member>
</doc>