<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ITfSource.AdviseSink">
    <summary>
      <para>Installs an advise sink.</para>
    </summary>
    <param name="riid">
      <para>Identifies the type of advise sink to install.</para>
      <para>This parameter can be one of the following values when the <b>ITfSource</b> object is obtained from an <see cref="ITfThreadMgr" /> object.</para>
      <para>This parameter can be one of the following values when the <see cref="ITfSource" /> object is obtained from an <see cref="ITfContext" /> object.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>IID_ITfActiveLanguageProfileNotifySink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfActiveLanguageProfileNotifySink" /> advise sink.</para>
          </description>
        </item>
        <item>
          <description>
            <b>IID_ITfDisplayAttributeNotifySink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfDisplayAttributeNotifySink" /> advise sink.</para>
          </description>
        </item>
        <item>
          <description>
            <b>IID_ITfKeyTraceEventSink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfKeyTraceEventSink" /> advise sink.</para>
          </description>
        </item>
        <item>
          <description>
            <b>IID_ITfPreservedKeyNotifySink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfPreservedKeyNotifySink" /> advise sink.</para>
          </description>
        </item>
        <item>
          <description>
            <b>IID_ITfThreadFocusSink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfThreadFocusSink" /> advise sink.</para>
          </description>
        </item>
        <item>
          <description>
            <b>IID_ITfThreadMgrEventSink</b>
          </description>
          <description>
            <para>Installs an <see cref="ITfThreadMgrEventSink" /> advise sink.</para>
          </description>
        </item>
      </list>
    </param>
    <param name="punk">
      <para>The advise sink <b>IUnknown</b> pointer.</para>
    </param>
    <param name="pdwCookie">
      <para>Address of a DWORD value that receives an identifying cookie. This value is used to uninstall the advise sink in a subsequent call to <see cref="ITfSource.UnadviseSink" />. Receives (DWORD)-1 if a failure occurs.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method was successful.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>One or more parameters are invalid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>CONNECT_E_CANNOTCONNECT</b>
            </para>
          </description>
          <description>
            <para>The advise sink cannot be installed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>CONNECT_E_ADVISELIMIT</b>
            </para>
          </description>
          <description>
            <para>The maximum number of advise sinks has been reached.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_FAIL</b>
            </para>
          </description>
          <description>
            <para>An unspecified error occurred.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>A memory allocation failure occurred.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="ITfActiveLanguageProfileNotifySink " />
    <seealso cref="ITfCompartment " />
    <seealso cref="ITfCompartmentEventSink " />
    <seealso cref="ITfContext " />
    <seealso cref="ITfContextKeyEventSink " />
    <seealso cref="ITfDisplayAttributeNotifySink " />
    <seealso cref="ITfInputProcessorProfiles " />
    <seealso cref="ITfKeyTraceEventSink " />
    <seealso cref="ITfLangBarItem " />
    <seealso cref="ITfLangBarItemSink " />
    <seealso cref="ITfLanguageProfileNotifySink " />
    <seealso cref="ITfPreservedKeyNotifySink " />
    <seealso cref="ITfSource" />
    <seealso cref="ITfSource.UnadviseSink " />
    <seealso cref="ITfStatusSink " />
    <seealso cref="ITfSystemLangBarItemSink " />
    <seealso cref="ITfTextEditSink " />
    <seealso cref="ITfTextLayoutSink " />
    <seealso cref="ITfThreadFocusSink " />
    <seealso cref="ITfThreadMgr " />
    <seealso cref="ITfThreadMgrEventSink " />
  </member>
  <member name="ITfSource.UnadviseSink">
    <summary>
      <para>Uninstalls an advise sink.</para>
    </summary>
    <param name="dwCookie">
      <para>A DWORD that identifies the advise sink to uninstall. This value is provided by a previous call to <see cref="ITfSource.AdviseSink" />.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method was successful.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>The <i>dwCookie</i> value is invalid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>CONNECT_E_NOCONNECTION</b>
            </para>
          </description>
          <description>
            <para>The advise sink cannot be found.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="ITfSource" />
    <seealso cref="ITfSource.AdviseSink " />
  </member>
  <member name="ITfSource">
    <summary>
      <para>The <b>ITfSource</b> interface is implemented by the TSF manager. It is used by applications and text services to install and uninstall advise sinks.</para>
    </summary>
    <remarks>
      <para>The TSF manager has different implementations of <b>ITfSource</b>, depending upon how the <b>ITfSource</b> interface is obtained. The difference in the implementations is the types of advise sinks that can be installed with the interface. The different implementations can be obtained from the following objects.</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="ITfThreadMgr " />
          </description>
        </item>
        <item>
          <description>
            <see cref="ITfContext " />
          </description>
        </item>
        <item>
          <description>
            <see cref="ITfCompartment " />
          </description>
        </item>
        <item>
          <description>
            <see cref="ITfInputProcessorProfiles " />
          </description>
        </item>
        <item>
          <description>
            <see cref="ITfLangBarItem " />
          </description>
        </item>
      </list>
      <para>For more information about advise sinks that can be installed by each implementation, see <see cref="ITfSource.AdviseSink" />.</para>
      <h4>Examples</h4>
      <para>
        <b>ITfThreadMgr</b>
      </para>
      <code>
HRESULT hr;
ITfSource *pSource;

hr = pThreadManager-&gt;QueryInterface(IID_ITfSource, (LPVOID*)&amp;amp;amp;amp;amp;amp;pSource);
if(SUCCEEDED(hr))
{
    //Use the ITfSource interface.

    pSource-&gt;Release();
}

</code>
      <para>
        <b>ITfContext</b>
      </para>
      <code>
HRESULT hr;
ITfSource *pSource;

hr = pContext-&gt;QueryInterface(IID_ITfSource, (LPVOID*)&amp;amp;amp;amp;amp;amp;pSource);
if(SUCCEEDED(hr))
{
    //Use the ITfSource interface.

    pSource-&gt;Release();
}

</code>
      <para>
        <b>ITfCompartment</b>
      </para>
      <code>
HRESULT hr;
ITfSource *pSource;

hr = pCompartmentManager-&gt;QueryInterface(IID_ITfSource, (LPVOID*)&amp;amp;amp;amp;amp;amp;pSource);
if(SUCCEEDED(hr))
{
    //Use the ITfSource interface.

    pSource-&gt;Release();
}

</code>
      <para>
        <b>ITfInputProcessorProfiles</b>
      </para>
      <code>
HRESULT hr;
ITfSource *pSource;

hr = pProfiles-&gt;QueryInterface(IID_ITfSource, (LPVOID*)&amp;amp;amp;amp;amp;amp;pSource);
if(SUCCEEDED(hr))
{
    //Use the ITfSource interface.

    pSource-&gt;Release();
}

</code>
      <para>
        <b>ITfLangBarItem</b>
      </para>
      <code>
HRESULT hr;
ITfSource *pSource;

hr = pLangBarItem-&gt;QueryInterface(IID_ITfSource, (LPVOID*)&amp;amp;amp;amp;amp;amp;pSource);
if(SUCCEEDED(hr))
{
    //Use the ITfSource interface.

    pSource-&gt;Release();
}

</code>
    </remarks>
  </member>
</doc>