<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS">
    <summary>Describes an input stream on a Media Foundation transform (MFT).</summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_WHOLE_SAMPLES">
    <summary>
      <para>Each media sample (<see cref="IMFSample" /> interface) of input data must contain complete, unbroken units of data. The definition of a <i>unit of data</i> depends on the media type: For uncompressed video, a video frame; for compressed data, a compressed packet; for uncompressed audio, a single audio frame.</para>
      <para>For uncompressed audio formats, this flag is always implied. (It is valid to set the flag, but not required.) An uncompressed audio frame should never span more than one media sample.</para>
    </summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER">
    <summary>
      <para>Each media sample that the client provides as input must contain exactly one unit of data, as defined for the MFT_INPUT_STREAM_WHOLE_SAMPLES flag.</para>
      <para>If this flag is present, the MFT_INPUT_STREAM_WHOLE_SAMPLES flag must also be present.</para>
      <para>An MFT that processes uncompressed audio should not set this flag. The MFT should accept buffers that contain more than a single audio frame, for efficiency.</para>
    </summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE">
    <summary>All input samples must be the same size. The size is given in the <b>cbSize</b> member of the <see cref="MFT_INPUT_STREAM_INFO" /> structure. The MFT must provide this value. During processing, the MFT should verify the size of input samples, and may drop samples with incorrect size.</summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_HOLDS_BUFFERS">
    <summary>The MFT might hold one or more input samples after <see cref="IMFTransform.ProcessOutput" /> is called. If this flag is present, the <b>hnsMaxLatency</b> member of the <see cref="MFT_INPUT_STREAM_INFO" /> structure gives the maximum latency, and the <b>cbMaxLookahead</b> member gives the maximum number of bytes of lookahead.</summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_DOES_NOT_ADDREF">
    <summary>
      <para>The MFT does not hold input samples after the <see cref="IMFTransform.ProcessInput" /> method returns. It releases the sample before the <b>ProcessInput</b> method returns.</para>
      <para>If this flag is absent, the MFT might hold a reference count on the samples that are passed to the <see cref="ProcessInput" /> method. The client must not re-use or delete the buffer memory until the MFT releases the sample's <see cref="IMFSample" /> pointer.</para>
      <para>If this flag is absent, it does not guarantee that the MFT holds a reference count on the input samples. It is valid for an MFT to release input samples in <see cref="ProcessInput" /> even if the MFT does not set this flag. However, setting this flag might enable to client to optimize how it re-uses buffers.</para>
      <para>An MFT should not set this flag if it ever holds onto an input sample after returning from <see cref="ProcessInput" />.</para>
    </summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_REMOVABLE">
    <summary>This input stream can be removed by calling <see cref="IMFTransform.DeleteInputStream" />.</summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_OPTIONAL">
    <summary>This input stream is optional. The transform can produce output without receiving input from this stream. The caller can deselect the stream by not setting a media type or by setting a <b>NULL</b> media type. It is possible for every input stream on a transform to be optional, but at least one input must be selected in order to produce output.</summary>
  </member>
  <member name="_MFT_INPUT_STREAM_INFO_FLAGS.MFT_INPUT_STREAM_PROCESSES_IN_PLACE">
    <summary>
      <para>The MFT can perform in-place processing. In this mode, the MFT directly modifies the input buffer. When the client calls <see cref="ProcessOutput" />, the same sample that was delivered to this stream is returned in the output stream that has a matching stream identifier. This flag implies that the MFT holds onto the input buffer, so this flag cannot combined with the MFT_INPUT_STREAM_DOES_NOT_ADDREF flag.</para>
      <para>If this flag is present, the MFT must set the MFT_OUTPUT_STREAM_PROVIDES_SAMPLES or MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES flag for the output stream that corresponds to this input stream. (See <see cref="IMFTransform.GetOutputStreamInfo" />).</para>
    </summary>
  </member>
</doc>