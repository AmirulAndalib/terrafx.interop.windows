<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="MFT_OUTPUT_DATA_BUFFER">
    <summary>Contains information about an output buffer for a Media Foundation transform. This structure is used in the <see cref="IMFTransform.ProcessOutput" /> method.</summary>
  </member>
  <member name="MFT_OUTPUT_DATA_BUFFER.dwStreamID">
    <summary>
      <para>Output stream identifier. Before calling <see cref="ProcessOutput" />, set this member to a valid stream identifier.</para>
      <para>Exception: If the <see cref="IMFTransform.GetStreamIDs" /> method returns E_NOTIMPL, the MFT ignores this member and uses the indexes of the <i>pOutputSamples</i> array in the <see cref="ProcessOutput" /> method as the stream identifiers. In other words, it uses the first element in the array for stream 0, the second for stream 1, and so forth. It is recommended (but not required) that the caller set <b>dwStreamID</b> equal to the array index in this case.</para>
    </summary>
  </member>
  <member name="MFT_OUTPUT_DATA_BUFFER.pSample">
    <summary>Pointer to the <see cref="IMFSample" /> interface. Before calling <see cref="ProcessOutput" />, set this member equal to a valid <b>IMFSample</b> pointer or <b>NULL</b>. See Remarks for more information.</summary>
  </member>
  <member name="MFT_OUTPUT_DATA_BUFFER.dwStatus">
    <summary>Before calling <see cref="ProcessOutput" />, set this member to zero. When the method returns, the MFT might set the member equal to a value from the <see cref="_MFT_OUTPUT_DATA_BUFFER_FLAGS" /> enumeration. Otherwise, the MFT leaves this member equal to zero.</summary>
  </member>
  <member name="MFT_OUTPUT_DATA_BUFFER.pEvents">
    <summary>Before calling <see cref="ProcessOutput" />, set this member to <b>NULL</b>. On output, the MFT might set this member to a valid <see cref="IMFCollection" /> interface pointer. The pointer represents a collecton that contains zero or more events. To get each event, call <see cref="IMFCollection.GetElement" /> and query the returned <b>IUnknown</b> pointer for the <see cref="IMFMediaEvent" /> interface. When the <b>ProcessOutput</b> method returns, the caller is responsible for releasing the <b>IMFCollection</b> pointer if the pointer is not <b>NULL</b>.</summary>
  </member>
</doc>