<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IReferenceClock.AdviseTime">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>AdviseTime</code> method creates a one-shot advise request.</para>
    </summary>
    <param name="baseTime">Base reference time, in 100-nanosecond units. See Remarks.</param>
    <param name="streamTime">Stream offset time, in 100-nanosecond units. See Remarks.</param>
    <param name="hEvent">Handle to an event, created by the caller.</param>
    <param name="pdwAdviseCookie">Pointer to a variable that receives an identifier for the advise request.</param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid time values.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> pointer argument.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IReferenceClock.GetTime">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>GetTime</code> method retrieves the current reference time.</para>
    </summary>
    <param name="pTime">Pointer to a variable that receives the current time, in 100-nanosecond units.</param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> pointer argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Returned time is the same as the previous value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IReferenceClock.Unadvise">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>Unadvise</code> method removes a pending advise request.</para>
    </summary>
    <param name="dwAdviseCookie">Identifier of the request to remove. Use the value returned by <see cref="IReferenceClock.AdviseTime" /> or <see cref="IReferenceClock.AdvisePeriodic" /> in the <i>pdwAdviseToken</i> parameter.</param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IReferenceClock">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>IReferenceClock</code> interface provides the reference time for the filter graph.</para>
      <para>Filters that can act as a reference clock can expose this interface. It is also exposed by the <a href="https://docs.microsoft.com//windows/desktop/DirectShow/system-reference-clock">System Reference Clock</a>. The filter graph manager uses this interface to synchronize the filter graph. Applications can use this interface to retrieve the current reference time, or to request notification of an elapsed time.</para>
      <para>For more information, see <a href="https://docs.microsoft.com//windows/desktop/DirectShow/time-and-clocks-in-directshow">Time and Clocks in DirectShow</a>.</para>
      <para>
        <b>Filter developers:</b>Implement this interface if you are writing a filter that generates reliable clock times. For example, audio renderers implement this interface, because audio sound boards usually contain a reference clock. Use the <a href="https://docs.microsoft.com//windows/desktop/DirectShow/cbasereferenceclock">CBaseReferenceClock</a> class to implement this interface.</para>
      <para>To increase the chances that a non-rendering filter will be selected by the Filter Graph Manager as the reference close, follow these steps:</para>
      <list type="number">
        <item>
          <description>Implement <code>IReferenceClock</code> in the filter.</description>
        </item>
        <item>
          <description>Implement <see cref="IAMFilterMiscFlags" /> in the filter.</description>
        </item>
        <item>
          <description>Return AM_FILTER_MISC_FLAGS_IS_SOURCE from <see cref="IAMFilterMiscFlags.GetMiscFlags" />.</description>
        </item>
        <item>
          <description>Implement <see cref="IAMPushSource" /> on all output pins.</description>
        </item>
        <item>
          <description>Return (* pFlags) = 0 from <see cref="IAMPushSource.GetPushSourceFlags" />.</description>
        </item>
        <item>
          <description>You may return E_NOTIMPL from all other <b>IAMPushSource</b> methods.</description>
        </item>
      </list>
    </summary>
  </member>
</doc>