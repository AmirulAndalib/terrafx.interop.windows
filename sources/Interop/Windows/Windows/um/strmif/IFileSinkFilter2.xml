<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFileSinkFilter2.SetFileName">
    <summary>
      <para>The <code>SetFileName</code> method sets the name of the file into which media samples will be written.</para>
    </summary>
    <param name="pszFileName">
      <para>Pointer to the name of the file to receive the media samples.</para>
    </param>
    <param name="pmt">
      <para>Pointer to the type of media samples to be written to the file, and the media type of the sink filter's input pin.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value.</para>
    </returns>
    <remarks>
      <para>If the <i>pszFileName</i> parameter names a nonexistent file, the file will be created. If it names an existing file, the sink filter will overwrite the file without first deleting it.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IFileSinkFilter Interface" />
    <seealso cref="IFileSinkFilter2" />
  </member>
  <member name="IFileSinkFilter2.GetMode">
    <summary>
      <para>The <code>GetMode</code> method retrieves whether the file writer destroys the file when it creates the new one.</para>
    </summary>
    <param name="pdwFlags">
      <para>Pointer to the retrieved flags. Currently, the only defined flag is AM_FILE_OVERWRITE, which indicates that the file should be destroyed; zero indicates that the file will be left alone.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value that depends on the implementation of the interface.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IFileSinkFilter2 Interface" />
  </member>
  <member name="IFileSinkFilter2.SetMode">
    <summary>
      <para>The <code>SetMode</code> method determines whether the file writer destroys the file when it creates the new one.</para>
    </summary>
    <param name="dwFlags">
      <para>Currently, the only defined flag is AM_FILE_OVERWRITE, which indicates that the file writer should destroy the file. Specify zero for <i>dwFlags</i> to leave the file alone.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value that depends on the implementation of the interface.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IFileSinkFilter2 Interface" />
  </member>
  <member name="IFileSinkFilter2">
    <summary>
      <para>The <b>IFileSinkFilter2</b> interface extends the <see cref="IFileSinkFilter" /> interface. Filters that write media streams to a file implement this interface. A file sink filter in a video capture filter graph, for instance, saves the output of the video compression filter to a file. Typically, the application running this filter graph should allow the user to enter the name of the file to which to save the data. This interface enables you to communicate this information.</para>
      <para>
        <b>IFileSinkFilter2</b> adds the option to determine whether the file it writes should destroy an existing file of the same name. In the video capture case, do not destroy a file you've already created, because preallocating file space takes valuable time. By default, the new file does not destroy the old one. Otherwise, destroy the original file to make sure the file you author doesn't contain garbage.</para>
    </summary>
    <seealso cref="IFileSinkFilter" />
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/interfaces">Interfaces</seealso>
  </member>
</doc>