<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IEnumFilters.Clone">
    <summary>
      <para>The <code>Clone</code> method makes a copy of the enumerator object. The returned object starts with the same enumeration state as the original.</para>
    </summary>
    <param name="ppEnum">
      <para>Receives a pointer to the <b>IEnumFilters</b> interface of the new enumerator. The caller must release the interface.</para>
    </param>
    <returns>
      <para>Returns one of the following <b>HRESULTs</b>.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Insufficient memory.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <b>NULL</b> pointer argument.
</description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IEnumFilters Interface" />
  </member>
  <member name="IEnumFilters.Next">
    <summary>
      <para>The <code>Next</code> method retrieves the specified number of filters in the enumeration sequence.</para>
    </summary>
    <param name="cFilters">
      <para>Number of filters to retrieve.</para>
    </param>
    <param name="ppFilter">
      <para>Array of size <i>cFilters</i> that is filled with <see cref="IBaseFilter" /> interface pointers. The caller must release the interfaces.</para>
    </param>
    <param name="pcFetched">
      <para>Receives the number of filters retrieved. Can be <b>NULL</b> if <i>cFilters</i> is 1.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value
</description>
          <description>Description
</description>
        </listheader>
        <item>
          <description>S_FALSE</description>
          <description>Did not retrieve as many filters as requested.</description>
        </item>
        <item>
          <description>S_OK</description>
          <description>Success.</description>
        </item>
        <item>
          <description>E_INVALIDARG</description>
          <description>Invalid argument.</description>
        </item>
        <item>
          <description>E_POINTER</description>
          <description>
            <b>NULL</b> pointer argument.</description>
        </item>
        <item>
          <description>VFW_E_ENUM_OUT_OF_SYNC</description>
          <description>The graph has changed and is now inconsistent with the enumerator.</description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If the method succeeds, the <b>IBaseFilter</b> pointers all have outstanding reference counts. Be sure to release them when you are done.</para>
      <para>If the filter graph changes (for example, the application removes a filter), the enumerator is no longer be consistent with the graph, and the method returns VFW_E_ENUM_OUT_OF_SYNC. Discard any data obtained from previous calls to the enumerator, because it might be invalid. Update the enumerator by calling the <see cref="IEnumFilters.Reset" /> method. You can then call the <code>Next</code> method safely.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IEnumFilters Interface" />
  </member>
  <member name="IEnumFilters.Reset">
    <summary>
      <para>The <code>Reset</code> method resets the enumeration sequence to the beginning.</para>
    </summary>
    <returns>
      <para>Returns S_OK.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IEnumFilters Interface" />
  </member>
  <member name="IEnumFilters.Skip">
    <summary>
      <para>The <code>Skip</code> method skips over a specified number of filters.</para>
    </summary>
    <param name="cFilters">
      <para>Number of filters to skip.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Value
</description>
          <description>Description
</description>
        </listheader>
        <item>
          <description>S_FALSE</description>
          <description>Skipped past the end of the sequence.</description>
        </item>
        <item>
          <description>S_OK</description>
          <description>Success.</description>
        </item>
        <item>
          <description>VFW_E_ENUM_OUT_OF_SYNC</description>
          <description>The graph has changed and is now inconsistent with the enumerator.</description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If the filter graph changes (for example, the application removes a filter), the enumerator is no longer be consistent with the graph, and the method returns VFW_E_ENUM_OUT_OF_SYNC. Discard any data obtained from previous calls to the enumerator, because it might be invalid. Update the enumerator by calling the <see cref="IEnumFilters.Reset" /> method. You can then call the <code>Skip</code> method safely.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IEnumFilters Interface" />
  </member>
  <member name="IEnumFilters">
    <summary>
      <para>The <code>IEnumFilters</code> interface enumerates the filters in a filter graph. To obtain this interface, call the <see cref="IFilterGraph.EnumFilters" /> method on the Filter Graph Manager. For more information, see <a href="https://docs.microsoft.com//windows/desktop/DirectShow/enumerating-objects-in-a-filter-graph">Enumerating Objects in a Filter Graph</a>.</para>
      <para>This interface implements a standard Component Object Model (COM) collection object.</para>
      <para>If the set of filters in the graph changes, some methods on this interface return VFW_E_ENUM_OUT_OF_SYNC. Call the <see cref="IEnumFilters.Reset" /> method to resynchronize the enumerator.</para>
    </summary>
  </member>
</doc>