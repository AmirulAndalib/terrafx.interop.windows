<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMediaPropertyBag.EnumProperty">
    <summary>
      <para>The <code>EnumProperty</code> method retrieves a property/value pair.</para>
    </summary>
    <param name="iProperty">
      <para>Index value of the pair.</para>
    </param>
    <param name="pvarPropertyName">
      <para>Pointer to a <b>VARIANT</b> that receives the property's name.</para>
    </param>
    <param name="pvarPropertyValue">
      <para>Pointer to a <b>VARIANT</b> that receives the property's value.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Invalid argument.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Insufficient memory.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <b>NULL</b> pointer argument.
</description>
        </item>
        <item>
          <description>
            <para>
              <b>HRESULT_FROM_WIN32(ERROR_NO_MORE_ITEMS)</b>
            </para>
          </description>
          <description>
            <para>Index out of range.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The name is always a string. Set the variant type of the <i>pvarPropertyName</i> parameter to VT_EMPTY or VT_BSTR before calling this method.</para>
      <para>The value can be a string (for INFO chunks) or an array of bytes (for DISP chunks). Set the variant type of the <i>pvarPropertyName</i> parameter to VT_EMPTY, VT_BSTR, or (VT_ARRAY | VT_UI1).</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IMediaPropertyBag Interface" />
  </member>
  <member name="IMediaPropertyBag">
    <summary>
      <para>The <code>IMediaPropertyBag</code> interface is exposed by the <a href="https://docs.microsoft.com//windows/desktop/DirectShow/media-property-bag">Media Property Bag</a> object. The Media Property Bag is a specialized version of the standard COM property bag, designed for setting and retrieving INFO and DISP chunks in Audio-Video Interleaved (AVI) files.</para>
      <para>An INFO chunk contains meta-information about a file, such as author and copyright information. A DISP chunk contains data in Clipboard format. For more information, refer to the resource interchange file format (RIFF) specification.</para>
      <para>The media property bag stores the chunks as name/value pairs, as follows:</para>
      <list type="bullet">
        <item>
          <description>INFO chunks: The name is a string with the form INFO/XXXX, where XXXX is the four-character code that defines the type of meta-information—for example, ICOP for copyright information and IART for author name. The value is any string.</description>
        </item>
        <item>
          <description>DISP chunks: The name is a string with the form DISP/0000000000, where 0000000000 is the 10-character decimal equivalent of a standard Clipboard format—for example, 0000000008 for CF_DIB. The value is an array of bytes that contains the display data.</description>
        </item>
      </list>
      <para>Use this interface with the <see cref="IPersistMediaPropertyBag" /> interface to retrieve INFO and DISP chunks from an AVI file.</para>
    </summary>
  </member>
</doc>