<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOverlayNotify.OnClipChange">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>OnClipChange</code> method provides notification that the window's visible region has changed. It is essential that any overlay hardware be updated to reflect the change to the visible region before returning from this method.</para>
    </summary>
    <param name="pSourceRect">Pointer to the region of the video to use.</param>
    <param name="pDestinationRect">Pointer to the video destination.</param>
    <param name="pRgnData">Pointer to the clipping information.</param>
    <returns>Returns S_OK if successful. If the method fails, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IOverlayNotify.OnColorKeyChange">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>OnColorKeyChange</code> method provides notification that the window's color key has changed.</para>
    </summary>
    <param name="pColorKey">Pointer to the new chroma key.</param>
    <returns>Returns S_OK if successful. If the method fails, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IOverlayNotify.OnPaletteChange">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>OnPaletteChange</code> method provides notification that the palette of the window has changed.</para>
    </summary>
    <param name="dwColors">Number of colors present.</param>
    <param name="pPalette">Pointer to the array of palette colors.</param>
    <returns>Returns S_OK if successful. If the method fails, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IOverlayNotify.OnPositionChange">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>OnPositionChange</code> method provides notification that the position has changed.</para>
    </summary>
    <param name="pSourceRect">Pointer to the source video rectangle.</param>
    <param name="pDestinationRect">Pointer to the destination video rectangle. Note that this is not clipped to the visible display area.</param>
    <returns>Returns S_OK if successful. If the method fails, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IOverlayNotify">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>IOverlayNotify</code> interface provides an upstream filter, such as a decoder, with notifications of changes to the rendering window. This includes notifications of changes to the palette, color key, and window position, and visible region (clipping) changes.</para>
      <para>Most software video decoders let the video renderer draw the decompressed images they produce by passing the media samples to the <see cref="IMemInputPin" /> interface on the renderer's input pin.</para>
      <para>However, some video decoding filters (typically hardware decompression boards) handle the drawing of the images themselves, perhaps by using a VGA connector. These filters do not need to use <see cref="IMemInputPin" />, but can instead use the <see cref="IOverlay" /> interface provided by the renderer input pin. Through this interface, the decoder can be notified when the window position or size changes, or when the current system palette changes in order to install and change color keys and palettes.</para>
      <para>Decoders that do their own drawing should implement the <code>IOverlayNotify</code> and <see cref="IOverlayNotify2" /> interfaces. The renderer uses this interface to notify the decoder whenever the window size or position changes, the system palette changes, or a different color key is used. The decoder should call the <see cref="IOverlay.Advise" /> method on the renderer's input pin, to set up the callback. Once the callback is established, the renderer calls the decoder's <code>IOverlayNotify</code> methods when the appropriate events occur. To cancel the callback, use the <see cref="IOverlay.Unadvise" /> method.</para>
      <para>The video renderer is the only filter that calls the methods on this interface. This is done automatically by the default video renderer. If you are writing a replacement video renderer, you will need to use the methods on this interface if your filter supports <b>IOverlay</b> and this interface is passed to your filter in an <see cref="IOverlay.Advise" /> call.</para>
    </summary>
  </member>
</doc>