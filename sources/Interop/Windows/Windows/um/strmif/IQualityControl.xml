<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IQualityControl.Notify">
    <summary>
      <para>The <code>Notify</code> method notifies the filter that a quality change is requested.</para>
    </summary>
    <param name="pSelf">
      <para>Pointer to the filter that is sending the quality notification.</para>
    </param>
    <param name="q">
      <para>
        <see cref="Quality" /> structure.</para>
    </param>
    <returns>
      <para>Returns S_OK if the method succeeds; otherwise, returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IQualityControl Interface" />
  </member>
  <member name="IQualityControl.SetSink">
    <summary>
      <para>The <code>SetSink</code> method sets the <see cref="IQualityControl" /> object that will receive quality messages.</para>
    </summary>
    <param name="piqc">
      <para>Pointer to the <see cref="IQualityControl" /> object to which the notifications should be sent.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value that depends on the implementation. <b>HRESULT</b> can be one of the following standard constants, or other values not listed.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_FAIL</b>
            </para>
          </description>
          <description>
            <para>Failure.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <b>NULL</b> pointer argument.
</description>
        </item>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Invalid argument.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_NOTIMPL</b>
            </para>
          </description>
          <description>
            <para>Method isn't supported.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>S_OK or NOERROR</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The filter that receives a call to this method should record the <i>piqc</i> but should not add a reference count to it. The object pointed to will be a quality manager and will be a part of the filter graph (for example, a plug-in distributor). Adding a reference count to this could cause circular reference problems.</para>
      <para>The reference to the object specified in <i>piqc</i> is guaranteed to be valid until this method is called with a null value.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/error-and-success-codes">Error and Success Codes</seealso>
    <seealso cref="IQualityControl Interface" />
  </member>
  <member name="IQualityControl">
    <summary>
      <para>The <code>IQualityControl</code> interface provides support for quality control. An object exposes this interface if it can generate or receive quality-control messages. This includes renderer filters (which typically generate quality control messages), pins (which receive them), and external quality managers (which also receive them).</para>
      <para>A renderer filter generates a quality-control message by calling the <see cref="IQualityControl.Notify" /> method on the output pin of the upstream filter. The upstream filter either handles the message or passes it upstream.</para>
      <para>An application can implement its own quality-control manager. Call <see cref="IQualityControl.SetSink" /> on the renderer to designate the quality-control manager as the recipient for quality-control messages. Calling this method overrides the default handling of quality-control messages.</para>
      <para>However, most applications will not implement their own quality-control managers; and aside from this special case, applications typically do not use this interface. For more information, see <a href="https://docs.microsoft.com//windows/desktop/DirectShow/quality-control-management">Quality-Control Management</a></para>
    </summary>
  </member>
</doc>