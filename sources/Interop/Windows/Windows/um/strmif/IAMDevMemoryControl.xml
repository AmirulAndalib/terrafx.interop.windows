<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAMDevMemoryControl.GetDevId">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a>, <see cref="IMFMediaEngine" />, and <a href="https://docs.microsoft.com//windows/win32/medfound/audio-video-capture-in-media-foundation">Audio/Video Capture in Media Foundation</a>. Those features have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b>, <b>IMFMediaEngine</b> and <b>Audio/Video Capture in Media Foundation</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <div>
        <b>Note</b>  The <b>IAMDevMemoryControl</b> interface is deprecated.</div>Retrieves the device ID of the on-board memory allocator.</summary>
    <param name="pdwDevId">Pointer to the device ID.</param>
    <returns>Returns an <b>HRESULT</b> value that depends on the implementation of the interface.</returns>
  </member>
  <member name="IAMDevMemoryControl.QueryWriteSync">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a>, <see cref="IMFMediaEngine" />, and <a href="https://docs.microsoft.com//windows/win32/medfound/audio-video-capture-in-media-foundation">Audio/Video Capture in Media Foundation</a>. Those features have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b>, <b>IMFMediaEngine</b> and <b>Audio/Video Capture in Media Foundation</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <div>
        <b>Note</b>  The <b>IAMDevMemoryControl</b> interface is deprecated.</div>Checks if the memory supported by the allocator requires the use of the <see cref="IAMDevMemoryControl.WriteSync" /> method.</summary>
    <returns>Returns S_OK if the method is required, or S_FALSE otherwise.</returns>
  </member>
  <member name="IAMDevMemoryControl.WriteSync">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a>, <see cref="IMFMediaEngine" />, and <a href="https://docs.microsoft.com//windows/win32/medfound/audio-video-capture-in-media-foundation">Audio/Video Capture in Media Foundation</a>. Those features have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b>, <b>IMFMediaEngine</b> and <b>Audio/Video Capture in Media Foundation</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <div>
        <b>Note</b>  The <b>IAMDevMemoryControl</b> interface is deprecated.</div>Used to synchronize with the completed write. This method returns when any data being written to the particular allocator region is fully written into the memory.</summary>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A time-out has occurred without this method confirming that data was written.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data was successfully written into memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_NOT_COMMITTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The allocator hasn't called the <see cref="IMemAllocator.Commit" /> method.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAMDevMemoryControl">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a>, <see cref="IMFMediaEngine" />, and <a href="https://docs.microsoft.com//windows/win32/medfound/audio-video-capture-in-media-foundation">Audio/Video Capture in Media Foundation</a>. Those features have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b>, <b>IMFMediaEngine</b> and <b>Audio/Video Capture in Media Foundation</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <div>
        <b>Note</b>  This interface is no longer supported by the AVI Splitter.</div>
      <div>
        <b>Note</b>  It was defined to support certain older hardware decoders that required AVI files to be read directly into hardware memory. The interface enables the AVI parser to allocate memory from the downstream filter but still provide its own allocator. There should be no need for any newer devices to support this interface.</div>A device memory control object supports <code>IAMDevMemoryControl</code>. This object is aggregated with an <see cref="IMemAllocator" /> object that is used in the connection. Typically, filters will call the <see cref="IAMDevMemoryAllocator.GetDevMemoryObject" /> method to obtain a pointer to this interface.<para>Implement this interface with the <see cref="IAMDevMemoryAllocator" /> interface when pins need to have greater control of memory allocation.</para><para>Use this interface to synchronize the completion of writing data to a memory allocator, and to get the device ID of the on-board memory allocator.</para></summary>
  </member>
</doc>