<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMemAllocator.Commit">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>Commit</code> method allocates the buffer memory.</para>
    </summary>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include those shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_SIZENOTSET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffer requirements were not set.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMemAllocator.Decommit">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>Decommit</code> method releases the buffer memory.</para>
    </summary>
    <returns>Returns S_OK if successful, or an <b>HRESULT</b> value indicating the cause of the error.</returns>
  </member>
  <member name="IMemAllocator.GetBuffer">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <b>GetBuffer</b> method retrieves a media sample that contains an empty buffer.</para>
    </summary>
    <param name="ppBuffer">Receives a pointer to the buffer's <see cref="IMediaSample" /> interface. The caller must release the interface.</param>
    <param name="pStartTime">Pointer to the start time of the sample, or <b>NULL</b>.</param>
    <param name="pEndTime">Pointer to the ending time of the sample, or <b>NULL</b>.</param>
    <param name="dwFlags">
      <para>Bitwise combination of zero or more of the following flags:</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>AM_GBF_NOTASYNCPOINT</description>
          <description>This sample is not a synchronization point. Dynamic format changes are not allowed on this sample. When called on the Overlay Mixer or VMR, this flag implies that the buffer returned will contain an image that is identical to the last image delivered.</description>
        </listheader>
        <listheader>
          <description>AM_GBF_PREVFRAMESKIPPED</description>
          <description>This sample is the first after a discontinuity. (Only the video renderer uses this flag.)</description>
        </listheader>
        <listheader>
          <description>AM_GBF_NOWAIT</description>
          <description>Do not wait for a buffer to become available.</description>
        </listheader>
        <listheader>
          <description>AM_GBF_NODDSURFACELOCK</description>
          <description>Used with the <a href="https://docs.microsoft.com//windows/desktop/DirectShow/video-mixing-renderer-filter-7">Video Mixing Renderer Filter 7</a> to request an unlocked DirectDraw surface. For more information, see <a href="https://docs.microsoft.com//windows/desktop/DirectShow/working-with-direct3d-render-targets">Working with Direct3D Render Targets</a>.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include those shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_NOT_COMMITTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Allocator is decommitted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_TIMEOUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Timed out.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMemAllocator.GetProperties">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>GetProperties</code> method retrieves the number of buffers that the allocator will create, and the buffer properties.</para>
    </summary>
    <param name="pProps">Pointer to an <see cref="ALLOCATOR_PROPERTIES" /> structure that receives the allocator properties.</param>
    <returns>Returns S_OK if successful, or an <b>HRESULT</b> value indicating the cause of the error.</returns>
  </member>
  <member name="IMemAllocator.ReleaseBuffer">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>ReleaseBuffer</code> method releases a media sample.</para>
    </summary>
    <param name="pBuffer">Pointer to the media sample's <see cref="IMediaSample" /> interface.</param>
    <returns>Returns S_OK if successful, or an <b>HRESULT</b> value indicating the cause of the error.</returns>
  </member>
  <member name="IMemAllocator.SetProperties">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>SetProperties</code> method specifies the number of buffers to allocate and the size of each buffer.</para>
    </summary>
    <param name="pRequest">Pointer to an <see cref="ALLOCATOR_PROPERTIES" /> structure that contains the buffer requirements.</param>
    <param name="pActual">Pointer to an <b>ALLOCATOR_PROPERTIES</b> structure that receives the actual buffer properties.</param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include those shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>NULL</b> pointer argument.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_ALREADY_COMMITTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot change allocated memory while the filter is active.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_BADALIGN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid alignment was specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>VFW_E_BUFFERS_OUTSTANDING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more buffers are still active.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMemAllocator">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>IMemAllocator</code> interface allocates media samples, for moving data between pins.</para>
      <para>This interface is used by pins that share allocators, when the input pin exposes the <see cref="IMemInputPin" /> interface. The pins negotiate which pin will provide the allocator. The allocator is used to allocate memory buffers, retrieve empty buffers, and release buffers. Not every filter creates its own allocator, so one allocator might be used by several filters. For more information, see <a href="https://docs.microsoft.com//windows/desktop/DirectShow/how-filters-connect">How Filters Connect</a>.</para>
      <para>Applications typically do not use this interface.</para>
      <para>To use an allocator, perform the following steps:</para>
      <list type="number">
        <item>
          <description>Call the <see cref="IMemAllocator.SetProperties" /> method to specify the buffer requirements, including the number of buffers and the size of each buffer.</description>
        </item>
        <item>
          <description>Call the <see cref="IMemAllocator.Commit" /> method to allocate the buffers.</description>
        </item>
        <item>
          <description>Call the <see cref="IMemAllocator.GetBuffer" /> method to retrieve media samples. This method blocks until the next sample becomes available.</description>
        </item>
        <item>
          <description>When you are done with each sample, call the <b>IUnknown.Release</b> method on the sample. The sample is not deleted when its reference count reaches zero. Instead, the sample returns to the allocator's free list.</description>
        </item>
        <item>
          <description>When you are done using the allocator, call the <see cref="IMemAllocator.Decommit" /> method to release the memory for the buffers.</description>
        </item>
      </list>
    </summary>
  </member>
</doc>