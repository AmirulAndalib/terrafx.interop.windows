<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.CloseCompressor">
    <summary>Call to close an open <b>COMPRESSOR_HANDLE</b>.</summary>
    <param name="CompressorHandle">Handle to the compressor to be closed. This is the handle to the compressor that was returned by <see cref="CreateCompressor" />.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.CloseDecompressor">
    <summary>Call to close an open <b>DECOMPRESSOR_HANDLE</b>.</summary>
    <param name="DecompressorHandle">Handle to the decompressor to be closed. This is the handle to the compressor that was returned by <see cref="CreateDecompressor" />.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.Compress">
    <summary>Takes a block of information and compresses it.</summary>
    <param name="CompressorHandle">Handle to a compressor returned by <see cref="CreateCompressor" />.</param>
    <param name="UncompressedData">Contains the block of information that is to be compressed. The size in bytes of the uncompressed block is given by <i>UncompressedDataSize</i>.</param>
    <param name="UncompressedDataSize">Size in bytes of the uncompressed information.</param>
    <param name="CompressedBuffer">The buffer that receives the compressed information. The maximum size in bytes of the buffer is given by <i>CompressedBufferSize</i>.</param>
    <param name="CompressedBufferSize">Maximum size in bytes of the buffer that receives the compressed information.</param>
    <param name="CompressedDataSize">Actual size in bytes of the compressed information received.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.CreateCompressor">
    <summary>Generates a new <b>COMPRESSOR_HANDLE</b>.</summary>
    <param name="Algorithm">
      <para>The type of compression algorithm and mode to be used by this compressor.</para>
      <para>This parameter can have one of the following values optionally combined with the <b>COMPRESS_RAW</b> flag. Use a "bitwise OR" operator to include <b>COMPRESS_RAW</b> and to create a block mode compressor. If <b>COMPRESS_RAW</b> is not included, the Compression API creates a buffer mode compressor. For more information about selecting a compression algorithm and mode, see <a href="https://docs.microsoft.com//windows/desktop/cmpapi/using-the-compression-api">Using the Compression API</a>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_MSZIP</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>MSZIP compression algorithm</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_XPRESS</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>XPRESS compression algorithm</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_XPRESS_HUFF</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>XPRESS compression algorithm with Huffman encoding</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_LZMS</b>
                </term>
              </listheader>
              <listheader>
                <term>5</term>
              </listheader>
            </list>
          </description>
          <description>LZMS compression algorithm</description>
        </listheader>
      </list>
    </param>
    <param name="AllocationRoutines">Optional memory allocation and deallocation routines in a <see cref="COMPRESS_ALLOCATION_ROUTINES" /> structure.</param>
    <param name="CompressorHandle">If the function succeeds, the handle to the specified compressor.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.CreateDecompressor">
    <summary>Generates a new <b>DECOMPRESSOR_HANDLE</b>.</summary>
    <param name="Algorithm">
      <para>The type of compression algorithm and mode to be used by this decompressor.</para>
      <para>This parameter can have one of the following values optionally combined with the <b>COMPRESS_RAW</b> flag. Use a "bitwise OR" operator to include <b>COMPRESS_RAW</b> and to create a block mode decompressor. If <b>COMPRESS_RAW</b> is not included, the Compression API creates a buffer mode decompressor. For more information about selecting a compression algorithm and mode, see <a href="https://docs.microsoft.com//windows/desktop/cmpapi/using-the-compression-api">Using the Compression API</a>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_MSZIP</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>MSZIP compression algorithm</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_XPRESS</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>XPRESS compression algorithm</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_XPRESS_HUFF</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>XPRESS compression algorithm with Huffman encoding</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>COMPRESS_ALGORITHM_LZMS</b>
                </term>
              </listheader>
              <listheader>
                <term>5</term>
              </listheader>
            </list>
          </description>
          <description>LZMS compression algorithm</description>
        </listheader>
      </list>
    </param>
    <param name="AllocationRoutines">Optional memory allocation and deallocation routines in a <see cref="COMPRESS_ALLOCATION_ROUTINES" /> structure.</param>
    <param name="DecompressorHandle">If the function succeeds, the handle to the specified decompressor.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.Decompress">
    <summary>Takes a block of compressed information and decompresses it.</summary>
    <param name="DecompressorHandle">Handle to a decompressor returned by <see cref="CreateDecompressor" />.</param>
    <param name="CompressedData">Contains the block of information that is to be decompressed. The size in bytes of the compressed block is given by <i>CompressedDataSize</i>.</param>
    <param name="CompressedDataSize">The size in bytes of the compressed information.</param>
    <param name="UncompressedBuffer">The buffer that receives the uncompressed information. The size in bytes of the buffer is given by <i>UncompressedBufferSize</i>.</param>
    <param name="UncompressedBufferSize">Size in bytes of the buffer that receives the uncompressed information.</param>
    <param name="UncompressedDataSize">Actual size in bytes of the uncompressed information received.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.QueryCompressorInformation">
    <summary>Queries a compressor for information for a particular compression algorithm.</summary>
    <param name="CompressorHandle">Handle to the compressor being queried for information.</param>
    <param name="CompressInformationClass">A value of the <see cref="COMPRESS_INFORMATION_CLASS" /> enumeration that identifies the type of information.</param>
    <param name="CompressInformation">Information for the compression algorithm written as bytes. The maximum size in bytes of this information is given by <i>CompressInformationSize</i>.</param>
    <param name="CompressInformationSize">Maximum size in bytes of the information.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.QueryDecompressorInformation">
    <summary>Use this function to query information about a particular compression algorithm.</summary>
    <param name="DecompressorHandle">Handle to the decompressor being queried for information.</param>
    <param name="CompressInformationClass">A value of the <see cref="COMPRESS_INFORMATION_CLASS" /> enumeration that identifies the type of information.</param>
    <param name="CompressInformation">Information for the compression algorithm written as bytes. The maximum size in bytes of this information is given by <i>CompressInformationSize</i>.</param>
    <param name="CompressInformationSize">Maximum size in bytes of the information.</param>
    <returns>Returns <b>TRUE</b> to indicate success and <b>FALSE</b> otherwise. Call <see cref="GetLastError" /> to determine cause of failure.</returns>
  </member>
  <member name="Windows.ResetCompressor">
    <summary>Prepares the compressor for the compression of a new stream. The compressor object retains properties set with <see cref="SetCompressorInformation" />. The sequence of blocks generated is independent of previous blocks.</summary>
    <param name="CompressorHandle">Handle to the compressor returned by <see cref="CreateCompressor" />.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.ResetDecompressor">
    <summary>Prepares the decompressor for the decompression of a new stream.</summary>
    <param name="DecompressorHandle">Handle to the decompressor returned by <see cref="CreateDecompressor" />.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.SetCompressorInformation">
    <summary>Sets information in a compressor for a particular compression algorithm.</summary>
    <param name="CompressorHandle">Handle to the compressor.</param>
    <param name="CompressInformationClass">A value that identifies the type of information. of the enumeration that identifies the type of information.</param>
    <param name="CompressInformation">The information being set read as bytes. The maximum size in bytes is given by <i>CompressInformationSize</i>.</param>
    <param name="CompressInformationSize">Maximum size of the information in bytes.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
  <member name="Windows.SetDecompressorInformation">
    <summary>Sets information in a decompressor for a particular compression algorithm.</summary>
    <param name="DecompressorHandle">Handle to the decompressor.</param>
    <param name="CompressInformationClass">A value that identifies the type of information. of the enumeration that identifies the type of information.</param>
    <param name="CompressInformation">The information being set read as bytes. The maximum size in bytes is given by <i>CompressInformationSize</i>.</param>
    <param name="CompressInformationSize">Maximum size of the information in bytes.</param>
    <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</returns>
  </member>
</doc>