<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IUIAnimationStoryboard.Abandon">
    <summary>
      <para>Terminates the storyboard, releases all related animation variables, and removes the storyboard from the schedule.</para>
    </summary>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>This method can be called before or after the storyboard starts playing.</para>
      <para>This method does not trigger any storyboard events.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.AbandonAllStoryboards" />
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.Conclude" />
    <seealso cref="IUIAnimationStoryboard.Finish" />
    <seealso cref="IUIAnimationStoryboard.Schedule" />
  </member>
  <member name="IUIAnimationStoryboard.AddKeyframeAfterTransition">
    <summary>
      <para>Adds a keyframe at the end of the specified transition.</para>
    </summary>
    <param name="transition">
      <para>The transition after which a keyframe is to be added.</para>
    </param>
    <param name="keyframe">
      <para>The keyframe to be added.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes"> Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_NOT_IN_STORYBOARD</b>
            </para>
          </description>
          <description>
            <para>The transition has not been added to the storyboard.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>A keyframe represents a moment in time within a storyboard and can be used to specify the start and end times of transitions. Because keyframes can be added at the ends of transitions, their offsets from the start of the storyboard may not be known until the storyboard is playing.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAtOffset" />
    <seealso cref="IUIAnimationStoryboard.AddTransition" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionAtKeyframe" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionBetweenKeyframes" />
    <seealso cref="IUIAnimationTransition" />
    <seealso cref="IUIAnimationTransitionLibrary" />
    <seealso cref="UI_ANIMATION_KEYFRAME" />
  </member>
  <member name="IUIAnimationStoryboard.AddKeyframeAtOffset">
    <summary>
      <para>Adds a keyframe at the specified offset from an existing keyframe.</para>
    </summary>
    <param name="existingKeyframe">
      <para>The existing keyframe. To add a keyframe at an offset from the start of the storyboard, use the special keyframe <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/dd756780(v=vs.85)">UI_ANIMATION_KEYFRAME_STORYBOARD_START</a>.</para>
    </param>
    <param name="offset">
      <para>The offset from the existing keyframe at which a new keyframe is to be added.</para>
    </param>
    <param name="keyframe">
      <para>The keyframe to be added.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>A keyframe represents a moment in time within a storyboard and can be used to specify the start and end times of transitions. Because keyframes can be added at the ends of transitions, their offsets from the start of the storyboard may not be known until the storyboard is playing.</para>
      <h4>Examples</h4>
      <para>The following code adds a keyframe at a fixed offset of 0.3 seconds from the keyframe at the start of the storyboard.</para>
      <code>const UI_ANIMATION_SECONDS offset = 0.3;

UI_ANIMATION_KEYFRAME keyframe1;
hr = pStoryboard-&gt;AddKeyframeAtOffset(
       UI_ANIMATION_KEYFRAME_STORYBOARD_START,
       offset,
       &amp;amp;amp;amp;amp;amp;keyframe1
);
</code>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAfterTransition" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionAtKeyframe" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionBetweenKeyframes" />
    <seealso cref="UI_ANIMATION_KEYFRAME" />
  </member>
  <member name="IUIAnimationStoryboard.AddTransition">
    <summary>
      <para>Adds a transition to the storyboard.</para>
    </summary>
    <param name="variable">
      <para>The animation variable for which the transition is to be added.</para>
    </param>
    <param name="transition">
      <para>The transition to be added.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_ALREADY_USED</b>
            </para>
          </description>
          <description>
            <para>This transition has already been added to a storyboard.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The <b>AddTransition</b> method applies the specified transition to the specified variable in the storyboard. If this is the first transition applied to this variable in this storyboard, the transition begins at the start of the storyboard. Otherwise, the transition is appended to the transition that was most recently added to the variable.</para>
      <h4>Examples</h4>
      <para>For an example, see <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/updating---timer-driven-animation">Create a Storyboard and Add Transitions</a>.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAfterTransition" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionBetweenKeyframes" />
    <seealso cref="IUIAnimationTransition" />
    <seealso cref="IUIAnimationTransitionLibrary" />
  </member>
  <member name="IUIAnimationStoryboard.AddTransitionAtKeyframe">
    <summary>
      <para>Adds a transition that starts at the specified keyframe.</para>
    </summary>
    <param name="variable">
      <para>The animation variable for which a transition is to be added.</para>
    </param>
    <param name="transition">
      <para>The transition to be added.</para>
    </param>
    <param name="startKeyframe">
      <para>The keyframe that specifies the beginning of the new transition.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_ALREADY_USED</b>
            </para>
          </description>
          <description>
            <para>This transition has already been added to a storyboard or has been added to a storyboard that has finished playing and been released.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_ECLIPSED</b>
            </para>
          </description>
          <description>
            <para>The transition might eclipse the beginning of another transition in the storyboard.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Transitions must be added in the order in which they will be played. A transition may begin playing before the preceding transition in the storyboard has finished, in which case the initial value and velocity seen by the new transition is determined by the state of the preceding one. A transition should not begin before the start of the preceding transition.</para>
      <para>A keyframe represents a moment in time within a storyboard and can be used to specify the start and end times of transitions. Because keyframes can be added at the ends of transitions, their offsets from the start of the storyboard may not be known until the storyboard is playing.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAfterTransition" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAtOffset" />
    <seealso cref="IUIAnimationStoryboard.AddTransition" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionBetweenKeyframes" />
    <seealso cref="IUIAnimationTransition" />
    <seealso cref="IUIAnimationTransitionLibrary" />
  </member>
  <member name="IUIAnimationStoryboard.AddTransitionBetweenKeyframes">
    <summary>
      <para>Adds a transition between two keyframes.</para>
    </summary>
    <param name="variable">
      <para>The animation variable for which the transition is to be added.</para>
    </param>
    <param name="transition">
      <para>The transition to be added.</para>
    </param>
    <param name="startKeyframe">
      <para>A keyframe that specifies the beginning of the new transition.</para>
    </param>
    <param name="endKeyframe">
      <para>A keyframe that specifies the end of the new transition. It must not be possible for <i>endKeyframe</i> to appear earlier in the storyboard than <i>startKeyframe</i>.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_ALREADY_USED</b>
            </para>
          </description>
          <description>
            <para>This transition has already been added to a storyboard or has been added to a storyboard that has finished playing and been released.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>UI_E_TRANSITION_ECLIPSED</b>
            </para>
          </description>
          <description>
            <para>The transition might eclipse the beginning of another transition in the storyboard.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>UI_E_START_KEYFRAME_AFTER_END</b>
            </para>
          </description>
          <description>
            <para>The start keyframe might occur after the end keyframe.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method applies the specified transition to the specified variable in the storyboard, with the transition starting and ending at the specified keyframes.  If the transition was created with a duration parameter specified, that duration is overwritten with the duration of time between the start and end keyframes. Otherwise, Windows Animation speeds up or slows down the transition as necessary.</para>
      <para>A keyframe represents a moment in time within a storyboard and can be used to specify the start and end times of transitions. Because keyframes can be added at the ends of transitions, their offsets from the start of the storyboard may not be known until the storyboard is playing.</para>
      <para>Transitions must be added in the order in which they will be played. A transition may begin playing before the preceding transition in the storyboard has finished, in which case the initial value and velocity seen by the new transition will be determined by the state of the preceding one. It must not be possible for a transition to begin before the start of the preceding transition.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAfterTransition" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAtOffset" />
    <seealso cref="IUIAnimationStoryboard.AddTransition" />
    <seealso cref="IUIAnimationStoryboard.AddTransitionAtKeyframe" />
    <seealso cref="IUIAnimationTransition" />
    <seealso cref="IUIAnimationTransitionLibrary" />
  </member>
  <member name="IUIAnimationStoryboard.Conclude">
    <summary>
      <para>Completes the current iteration of a keyframe loop that is in progress (where the loop is set to <b>UI_ANIMATION_REPEAT_INDEFINITELY</b>), terminates the loop, and continues with the storyboard.</para>
    </summary>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>This method specifies that any subsequent  keyframe loops that have a repetition count of <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/ui-animation-repeat-indefinitely">UI_ANIMATION_REPEAT_INDEFINITELY</a> (-1) will be skipped while the remainder of the storyboard is played.</para>
      <para>An iteration of a keyframe loop that is in progress will be completed before the remainder of the storyboard plays.</para>
      <para>If this method is called  at the end  of a keyframe loop iteration, the loop is terminated and the loop value is set to the starting loop value.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.Abandon" />
    <seealso cref="IUIAnimationStoryboard.Finish" />
    <seealso cref="IUIAnimationStoryboard.Schedule" />
  </member>
  <member name="IUIAnimationStoryboard.Finish">
    <summary>
      <para>Finishes the storyboard within the specified time, compressing the storyboard if necessary.</para>
    </summary>
    <param name="completionDeadline">
      <para>The maximum amount of time that the storyboard can use to finish playing.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>This method has no effect on storyboard events. Events continue to be raised as expected while the storyboard plays.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.FinishAllStoryboards" />
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.Abandon" />
    <seealso cref="IUIAnimationStoryboard.Conclude" />
    <seealso cref="IUIAnimationStoryboard.Schedule" />
  </member>
  <member name="IUIAnimationStoryboard.GetElapsedTime">
    <summary>
      <para>Gets the time that has elapsed since the storyboard started playing.</para>
    </summary>
    <param name="elapsedTime">
      <para>The elapsed time.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code.
See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_STORYBOARD_NOT_PLAYING</b>
            </para>
          </description>
          <description>
            <para>The storyboard is not playing.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.GetStatus" />
    <seealso cref="UI_ANIMATION_STORYBOARD_STATUS" />
  </member>
  <member name="IUIAnimationStoryboard.GetStatus">
    <summary>
      <para>Gets the status of the storyboard.</para>
    </summary>
    <param name="status">
      <para>The storyboard status.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>Unless this method is called from a handler for <see cref="OnStoryboardStatusChanged" /> events, the only values it returns are <b>UI_ANIMATION_STORYBOARD_BUILDING</b>, <b>UI_ANIMATION_STORYBOARD_SCHEDULED</b>,
<b>UI_ANIMATION_STORYBOARD_PLAYING</b>, and <b>UI_ANIMATION_STORYBOARD_READY</b>.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboardEventHandler.OnStoryboardStatusChanged" />
    <seealso cref="UI_ANIMATION_STORYBOARD_STATUS" />
  </member>
  <member name="IUIAnimationStoryboard.GetTag">
    <summary>
      <para>Gets the tag for a storyboard.</para>
    </summary>
    <param name="object">
      <para>The object portion of the tag.</para>
    </param>
    <param name="id">
      <para>The identifier portion of the tag.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_VALUE_NOT_SET</b>
            </para>
          </description>
          <description>
            <para>The storyboard's tag was not set.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>A tag is a pairing of an integer identifier (<i>id</i>) with a COM object (<i>object</i>); it can be used by an application to identify a storyboard.</para>
      <para>The parameters are optional so that the method can return both portions of the tag, or just the identifier or object portion.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.GetStoryboardFromTag" />
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.SetTag" />
  </member>
  <member name="IUIAnimationStoryboard.HoldVariable">
    <summary>
      <para>Directs the storyboard to hold the specified animation variable at its final value until the storyboard ends.</para>
    </summary>
    <param name="variable">
      <para>The animation variable.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>When a storyboard is playing, it has exclusive access to any variables it animates unless the storyboard is trimmed by a higher priority storyboard. Typically, this exclusive access is released  when the last transition in the storyboard for that variable finishes playing. Applications can call this method to maintain exclusive access to the animation variable and hold the variable, at the final value of the last transition, until the end of the storyboard.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationVariable" />
  </member>
  <member name="IUIAnimationStoryboard.RepeatBetweenKeyframes">
    <summary>
      <para>Creates a loop between two specified keyframes.</para>
    </summary>
    <param name="startKeyframe">
      <para>The keyframe at which the loop is to begin.</para>
    </param>
    <param name="endKeyframe">
      <para>The keyframe at which the loop is to end. It must not be possible for <i>endKeyframe</i> to occur earlier in the storyboard than <i>startKeyframe</i>.</para>
    </param>
    <param name="repetitionCount">
      <para>The number of times the loop is to be repeated; this parameter must be 0 or a positive number.
Use <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/ui-animation-repeat-indefinitely">UI_ANIMATION_REPEAT_INDEFINITELY</a> (-1) to repeat the loop indefinitely until the storyboard is trimmed or concluded.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_START_KEYFRAME_AFTER_END</b>
            </para>
          </description>
          <description>
            <para>The start keyframe might occur after the end keyframe.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>UI_E_END_KEYFRAME_NOT_DETERMINED</b>
            </para>
          </description>
          <description>
            <para>It might not be possible to determine the end keyframe time when the start keyframe is reached.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>UI_E_LOOPS_OVERLAP</b>
            </para>
          </description>
          <description>
            <para>Two repeated portions of a storyboard might overlap.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method directs a storyboard to play the interval between the given keyframes repeatedly before playing the remainder of the storyboard. If a finite repetition count is specified, the loop always plays that number of times. If <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/ui-animation-repeat-indefinitely">UI_ANIMATION_REPEAT_INDEFINITELY</a> (-1) is specified, the loop repeats until the storyboard is concluded, in which case the current iteration of the loop completes and the remainder of the storyboard plays. A storyboard that loops indefinitely also ends if it is truncated.</para>
      <para>Nested and overlapping loops are not supported.</para>
      <para>A keyframe represents a moment in time within a storyboard and can be used to specify the start or end times of transitions.  Because keyframes can be added at the ends of transitions, their offsets from the start of the storyboard may not be known until the storyboard is playing.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAfterTransition" />
    <seealso cref="IUIAnimationStoryboard.AddKeyframeAtOffset" />
  </member>
  <member name="IUIAnimationStoryboard.Schedule">
    <summary>
      <para>Directs the storyboard to schedule itself for play.</para>
    </summary>
    <param name="timeNow">
      <para>The current time.</para>
    </param>
    <param name="schedulingResult">
      <para>The result of the scheduling request.
This parameter can be omitted from calls to this method.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>This method directs a storyboard to attempt to add itself to the schedule of playing storyboards. The rules are as follows:</para>
      <list type="bullet">
        <item>
          <description>
            <para>If there are no playing storyboards animating any of the same animation variables, the attempt succeeds and the storyboard starts playing immediately.</para>
          </description>
        </item>
        <item>
          <description>
            <para>If the storyboard has priority to cancel, trim, conclude, or compress conflicting storyboards, the attempt to schedule succeeds and the storyboard begins playing as soon as possible.</para>
          </description>
        </item>
        <item>
          <description>
            <para>If the storyboard does not have priority, the attempt fails and the <i>schedulingResult</i> parameter is set to <b>UI_ANIMATION_SCHEDULING_INSUFFICIENT_PRIORITY</b>.</para>
          </description>
        </item>
      </list>
      <para>If this method is called from a handler for <see cref="OnStoryboardStatusChanged" /> events, the <i>schedulingResult</i> parameter is set to <b>UI_ANIMATION_SCHEDULING_DEFERRED</b>.  The only way to determine whether the storyboard is successfully scheduled is to set a storyboard event handler and check whether the storyboard's status ever becomes <b>UI_ANIMATION_STORYBOARD_INSUFFICIENT_PRIORITY</b>.</para>
      <para>It is possible reuse a storyboard by calling <b>Schedule</b> again after its status has reached <b>UI_ANIMATION_STORYBOARD_READY</b>.  An attempt to schedule a storyboard when it is in any state other than <b>UI_ANIMATION_STORYBOARD_BUILDING</b> or <b>UI_ANIMATION_STORYBOARD_READY</b> fails, and  <i>schedulingResult</i> is set to <b>UI_ANIMATION_SCHEDULING_ALREADY_SCHEDULED</b>.</para>
      <h4>Examples</h4>
      <para>The following example gets the current time and schedules the storyboard. For an additional example, see <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/scheduling-a-storyboard">Schedule a Storyboard</a>.</para>
      <code>// Get the current time and schedule the storyboard
UI_ANIMATION_SECONDS secondsNow;
hr = m_pAnimationTimer-&gt;GetTime(
    &amp;amp;amp;amp;amp;amp;secondsNow
    );
if (SUCCEEDED(hr))
{
    UI_ANIMATION_SCHEDULING_RESULT schedulingResult;
    hr = pStoryboard-&gt;Schedule(
        secondsNow,
        &amp;amp;amp;amp;amp;amp;schedulingResult
        );
    if (SUCCEEDED(hr))
    {
        if (schedulingResult == UI_ANIMATION_SCHEDULING_SUCCEEDED)
        {
            ...
        }
        else
        {
            ...
        }
    }
}
</code>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.Abandon" />
    <seealso cref="IUIAnimationStoryboard.Conclude" />
    <seealso cref="IUIAnimationStoryboard.Finish" />
    <seealso cref="IUIAnimationStoryboard.GetStatus" />
    <seealso cref="IUIAnimationTimer.GetTime" />
    <seealso cref="UI_ANIMATION_SCHEDULING_RESULT" />
    <seealso cref="UI_ANIMATION_STORYBOARD_STATUS" />
  </member>
  <member name="IUIAnimationStoryboard.SetLongestAcceptableDelay">
    <summary>
      <para>Sets the longest acceptable delay before the scheduled storyboard begins.</para>
    </summary>
    <param name="delay">
      <para>The longest acceptable delay. This parameter can be a positive value, or <b>UI_ANIMATION_SECONDS_EVENTUALLY</b> (-1) to indicate that any finite delay is acceptable.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>For a storyboard to be successfully scheduled, it must begin before the longest acceptable delay has elapsed. This delay is determined in the following order: the delay value set by calling this method, the delay value set by calling the <see cref="IUIAnimationManager.SetDefaultLongestAcceptableDelay" /> method, or 0.0 if neither of these methods has been called.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.SetDefaultLongestAcceptableDelay" />
    <seealso cref="IUIAnimationStoryboard" />
  </member>
  <member name="IUIAnimationStoryboard.SetStoryboardEventHandler">
    <summary>
      <para>Specifies a handler for storyboard events.</para>
    </summary>
    <param name="handler">
      <para>The handler to be called whenever storyboard status and update events occur.</para>
      <para>The specified object must implement the <see cref="IUIAnimationStoryboardEventHandler" /> interface or be <b>NULL</b>. See Remarks.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
    </returns>
    <remarks>
      <para>Passing <b>NULL</b> for the <i>handler</i> parameter causes Windows Animation to release its reference to any handler object you passed in earlier. This technique can be essential for breaking reference cycles without having to call the <see cref="IUIAnimationManager.Shutdown" /> method.</para>
    </remarks>
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboardEventHandler" />
  </member>
  <member name="IUIAnimationStoryboard.SetTag">
    <summary>
      <para>Sets the tag for the storyboard.</para>
    </summary>
    <param name="object">
      <para>The object portion of the tag.
This parameter can be <b>NULL</b>.</para>
    </param>
    <param name="id">
      <para>The identifier portion of the tag.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an <b>HRESULT</b> error code. See <a href="https://docs.microsoft.com//windows/desktop/UIAnimation/uianimation-error-codes">Windows Animation Error Codes</a> for a list of error codes.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>UI_E_STORYBOARD_ACTIVE</b>
            </para>
          </description>
          <description>
            <para>The storyboard is currently in the schedule.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>A tag is a pairing of an integer identifier (<i>id</i>) with a COM object (<i>object</i>); it can be used by an application to identify a storyboard.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.GetStoryboardFromTag" />
    <seealso cref="IUIAnimationStoryboard" />
    <seealso cref="IUIAnimationStoryboard.GetTag" />
  </member>
  <member name="IUIAnimationStoryboard">
    <summary>
      <para>Defines a storyboard, which contains a group of transitions
that are synchronized relative to one another.</para>
    </summary>
    <remarks>
      <para>
        <b>IUIAnimationStoryboard</b> is a primary component for building animations,
along with
<see cref="IUIAnimationVariable" /> and
<see cref="IUIAnimationTransition" />.</para>
    </remarks>
    <seealso cref="IUIAnimationManager.AbandonAllStoryboards" />
    <seealso cref="IUIAnimationManager.CreateStoryboard" />
    <seealso cref="IUIAnimationManager.FinishAllStoryboards" />
    <seealso cref="IUIAnimationManager.GetStoryboardFromTag" />
    <seealso cref="IUIAnimationVariable.GetCurrentStoryboard" />
    <seealso cref="IUnknown" />
    <seealso href="https://docs.microsoft.com//windows/desktop/UIAnimation/storyboard-construction">Storyboard Overview</seealso>
  </member>
</doc>