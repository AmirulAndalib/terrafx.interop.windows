<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT">
    <summary>
      <div>
        <b>Important</b>  Deprecated. This API may be removed from future releases of Windows. Applications should use the <a href="https://docs.microsoft.com//windows/desktop/medfound/media-session">Media Session</a> for playback.</div>
      <para>Event structure for the <b>MFP_EVENT_TYPE_ACQUIRE_USER_CREDENTIAL</b> event. This event is sent if the application plays a media file from a server that requires authentication. The application can respond by providing the user credentials.</para>
    </summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.header">
    <summary>
      <see cref="MFP_EVENT_HEADER" /> structure that contains data common to all <see cref="IMFPMediaPlayer" /> events.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.dwUserData">
    <summary>
      <para>Application-defined user data for the media item. This value is specified when the application calls <see cref="IMFPMediaPlayer.CreateMediaItemFromURL" /> or <see cref="IMFPMediaPlayer.CreateMediaItemFromObject" /> to create the media item.</para>
      <para>This event is sent (if at all) before the media item is created and before the application receives the <b>MFP_EVENT_TYPE_MEDIAITEM_CREATED</b> event. You can use the value of <b>dwUserData</b> to identify which media item requires authentication.</para>
    </summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.fProceedWithAuthentication">
    <summary>
      <para>The application should set this member to either <b>TRUE</b> or <b>FALSE</b> before returning from the <see cref="IMFPMediaPlayerCallback.OnMediaPlayerEvent" /> event callback.</para>
      <para>If the value is <b>TRUE</b> when the callback returns, MFPlay continues the authentication attempt. Otherwise, authentication fails.</para>
    </summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.hrAuthenticationStatus">
    <summary>The response code of the authentication challenge.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.pwszURL">
    <summary>The original URL that requires authentication.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.pwszSite">
    <summary>The name of the site or proxy that requires authentication.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.pwszRealm">
    <summary>The name of the realm for this authentication.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.pwszPackage">
    <summary>The name of the authentication package, such as "Digest" or "MBS_BASIC".</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.nRetries">
    <summary>The number of retries. This member is set to zero on the first attempt, and incremented once for each subsequent attempt.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.flags">
    <summary>Bitwise <b>OR</b> of zero or more flags from the <see cref="_MFP_CREDENTIAL_FLAGS" /> enumeration.</summary>
  </member>
  <member name="MFP_ACQUIRE_USER_CREDENTIAL_EVENT.pCredential">
    <summary>Pointer to the <see cref="IMFNetCredential" /> interface. The application uses this interface to set the user's credentials.</summary>
  </member>
</doc>