<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ITransferAdviseSink.ConfirmEncryptionLoss">
    <summary>
      <para>Displays a message to the user confirming that loss of encryption is acceptable for this operation.</para>
    </summary>
    <param name="psiSource">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to an <see cref="IShellItem" /> of the file in which encryption information will be lost.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Returns one of the following specific Shell codes, or a system error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_YES</b>
            </para>
          </description>
          <description>
            <para>User responded "Yes" to the dialog. Copy continues without encryption.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USER_IGNORED</b>
            </para>
          </description>
          <description>
            <para>User responded "No" to the dialog.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_PENDING</b>
            </para>
          </description>
          <description>
            <para>Error has been queued and will display later. Operation on this file will be skipped.</para>
          </description>
        </item>
      </list>
    </returns>
  </member>
  <member name="ITransferAdviseSink.ConfirmOverwrite">
    <summary>
      <para>Displays a message to the user confirming that overwriting existing items is acceptable.</para>
    </summary>
    <param name="psiSource">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to the source <see cref="IShellItem" /> .</para>
    </param>
    <param name="psiDestParent">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to the destination parent folder <see cref="IShellItem" />.</para>
    </param>
    <param name="pszName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>A pointer to a wide-string containing the desired name of the item at the destination. If <b>NULL</b>, the name is the same as the Shell item pointed to by <i>psiSource</i>.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>The return values listed below are emitted specifically by this method to inform the calling process of how the operation ended.  If other results or errors are emitted during the operation of this method, they should be returned to the calling process.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USER_IGNORED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Ignore</b>. Allows the calling process to continue processing other files as appropriate.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_E_USER_CANCELLED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Cancel</b>. Stops processing of the current document and ends the current process.</para>
          </description>
        </item>
      </list>
    </returns>
  </member>
  <member name="ITransferAdviseSink.FileFailure">
    <summary>
      <para>Called when there is a failure and user interaction is needed.</para>
    </summary>
    <param name="psi">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>The <see cref="IShellItem" /> on which the operation failed.</para>
    </param>
    <param name="pszItem">
      <para>Type: <b>LPCWSTR</b></para>
      <para>Optional. A pointer to a null-terminated buffer that contains the name of the file. If this value is <b>NULL</b>, the name given by the <i>psi</i> parameter is used.</para>
    </param>
    <param name="hrError">
      <para>Type: <b>HRESULT</b></para>
      <para>The error code generated by the failure. This error must be handled by the copy engine.</para>
    </param>
    <param name="pszRename">
      <para>Type: <b>LPWSTR</b></para>
      <para>Optional. When this method returns, contains a pointer to a null-terminated buffer that contains a new name for the file. The name cannot exceed length <i>cchRename</i>. If this parameter is <b>NULL</b>, no option to rename will be available.</para>
    </param>
    <param name="cchRename">
      <para>Type: <b>ULONG</b></para>
      <para>The size of the <i>pszRename</i> buffer, in characters.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Any other <b>HRESULT</b> should be returned to the calling process. If the failure is not handled, the return value should be <i>hrError</i>.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USER_RETRY</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Retry</b>. The handler should retry the file operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_E_USERCANCELLED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Cancel</b>. The entire copy job is being terminated. The handler should return this code back to the copy engine.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USER_IGNORED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Ignore</b>. The handler should skip creating the item and return this code back to the copy engine.</para>
          </description>
        </item>
      </list>
    </returns>
  </member>
  <member name="ITransferAdviseSink.PropertyFailure">
    <summary>
      <para>Called when there is a failure that involves file properties and user interaction is needed.</para>
    </summary>
    <param name="psi">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to the <see cref="IShellItem" /> that caused the failure.</para>
    </param>
    <param name="pkey">
      <para>Type: <b>const <see cref="PROPERTYKEY" />*</b></para>
      <para>A value that corresponds to the property that will be lost. A <b>NULL</b> value indicates that all properties were lost.</para>
    </param>
    <param name="hrError">
      <para>Type: <b>HRESULT</b></para>
      <para>The error code generated by the failure. It must be handled by the copy engine.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Any other <b>HRESULT</b> should be passed up. If the failure is not handled, the return value should be <i>hrError</i>.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USERRETRY</b>
            </para>
          </description>
          <description>
            <para>The handler should retry the file operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USERRETRYWITHNEWNAME</b>
            </para>
          </description>
          <description>
            <para>The handler should retry the file operation using the name returned in the <i>pszRename</i> buffer.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_OVERWRITE</b>
            </para>
          </description>
          <description>
            <para>The user has indicated that the handler should overwrite the existing file.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_RETRYWITHOUTSECURITY</b>
            </para>
          </description>
          <description>
            <para>The user has indicated that the handler should try the operation again without the security descriptor.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_E_USERCANCELLED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Cancel</b>. The entire copy job is being terminated. The handler should return this code back to the copy engine.</para>
          </description>
        </item>
      </list>
    </returns>
  </member>
  <member name="ITransferAdviseSink.SubStreamFailure">
    <summary>
      <para>Called when there is a failure that involves secondary streams and user interaction is needed.</para>
    </summary>
    <param name="psi">
      <para>Type: <b><see cref="IShellItem" />*</b></para>
      <para>A pointer to the <see cref="IShellItem" /> that caused the failure.</para>
    </param>
    <param name="pszStreamName">
      <para>Type: <b>LPCWSTR</b></para>
      <para>The name of the data that will be lost in the operation.</para>
    </param>
    <param name="hrError">
      <para>Type: <b>HRESULT</b></para>
      <para>The error code that was generated. It must be handled by the copy engine.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Any other <b>HRESULT</b> should be passed up. If the failure is not handled, the return value should be <i>hrError</i>.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USERRETRY</b>
            </para>
          </description>
          <description>
            <para>The handler should retry the file operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_USERRETRYWITHNEWNAME</b>
            </para>
          </description>
          <description>
            <para>The handler should retry the file operation using the name returned in the <i>pszRename</i> buffer.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_OVERWRITE</b>
            </para>
          </description>
          <description>
            <para>The user has indicated that the handler should overwrite the existing file.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_S_RETRYWITHOUTSECURITY</b>
            </para>
          </description>
          <description>
            <para>The user has indicated that the handler should try the operation again without the security descriptor.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>COPYENGINE_E_USERCANCELLED</b>
            </para>
          </description>
          <description>
            <para>The user clicked <b>Cancel</b>. The entire copy job is being terminated. The handler should return this code back to the copy engine.</para>
          </description>
        </item>
      </list>
    </returns>
  </member>
  <member name="ITransferAdviseSink.UpdateProgress">
    <summary>
      <para>Updates the transfer progress status in the UI.</para>
    </summary>
    <param name="ullSizeCurrent">
      <para>Type: <b>ULONGLONG</b></para>
      <para>The number of bytes processed in the current operation.</para>
    </param>
    <param name="ullSizeTotal">
      <para>Type: <b>ULONGLONG</b></para>
      <para>The total number of bytes in the current operation.</para>
    </param>
    <param name="nFilesCurrent">
      <para>Type: <b>int</b></para>
      <para>The number of files processed in the current operation.</para>
    </param>
    <param name="nFilesTotal">
      <para>Type: <b>int</b></para>
      <para>The total number of files in the operation. Set to 0 to indicate that the value has not changed since the last call to this method.</para>
    </param>
    <param name="nFoldersCurrent">
      <para>Type: <b>int</b></para>
      <para>The number of folders processed in the current operation.</para>
    </param>
    <param name="nFoldersTotal">
      <para>Type: <b>int</b></para>
      <para>The total number of folders in the operation. Set to 0 to indicate that the value has not changed since the last call to this method.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Set <i>ullSizeTotal</i>, <i>nFilesTotal</i>, and <i>nFoldersTotal</i> all to 0 to indicate that the totals have not changed since the last call to this method.</para>
      <para>Set all six parameters to 0 to indicate that progress has not changed since the last call to this method.</para>
      <h3>Note to Implementers</h3>
      <para>Implementers of this function should return an error code when the operation needs to terminate before it is complete, such as when the user clicks the <b>Cancel</b> button.</para>
    </remarks>
  </member>
  <member name="ITransferAdviseSink.UpdateTransferState">
    <summary>
      <para>Updates the transfer state.</para>
    </summary>
    <param name="ts">
      <para>Type: <b>TRANSFER_ADVISE_STATE</b></para>
      <para>The transfer state. One of the following values.</para>
      <h4>TS_NONE (0x00000000)</h4>
      <para>0x00000000. No transfer is in progress.</para>
      <h4>TS_PERFORMING (0x00000001)</h4>
      <para>0x00000001. The transfer is being performed.</para>
      <h4>TS_PREPARING (0x00000002)</h4>
      <para>0x00000002. The transfer is preparing to begin. For example, this flag would be set when space requirements are being calculated.</para>
      <h4>TS_INDETERMINATE (0x00000004)</h4>
      <para>0x00000004. Length of the transfer is unknown.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
  </member>
  <member name="ITransferAdviseSink">
    <summary>
      <para>Exposes methods supporting status collection and failure information.</para>
    </summary>
    <seealso cref="ITransferSource" />
  </member>
</doc>