<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IExecuteCommand.Execute">
    <summary>Invoke the verb on the selected items. Call this method after you have called the other methods of this interface.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetDirectory">
    <summary>Sets a new working directory.</summary>
    <param name="pszDirectory">Pointer to a null-terminated string with the fully qualified path of the new working directory. If this value is <b>NULL</b>, the current working directory is used.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetKeyState">
    <summary>Sets a value based on the current state of the keys CTRL and SHIFT.</summary>
    <param name="grfKeyState">
      <para>One or both of the following flags to indicate whether the key is pressed.</para>
      <h4>MK_CONTROL</h4>
      <para>The CTRL key is pressed.</para>
      <h4>MK_SHIFT</h4>
      <para>The SHIFT key is pressed.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetNoShowUI">
    <summary>Indicates whether any UI associated with the selected Shell item should be displayed.</summary>
    <param name="fNoShowUI">
      <b>TRUE</b> to block display of any associated UI; <b>FALSE</b> to display the UI. <b>FALSE</b> is the default value.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetParameters">
    <summary>Provides parameter values for the verb.</summary>
    <param name="pszParameters">Pointer to a string that contains parameter values. The format and contents of this string is determined by the verb that is to be invoked.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetPosition">
    <summary>Sets the coordinates of a point used for display.</summary>
    <param name="pt">The screen coordinates at which the user right-clicked to invoke the shortcut menu from which a command was chosen. Applications can use this information to present any UI. This is particularly useful in a multi-monitor situation. The default position is the center of the default monitor.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand.SetShowWindow">
    <summary>Sets the specified window's visual state.</summary>
    <param name="nShow">It can be any of the values that can be specified in the <i>nCmdShow</i> parameter for the <see cref="ShowWindow" /> function.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExecuteCommand">
    <summary>Exposes methods that set a given state or parameter related to the command verb, as well as a method to invoke that verb.</summary>
  </member>
</doc>