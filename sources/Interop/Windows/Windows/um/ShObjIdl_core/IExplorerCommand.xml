<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IExplorerCommand.EnumSubCommands">
    <summary>Retrieves an enumerator for a command's subcommands.</summary>
    <param name="ppEnum">When this method returns successfully, contains an <see cref="IEnumExplorerCommand" /> interface pointer that can be used to walk the set of subcommands.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetCanonicalName">
    <summary>Gets the GUID of a Windows Explorer command.</summary>
    <param name="pguidCommandName">A pointer to a value that, when this method returns successfully, receives the command's GUID, under which it is declared in the registry.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetFlags">
    <summary>Gets the flags associated with a Windows Explorer command.</summary>
    <param name="pFlags">
      <para>When this method returns, this value points to the current command flags. One of more of the following values:</para>
      <h4>ECF_DEFAULT (0x000)</h4>
      <para>
        <b>Windows 7 and later</b>. No command flags are set.</para>
      <h4>ECF_HASSUBCOMMANDS (0x001)</h4>
      <para>The command has subcommands.</para>
      <h4>ECF_HASSPLITBUTTON (0x002)</h4>
      <para>A split button is displayed.</para>
      <h4>ECF_HIDELABEL (0x004)</h4>
      <para>The label is hidden.</para>
      <h4>ECF_ISSEPARATOR (0x008)</h4>
      <para>The command is a separator.</para>
      <h4>ECF_HASLUASHIELD (0x010)</h4>
      <para>A UAC shield is displayed.</para>
      <h4>ECF_SEPARATORBEFORE (0x020)</h4>
      <para>
        <b>Introduced in Windows 7</b>. The command is located in the menu immediately below a separator.</para>
      <h4>ECF_SEPARATORAFTER (0x040)</h4>
      <para>
        <b>Introduced in Windows 7</b>. The command is located in the menu immediately above a separator.</para>
      <h4>ECF_ISDROPDOWN (0x080)</h4>
      <para>
        <b>Introduced in Windows 7</b>. Selecting the command opens a drop-down submenu (for example, <b>Include in library</b>).</para>
      <h4>ECF_TOGGLEABLE (0x100)</h4>
      <para>
        <b>Introduced in Windows 8</b>.</para>
      <h4>ECF_AUTOMENUICONS (0x200)</h4>
      <para>
        <b>Introduced in Windows 8</b>.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetIcon">
    <summary>Gets an icon resource string of the icon associated with the specified Windows Explorer command item.</summary>
    <param name="psiItemArray">A pointer to an <see cref="IShellItemArray" />.</param>
    <param name="ppszIcon">Pointer to a buffer that, when this method returns successfully, receives the resource string that identifies the icon source.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetState">
    <summary>Gets state information associated with a specified Windows Explorer command item.</summary>
    <param name="psiItemArray">A pointer to an <see cref="IShellItemArray" />.</param>
    <param name="fOkToBeSlow">
      <b>FALSE</b> if a verb object should not perform any memory intensive computations that could cause the UI thread to stop responding. The verb object should return E_PENDING in that case. If <b>TRUE</b>, those computations can be completed.</param>
    <param name="pCmdState">A pointer to a value that, when this method returns successfully, receives one or more Windows Explorer command states indicated by the <see cref="EXPCMDSTATE" /> constants.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetTitle">
    <summary>Gets the title text of the button or menu item that launches a specified Windows Explorer command item.</summary>
    <param name="psiItemArray">A pointer to an <see cref="IShellItemArray" />.</param>
    <param name="ppszName">Pointer to a buffer that, when this method returns successfully, receives the title string.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.GetToolTip">
    <summary>Gets the tooltip string associated with a specified Windows Explorer command item.</summary>
    <param name="psiItemArray">A pointer to an <see cref="IShellItemArray" />.</param>
    <param name="ppszInfotip">Pointer to a buffer that, when this method returns successfully, receives the tooltip string.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand.Invoke">
    <summary>Invokes a Windows Explorer command.</summary>
    <param name="psiItemArray">A pointer to an <see cref="IShellItemArray" />.</param>
    <param name="pbc">A pointer to an <see cref="IBindCtx" /> interface, which provides access to a bind context. This value can be <b>NULL</b> if no bind context is needed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IExplorerCommand">
    <summary>Exposes methods that get the command appearance, enumerate subcommands, or invoke the command.</summary>
  </member>
</doc>