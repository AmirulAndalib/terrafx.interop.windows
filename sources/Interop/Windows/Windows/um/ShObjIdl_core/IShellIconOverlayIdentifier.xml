<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IShellIconOverlayIdentifier.GetOverlayInfo">
    <summary>
      <para>Provides the location of the icon overlay's bitmap.</para>
    </summary>
    <param name="pwszIconFile">
      <para>Type: <b>PWSTR</b></para>
      <para>A null-terminated Unicode string that contains the fully qualified path of the file containing the icon. The .dll, .exe, and .ico file types are all acceptable. You must set the <b>ISIOI_ICONFILE</b> flag in <i>pdwFlags</i> if you return a file name.</para>
    </param>
    <param name="cchMax">
      <para>Type: <b>int</b></para>
      <para>The size of the <i>pwszIconFile</i> buffer, in Unicode characters.</para>
    </param>
    <param name="pIndex">
      <para>Type: <b>int*</b></para>
      <para>Pointer to an index value used to identify the icon in a file that contains multiple icons. You must set the <b>ISIOI_ICONINDEX</b> flag in <i>pdwFlags</i> if you return an index.</para>
    </param>
    <param name="pdwFlags">
      <para>Type: <b>DWORD*</b></para>
      <para>Pointer to a bitmap that specifies the information that is being returned by the method. This parameter can be one or both of the following values.</para>
      <h4>ISIOI_ICONFILE (0x00000001)</h4>
      <para>The path of the icon file is returned through <i>pwszIconFile</i>.</para>
      <h4>ISIOI_ICONINDEX (0x00000002)</h4>
      <para>There is more than one icon in <i>pwszIconFile</i>. The icon's index is returned through <i>pIndex</i>.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>This method is called by the Shell at startup so that the handler's icon overlay can be added to the system image list. After initialization is complete, the Shell calls <b>GetOverlayInfo</b> when it needs to display the handler's icon overlay.</para>
      <para>
        <b>Note</b>  Once the image has been loaded into the system image list during initialization, it cannot be changed. After initialization, the file name and index are used only to identify the icon overlay. The system will not load a new icon overlay. When <b>GetOverlayInfo</b> is called, your handler must return the same file name and index that were specified when the function was first called.</para>
    </remarks>
  </member>
  <member name="IShellIconOverlayIdentifier.GetPriority">
    <summary>
      <para>Specifies the priority of an icon overlay.</para>
    </summary>
    <param name="pPriority">
      <para>Type: <b>int*</b></para>
      <para>The address of a value that indicates the priority of the overlay identifier. Possible values range from zero to 100, with zero the highest priority.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Returns S_OK if successful, or a COM error code otherwise.</para>
    </returns>
    <remarks>
      <para>If more than one icon overlay is available for an object, the one with highest priority is chosen. The Shell has a set of internal rules that determine priority for many cases. The value returned by <b>GetPriority</b> is used for those cases in which the Shell's internal rules do not apply. Typically, you should set the value to zero. However, the priority value is useful when you have implemented two or more icon overlay handlers that can request icon overlay icons for the same object. By setting the priority values appropriately, you can specify which of the requested icon overlays will be displayed.</para>
    </remarks>
    <seealso cref="IShellIconOverlayIdentifier" />
  </member>
  <member name="IShellIconOverlayIdentifier.IsMemberOf">
    <summary>
      <para>Specifies whether an icon overlay should be added to a Shell object's icon.</para>
    </summary>
    <param name="pwszPath">
      <para>Type: <b>PCWSTR</b></para>
      <para>A Unicode string that contains the fully qualified path of the Shell object.</para>
    </param>
    <param name="dwAttrib">
      <para>Type: <b>DWORD</b></para>
      <para>The object's attributes. For a complete list of file attributes and their associated flags, see <see cref="IShellFolder.GetAttributesOf" />.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>This method returns one of the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The icon overlay should be displayed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>S_FALSE</b>
            </para>
          </description>
          <description>
            <para>The icon overlay should not be displayed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_FAIL</b>
            </para>
          </description>
          <description>
            <para>The operation failed.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The Shell calls this method to determine whether it should display a handler's icon overlay for a particular object. Icon overlay handlers are usually intended to work with a particular group of files. A typical example is a <a href="https://docs.microsoft.com//windows/desktop/shell/fa-file-types">file type</a>, identified by a specific file name extension. An icon overlay handler might request an icon overlay for all members of the file type. Some handlers request an icon overlay only if a member of the file type is in a particular state. However, icon overlay handlers are free to request their icon overlay for any object that they want.</para>
    </remarks>
    <seealso cref="IShellIconOverlayIdentifier" />
  </member>
  <member name="IShellIconOverlayIdentifier">
    <summary>
      <para>Exposes methods that handle all communication between icon overlay handlers and the Shell.</para>
    </summary>
    <remarks>
      <para>Icon overlays are small images placed at the lower-left corner of the icon that represents a Shell object in Windows Explorer or on the desktop. They are used to add some extra information to the object's normal icon. A commonly used icon overlay is the small arrow that indicates that a file or folder is actually a link. You can specify custom icon overlays for Shell objects by implementing and registering an icon overlay handler.</para>
      <para>Icon overlay handlers are Component Object Model (COM) objects that are associated with a particular icon overlay. For a general discussion of icon overlay handlers, see <a href="https://docs.microsoft.com//windows/desktop/shell/how-to-implement-icon-overlay-handlers">How to Implement Icon Overlay Handlers</a>.</para>
      <para>This interface must be implemented by all icon overlay handlers.</para>
      <para>This interface is not typically called by applications.</para>
    </remarks>
  </member>
</doc>