<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="INameSpaceTreeControl.AppendRoot">
    <summary>Appends a Shell item to the list of roots in a tree.</summary>
    <param name="psiRoot">Pointer to the Shell item that is being appended.</param>
    <param name="grfEnumFlags">Enumerates the qualities of the root and all of its children. One or more of the values of type <see cref="SHCONTF" />. These flags can be combined using a bitwise OR.</param>
    <param name="grfRootStyle">
      <para>Specifies the style of the root that is being appended. One or more of the following values:</para>
      <h4>NSTCRS_VISIBLE (0x0000)</h4>
      <para>The root is visible as well as the items. Mutually exclusive with NSTCRS_HIDDEN.</para>
      <h4>NSTCRS_HIDDEN (0x0001)</h4>
      <para>The root is hidden so that the children only are visible. Mutually exclusive with NSTCRS_VISIBLE.</para>
      <h4>NSTCRS_EXPANDED (0x0002)</h4>
      <para>The root is expanded upon initialization.</para>
    </param>
    <param name="pif">Pointer to the <see cref="IShellItemFilter" /> that enables you to filter which items in the tree are displayed. If supplied, every item is customizable with a <see cref="SHCONTF" /> flag. This value can be <b>NULL</b> if no filter is required.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.CollapseAll">
    <summary>Collapses all of the items in the given tree.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.EnsureItemVisible">
    <summary>Ensures that the given item is visible.</summary>
    <param name="psi">A pointer to the Shell item for which the visibility is being ensured.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetItemCustomState">
    <summary>Gets the state of the checkbox associated with a given Shell item.</summary>
    <param name="psi">A pointer to the Shell item for which checkbox state is being retrieved.</param>
    <param name="piStateNumber">A pointer to the state of the checkbox for the Shell item.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetItemRect">
    <summary>Gets the <see cref="RECT" /> structure that describes the size and position of a given item.</summary>
    <param name="psi">A pointer to the item for which the <see cref="RECT" /> structure is being retrieved.</param>
    <param name="prect">A pointer to the <see cref="RECT" /> structure that describes the size and position of the item.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetItemState">
    <summary>Gets state information about a Shell item.</summary>
    <param name="psi">A pointer to the Shell item from which to retrieve the state.</param>
    <param name="nstcisMask">Specifies which information is being requested, in the form of a bitmap. One or more of the <see cref="NSTCITEMSTATE" /> constants.</param>
    <param name="pnstcisFlags">When this method returns, points to a bitmap that contains the values requested in <i>nstcisMask</i>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetNextItem">
    <summary>Retrieves the next item in the tree according to which method is requested.</summary>
    <param name="psi">The Shell item for which the next item is being retrieved. This value can be <b>NULL</b>.</param>
    <param name="nstcgi">
      <para>The type of the next item. This value can be one of the following flags:</para>
      <h4>NSTCGNI_NEXT (0)</h4>
      <para>The next sibling of the given item.</para>
      <h4>NSTCGNI_NEXTVISIBLE (1)</h4>
      <para>The next visible item in the tree that has any relationship to the given item. This includes a child (if there is one), the next sibling, or even one of the ancestor's siblings.</para>
      <h4>NSTCGNI_PREV (2)</h4>
      <para>The previous sibling item of the given item.</para>
      <h4>NSTCGNI_PREVVISIBLE (3)</h4>
      <para>The previous visible item that is a sibling item, sibling descendent item or a parent item.</para>
      <h4>NSTCGNI_PARENT (4)</h4>
      <para>The parent item of the given item.</para>
      <h4>NSTCGNI_CHILD (5)</h4>
      <para>The first child item of the given item.</para>
      <h4>NSTCGNI_FIRSTVISIBLE (6)</h4>
      <para>The absolute first visible item in the tree (not relative to the given item).</para>
      <h4>NSTCGNI_LASTVISIBLE (7)</h4>
      <para>The absolute last visible item in the tree (not relative to the given item).</para>
    </param>
    <param name="ppsiNext">The address of a pointer to the <see cref="IShellItem" /> that fits the criteria for the next item that was requested.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetRootItems">
    <summary>Gets an array of the root items.</summary>
    <param name="ppsiaRootItems">A pointer to an array of root items.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.GetSelectedItems">
    <summary>Gets an array of selected Shell items.</summary>
    <param name="psiaItems">A pointer to an array of selected Shell items.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.HitTest">
    <summary>Retrieves the item that a given point is in, if any.</summary>
    <param name="ppt">A pointer to the point to be tested.</param>
    <param name="ppsiOut">The address of a pointer to the item in which the point exists, or <b>NULL</b> if the point does not exist in an item.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.Initialize">
    <summary>Initializes an <see cref="INameSpaceTreeControl" /> object.</summary>
    <param name="hwndParent">The handle of the parent window.</param>
    <param name="prc">A pointer to a <see cref="RECT" /> structure that describes the size and position of the control in the client window.</param>
    <param name="nsctsFlags">The characteristics of the given namespace tree control. One or more of the following values from the <see cref="NSTCSTYLE" /> enumeration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.InsertRoot">
    <summary>Inserts a Shell item on a root item in a tree.</summary>
    <param name="iIndex">The index at which to insert the root.</param>
    <param name="psiRoot">A pointer to the Shell item that is being inserted.</param>
    <param name="grfEnumFlags">Enumerates the qualities of the root and all of its children. One of the values of type <see cref="SHCONTF" />.</param>
    <param name="grfRootStyle">
      <para>The style of the root that is being inserted. One or more of the following values (flags can be combined using a bitwise OR).</para>
      <h4>NSTCRS_VISIBLE (0x0000)</h4>
      <para>The root is visible as well as the items. Mutually exclusive with NSTCRS_HIDDEN.</para>
      <h4>NSTCRS_HIDDEN (0x0001)</h4>
      <para>The root is hidden so that only the children are visible. Mutually exclusive with NSTCRS_VISIBLE.</para>
      <h4>NSTCRS_EXPANDED (0x0002)</h4>
      <para>The root is expanded upon initialization.</para>
    </param>
    <param name="pif">A pointer to the <see cref="IShellItemFilter" /> that enables you to filter which items in the tree are displayed. If supplied, every item is customizable with a <see cref="SHCONTF" /> flag. This value can be <b>NULL</b> if no filter is required.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.RemoveAllRoots">
    <summary>Removes all roots and their children from a tree.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.RemoveRoot">
    <summary>Removes a root and its children from a tree.</summary>
    <param name="psiRoot">A pointer to the root that is to be removed.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.SetItemCustomState">
    <summary>Sets the state of the checkbox associated with the Shell item.</summary>
    <param name="psi">A pointer to the Shell item for which checkbox state is being set.</param>
    <param name="iStateNumber">The desired state of the checkbox for the Shell item.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.SetItemState">
    <summary>Sets state information for a Shell item.</summary>
    <param name="psi">A pointer to the Shell item for which to set the state.</param>
    <param name="nstcisMask">Specifies which information is being set, in the form of a bitmap. One or more of the <see cref="NSTCITEMSTATE" /> constants.</param>
    <param name="nstcisFlags">A bitmap that contains the values to set for the flags specified in <i>nstcisMask</i>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.SetTheme">
    <summary>Sets the desktop theme for the current window only.</summary>
    <param name="pszTheme">The name of the desktop theme to which the current window is being set.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.TreeAdvise">
    <summary>Enables a client to register with the control.</summary>
    <param name="punk">A pointer to the client IUnknown that registers with the control.</param>
    <param name="pdwCookie">A pointer to the cookie that is passed back for registration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl.TreeUnadvise">
    <summary>Enables a client to unregister with the control.</summary>
    <param name="dwCookie">A pointer to the cookie that is to be unregistered.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="INameSpaceTreeControl">
    <summary>Exposes methods used to view and manipulate nodes in a tree of Shell items.</summary>
  </member>
</doc>