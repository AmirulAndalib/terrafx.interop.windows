<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IShellPropSheetExt.AddPages">
    <summary>
      <para>Adds one or more pages to a property sheet that the Shell displays for a file object. The Shell calls this method for each property sheet handler registered to the file type.</para>
    </summary>
    <param name="pfnAddPage">
      <para>Type: <b>LPFNADDPROPSHEETPAGE</b></para>
      <para>A pointer to a function that the property sheet handler calls to add a page to the property sheet. The function takes a property sheet handle returned by the <see cref="CreatePropertySheetPage" /> function and the <i>lParam</i> parameter passed to this method.</para>
    </param>
    <param name="lParam">
      <para>Type: <b>LPARAM</b></para>
      <para>Handler-specific data to pass to the function pointed to by <i>pfnAddPage</i>.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If successful, returns a one-based index to specify the page that should be initially displayed. See Remarks for more information.</para>
    </returns>
    <remarks>
      <para>For each page that the property sheet handler needs to add to a property sheet, the handler fills a <see cref="PROPSHEETPAGE" /> structure, calls the <see cref="CreatePropertySheetPage" /> function, and then calls the function pointed to by <i>pfnAddPage</i>.</para>
      <para>The <b>LPFNADDPROPSHEETPAGE</b> function pointer type is defined in Prsht.h as shown here. It accepts a handle to a <see cref="PROPSHEETPAGE" /> structure and function-defined data through <i>lParam</i>.</para>
      <code>typedef BOOL (* LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);
</code>
      <para>You can request through your implementation that a particular property sheet page be displayed first, instead of the default page. To do so, return the one-based index of the desired page relative to the pages you added. For example, if you added three property sheet pages, A, B, and C, and you want B to be the selected page, then the return value should be 2. Note that this return value is only a request. The property sheet might still display the default page.</para>
    </remarks>
  </member>
  <member name="IShellPropSheetExt.ReplacePage">
    <summary>
      <para>Replaces a page in a property sheet for a Control Panel object.</para>
    </summary>
    <param name="uPageID">
      <para>Type: <b>UINT</b></para>
      <para>Not used.</para>
      <para>
        <b>Microsoft Windows XP and earlier:</b> A type EXPPS identifier of the page to replace. The values for this parameter for Control Panels can be found in the Cplext.h header file.</para>
    </param>
    <param name="pfnReplaceWith">
      <para>Type: <b>LPFNADDPROPSHEETPAGE</b></para>
      <para>A pointer to a function that the property sheet handler calls to replace a page to the property sheet. The function takes a property sheet handle returned by the <see cref="CreatePropertySheetPage" /> function and the <i>lParam</i> parameter passed to the <b>ReplacePage</b> method.</para>
    </param>
    <param name="lParam">
      <para>Type: <b>LPARAM</b></para>
      <para>The parameter to pass to the function specified by the <i>pfnReplacePage</i> parameter.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>To replace a page, a property sheet handler fills a <see cref="PROPSHEETPAGE" /> structure, calls <see cref="CreatePropertySheetPage" />, and then calls the function specified by <i>pfnReplacePage</i>.</para>
    </remarks>
  </member>
  <member name="IShellPropSheetExt">
    <summary>
      <para>Exposes methods that allow a property sheet handler to add or replace pages in the property sheet displayed for a file object.</para>
    </summary>
  </member>
</doc>