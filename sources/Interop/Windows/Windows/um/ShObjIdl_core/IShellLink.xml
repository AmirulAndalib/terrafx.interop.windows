<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IShellLink.GetArguments">
    <summary>Gets the command-line arguments associated with a Shell link object.</summary>
    <param name="pszArgs">A pointer to the buffer that, when this method returns successfully, receives the command-line arguments.</param>
    <param name="cch">The maximum number of characters that can be copied to the buffer supplied by the <i>pszArgs</i> parameter. In the case of a Unicode string, there is no limitation on maximum string length. In the case of an ANSI string, the maximum length of the returned string varies depending on the version of Windows—MAX_PATH prior to Windows 2000 and INFOTIPSIZE (defined in Commctrl.h) in Windows 2000 and later.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetDescription">
    <summary>Gets the description string for a Shell link object.</summary>
    <param name="pszName">A pointer to the buffer that receives the description string.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszName</i> parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetHotkey">
    <summary>Gets the keyboard shortcut (hot key) for a Shell link object.</summary>
    <param name="pwHotkey">
      <para>The address of the keyboard shortcut. The virtual key code is in the low-order byte, and the modifier flags are in the high-order byte. The modifier flags can be a combination of the following values.</para>
      <h4>HOTKEYF_ALT</h4>
      <para>ALT key</para>
      <h4>HOTKEYF_CONTROL</h4>
      <para>CTRL key</para>
      <h4>HOTKEYF_EXT</h4>
      <para>Extended key</para>
      <h4>HOTKEYF_SHIFT</h4>
      <para>SHIFT key</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetIconLocation">
    <summary>Gets the location (path and index) of the icon for a Shell link object.</summary>
    <param name="pszIconPath">The address of a buffer that receives the path of the file containing the icon.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszIconPath</i> parameter.</param>
    <param name="piIcon">The address of a value that receives the index of the icon.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetIDList">
    <summary>Gets the list of item identifiers for the target of a Shell link object.</summary>
    <param name="ppidl">When this method returns, contains the address of a PIDL.</param>
    <returns>Returns S_OK if the operation is successful and one or more valid PIDLs is retrieved. If the operation is successful but no PIDLs are retrieved, it returns S_FALSE with <i>ppidl</i> set to <b>NULL</b>. Otherwise, it returns a standard error value.</returns>
  </member>
  <member name="IShellLink.GetPath">
    <summary>Gets the path and file name of the target of a Shell link object.</summary>
    <param name="pszFile">The address of a buffer that receives the path and file name of the target of the Shell link object.</param>
    <param name="cch">The size, in characters, of the buffer pointed to by the <i>pszFile</i> parameter, including the terminating null character. The maximum path size that can be returned is MAX_PATH. This parameter is commonly set by calling ARRAYSIZE(pszFile). The ARRAYSIZE macro is defined in Winnt.h.</param>
    <param name="pfd">A pointer to a <see cref="WIN32_FIND_DATA" /> structure that receives information about the target of the Shell link object. If this parameter is <b>NULL</b>, then no additional information is returned.</param>
    <param name="fFlags">
      <para>Flags that specify the type of path information to retrieve. This parameter can be a combination of the following values.</para>
      <h4>SLGP_SHORTPATH</h4>
      <para>Retrieves the standard short (8.3 format) file name.</para>
      <h4>SLGP_UNCPRIORITY</h4>
      <para>Unsupported; do not use.</para>
      <h4>SLGP_RAWPATH</h4>
      <para>Retrieves the raw path name. A raw path is something that might not exist and may include environment variables that need to be expanded.</para>
      <h4>SLGP_RELATIVEPRIORITY</h4>
      <para>
        <b>Windows Vista and later</b>. Retrieves the path, if possible, of the shortcut's target relative to the path set by a previous call to <see cref="IShellLink.SetRelativePath" />.</para>
    </param>
    <returns>Returns <b>S_OK</b> if the operation is successful and a valid path is retrieved. If the operation is successful but no path is retrieved, it returns <b>S_FALSE</b> and <i>pszFile</i> will be empty. Otherwise, it returns one of the standard HRESULT error values.</returns>
  </member>
  <member name="IShellLink.GetShowCmd">
    <summary>Gets the show command for a Shell link object.</summary>
    <param name="piShowCmd">
      <para>A pointer to the command. The following commands are supported.</para>
      <h4>SW_SHOWNORMAL</h4>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
      <h4>SW_SHOWMAXIMIZED</h4>
      <para>Activates the window and displays it as a maximized window.</para>
      <h4>SW_SHOWMINIMIZED</h4>
      <para>Activates the window and displays it as a minimized window.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetWorkingDirectory">
    <summary>Gets the name of the working directory for a Shell link object.</summary>
    <param name="pszDir">The address of a buffer that receives the name of the working directory.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszDir</i> parameter. The name of the working directory is truncated if it is longer than the maximum specified by this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.Resolve">
    <summary>Attempts to find the target of a Shell link, even if it has been moved or renamed.</summary>
    <param name="hwnd">A handle to the window that the Shell will use as the parent for a dialog box. The Shell displays the dialog box if it needs to prompt the user for more information while resolving a Shell link.</param>
    <param name="fFlags">
      <para>Action flags. This parameter can be a combination of the following values.</para>
      <h4>SLR_NO_UI (0x0001)</h4>
      <para>0x0001. Do not display a dialog box if the link cannot be resolved. When <b>SLR_NO_UI</b> is set, the high-order word of <i>fFlags</i> can be set to a time-out value that specifies the maximum amount of time to be spent resolving the link. The function returns if the link cannot be resolved within the time-out duration. If the high-order word is set to zero, the time-out duration will be set to the default value of 3,000 milliseconds (3 seconds). To specify a value, set the high word of <i>fFlags</i> to the desired time-out duration, in milliseconds.</para>
      <h4>SLR_ANY_MATCH (0x0002)</h4>
      <para>0x0002. Not used.</para>
      <h4>SLR_UPDATE (0x0004)</h4>
      <para>0x0004. If the link object has changed, update its path and list of identifiers. If <b>SLR_UPDATE</b> is set, you do not need to call <see cref="IPersistFile.IsDirty" /> to determine whether the link object has changed.</para>
      <h4>SLR_NOUPDATE (0x0008)</h4>
      <para>0x0008. Do not update the link information.</para>
      <h4>SLR_NOSEARCH (0x0010)</h4>
      <para>0x0010. Do not execute the search heuristics.</para>
      <h4>SLR_NOTRACK (0x0020)</h4>
      <para>0x0020. Do not use distributed link tracking.</para>
      <h4>SLR_NOLINKINFO (0x0040)</h4>
      <para>0x0040. Disable distributed link tracking. By default, distributed link tracking tracks removable media across multiple devices based on the volume name. It also uses the UNC path to track remote file systems whose drive letter has changed. Setting <b>SLR_NOLINKINFO</b> disables both types of tracking.</para>
      <h4>SLR_INVOKE_MSI (0x0080)</h4>
      <para>0x0080. Call the Windows Installer.</para>
      <h4>SLR_NO_UI_WITH_MSG_PUMP (0x0101)</h4>
      <para>0x0101. <b>Windows XP and later</b>.</para>
      <h4>SLR_OFFER_DELETE_WITHOUT_FILE (0x0200)</h4>
      <para>0x0200. <b>Windows 7 and later</b>. Offer the option to delete the shortcut when this method is unable to resolve it, even if the shortcut is not a shortcut to a file.</para>
      <h4>SLR_KNOWNFOLDER (0x0400)</h4>
      <para>0x0400. <b>Windows 7 and later</b>. Report as dirty if the target is a known folder and the known folder was redirected. This only works if the original target path was a file system path or ID list and not an aliased known folder ID list.</para>
      <h4>SLR_MACHINE_IN_LOCAL_TARGET (0x0800)</h4>
      <para>0x0800. <b>Windows 7 and later</b>. Resolve the computer name in UNC targets that point to a local computer. This value is used with <see cref="SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET" />.</para>
      <h4>SLR_UPDATE_MACHINE_AND_SID (0x1000)</h4>
      <para>0x1000. <b>Windows 7 and later</b>. Update the computer GUID and user SID if necessary.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetArguments">
    <summary>Sets the command-line arguments for a Shell link object.</summary>
    <param name="pszArgs">A pointer to a buffer that contains the new command-line arguments. In the case of a Unicode string, there is no limitation on maximum string length. In the case of an ANSI string, the maximum length of the returned string varies depending on the version of Windows—MAX_PATH prior to Windows 2000 and INFOTIPSIZE (defined in Commctrl.h) in Windows 2000 and later.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetDescription">
    <summary>Sets the description for a Shell link object. The description can be any application-defined string.</summary>
    <param name="pszName">A pointer to a buffer containing the new description string.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetHotkey">
    <summary>Sets a keyboard shortcut (hot key) for a Shell link object.</summary>
    <param name="wHotkey">The new keyboard shortcut. The virtual key code is in the low-order byte, and the modifier flags are in the high-order byte. The modifier flags can be a combination of the values specified in the description of the <see cref="IShellLink.GetHotkey" /> method.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetIconLocation">
    <summary>Sets the location (path and index) of the icon for a Shell link object.</summary>
    <param name="pszIconPath">The address of a buffer to contain the path of the file containing the icon.</param>
    <param name="iIcon">The index of the icon.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetIDList">
    <summary>Sets the pointer to an item identifier list (PIDL) for a Shell link object.</summary>
    <param name="pidl">The object's fully qualified PIDL.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetPath">
    <summary>Sets the path and file name for the target of a Shell link object.</summary>
    <param name="pszFile">The address of a buffer that contains the new path.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetRelativePath">
    <summary>Sets the relative path to the Shell link object.</summary>
    <param name="pszPathRel">The address of a buffer that contains the fully-qualified path of the shortcut file, relative to which the shortcut resolution should be performed. It should be a file name, not a folder name.</param>
    <param name="dwReserved">Reserved. Set this parameter to zero.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetShowCmd">
    <summary>Sets the show command for a Shell link object. The show command sets the initial show state of the window.</summary>
    <param name="iShowCmd">
      <para>Command. <b>SetShowCmd</b> accepts one of the following <see cref="ShowWindow" /> commands.</para>
      <h4>SW_SHOWNORMAL</h4>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
      <h4>SW_SHOWMAXIMIZED</h4>
      <para>Activates the window and displays it as a maximized window.</para>
      <h4>SW_SHOWMINNOACTIVE</h4>
      <para>Displays the window in its minimized state, leaving the currently active window as active.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetWorkingDirectory">
    <summary>Sets the name of the working directory for a Shell link object.</summary>
    <param name="pszDir">The address of a buffer that contains the name of the new working directory.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetArguments">
    <summary>Gets the command-line arguments associated with a Shell link object.</summary>
    <param name="pszArgs">A pointer to the buffer that, when this method returns successfully, receives the command-line arguments.</param>
    <param name="cch">The maximum number of characters that can be copied to the buffer supplied by the <i>pszArgs</i> parameter. In the case of a Unicode string, there is no limitation on maximum string length. In the case of an ANSI string, the maximum length of the returned string varies depending on the version of Windows—MAX_PATH prior to Windows 2000 and INFOTIPSIZE (defined in Commctrl.h) in Windows 2000 and later.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetDescription">
    <summary>Gets the description string for a Shell link object.</summary>
    <param name="pszName">A pointer to the buffer that receives the description string.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszName</i> parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetHotkey">
    <summary>Gets the keyboard shortcut (hot key) for a Shell link object.</summary>
    <param name="pwHotkey">
      <para>The address of the keyboard shortcut. The virtual key code is in the low-order byte, and the modifier flags are in the high-order byte. The modifier flags can be a combination of the following values.</para>
      <h4>HOTKEYF_ALT</h4>
      <para>ALT key</para>
      <h4>HOTKEYF_CONTROL</h4>
      <para>CTRL key</para>
      <h4>HOTKEYF_EXT</h4>
      <para>Extended key</para>
      <h4>HOTKEYF_SHIFT</h4>
      <para>SHIFT key</para>
      <h5>- pwHotkey.HOTKEYF_ALT</h5>
      <para>ALT key</para>
      <h5>- pwHotkey.HOTKEYF_CONTROL</h5>
      <para>CTRL key</para>
      <h5>- pwHotkey.HOTKEYF_EXT</h5>
      <para>Extended key</para>
      <h5>- pwHotkey.HOTKEYF_SHIFT</h5>
      <para>SHIFT key</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetIconLocation">
    <summary>Gets the location (path and index) of the icon for a Shell link object.</summary>
    <param name="pszIconPath">The address of a buffer that receives the path of the file containing the icon.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszIconPath</i> parameter.</param>
    <param name="piIcon">The address of a value that receives the index of the icon.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetIDList">
    <summary>Gets the list of item identifiers for the target of a Shell link object.</summary>
    <param name="ppidl">When this method returns, contains the address of a PIDL.</param>
    <returns>Returns S_OK if the operation is successful and one or more valid PIDLs is retrieved. If the operation is successful but no PIDLs are retrieved, it returns S_FALSE with <i>ppidl</i> set to <b>NULL</b>. Otherwise, it returns a standard error value.</returns>
  </member>
  <member name="IShellLink.GetPath">
    <summary>Gets the path and file name of the target of a Shell link object.</summary>
    <param name="pszFile">The address of a buffer that receives the path and file name of the target of the Shell link object.</param>
    <param name="cch">The size, in characters, of the buffer pointed to by the <i>pszFile</i> parameter, including the terminating null character. The maximum path size that can be returned is MAX_PATH. This parameter is commonly set by calling ARRAYSIZE(pszFile). The ARRAYSIZE macro is defined in Winnt.h.</param>
    <param name="pfd">A pointer to a <see cref="WIN32_FIND_DATA" /> structure that receives information about the target of the Shell link object. If this parameter is <b>NULL</b>, then no additional information is returned.</param>
    <param name="fFlags">
      <para>Flags that specify the type of path information to retrieve. This parameter can be a combination of the following values.</para>
      <h4>SLGP_SHORTPATH</h4>
      <para>Retrieves the standard short (8.3 format) file name.</para>
      <h4>SLGP_UNCPRIORITY</h4>
      <para>Unsupported; do not use.</para>
      <h4>SLGP_RAWPATH</h4>
      <para>Retrieves the raw path name. A raw path is something that might not exist and may include environment variables that need to be expanded.</para>
      <h4>SLGP_RELATIVEPRIORITY</h4>
      <para>
        <b>Windows Vista and later</b>. Retrieves the path, if possible, of the shortcut's target relative to the path set by a previous call to <see cref="IShellLink.SetRelativePath" />.</para>
      <h5>- fFlags.SLGP_RAWPATH</h5>
      <para>Retrieves the raw path name. A raw path is something that might not exist and may include environment variables that need to be expanded.</para>
      <h5>- fFlags.SLGP_RELATIVEPRIORITY</h5>
      <para>
        <b>Windows Vista and later</b>. Retrieves the path, if possible, of the shortcut's target relative to the path set by a previous call to <see cref="IShellLink.SetRelativePath" />.</para>
      <h5>- fFlags.SLGP_SHORTPATH</h5>
      <para>Retrieves the standard short (8.3 format) file name.</para>
      <h5>- fFlags.SLGP_UNCPRIORITY</h5>
      <para>Unsupported; do not use.</para>
    </param>
    <returns>Returns <b>S_OK</b> if the operation is successful and a valid path is retrieved. If the operation is successful but no path is retrieved, it returns <b>S_FALSE</b> and <i>pszFile</i> will be empty. Otherwise, it returns one of the standard HRESULT error values.</returns>
  </member>
  <member name="IShellLink.GetShowCmd">
    <summary>Gets the show command for a Shell link object.</summary>
    <param name="piShowCmd">
      <para>A pointer to the command. The following commands are supported.</para>
      <h4>SW_SHOWNORMAL</h4>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
      <h4>SW_SHOWMAXIMIZED</h4>
      <para>Activates the window and displays it as a maximized window.</para>
      <h4>SW_SHOWMINIMIZED</h4>
      <para>Activates the window and displays it as a minimized window.</para>
      <h5>- piShowCmd.SW_SHOWMAXIMIZED</h5>
      <para>Activates the window and displays it as a maximized window.</para>
      <h5>- piShowCmd.SW_SHOWMINIMIZED</h5>
      <para>Activates the window and displays it as a minimized window.</para>
      <h5>- piShowCmd.SW_SHOWNORMAL</h5>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.GetWorkingDirectory">
    <summary>Gets the name of the working directory for a Shell link object.</summary>
    <param name="pszDir">The address of a buffer that receives the name of the working directory.</param>
    <param name="cch">The maximum number of characters to copy to the buffer pointed to by the <i>pszDir</i> parameter. The name of the working directory is truncated if it is longer than the maximum specified by this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.Resolve">
    <summary>Attempts to find the target of a Shell link, even if it has been moved or renamed.</summary>
    <param name="hwnd">A handle to the window that the Shell will use as the parent for a dialog box. The Shell displays the dialog box if it needs to prompt the user for more information while resolving a Shell link.</param>
    <param name="fFlags">
      <para>Action flags. This parameter can be a combination of the following values.</para>
      <h4>SLR_NO_UI (0x0001)</h4>
      <para>0x0001. Do not display a dialog box if the link cannot be resolved. When <b>SLR_NO_UI</b> is set, the high-order word of <i>fFlags</i> can be set to a time-out value that specifies the maximum amount of time to be spent resolving the link. The function returns if the link cannot be resolved within the time-out duration. If the high-order word is set to zero, the time-out duration will be set to the default value of 3,000 milliseconds (3 seconds). To specify a value, set the high word of <i>fFlags</i> to the desired time-out duration, in milliseconds.</para>
      <h4>SLR_ANY_MATCH (0x0002)</h4>
      <para>0x0002. Not used.</para>
      <h4>SLR_UPDATE (0x0004)</h4>
      <para>0x0004. If the link object has changed, update its path and list of identifiers. If <b>SLR_UPDATE</b> is set, you do not need to call <see cref="IPersistFile.IsDirty" /> to determine whether the link object has changed.</para>
      <h4>SLR_NOUPDATE (0x0008)</h4>
      <para>0x0008. Do not update the link information.</para>
      <h4>SLR_NOSEARCH (0x0010)</h4>
      <para>0x0010. Do not execute the search heuristics.</para>
      <h4>SLR_NOTRACK (0x0020)</h4>
      <para>0x0020. Do not use distributed link tracking.</para>
      <h4>SLR_NOLINKINFO (0x0040)</h4>
      <para>0x0040. Disable distributed link tracking. By default, distributed link tracking tracks removable media across multiple devices based on the volume name. It also uses the UNC path to track remote file systems whose drive letter has changed. Setting <b>SLR_NOLINKINFO</b> disables both types of tracking.</para>
      <h4>SLR_INVOKE_MSI (0x0080)</h4>
      <para>0x0080. Call the Windows Installer.</para>
      <h4>SLR_NO_UI_WITH_MSG_PUMP (0x0101)</h4>
      <para>0x0101. <b>Windows XP and later</b>.</para>
      <h4>SLR_OFFER_DELETE_WITHOUT_FILE (0x0200)</h4>
      <para>0x0200. <b>Windows 7 and later</b>. Offer the option to delete the shortcut when this method is unable to resolve it, even if the shortcut is not a shortcut to a file.</para>
      <h4>SLR_KNOWNFOLDER (0x0400)</h4>
      <para>0x0400. <b>Windows 7 and later</b>. Report as dirty if the target is a known folder and the known folder was redirected. This only works if the original target path was a file system path or ID list and not an aliased known folder ID list.</para>
      <h4>SLR_MACHINE_IN_LOCAL_TARGET (0x0800)</h4>
      <para>0x0800. <b>Windows 7 and later</b>. Resolve the computer name in UNC targets that point to a local computer. This value is used with <see cref="SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET" />.</para>
      <h4>SLR_UPDATE_MACHINE_AND_SID (0x1000)</h4>
      <para>0x1000. <b>Windows 7 and later</b>. Update the computer GUID and user SID if necessary.</para>
      <h5>- fFlags.SLR_ANY_MATCH (0x0002)</h5>
      <para>0x0002. Not used.</para>
      <h5>- fFlags.SLR_INVOKE_MSI (0x0080)</h5>
      <para>0x0080. Call the Windows Installer.</para>
      <h5>- fFlags.SLR_KNOWNFOLDER (0x0400)</h5>
      <para>0x0400. <b>Windows 7 and later</b>. Report as dirty if the target is a known folder and the known folder was redirected. This only works if the original target path was a file system path or ID list and not an aliased known folder ID list.</para>
      <h5>- fFlags.SLR_MACHINE_IN_LOCAL_TARGET (0x0800)</h5>
      <para>0x0800. <b>Windows 7 and later</b>. Resolve the computer name in UNC targets that point to a local computer. This value is used with <see cref="SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET" />.</para>
      <h5>- fFlags.SLR_NOLINKINFO (0x0040)</h5>
      <para>0x0040. Disable distributed link tracking. By default, distributed link tracking tracks removable media across multiple devices based on the volume name. It also uses the UNC path to track remote file systems whose drive letter has changed. Setting <b>SLR_NOLINKINFO</b> disables both types of tracking.</para>
      <h5>- fFlags.SLR_NOSEARCH (0x0010)</h5>
      <para>0x0010. Do not execute the search heuristics.</para>
      <h5>- fFlags.SLR_NOTRACK (0x0020)</h5>
      <para>0x0020. Do not use distributed link tracking.</para>
      <h5>- fFlags.SLR_NOUPDATE (0x0008)</h5>
      <para>0x0008. Do not update the link information.</para>
      <h5>- fFlags.SLR_NO_UI (0x0001)</h5>
      <para>0x0001. Do not display a dialog box if the link cannot be resolved. When <b>SLR_NO_UI</b> is set, the high-order word of <i>fFlags</i> can be set to a time-out value that specifies the maximum amount of time to be spent resolving the link. The function returns if the link cannot be resolved within the time-out duration. If the high-order word is set to zero, the time-out duration will be set to the default value of 3,000 milliseconds (3 seconds). To specify a value, set the high word of <i>fFlags</i> to the desired time-out duration, in milliseconds.</para>
      <h5>- fFlags.SLR_NO_UI_WITH_MSG_PUMP (0x0101)</h5>
      <para>0x0101. <b>Windows XP and later</b>.</para>
      <h5>- fFlags.SLR_OFFER_DELETE_WITHOUT_FILE (0x0200)</h5>
      <para>0x0200. <b>Windows 7 and later</b>. Offer the option to delete the shortcut when this method is unable to resolve it, even if the shortcut is not a shortcut to a file.</para>
      <h5>- fFlags.SLR_UPDATE (0x0004)</h5>
      <para>0x0004. If the link object has changed, update its path and list of identifiers. If <b>SLR_UPDATE</b> is set, you do not need to call <see cref="IPersistFile.IsDirty" /> to determine whether the link object has changed.</para>
      <h5>- fFlags.SLR_UPDATE_MACHINE_AND_SID (0x1000)</h5>
      <para>0x1000. <b>Windows 7 and later</b>. Update the computer GUID and user SID if necessary.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetArguments">
    <summary>Sets the command-line arguments for a Shell link object.</summary>
    <param name="pszArgs">A pointer to a buffer that contains the new command-line arguments. In the case of a Unicode string, there is no limitation on maximum string length. In the case of an ANSI string, the maximum length of the returned string varies depending on the version of Windows—MAX_PATH prior to Windows 2000 and INFOTIPSIZE (defined in Commctrl.h) in Windows 2000 and later.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetDescription">
    <summary>Sets the description for a Shell link object. The description can be any application-defined string.</summary>
    <param name="pszName">A pointer to a buffer containing the new description string.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetHotkey">
    <summary>Sets a keyboard shortcut (hot key) for a Shell link object.</summary>
    <param name="wHotkey">The new keyboard shortcut. The virtual key code is in the low-order byte, and the modifier flags are in the high-order byte. The modifier flags can be a combination of the values specified in the description of the <see cref="IShellLink.GetHotkey" /> method.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetIconLocation">
    <summary>Sets the location (path and index) of the icon for a Shell link object.</summary>
    <param name="pszIconPath">The address of a buffer to contain the path of the file containing the icon.</param>
    <param name="iIcon">The index of the icon.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetIDList">
    <summary>Sets the pointer to an item identifier list (PIDL) for a Shell link object.</summary>
    <param name="pidl">The object's fully qualified PIDL.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetPath">
    <summary>Sets the path and file name for the target of a Shell link object.</summary>
    <param name="pszFile">The address of a buffer that contains the new path.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetRelativePath">
    <summary>Sets the relative path to the Shell link object.</summary>
    <param name="pszPathRel">The address of a buffer that contains the fully-qualified path of the shortcut file, relative to which the shortcut resolution should be performed. It should be a file name, not a folder name.</param>
    <param name="dwReserved">Reserved. Set this parameter to zero.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetShowCmd">
    <summary>Sets the show command for a Shell link object. The show command sets the initial show state of the window.</summary>
    <param name="iShowCmd">
      <para>Command. <b>SetShowCmd</b> accepts one of the following <see cref="ShowWindow" /> commands.</para>
      <h4>SW_SHOWNORMAL</h4>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
      <h4>SW_SHOWMAXIMIZED</h4>
      <para>Activates the window and displays it as a maximized window.</para>
      <h4>SW_SHOWMINNOACTIVE</h4>
      <para>Displays the window in its minimized state, leaving the currently active window as active.</para>
      <h5>- iShowCmd.SW_SHOWMAXIMIZED</h5>
      <para>Activates the window and displays it as a maximized window.</para>
      <h5>- iShowCmd.SW_SHOWMINNOACTIVE</h5>
      <para>Displays the window in its minimized state, leaving the currently active window as active.</para>
      <h5>- iShowCmd.SW_SHOWNORMAL</h5>
      <para>Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink.SetWorkingDirectory">
    <summary>Sets the name of the working directory for a Shell link object.</summary>
    <param name="pszDir">The address of a buffer that contains the name of the new working directory.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellLink">
    <summary>Exposes methods that create, modify, and resolve Shell links.</summary>
  </member>
  <member name="IShellLink">
    <summary>Exposes methods that create, modify, and resolve Shell links.</summary>
  </member>
</doc>