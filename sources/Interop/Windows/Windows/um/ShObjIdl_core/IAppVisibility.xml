<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAppVisibility.Advise">
    <summary>
      <para>Registers an advise sink object to receive notification of changes to the display.</para>
    </summary>
    <param name="pCallback">
      <para>The client's advise sink that receives outgoing calls from the connection point.</para>
    </param>
    <param name="pdwCookie">
      <para>A token that uniquely identifies this connection. Use this token to delete the connection by passing it to the <see cref="Unadvise" /> method.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <i>pdwCookie</i> is <b>NULL</b>.
</description>
        </item>
      </list>
    </returns>
    <seealso cref="IAppVisibility" />
    <seealso cref="IAppVisibilityEvents" />
  </member>
  <member name="IAppVisibility.GetAppVisibilityOnMonitor">
    <summary>
      <para>Queries the current mode of the specified monitor.</para>
    </summary>
    <param name="hMonitor">
      <para>The monitor to query.</para>
    </param>
    <param name="pMode">
      <para>The current mode of <i>hMonitor</i>.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <i>pMode</i> is <b>NULL</b>.
</description>
        </item>
      </list>
    </returns>
    <seealso cref="IAppVisibility" />
    <seealso cref="MONITOR_APP_VISIBILITY" />
  </member>
  <member name="IAppVisibility.IsLauncherVisible">
    <summary>
      <para>Gets a value that indicates whether the Start screen is displayed.</para>
    </summary>
    <param name="pfVisible">
      <para>
        <b>TRUE</b> if the Start screen is displayed; otherwise, <b>FALSE.</b></para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <i>pfVisible</i> is <b>NULL</b>.
</description>
        </item>
      </list>
    </returns>
    <seealso cref="IAppVisibility" />
  </member>
  <member name="IAppVisibility.Unadvise">
    <summary>
      <para>Cancels a connection that was previously established by using <see cref="Advise" />.</para>
    </summary>
    <param name="dwCookie">
      <para>A token that uniquely identifies the connection to cancel, which is provided by a previous call to to the <see cref="Advise" /> method.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="IAppVisibility" />
    <seealso cref="IAppVisibilityEvents" />
  </member>
  <member name="IAppVisibility">
    <summary>
      <para>Provides functionality to determine whether the display is showing Universal Windows Platform apps.</para>
    </summary>
    <remarks>
      <para>Use the <b>IAppVisibility</b> interface to determine when a display is showing Universal Windows Platform apps. This is useful for accessibility tools and other applications.</para>
      <para>Use the <see cref="IsLauncherVisible" />  method to determine when  the Start screen is visible.</para>
      <para>Don't implement the <b>IAppVisibility</b> interface. Instead, call the <see cref="CoCreateInstance" /> function with <b>CLSID_AppVisibility</b>.</para>
    </remarks>
    <seealso cref="IAppVisibilityEvents" />
    <seealso cref="IUnknown" />
    <seealso cref="MONITOR_APP_VISIBILITY" />
  </member>
</doc>