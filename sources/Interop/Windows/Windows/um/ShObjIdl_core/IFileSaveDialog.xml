<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFileSaveDialog.ApplyProperties">
    <summary>Applies a set of properties to an item using the Shell's copy engine.</summary>
    <param name="psi">Pointer to the <see cref="IShellItem" /> that represents the file being saved. This is usually the item retrieved by <see cref="GetResult" />.</param>
    <param name="pStore">Pointer to the <see cref="IPropertyStore" /> that represents the property values to be applied to the file. This can be the property store returned by <see cref="IFileSaveDialog.GetProperties" />.</param>
    <param name="hwnd">The handle of the application window.</param>
    <param name="pSink">Pointer to an optional <b>IFileOperationProgressSink</b> that the calling application can use if they want to be notified of the progress of the property stamping. This value may be <b>NULL</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileSaveDialog.GetProperties">
    <summary>Retrieves the set of property values for a saved item or an item in the process of being saved.</summary>
    <param name="ppStore">Address of a pointer to an <see cref="IPropertyStore" /> that receives the property values.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileSaveDialog.SetCollectedProperties">
    <summary>Specifies which properties will be collected in the save dialog.</summary>
    <param name="pList">Pointer to the interface that represents the list of properties to collect. This parameter can be <b>NULL</b>.</param>
    <param name="fAppendDefault">
      <b>TRUE</b> to show default properties for the currently selected filetype in addition to the properties specified by <i>pList</i>. <b>FALSE</b> to show only properties specified by <i>pList</i>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileSaveDialog.SetProperties">
    <summary>Provides a property store that defines the default values to be used for the item being saved.</summary>
    <param name="pStore">Pointer to the interface that represents the property store that contains the associated metadata.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileSaveDialog.SetSaveAsItem">
    <summary>Sets an item to be used as the initial entry in a <b>Save As</b> dialog.</summary>
    <param name="psi">Pointer to an <see cref="IShellItem" /> that represents the item.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileSaveDialog">
    <summary>Extends the <see cref="IFileDialog" /> interface by adding methods specific to the save dialog, which include those that provide support for the collection of metadata to be persisted with the file.</summary>
  </member>
</doc>