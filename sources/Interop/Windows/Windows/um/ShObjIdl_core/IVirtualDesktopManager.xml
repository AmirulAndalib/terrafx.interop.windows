<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IVirtualDesktopManager.GetWindowDesktopId">
    <summary>
      <para>Gets the identifier for the virtual desktop hosting the provided top-level window.</para>
    </summary>
    <param name="topLevelWindow">
      <para>The top level window for the virtual desktop you are interested in.</para>
    </param>
    <param name="desktopId">
      <para>The identifier for the virtual desktop hosting the <i>topLevelWindow</i>.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="IVirtualDesktopManager" />
  </member>
  <member name="IVirtualDesktopManager.IsWindowOnCurrentVirtualDesktop">
    <summary>
      <para>Indicates whether the provided window is on the currently active virtual desktop.</para>
    </summary>
    <param name="topLevelWindow">
      <para>The window of interest.</para>
    </param>
    <param name="onCurrentDesktop">
      <para>
        <b>True</b> if the <i>topLevelWindow</i> is on the currently active virtual desktop, otherwise <b>false</b>.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="IVirtualDesktopManager" />
  </member>
  <member name="IVirtualDesktopManager.MoveWindowToDesktop">
    <summary>
      <para>Moves a window to the specified virtual desktop.</para>
    </summary>
    <param name="topLevelWindow">
      <para>The window to move.</para>
    </param>
    <param name="desktopId">
      <para>The identifier of the virtual desktop to move the <see cref="GetWindowDesktopId" /> to get a window's identifier.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="IVirtualDesktopManager" />
  </member>
  <member name="IVirtualDesktopManager">
    <summary>
      <para>Exposes methods that enable an application to interact with groups of windows that form virtual workspaces. This interface is implemented by <a href="https://docs.microsoft.com//windows/desktop/shell/virtualdesktopmanager">VirtualDesktopManager</a>, a COM class identified by CLSID_VirtualDesktopManager. Use CoCreateInstance(CLSID_VirtualDesktopManager) to get an instance of this object.</para>
    </summary>
    <remarks>
      <para>The user can group a collection of windows together to create a virtual desktop. Every window is considered to be part of a virtual desktop. When one virtual desktop is hidden, all of the windows associated with it are also hidden. This enables the user to create multiple working environments and to be able to switch between them. Similarly, when a virtual desktop is selected to be active, the windows associated with that virtual desktop are displayed on the screen.</para>
      <para>To support this concept, applications should avoid automatically switching the user from one virtual desktop to another. Only the user should instigate that change. In order to support this, newly created windows should appear on the currently active virtual desktop. In addition, if an application can reuse currently active windows, it should only reuse windows if they are on the currently active virtual desktop. Otherwise, a new window should be created.</para>
      <para>
        <img alt="Virtual desktop visualization" src="https://docs.microsoft.com/windows/win32/api/ShObjIdl_core/images/VirtualDesktops.png" />
      </para>
      <para>In the above image, the user has two virtual desktops and <b>VD2</b> is the currently active virtual desktop. If the user clicks a link in an outlook message, there's a URI activation that should open the link in an Internet Explorer window. If the user has configured IE to open links in the current window, it would normally use the currently open window. However, in this case, IE is on an inactive virtual desktop. In this scenario, IE should create a new window in the currently active virtual desktop.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/shell/virtualdesktopmanager">VirtualDesktopManager</seealso>
  </member>
</doc>