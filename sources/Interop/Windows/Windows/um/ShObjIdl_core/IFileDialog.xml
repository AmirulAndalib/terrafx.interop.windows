<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFileDialog.AddPlace">
    <summary>Adds a folder to the list of places available for the user to open or save items.</summary>
    <param name="psi">A pointer to an <see cref="IShellItem" /> that represents the folder to be made available to the user. This can only be a folder.</param>
    <param name="fdap">Specifies where the folder is placed within the list. See <see cref="FDAP" />.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.Advise">
    <summary>Assigns an event handler that listens for events coming from the dialog.</summary>
    <param name="pfde">A pointer to an <see cref="IFileDialogEvents" /> implementation that will receive events from the dialog.</param>
    <param name="pdwCookie">A pointer to a <b>DWORD</b> that receives a value identifying this event handler. When the client is finished with the dialog, that client must call the <see cref="IFileDialog.Unadvise" /> method with this value.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.ClearClientData">
    <summary>Instructs the dialog to clear all persisted state information.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.Close">
    <summary>Closes the dialog.</summary>
    <param name="hr">The code that will be returned by <see cref="Show" /> to indicate that the dialog was closed before a selection was made.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetCurrentSelection">
    <summary>Gets the user's current selection in the dialog.</summary>
    <param name="ppsi">The address of a pointer to the interface that represents the item currently selected in the dialog. This item can be a file or folder selected in the view window, or something that the user has entered into the dialog's edit box. The latter case may require a parsing operation (cancelable by the user) that blocks the current thread.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetFileName">
    <summary>Retrieves the text currently entered in the dialog's <b>File name</b> edit box.</summary>
    <param name="pszName">The address of a pointer to a buffer that, when this method returns successfully, receives the text.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetFileTypeIndex">
    <summary>Gets the currently selected file type.</summary>
    <param name="piFileType">
      <para>A pointer to a <b>UINT</b> value that receives the index of the selected file type in the file type array passed to <see cref="IFileDialog.SetFileTypes" /> in its <i>cFileTypes</i> parameter.</para>
      <div>
        <b>Note</b>  This is a one-based index rather than zero-based.</div>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetFolder">
    <summary>Gets either the folder currently selected in the dialog, or, if the dialog is not currently displayed, the folder that is to be selected when the dialog is opened.</summary>
    <param name="ppsi">The address of a pointer to the interface that represents the folder.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetOptions">
    <summary>Gets the current flags that are set to control dialog behavior.</summary>
    <param name="pfos">When this method returns successfully, points to a value made up of one or more of the <see cref="FILEOPENDIALOGOPTIONS" /> values.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.GetResult">
    <summary>Gets the choice that the user made in the dialog.</summary>
    <param name="ppsi">The address of a pointer to an <see cref="IShellItem" /> that represents the user's choice.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetClientGuid">
    <summary>Enables a calling application to associate a GUID with a dialog's persisted state.</summary>
    <param name="guid">The GUID to associate with this dialog state.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetDefaultExtension">
    <summary>Sets the default extension to be added to file names.</summary>
    <param name="pszDefaultExtension">A pointer to a buffer that contains the extension text. This string should not include a leading period. For example, "jpg" is correct, while ".jpg" is not.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetDefaultFolder">
    <summary>Sets the folder used as a default if there is not a recently used folder value available.</summary>
    <param name="psi">A pointer to the interface that represents the folder.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetFileName">
    <summary>Sets the file name that appears in the <b>File name</b> edit box when that dialog box is opened.</summary>
    <param name="pszName">A pointer to the name of the file.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetFileNameLabel">
    <summary>Sets the text of the label next to the file name edit box.</summary>
    <param name="pszLabel">A pointer to a buffer that contains the label text.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetFileTypeIndex">
    <summary>Sets the file type that appears as selected in the dialog.</summary>
    <param name="iFileType">The index of the file type in the file type array passed to <see cref="IFileDialog.SetFileTypes" /> in its <i>cFileTypes</i> parameter. Note that this is a one-based index, not zero-based.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetFileTypes">
    <summary>Sets the file types that the dialog can open or save.</summary>
    <param name="cFileTypes">The number of elements in the array specified by <i>rgFilterSpec</i>.</param>
    <param name="rgFilterSpec">A pointer to an array of <see cref="COMDLG_FILTERSPEC" /> structures, each representing a file type.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="SetFileTypes" /> has already been called.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <b>FOS_PICKFOLDERS</b> flag was set in the <see cref="IFileDialog.SetOptions" /> method.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>rgFilterSpec</i> parameter is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFileDialog.SetFolder">
    <summary>Sets a folder that is always selected when the dialog is opened, regardless of previous user action.</summary>
    <param name="psi">A pointer to the interface that represents the folder.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetOkButtonLabel">
    <summary>Sets the text of the <b>Open</b> or <b>Save</b> button.</summary>
    <param name="pszText">A pointer to a buffer that contains the button text.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetOptions">
    <summary>Sets flags to control the behavior of the dialog.</summary>
    <param name="fos">One or more of the <see cref="FILEOPENDIALOGOPTIONS" /> values.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.SetTitle">
    <summary>Sets the title of the dialog.</summary>
    <param name="pszTitle">A pointer to a buffer that contains the title text.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog.Unadvise">
    <summary>Removes an event handler that was attached through the <see cref="IFileDialog.Advise" /> method.</summary>
    <param name="dwCookie">The <b>DWORD</b> value that represents the event handler. This value is obtained through the <i>pdwCookie</i> parameter of the <see cref="IFileDialog.Advise" /> method.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialog">
    <summary>Exposes methods that initialize, show, and get results from the common file dialog.</summary>
  </member>
</doc>