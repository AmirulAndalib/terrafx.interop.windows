<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IShellFolder2.BindToObject">
    <summary>Retrieves a handler, typically the Shell folder object that implements <see cref="IShellFolder" /> for a particular item. Optional parameters that control the construction of the handler are passed in the bind context.</summary>
    <param name="pidl">The address of an <see cref="ITEMIDLIST" /> structure (PIDL) that identifies the subfolder. This value can refer to an item at any level below the parent folder in the namespace hierarchy. The structure contains one or more <see cref="SHITEMID" /> structures, followed by a terminating <b>NULL</b>.</param>
    <param name="pbc">
      <para>A pointer to an <see cref="IBindCtx" /> interface on a bind context object that can be used to pass parameters to the construction of the handler. If this parameter is not used, set it to <b>NULL</b>. Because support for this parameter is optional for folder object implementations, some folders may not support the use of bind contexts.</para>
      <para>Information that can be provided in the bind context includes a <see cref="BIND_OPTS" /> structure that includes a <b>grfMode</b> member that indicates the access mode when binding to a stream handler. Other parameters can be set and discovered using <see cref="IBindCtx.RegisterObjectParam" /> and <see cref="IBindCtx.GetObjectParam" />.</para>
    </param>
    <param name="riid">The identifier of the interface to return. This may be <b>IID_IShellFolder</b>, <b>IID_IStream</b>, or any other interface that identifies a particular handler.</param>
    <param name="ppv">When this method returns, contains the address of a pointer to the requested interface. If an error occurs, a <b>NULL</b> pointer is returned at this address.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.BindToStorage">
    <summary>Requests a pointer to an object's storage interface.</summary>
    <param name="pidl">The address of an <see cref="ITEMIDLIST" /> structure that identifies the subfolder relative to its parent folder. The structure must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero.</param>
    <param name="pbc">The optional address of an <see cref="IBindCtx" /> interface on a bind context object to be used during this operation. If this parameter is not used, set it to <b>NULL</b>. Because support for <i>pbc</i> is optional for folder object implementations, some folders may not support the use of bind contexts.</param>
    <param name="riid">The IID of the requested storage interface. To retrieve an <see cref="IStream" />, <see cref="IStorage" />, or <see cref="IPropertySetStorage" /> interface pointer, set <i>riid</i> to <b>IID_IStream</b>, <b>IID_IStorage</b>, or <b>IID_IPropertySetStorage</b>, respectively.</param>
    <param name="ppv">The address that receives the interface pointer specified by <i>riid</i>. If an error occurs, a <b>NULL</b> pointer is returned in this address.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.CompareIDs">
    <summary>Determines the relative order of two file objects or folders, given their item identifier lists.</summary>
    <param name="lParam">
      <para>A value that specifies how the comparison should be performed.</para>
      <para>The lower sixteen bits of <i>lParam</i> define the sorting rule. Most applications set the sorting rule to the default value of zero, indicating that the two items should be compared by name. The system does not define any other sorting rules. Some folder objects might allow calling applications to use the lower sixteen bits of <i>lParam</i> to specify folder-specific sorting rules. The rules and their associated <i>lParam</i> values are defined by the folder.</para>
      <para>When the system folder view object calls <b>IShellFolder.CompareIDs</b>, the lower sixteen bits of <i>lParam</i> are used to specify the column to be used for the comparison.</para>
      <para>The upper sixteen bits of <i>lParam</i> are used for flags that modify the sorting rule. The system currently defines these modifier flags.</para>
      <h4>SHCIDS_ALLFIELDS</h4>
      <para>
        <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/bb776779(v=vs.85)">Version 5.0</a>. Compare all the information contained in the <see cref="ITEMIDLIST" /> structure, not just the display names. This flag is valid only for folder objects that support the <see cref="IShellFolder2" /> interface. For instance, if the two items are files, the folder should compare their names, sizes, file times, attributes, and any other information in the structures. If this flag is set, the lower sixteen bits of <i>lParam</i> must be zero.</para>
      <h4>SHCIDS_CANONICALONLY</h4>
      <para>
        <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/bb776779(v=vs.85)">Version 5.0</a>. When comparing by name, compare the system names but not the display names. When this flag is passed, the two items are compared by whatever criteria the Shell folder determines are most efficient, as long as it implements a consistent sort function. This flag is useful when comparing for equality or when the results of the sort are not displayed to the user. This flag cannot be combined with other flags.</para>
    </param>
    <param name="pidl1">A pointer to the first item's <see cref="ITEMIDLIST" /> structure. It will be relative to the folder. This <b>ITEMIDLIST</b> structure can contain more than one element; therefore, the entire structure must be compared, not just the first element.</param>
    <param name="pidl2">A pointer to the second item's <see cref="ITEMIDLIST" /> structure. It will be relative to the folder. This <b>ITEMIDLIST</b> structure can contain more than one element; therefore, the entire structure must be compared, not just the first element.</param>
    <returns>
      <para>If this method is successful, the CODE field of the <b>HRESULT</b> contains one of the following values. For information regarding the extraction of the CODE field from the returned <b>HRESULT</b>, see Remarks. If this method is unsuccessful, it returns a COM error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Negative</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A negative return value indicates that the first item should precede the second (pidl1 &lt; pidl2).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Positive</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A positive return value indicates that the first item should follow the second (pidl1 &gt; pidl2).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Zero</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A return value of zero indicates that the two items are the same (pidl1 = pidl2).</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IShellFolder2.CreateViewObject">
    <summary>Requests an object that can be used to obtain information from or interact with a folder object.</summary>
    <param name="hwndOwner">A handle to the owner window. If you have implemented a custom folder view object, your folder view window should be created as a child of <i>hwndOwner</i>.</param>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>, typically IID_IShellView.</param>
    <param name="ppv">When this method returns successfully, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IShellView" />. See the Remarks section for more details.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.EnumObjects">
    <summary>Enables a client to determine the contents of a folder by creating an item identifier enumeration object and returning its <see cref="IEnumIDList" /> interface. The methods supported by that interface can then be used to enumerate the folder's contents.</summary>
    <param name="hwnd">If user input is required to perform the enumeration, this window handle should be used by the enumeration object as the parent window to take user input. An example would be a dialog box to ask for a password or prompt the user to insert a CD or floppy disk. If <i>hwndOwner</i> is set to <b>NULL</b>, the enumerator should not post any messages, and if user input is required, it should silently fail.</param>
    <param name="grfFlags">Flags indicating which items to include in the enumeration. For a list of possible values, see the <see cref="SHCONTF" /> enumerated type.</param>
    <param name="ppenumIDList">The address that receives a pointer to the <see cref="IEnumIDList" /> interface of the enumeration object created by this method. If an error occurs or no suitable subobjects are found, <i>ppenumIDList</i> is set to <b>NULL</b>.</param>
    <returns>Returns <code>S_OK</code> if successful, or an error value otherwise. Some implementations may also return <code>S_FALSE</code>, indicating that there are no children matching the <i>grfFlags</i> that were passed in. If <code>S_FALSE</code> is returned, <i>ppenumIDList</i> is set to <code>NULL</code>.</returns>
  </member>
  <member name="IShellFolder2.GetAttributesOf">
    <summary>Gets the attributes of one or more file or folder objects contained in the object represented by <see cref="IShellFolder" />.</summary>
    <param name="cidl">The number of items from which to retrieve attributes.</param>
    <param name="apidl">The address of an array of pointers to <see cref="ITEMIDLIST" /> structures, each of which uniquely identifies an item relative to the parent folder. Each <b>ITEMIDLIST</b> structure must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero.</param>
    <param name="rgfInOut">Pointer to a single <b>ULONG</b> value that, on entry, contains the bitwise <a href="https://docs.microsoft.com//windows/desktop/shell/sfgao">SFGAO</a> attributes that the calling application is requesting. On exit, this value contains the requested attributes that are common to all of the specified items.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.GetDisplayNameOf">
    <summary>Retrieves the display name for the specified file object or subfolder.</summary>
    <param name="pidl">PIDL that uniquely identifies the file object or subfolder relative to the parent folder.</param>
    <param name="uFlags">Flags used to request the type of display name to return. For a list of possible values, see the <see cref="SHGDNF" /> enumerated type.</param>
    <param name="pName">When this method returns, contains a pointer to a <see cref="STRRET" /> structure in which to return the display name. The type of name returned in this structure can be the requested type, but the Shell folder might return a different type.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.GetUIObjectOf">
    <summary>Gets an object that can be used to carry out actions on the specified file objects or folders.</summary>
    <param name="hwndOwner">A handle to the owner window that the client should specify if it displays a dialog box or message box.</param>
    <param name="cidl">The number of file objects or subfolders specified in the <i>apidl</i> parameter.</param>
    <param name="apidl">The address of an array of pointers to <see cref="ITEMIDLIST" /> structures, each of which uniquely identifies a file object or subfolder relative to the parent folder. Each item identifier list must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero.</param>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>. This can be any valid interface identifier that can be created for an item. The most common identifiers used by the Shell are listed in the comments at the end of this reference.</param>
    <param name="rgfReserved">Reserved.</param>
    <param name="ppv">When this method returns successfully, contains the interface pointer requested in <i>riid</i>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.ParseDisplayName">
    <summary>Translates the display name of a file object or a folder into an item identifier list.</summary>
    <param name="hwnd">A window handle. The client should provide a window handle if it displays a dialog or message box. Otherwise set <i>hwnd</i> to <b>NULL</b>.</param>
    <param name="pbc">
      <para>Optional. A pointer to a bind context used to pass parameters as inputs and outputs to the parsing function. These passed parameters are often specific to the data source and are documented by the data source owners. For example, the file system data source accepts the name being parsed (as a <see cref="WIN32_FIND_DATA" /> structure), using the <a href="https://docs.microsoft.com//windows/desktop/shell/str-constants">STR_FILE_SYS_BIND_DATA</a> bind context parameter. <a href="https://docs.microsoft.com//windows/desktop/shell/str-constants">STR_PARSE_PREFER_FOLDER_BROWSING</a> can be passed to indicate that URLs are parsed using the file system data source when possible. Construct a bind context object using <see cref="CreateBindCtx" /> and populate the values using <see cref="IBindCtx.RegisterObjectParam" />. See <b>Bind Context String Keys</b> for a complete list of these.</para>
      <para>If no data is being passed to or received from the parsing function, this value can be <b>NULL</b>.</para>
    </param>
    <param name="pszDisplayName">
      <para>A null-terminated Unicode string with the display name. Because each Shell folder defines its own parsing syntax, the form this string can take may vary. The desktop folder, for instance, accepts paths such as "C:\My Docs\My File.txt". It also will accept references to items in the namespace that have a GUID associated with them using the ".{GUID}" syntax. For example, to retrieve a fully qualified identifier list for the control panel from the desktop folder, you can use the following:</para>
      <code>.{CLSID for Control Panel}\.{CLSID for printers folder}</code>
    </param>
    <param name="pchEaten">A pointer to a <b>ULONG</b> value that receives the number of characters of the display name that was parsed. If your application does not need this information, set <i>pchEaten</i> to <b>NULL</b>, and no value will be returned.</param>
    <param name="ppidl">
      <para>When this method returns, contains a pointer to the PIDL for the object. The returned item identifier list specifies the item relative to the parsing folder. If the object associated with <i>pszDisplayName</i> is within the parsing folder, the returned item identifier list will contain only one <see cref="SHITEMID" /> structure. If the object is in a subfolder of the parsing folder, the returned item identifier list will contain multiple <b>SHITEMID</b> structures. If an error occurs, <b>NULL</b> is returned in this address.</para>
      <para>When it is no longer needed, it is the responsibility of the caller to free this resource by calling <see cref="CoTaskMemFree" />.</para>
    </param>
    <param name="pdwAttributes">The value used to query for file attributes. If not used, it should be set to <b>NULL</b>. To query for one or more attributes, initialize this parameter with the <a href="https://docs.microsoft.com//windows/desktop/shell/sfgao">SFGAO</a> flags that represent the attributes of interest. On return, those attributes that are true <i>and</i> were requested will be set.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.SetNameOf">
    <summary>Sets the display name of a file object or subfolder, changing the item identifier in the process.</summary>
    <param name="hwnd">A handle to the owner window of any dialog or message box that the client displays.</param>
    <param name="pidl">A pointer to an <see cref="ITEMIDLIST" /> structure that uniquely identifies the file object or subfolder relative to the parent folder. The structure must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero.</param>
    <param name="pszName">A pointer to a null-terminated string that specifies the new display name.</param>
    <param name="uFlags">Flags that indicate the type of name specified by the <i>pszName</i> parameter. For a list of possible values and combinations of values, see <see cref="SHGDNF" />.</param>
    <param name="ppidlOut">Optional. If specified, the address of a pointer to an <see cref="ITEMIDLIST" /> structure that receives the <b>ITEMIDLIST</b> of the renamed item. The caller requests this value by passing a non-null <i>ppidlOut</i>. Implementations of <b>IShellFolder.SetNameOf</b> must return a pointer to the new <b>ITEMIDLIST</b> in the <i>ppidlOut</i> parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.EnumSearches">
    <summary>Requests a pointer to an interface that allows a client to enumerate the available search objects.</summary>
    <param name="ppenum">The address of a pointer to an enumerator object's <see cref="IEnumExtraSearch" /> interface.</param>
    <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
  </member>
  <member name="IShellFolder2.GetDefaultColumn">
    <summary>Gets the default sorting and display columns.</summary>
    <param name="dwRes">Reserved. Set to zero.</param>
    <param name="pSort">A pointer to a value that receives the index of the default sorted column.</param>
    <param name="pDisplay">A pointer to a value that receives the index of the default display column.</param>
    <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
  </member>
  <member name="IShellFolder2.GetDefaultColumnState">
    <summary>Gets the default state for a specified column.</summary>
    <param name="iColumn">An integer that specifies the column number.</param>
    <param name="pcsFlags">
      <para>A pointer to a value that contains flags that indicate the default column state. This parameter can include a combination of the following flags.</para>
      <h4>SHCOLSTATE_TYPE_STR</h4>
      <para>A string.</para>
      <h4>SHCOLSTATE_TYPE_INT</h4>
      <para>An integer.</para>
      <h4>SHCOLSTATE_TYPE_DATE</h4>
      <para>A date.</para>
      <h4>SHCOLSTATE_ONBYDEFAULT</h4>
      <para>Should be shown by default in the Windows Explorer Details view.</para>
      <h4>SHCOLSTATE_SLOW</h4>
      <para>Recommends that the folder view extract column information asynchronously, on a background thread, because extracting this information can be time consuming.</para>
      <h4>SHCOLSTATE_EXTENDED</h4>
      <para>Provided by a handler, not the folder object.</para>
      <h4>SHCOLSTATE_SECONDARYUI</h4>
      <para>Not displayed in the shortcut menu, but listed in the More dialog box.</para>
      <h4>SHCOLSTATE_HIDDEN</h4>
      <para>Not displayed in the user interface.</para>
      <h4>SHCOLSTATE_PREFER_VARCMP</h4>
      <para>Uses default sorting rather than <see cref="CompareIDs" /> to get the sort order.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.GetDefaultSearchGUID">
    <summary>Returns the globally unique identifier (GUID) of the default search object for the folder.</summary>
    <param name="pguid">The GUID of the default search object.</param>
    <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
  </member>
  <member name="IShellFolder2.GetDetailsEx">
    <summary>Gets detailed information, identified by a property set identifier (FMTID) and a property identifier (PID), on an item in a Shell folder.</summary>
    <param name="pidl">A PIDL of the item, relative to the parent folder. This method accepts only single-level PIDLs. The structure must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero. This value cannot be <b>NULL</b>.</param>
    <param name="pscid">A pointer to an <a href="https://docs.microsoft.com//windows/desktop/shell/objects">SHCOLUMNID</a> structure that identifies the column.</param>
    <param name="pv">A pointer to a <b>VARIANT</b> with the requested information. The value is fully typed. The value returned for properties from the property system must conform to the type specified in that property definition's <a href="https://docs.microsoft.com//windows/desktop/properties/propdesc-schema-typeinfo">typeInfo</a> as the <i>legacyType</i> attribute.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.GetDetailsOf">
    <summary>Gets detailed information, identified by a column index, on an item in a Shell folder.</summary>
    <param name="pidl">PIDL of the item for which you are requesting information. This method accepts only single-level PIDLs. The structure must contain exactly one <see cref="SHITEMID" /> structure followed by a terminating zero. If this parameter is set to <b>NULL</b>, the title of the information field specified by <i>iColumn</i> is returned.</param>
    <param name="iColumn">The zero-based index of the desired information field. It is identical to the column number of the information as it is displayed in a Windows Explorer Details view.</param>
    <param name="psd">A pointer to a <see cref="SHELLDETAILS" /> structure that contains the information.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2.MapColumnToSCID">
    <summary>Converts a column to the appropriate property set ID (FMTID) and property ID (PID).</summary>
    <param name="iColumn">The column ID.</param>
    <param name="pscid">A pointer to an <a href="https://docs.microsoft.com//windows/desktop/shell/objects">SHCOLUMNID</a> structure containing the FMTID and PID.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellFolder2">
    <summary>Extends the capabilities of <see cref="IShellFolder" />. Its methods provide a variety of information about the contents of a Shell folder.</summary>
  </member>
</doc>