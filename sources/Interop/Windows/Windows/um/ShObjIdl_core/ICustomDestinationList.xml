<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICustomDestinationList.AbortList">
    <summary>Discontinues a Jump List building session initiated by <see cref="ICustomDestinationList.BeginList" /> without committing any changes.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICustomDestinationList.AddUserTasks">
    <summary>Specifies items to include in the <b>Tasks</b> category of a custom Jump List.</summary>
    <param name="poa">
      <para>A pointer to an <see cref="IObjectArray" /> that represents one or more <see cref="IShellLink" /> (or, more rarely, <see cref="IShellItem" />) objects that represent the tasks.</para>
      <div>
        <b>Note</b>  Any <see cref="IShellLink" /> used here must declare an argument list through <see cref="SetArguments" />. Adding an <b>IShellLink</b> object with no arguments to a custom category is not supported. A user cannot pin or unpin this type of item from a Jump List, nor can they be added or removed.</div>
    </param>
    <returns>Returns S_OK if successful, or an error value otherwise.</returns>
  </member>
  <member name="ICustomDestinationList.AppendCategory">
    <summary>Defines a custom category and the destinations that it contains, for inclusion in a custom Jump List.</summary>
    <param name="pszCategory">
      <para>A pointer to a string that contains the display name of the custom category. This string is shown in the category's header in the Jump List. The string can directly hold the display name or it can be an indirect string representation, such as "@shell32.dll,-1324", to use a stored string. An indirect string enables the category header to be displayed in the user's selected language.</para>
      <div>
        <b>Note</b>  Each custom category must have a unique name. Duplicate category names will cause presentation issues in the Jump List.</div>
    </param>
    <param name="poa">
      <para>A pointer to an <see cref="IObjectArray" /> that represents one or more <see cref="IShellItem" /> objects that represent the destinations in the category. Some destinations in the list might also be represented by <see cref="IShellLink" /> objects, although less often.</para>
      <div>
        <b>Note</b>  Any <see cref="IShellLink" /> used here must declare an argument list through <see cref="SetArguments" />. Adding an <b>IShellLink</b> object with no arguments to a custom category is not supported since a user cannot pin or unpin this type of item from a Jump List, nor can they be added or removed.</div>
    </param>
    <returns>
      <para>Returns S_OK if successful, or an error value otherwise.</para>
      <para>If the call to <b>AppendCategory</b> attempts to add an item that is in the removed destinations list retrieved by the call to <see cref="BeginList" /> that initiated the session, the call to <b>AppendCategory</b> fails.</para>
      <para>If <b>AppendCategory</b> attempts to add an <see cref="IShellItem" /> that the application is not registered to handle, the call fails.</para>
      <para>
        <b>AppendCategory</b> can fail if there is a privacy Group Policy or user privacy setting turned on. Custom categories contain user-specific items based on individual usage, which is not allowed under those privacy settings.</para>
      <para>A privacy Group Policy or user privacy setting will not cause a failure in any other <see cref="ICustomDestinationList" /> method. Tasks are not user-specific. <see cref="AppendKnownCategory" /> will not result in the display of the <b>Recent</b> or <b>Frequent</b> categories because they will have no data, but the method call will not return a failure code.</para>
      <para>In the case of a failure code in <b>AppendCategory</b> caused by privacy Group Policy or user privacy setting (E_ACCESSDENIED), the application should continue to update tasks and call <see cref="CommitList" />.</para>
      <para>If no file type registration was found for the associated application, <b>AppendCategory</b> returns HRESULT 0x80040F03. This can result from an application not registering the file type it is trying to add to the Jump List or from a problem in the registration, such as not providing the AppUserModelID when the application is using an explicit AppUserModelID.</para>
    </returns>
  </member>
  <member name="ICustomDestinationList.AppendKnownCategory">
    <summary>Specifies that the <b>Frequent</b> or <b>Recent</b> category should be included in a custom Jump List.</summary>
    <param name="category">
      <para>One of the following values that indicate which known category to add to the list:</para>
      <h4>KDC_FREQUENT (1)</h4>
      <para>0x1. Add the <b>Frequent</b> category.</para>
      <h4>KDC_RECENT (2)</h4>
      <para>0x2. Add the <b>Recent</b> category.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful, or an error value otherwise.</para>
      <para>If there is a privacy Group Policy or user privacy setting present, it can affect the result of this method. Categories that contain user-specific items based on individual usage are not allowed under those privacy settings. Due to this, the <b>Recent</b> or <b>Frequent</b> categories added through this method will have no data, and categories with no data are not displayed. However, in that situation, this method call will not result in a failure code.</para>
    </returns>
  </member>
  <member name="ICustomDestinationList.BeginList">
    <summary>Initiates a building session for a custom Jump List.</summary>
    <param name="pcMinSlots">
      <para>A pointer that, when this method returns, points to the current user setting for the <b>Number of recent items to display in Jump Lists</b> option in the <b>Taskbar and Start Menu Properties</b> window. The default value is 10. This is the maximum number of destinations that will be shown, and it is a total of all destinations, regardless of category. More destinations can be added, but they will not be shown in the UI.</para>
      <para>A Jump List will always show at least this many slots—destinations and, if there is room, tasks.</para>
      <para>This number does not include separators and section headers as long as the total number of separators and headers does not exceed four. Separators and section headers beyond the first four might reduce the number of destinations displayed if space is constrained. This number does not affect the standard command entries for pinning or unpinning, closing the window, or launching a new instance. It also does not affect tasks or pinned items, the number of which that can be displayed is based on the space available to the Jump List.</para>
    </param>
    <param name="riid">A reference to the IID of an interface to be retrieved in <i>ppv</i>, typically IID_IObjectArray, that will represent all items currently stored in the list of removed destinations for the application. This information is used to ensure that removed items are not part of the new Jump List.</param>
    <param name="ppv">When this method returns, contains the interface pointer requested in <i>riid</i>. This is typically an <see cref="IObjectArray" />, which represents a collection of <see cref="IShellItem" /> and <see cref="IShellLink" /> objects that represent the removed items.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICustomDestinationList.CommitList">
    <summary>Declares that the Jump List initiated by a call to <see cref="ICustomDestinationList.BeginList" /> is complete and ready for display.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICustomDestinationList.DeleteList">
    <summary>Deletes a custom Jump List for a specified application.</summary>
    <param name="pszAppID">A pointer to the AppUserModelID of the process whose taskbar button representation displays the custom Jump List. In the beta release of Windows 7, this AppUserModelID must be explicitly provided because this method is intended to be called from an uninstaller, which runs in a separate process. Because it is in a separate process, the system cannot reliably deduce the AppUserModelID. This restriction is expected to be removed in later releases.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICustomDestinationList.GetRemovedDestinations">
    <summary>Retrieves the current list of destinations that have been removed by the user from the existing Jump List that this custom Jump List is meant to replace.</summary>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>, typically IID_IObjectArray.</param>
    <param name="ppv">When this method returns, contains the interface pointer requested in <i>riid</i>. This is typically an <see cref="IObjectArray" />, which represents a collection of <see cref="IShellItem" /> or <see cref="IShellLink" /> objects that represent the items in the list of removed destinations.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICustomDestinationList.SetAppID">
    <summary>Specifies a unique Application User Model ID (AppUserModelID) for the application whose taskbar button will hold the custom Jump List built through the methods of this interface. This method is optional.</summary>
    <param name="pszAppID">A pointer to the AppUserModelID of the process or application whose taskbar representation receives the Jump List.</param>
    <returns>
      <para>Returns S_OK if successful, or an error value otherwise, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This method was called after <see cref="ICustomDestinationList.BeginList" />. The list-building process is already running with a particular AppUserModelID, either inferred by the system or set through a call to <see cref="SetAppID" /> before the call to <b>BeginList</b>. After a list-building operation is in progress, the AppUserModelID cannot be changed until after <see cref="CommitList" /> or <see cref="AbortList" /> has been called.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ICustomDestinationList">
    <summary>Exposes methods that allow an application to provide a custom Jump List, including destinations and tasks, for display in the taskbar.</summary>
  </member>
</doc>