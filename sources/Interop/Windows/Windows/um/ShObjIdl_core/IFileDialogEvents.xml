<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFileDialogEvents.OnFileOk">
    <summary>Called just before the dialog is about to return with a result.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <returns>Implementations should return <b>S_OK</b> to accept the current result in the dialog or <b>S_FALSE</b> to refuse it. In the case of <b>S_FALSE</b>, the dialog should remain open.</returns>
  </member>
  <member name="IFileDialogEvents.OnFolderChange">
    <summary>Called when the user navigates to a new folder.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialogEvents.OnFolderChanging">
    <summary>Called before <see cref="IFileDialogEvents.OnFolderChange" />. This allows the implementer to stop navigation to a particular location.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <param name="psiFolder">A pointer to an interface that represents the folder to which the dialog is about to navigate.</param>
    <returns>Returns S_OK if successful, or an error value otherwise. A return value of S_OK or E_NOTIMPL indicates that the folder change can proceed.</returns>
  </member>
  <member name="IFileDialogEvents.OnOverwrite">
    <summary>Called from the save dialog when the user chooses to overwrite a file.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <param name="psi">A pointer to the interface that represents the item that will be overwritten.</param>
    <param name="pResponse">A pointer to a value from the <see cref="FDE_OVERWRITE_RESPONSE" /> enumeration indicating the response to the potential overwrite action.</param>
    <returns>The implementer should return E_NOTIMPL if this method is not implemented; S_OK or an appropriate error code otherwise.</returns>
  </member>
  <member name="IFileDialogEvents.OnSelectionChange">
    <summary>Called when the user changes the selection in the dialog's view.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialogEvents.OnShareViolation">
    <summary>Enables an application to respond to sharing violations that arise from Open or Save operations.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <param name="psi">A pointer to the interface that represents the item that has the sharing violation.</param>
    <param name="pResponse">A pointer to a value from the <see cref="FDE_SHAREVIOLATION_RESPONSE" /> enumeration indicating the response to the sharing violation.</param>
    <returns>The implementer should return E_NOTIMPL if this method is not implemented; S_OK or an appropriate error code otherwise.</returns>
  </member>
  <member name="IFileDialogEvents.OnTypeChange">
    <summary>Called when the dialog is opened to notify the application of the initial chosen filetype.</summary>
    <param name="pfd">A pointer to the interface that represents the dialog.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IFileDialogEvents">
    <summary>Exposes methods that allow notification of events within a common file dialog.</summary>
  </member>
</doc>