<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.EcClose">
    <summary>
      <para>The <b>EcClose</b> function closes a handle received from other Event Collector functions. Any handle returned by an event collector management API call must be closed using this call when the user is finished with the handle. The handle becomes invalid when this function is successfully called.</para>
    </summary>
    <param name="Object">
      <para>A valid open handle returned from an event collector management API call.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcDeleteSubscription">
    <summary>
      <para>The <b>EcDeleteSubscription</b> function deletes  an existing subscription that is specified by the <i>SubscriptionName</i> parameter.</para>
      <para>The function fails if the security descriptor of the subscription does not permit delete access for the calling process.</para>
      <para>If the subscription is active at the moment this API is called, then the subscription is deactivated.</para>
    </summary>
    <param name="SubscriptionName">
      <para>The subscription to be deleted.</para>
    </param>
    <param name="Flags">
      <para>Reserved, must be 0.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcEnumNextSubscription">
    <summary>
      <para>The <b>EcEnumNextSubscription</b> function continues the enumeration of the subscriptions registered on the local machine.</para>
    </summary>
    <param name="SubscriptionEnum">
      <para>The handle to the enumerator object that is returned from the <see cref="EcOpenSubscriptionEnum" /> function.</para>
    </param>
    <param name="SubscriptionNameBufferSize">
      <para>The size of the user-supplied buffer (in chars) to store the subscription name.</para>
    </param>
    <param name="SubscriptionNameBuffer">
      <para>The user-supplied buffer to store the subscription name.</para>
    </param>
    <param name="SubscriptionNameBufferUsed">
      <para>The size of the user-supplied buffer that is used by the function on successful return, or the size that is necessary to store the subscription name when the function fails with <b>ERROR_INSUFFICIENT_BUFFER</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcGetObjectArrayProperty">
    <summary>
      <para>The <b>EcGetObjectArrayProperty</b> function retrieves  property values from a handle to an array of event source properties. The array contains property values for the event sources of a subscription.</para>
    </summary>
    <param name="ObjectArray">
      <para>A handle to an array of properties for the event sources for a subscription. An  array handle that is returned by the <see cref="EcGetSubscriptionProperty" /> method when the <b>EcSubscriptionEventSources</b> value is passed into the <i>PropertyId</i> parameter.</para>
    </param>
    <param name="PropertyId">
      <para>The property identifier for properties in the array. Specify a value from the <see cref="EC_SUBSCRIPTION_PROPERTY_ID" /> enumeration. Get  the <b>Address</b>, <b>Enabled</b>, <b>UserName</b>, and <b>Password</b> properties in the array by specifying the <b>EcSubscriptionEventSourceAddress</b>, <b>EcSubscriptionEventSourceEnabled</b>, <b>EcSubscriptionEventSourceUserName</b>, or <b>EcSubscriptionEventSourcePassword</b> values.</para>
    </param>
    <param name="ArrayIndex">
      <para>The index of the array that specifies which event source to get the property from.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be 0.</para>
    </param>
    <param name="PropertyValueBufferSize">
      <para>The size of the buffer that contains the value of the property. The size must be at least the size of an <see cref="EC_VARIANT" /> value.</para>
    </param>
    <param name="PropertyValueBuffer">
      <para>The user-supplied buffer to store property value into.</para>
    </param>
    <param name="PropertyValueBufferUsed">
      <para>The size of the user-supplied buffer that is used by the function on successful return, or the size that is necessary to store the property value when the function fails with <b>ERROR_INSUFFICIENT_BUFFER</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>Arrays are zero-based, so the index for the first item in the array is 0.</para>
      <para>The Password property for an event source or the subscription cannot be retrieved. For security reasons, an empty string is returned for the property value and the last error will be set to <b>ERROR_ACCESS_DENIED</b>.</para>
      <para>A subscription can have multiple event sources, and each source can have an <b>Address</b>, <b>Enabled</b>, <b>UserName</b>, and <b>Password</b> property.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcGetObjectArrayProperty</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/displaying-the-properties-of-an-event-collector-subscription">Displaying the Properties of an Event Collector Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcGetObjectArraySize">
    <summary>
      <para>The <b>EcGetObjectArraySize</b> function retrieves the size (the number of indexes) of the array of property values for the event sources of a subscription.</para>
    </summary>
    <param name="ObjectArray">
      <para>A handle to the array from which to get the size. The array contains property values for the event sources of a subscription. The array handle is returned by the <see cref="EcGetSubscriptionProperty" /> method when the <b>EcSubscriptionEventSources</b> value is passed into the <i>PropertyId</i> parameter.</para>
    </param>
    <param name="ObjectArraySize">
      <para>The size of the array (the number of indexes).</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>Arrays are zero-based, so the index for the first item in the array is 0.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcGetObjectArraySize</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/displaying-the-properties-of-an-event-collector-subscription">Displaying the Properties of an Event Collector Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcGetSubscriptionProperty">
    <summary>
      <para>The <b>EcGetSubscriptionProperty</b> function retrieves a specific property value from a subscription object. The subscription object is specified by the handle passed into the <i>Subscription</i> parameter.</para>
    </summary>
    <param name="Subscription">
      <para>The handle to the subscription object.</para>
    </param>
    <param name="PropertyId">
      <para>An identifier that specifies which property of the subscription to get. Specify a value from the <see cref="EC_SUBSCRIPTION_PROPERTY_ID" /> enumeration. If you specify the <b>EcSubscriptionEventSources</b> value, then a handle to an array (<a href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-data-types">EC_OBJECT_ARRAY_PROPERTY_HANDLE</a>) will be returned. You can then use the <see cref="EcGetObjectArrayProperty" /> and <see cref="EcSetObjectArrayProperty" />  functions to get and set the Address, Enabled, UserName, and Password properties in the array.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be <b>NULL</b>.</para>
    </param>
    <param name="PropertyValueBufferSize">
      <para>The size of the user-supplied buffer to store the property value into.</para>
    </param>
    <param name="PropertyValueBuffer">
      <para>The user-supplied buffer to store property value into.</para>
    </param>
    <param name="PropertyValueBufferUsed">
      <para>The size of the user-supplied buffer that is used by the function on successful return, or the size that is necessary to store the property value when function fails with <b>ERROR_INSUFFICIENT_BUFFER</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcGetSubscriptionRunTimeStatus">
    <summary>
      <para>The <b>EcGetSubscriptionRunTimeStatus</b> function retrieves the run time status information for an event source of a subscription or the subscription itself. The subscription is specified by its name. If the event source is <b>NULL</b>, then the status for the overall subscription is retrieved.</para>
    </summary>
    <param name="SubscriptionName">
      <para>The name of the subscription to get the run time status information from.</para>
    </param>
    <param name="StatusInfoId">
      <para>An identifier that specifies which run time status information to get from the subscription. Specify a value from the <see cref="EC_SUBSCRIPTION_RUNTIME_STATUS_INFO_ID" /> enumeration. The <b>EcSubscriptionRunTimeStatusEventSources</b> value can be used to obtain the list of event sources associated with a subscription.</para>
    </param>
    <param name="EventSourceName">
      <para>The name of the event source to get the status from. Each subscription can have multiple event sources.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be <b>NULL</b>.</para>
    </param>
    <param name="StatusValueBufferSize">
      <para>The size of the user-supplied buffer that will hold the run time status information.</para>
    </param>
    <param name="StatusValueBuffer">
      <para>The user-supplied buffer that will hold the run time status information. The buffer will hold the appropriate value depending on the <see cref="EC_SUBSCRIPTION_RUNTIME_STATUS_INFO_ID" /> value passed into the <i>StatusInfoId</i> parameter.</para>
    </param>
    <param name="StatusValueBufferUsed">
      <para>The size of the user supplied buffer that is used by the function on successful return, or the size that is necessary to store the property value when function fails with <b>ERROR_INSUFFICIENT_BUFFER</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcInsertObjectArrayElement">
    <summary>
      <para>The <b>EcInsertObjectArrayElement</b> function inserts an empty object into an array of property values for the event sources of a subscription. The object is inserted at a specified array index.</para>
    </summary>
    <param name="ObjectArray">
      <para>A  handle to the array in which the object is inserted into. The array contains property values for the event sources of a subscription. The array handle is returned by the <see cref="EcGetSubscriptionProperty" /> method when the <b>EcSubscriptionEventSources</b> value is passed into the <i>Subscription</i> parameter.</para>
    </param>
    <param name="ArrayIndex">
      <para>An array index indicating where to insert the object.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>Arrays are zero-based, so the index for the first item in the array is 0.</para>
      <para>Use the <see cref="EcSetObjectArrayProperty" /> to set individual properties of an empty object inserted into the array specified in the <i>ObjectArray</i> parameter.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcInsertObjectArrayElement</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/adding-an-event-source-to-an-event-collector-subscription">Adding an Event Source to a Collector Initiated Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcOpenSubscription">
    <summary>
      <para>The <b>EcOpenSubscription</b> function is used to open an existing subscription or create a new subscription according to the flag value specified.</para>
    </summary>
    <param name="SubscriptionName">
      <para>Specifies the name of the subscription. The value provided for this parameter should be unique within the computer's scope.</para>
    </param>
    <param name="AccessMask">
      <para>An access mask that specifies the desired access rights to the subscription. Use the <a href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-constants">EC_READ_ACCESS</a> or <a href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-constants">EC_WRITE_ACCESS</a> constants to specify the access rights. The function fails if the security descriptor of the subscription does not permit the requested access for the calling process.</para>
    </param>
    <param name="Flags">
      <para>A value specifying whether a new or existing subscription will be opened. Use the <b>EC_CREATE_NEW</b>, <b>EC_OPEN_ALWAYS</b>, or <b>EC_OPEN_EXISTING</b> constants.</para>
    </param>
    <returns>
      <para>If the function succeeds, it returns a handle (<a href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-data-types">EC_HANDLE</a>) to a new subscription object. Returns <b>NULL</b> otherwise, in which case use the <see cref="GetLastError" /> function to obtain the error code.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcOpenSubscriptionEnum">
    <summary>
      <para>The <b>EcOpenSubscriptionEnum</b> function is creates a subscription enumerator to enumerate all registered subscriptions on the local machine.</para>
    </summary>
    <param name="Flags">
      <para>Reserved. Must be 0.</para>
    </param>
    <returns>
      <para>If the function succeeds, it returns a handle (<a href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-data-types">EC_HANDLE</a>) to a new subscription enumerator object. Returns <b>NULL</b> otherwise, in which case use the <see cref="GetLastError" /> function to obtain the error code.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcRemoveObjectArrayElement">
    <summary>
      <para>The <b>EcRemoveObjectArrayElement</b> function removes an element from an array of objects that contain property values for the event sources of a subscription.</para>
    </summary>
    <param name="ObjectArray">
      <para>A  handle to the array in which to remove the element. The array contains property values for the event sources of a subscription. The array handle is returned by the <see cref="EcGetSubscriptionProperty" /> method when the <b>EcSubscriptionEventSources</b> value is passed into the <i>Subscription</i> parameter.</para>
    </param>
    <param name="ArrayIndex">
      <para>The index of the element to remove from the array.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>Arrays are zero-based, so the index for the first item in the array is 0.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcRemoveObjectArrayElement</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/removing-an-event-source-from-an-event-collector-subscription">Removing an Event Source from a Collector Initiated Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcRetrySubscription">
    <summary>
      <para>The <b>EcRetrySubscription</b> function is used to retry connecting to the event source of a subscription that is not connected.</para>
    </summary>
    <param name="SubscriptionName">
      <para>The name of the subscription to which to connect.</para>
    </param>
    <param name="EventSourceName">
      <para>The name of the event source of the subscription. This parameter is optional and can be <b>NULL</b>. This parameter must be <b>NULL</b> when the subscription is source initiated.  If this parameter is <b>NULL</b>, the entire subscription will be retried.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>To retry a subscription for all the event sources of a subscription, use the <see cref="EcSaveSubscription" /> function instead of calling <b>EcRetrySubscription</b> on each event source individually.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcRetrySubscription</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/retrying-an-event-collector-subscription">Retrying an Event Collector Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcSaveSubscription">
    <summary>
      <para>The <b>EcSaveSubscription</b> function saves  subscription configuration information. This function should be called whenever new values are added or updated to the subscription by the <see cref="EcSetSubscriptionProperty" /> method. If the subscription is enabled, the subscription will be activated when it is saved.</para>
    </summary>
    <param name="Subscription">
      <para>The handle to the subscription object.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be <b>NULL</b>.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>To retry a subscription for all the event sources of a subscription, use the <b>EcSaveSubscription</b> function instead of calling <see cref="EcRetrySubscription" /> on each event source individually.</para>
      <para>The subscription will be active only if the collector service is running. The service must be set to automatically start and run after the computer is booted.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcSaveSubscription</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/creating-an-event-collector-subscription">Creating a Collector Initiated Subscription</a> or <a href="https://docs.microsoft.com//windows/desktop/WEC/creating-a-source-initiated-subscription">Creating a Source Initiated Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcSetObjectArrayProperty">
    <summary>
      <para>The <b>EcSetObjectArrayProperty</b> function sets a property value in an array of property values for the event sources of a subscription.</para>
    </summary>
    <param name="ObjectArray">
      <para>A handle to the array that contains the property value to set. The array contains property values for the event sources of a subscription. The array handle is returned by the <see cref="EcGetSubscriptionProperty" /> method when the <b>EcSubscriptionEventSources</b> value is passed into the <i>Subscription</i> parameter.</para>
    </param>
    <param name="PropertyId">
      <para>An identifier that specifies which property to set. Specify a value from the <see cref="EC_SUBSCRIPTION_PROPERTY_ID" /> enumeration. Set  the Address, Enabled, UserName, and Password properties in the array by specifying the <b>EcSubscriptionEventSourceAddress</b>, <b>EcSubscriptionEventSourceEnabled</b>, <b>EcSubscriptionEventSourceUserName</b>, or <b>EcSubscriptionEventSourcePassword</b> values.</para>
    </param>
    <param name="ArrayIndex">
      <para>The index of the  object in the array to set a property value on.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be 0.</para>
    </param>
    <param name="PropertyValue">
      <para>The value of the property.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <remarks>
      <para>Arrays are zero-based, so the index for the first item in the array is 0.</para>
      <h4>Examples</h4>
      <para>For example code using the <b>EcSetObjectArrayProperty</b> function, see <a href="https://docs.microsoft.com//windows/desktop/WEC/adding-an-event-source-to-an-event-collector-subscription">Adding an Event Source to a Collector Initiated Subscription</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
  <member name="Windows.EcSetSubscriptionProperty">
    <summary>
      <para>The <b>EcSetSubscriptionProperty</b> function sets new values or updates existing values of a subscription. New values set through this method will not be active unless they are saved by the <see cref="EcSaveSubscription" /> method.</para>
    </summary>
    <param name="Subscription">
      <para>The handle to the subscription object.</para>
    </param>
    <param name="PropertyId">
      <para>A value from the  <see cref="EC_SUBSCRIPTION_PROPERTY_ID" /> enumeration that specifies which property of the subscription to set.</para>
    </param>
    <param name="Flags">
      <para>Reserved. Must be 0.</para>
    </param>
    <param name="PropertyValue">
      <para>The value of the property to set for the indicated subscription property.</para>
    </param>
    <returns>
      <para>This function returns BOOL.</para>
    </returns>
    <seealso href="https://docs.microsoft.com//windows/desktop/WEC/windows-event-collector-functions">Windows Event Collector Functions</seealso>
  </member>
</doc>