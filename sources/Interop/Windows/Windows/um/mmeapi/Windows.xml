<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.auxGetDevCaps">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsA">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsW">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCaps">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsA">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsW">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCaps">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsA">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetDevCapsW">
    <summary>The <b>auxGetDevCaps</b> function retrieves the capabilities of a given auxiliary output device.</summary>
    <param name="uDeviceID">
      <para>Identifier of the auxiliary output device to be queried. Specify a valid device identifier (see the following comments section), or use the following constant:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>AUX_MAPPER</description>
          <description>Auxiliary audio mapper. The function returns an error if no auxiliary audio mapper is installed.</description>
        </listheader>
      </list>
    </param>
    <param name="pac">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbac">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd756711(v=vs.85)">AUXCAPS</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxGetNumDevs">
    <summary>The <b>auxGetNumDevs</b> function retrieves the number of auxiliary output devices present in the system.</summary>
    <returns>Returns the number of device. A return value of zero means that no devices are present or that an error occurred.</returns>
  </member>
  <member name="Windows.auxGetVolume">
    <summary>The <b>auxGetVolume</b> function retrieves the current volume setting of the specified auxiliary output device.</summary>
    <param name="uDeviceID">Identifier of the auxiliary output device to be queried.</param>
    <param name="pdwVolume">
      <para>Pointer to a variable to be filled with the current volume setting. The low-order word of this location contains the left channel volume setting, and the high-order word contains the right channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of the specified location contains the volume level.</para>
      <para>The full 16-bit setting(s) set with the <a href="https://docs.microsoft.com//previous-versions/dd756717(v=vs.85)">auxSetVolume</a> function are returned, regardless of whether the device supports the full 16 bits of volume-level control.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.auxOutMessage">
    <summary>The <b>auxOutMessage</b> function sends a message to the given auxiliary output device. This function also performs error checking on the device identifier passed as part of the message.</summary>
    <param name="uDeviceID">Identifier of the auxiliary output device to receive the message.</param>
    <param name="uMsg">Message to send.</param>
    <param name="dw1">Message parameter.</param>
    <param name="dw2">Message parameter.</param>
    <returns>Returns the message return value.</returns>
  </member>
  <member name="Windows.auxSetVolume">
    <summary>The <b>auxSetVolume</b> function sets the volume of the specified auxiliary output device.</summary>
    <param name="uDeviceID">Identifier of the auxiliary output device to be queried. Device identifiers are determined implicitly from the number of devices present in the system. Device identifier values range from zero to one less than the number of devices present. Use the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function to determine the number of auxiliary devices in the system.</param>
    <param name="dwVolume">
      <para>Specifies the new volume setting. The low-order word specifies the left-channel volume setting, and the high-order word specifies the right-channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of <i>dwVolume</i> specifies the volume level, and the high-order word is ignored.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.MEVT_EVENTPARM">
    <summary>The <b>MEVT_EVENTPARM</b> macro retrieves the event parameters or length from the value specified in the <b>dwEvent</b> member of a <a href="https://docs.microsoft.com//previous-versions/dd798448(v=vs.85)">MIDIEVENT</a> structure.</summary>
    <param name="x">Code for the MIDI event and the event parameters or length, as specified in the dwEvent member of the MIDIEVENT structure.</param>
  </member>
  <member name="Windows.MEVT_EVENTTYPE">
    <summary>The <b>MEVT_EVENTTYPE</b> macro retrieves the event type from the value specified in the <b>dwEvent</b> member of a <a href="https://docs.microsoft.com//previous-versions/dd798448(v=vs.85)">MIDIEVENT</a> structure.</summary>
    <param name="x">Code for the MIDI event and the event parameters or length, as specified in the dwEvent member of the MIDIEVENT structure.</param>
  </member>
  <member name="Windows.midiConnect">
    <summary>The <b>midiConnect</b> function connects a MIDI input device to a MIDI thru or output device, or connects a MIDI thru device to a MIDI output device.</summary>
    <param name="hmi">Handle to a MIDI input device or a MIDI thru device. (For thru devices, this handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.)</param>
    <param name="hmo">Handle to the MIDI output or thru device.</param>
    <param name="pReserved">Reserved; must be <b>NULL</b>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_NOTREADY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified input device is already connected to an output device.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiDisconnect">
    <summary>The <b>midiDisconnect</b> function disconnects a MIDI input device from a MIDI thru or output device, or disconnects a MIDI thru device from a MIDI output device.</summary>
    <param name="hmi">Handle to a MIDI input device or a MIDI thru device.</param>
    <param name="hmo">Handle to the MIDI output device to be disconnected.</param>
    <param name="pReserved">Reserved; must be <b>NULL</b>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following:.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInAddBuffer">
    <summary>The <b>midiInAddBuffer</b> function sends an input buffer to a specified opened MIDI input device. This function is used for system-exclusive messages.</summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <param name="pmh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure that identifies the buffer.</param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by <i>lpMidiInHdr</i> is still in the queue.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_UNPREPARED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by <i>lpMidiInHdr</i> has not been prepared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInClose">
    <summary>The <b>midiInClose</b> function closes the specified MIDI input device.</summary>
    <param name="hmi">Handle to the MIDI input device. If the function is successful, the handle is no longer valid after the call to this function.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffers are still in the queue.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCaps">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsA">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsW">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCaps">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsA">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsW">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCaps">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsA">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetDevCapsW">
    <summary>The <b>midiInGetDevCaps</b> function determines the capabilities of a specified MIDI input device.</summary>
    <param name="uDeviceID">Identifier of the MIDI input device. The device identifier varies from zero to one less than the number of devices present. This parameter can also be a properly cast device handle.</param>
    <param name="pmic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure that is filled with information about the capabilities of the device.</param>
    <param name="cbmic">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798451(v=vs.85)">MIDIINCAPS</a> structure. Only <i>cbMidiInCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiInCaps</i>. If <i>cbMidiInCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorText">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextA">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextW">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorText">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextA">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextW">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorText">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextA">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetErrorTextW">
    <summary>The <b>midiInGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetID">
    <summary>
      <para>The <b>midiInGetID</b> function gets the device identifier for the given MIDI input device.</para>
      <para>This function is supported for backward compatibility. New applications can cast a handle of the device rather than retrieving the device identifier.</para>
    </summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <param name="puDeviceID">Pointer to a variable to be filled with the device identifier.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hwi</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInGetNumDevs">
    <summary>The <b>midiInGetNumDevs</b> function retrieves the number of MIDI input devices in the system.</summary>
    <returns>Returns the number of MIDI input devices present in the system. A return value of zero means that there are no devices (not that there is no error).</returns>
  </member>
  <member name="Windows.midiInMessage">
    <summary>The <b>midiInMessage</b> function sends a message to the MIDI device driver.</summary>
    <param name="hmi">Identifier of the MIDI device that receives the message. You must cast the device ID to the <b>HMIDIIN</b> handle type. If you supply a handle instead of a device ID, the function fails and returns the MMSYSERR_NOSUPPORT error code.</param>
    <param name="uMsg">Message to send.</param>
    <param name="dw1">Message parameter.</param>
    <param name="dw2">Message parameter.</param>
    <returns>Returns the value returned by the audio device driver.</returns>
  </member>
  <member name="Windows.midiInOpen">
    <summary>The <b>midiInOpen</b> function opens a specified MIDI input device.</summary>
    <param name="phmi">Pointer to an <b>HMIDIIN</b> handle. This location is filled with a handle identifying the opened MIDI input device. The handle is used to identify the device in calls to other MIDI input functions.</param>
    <param name="uDeviceID">Identifier of the MIDI input device to be opened.</param>
    <param name="dwCallback">Pointer to a callback function, a thread identifier, or a handle of a window called with information about incoming MIDI messages. For more information on the callback function, see <a href="https://docs.microsoft.com//previous-versions/dd798460(v=vs.85)">MidiInProc</a>.</param>
    <param name="dwInstance">User instance data passed to the callback function. This parameter is not used with window callback functions or threads.</param>
    <param name="fdwOpen">
      <para>Callback flag for opening the device and, optionally, a status flag that helps regulate rapid data transfers. It can be the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>CALLBACK_FUNCTION</description>
          <description>The <i>dwCallback</i> parameter is a callback procedure address.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_NULL</description>
          <description>There is no callback mechanism. This value is the default setting.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_THREAD</description>
          <description>The <i>dwCallback</i> parameter is a thread identifier.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_WINDOW</description>
          <description>The <i>dwCallback</i> parameter is a window handle.</description>
        </listheader>
        <listheader>
          <description>MIDI_IO_STATUS</description>
          <description>When this parameter also specifies CALLBACK_FUNCTION, <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mim-moredata">MIM_MOREDATA</a> messages are sent to the callback function as well as <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mim-data">MIM_DATA</a> messages. Or, if this parameter also specifies CALLBACK_WINDOW, <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mim-moredata">MM_MIM_MOREDATA</a> messages are sent to the window as well as <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mim-data">MM_MIM_DATA</a> messages. This flag does not affect event or thread callbacks.</description>
        </listheader>
      </list> <para>Most applications that use a callback mechanism will specify CALLBACK_FUNCTION for this parameter.</para></param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following/</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_ALLOCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified resource is already allocated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flags specified by <i>dwFlags</i> are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInPrepareHeader">
    <summary>The <b>midiInPrepareHeader</b> function prepares a buffer for MIDI input.</summary>
    <param name="hmi">Handle to the MIDI input device. To get the device handle, call <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a>.</param>
    <param name="pmh">
      <para>Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure that identifies the buffer to be prepared.</para>
      <para>Before calling the function, set the <b>lpData</b>, <b>dwBufferLength</b>, and <b>dwFlags</b> members of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure. The <b>dwFlags</b> member must be set to zero.</para>
    </param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified address is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInReset">
    <summary>The <b>midiInReset</b> function stops input on a given MIDI input device.</summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInStart">
    <summary>The <b>midiInStart</b> function starts MIDI input on the specified MIDI input device.</summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInStop">
    <summary>The <b>midiInStop</b> function stops MIDI input on the specified MIDI input device.</summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiInUnprepareHeader">
    <summary>The <b>midiInUnprepareHeader</b> function cleans up the preparation performed by the <a href="https://docs.microsoft.com//previous-versions/dd798459(v=vs.85)">midiInPrepareHeader</a> function.</summary>
    <param name="hmi">Handle to the MIDI input device.</param>
    <param name="pmh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure identifying the buffer to be cleaned up.</param>
    <param name="cbmh">Size of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by <i>lpMidiInHdr</i> is still in the queue.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutCacheDrumPatches">
    <summary>The <b>midiOutCacheDrumPatches</b> function requests that an internal MIDI synthesizer device preload and cache a specified set of key-based percussion patches.</summary>
    <param name="hmo">Handle to the opened MIDI output device. This device should be an internal MIDI synthesizer. This parameter can also be the handle of a MIDI stream, cast to <b>HMIDIOUT</b>.</param>
    <param name="uPatch">Drum patch number that should be used. This parameter should be set to zero to cache the default drum patch.</param>
    <param name="pwkya">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/keyarray">KEYARRAY</a> array indicating the key numbers of the specified percussion patches to be cached or uncached.</param>
    <param name="fuCache">
      <para>Options for the cache operation. It can be one of the following flags.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_ALL</description>
          <description>Caches all of the specified patches. If they cannot all be cached, it caches none, clears the <a href="https://docs.microsoft.com//windows/desktop/Multimedia/keyarray">KEYARRAY</a> array, and returns MMSYSERR_NOMEM.</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_BESTFIT</description>
          <description>Caches all of the specified patches. If they cannot all be cached, it caches as many patches as possible, changes the KEYARRAY array to reflect which patches were cached, and returns MMSYSERR_NOMEM.</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_QUERY</description>
          <description>Changes the <a href="https://docs.microsoft.com//windows/desktop/Multimedia/keyarray">KEYARRAY</a> array to indicate which patches are currently cached.</description>
        </listheader>
        <listheader>
          <description>MIDI_UNCACHE</description>
          <description>Uncaches the specified patches and clears the KEYARRAY array.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag specified by <i>wFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The array pointed to by the <i>lpKeyArray</i> array is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device does not have enough memory to cache all of the requested patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device does not support patch caching.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutCachePatches">
    <summary>The <b>midiOutCachePatches</b> function requests that an internal MIDI synthesizer device preload and cache a specified set of patches.</summary>
    <param name="hmo">Handle to the opened MIDI output device. This device must be an internal MIDI synthesizer. This parameter can also be the handle of a MIDI stream, cast to <b>HMIDIOUT</b>.</param>
    <param name="uBank">Bank of patches that should be used. This parameter should be set to zero to cache the default patch bank.</param>
    <param name="pwpa">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/patcharray">PATCHARRAY</a> array indicating the patches to be cached or uncached.</param>
    <param name="fuCache">
      <para>Options for the cache operation. It can be one of the following flags.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_ALL</description>
          <description>Caches all of the specified patches. If they cannot all be cached, it caches none, clears the <a href="https://docs.microsoft.com//windows/desktop/Multimedia/patcharray">PATCHARRAY</a> array, and returns MMSYSERR_NOMEM.</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_BESTFIT</description>
          <description>Caches all of the specified patches. If they cannot all be cached, it caches as many patches as possible, changes the PATCHARRAY array to reflect which patches were cached, and returns MMSYSERR_NOMEM.</description>
        </listheader>
        <listheader>
          <description>MIDI_CACHE_QUERY</description>
          <description>Changes the <a href="https://docs.microsoft.com//windows/desktop/Multimedia/patcharray">PATCHARRAY</a> array to indicate which patches are currently cached.</description>
        </listheader>
        <listheader>
          <description>MIDI_UNCACHE</description>
          <description>Uncaches the specified patches and clears the PATCHARRAY array.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag specified by <i>wFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The array pointed to by <i>lpPatchArray</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device does not have enough memory to cache all of the requested patches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device does not support patch caching.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutClose">
    <summary>The <b>midiOutClose</b> function closes the specified MIDI output device.</summary>
    <param name="hmo">Handle to the MIDI output device. If the function is successful, the handle is no longer valid after the call to this function.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Buffers are still in the queue.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCaps">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsA">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsW">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCaps">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsA">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsW">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCaps">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsA">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetDevCapsW">
    <summary>The <b>midiOutGetDevCaps</b> function queries a specified MIDI output device to determine its capabilities.</summary>
    <param name="uDeviceID">
      <para>Identifier of the MIDI output device. The device identifier specified by this parameter varies from zero to one less than the number of devices present. The MIDI_MAPPER constant is also a valid device identifier.</para>
      <para>This parameter can also be a properly cast device handle.</para>
    </param>
    <param name="pmoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. This structure is filled with information about the capabilities of the device.</param>
    <param name="cbmoc">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798467(v=vs.85)">MIDIOUTCAPS</a> structure. Only <i>cbMidiOutCaps</i> bytes (or less) of information is copied to the location pointed to by <i>lpMidiOutCaps</i>. If <i>cbMidiOutCaps</i> is zero, nothing is copied, and the function returns MMSYSERR_NOERROR.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The driver is not installed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to load mapper string description.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorText">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextA">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextW">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorText">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextA">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextW">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorText">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextA">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetErrorTextW">
    <summary>The <b>midiOutGetErrorText</b> function retrieves a textual description for an error identified by the specified error code.</summary>
    <param name="mmrError">Error code.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Length, in characters, of the buffer pointed to by <i>lpText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetID">
    <summary>
      <para>The <b>midiOutGetID</b> function retrieves the device identifier for the given MIDI output device.</para>
      <para>This function is supported for backward compatibility. New applications can cast a handle of the device rather than retrieving the device identifier.</para>
    </summary>
    <param name="hmo">Handle to the MIDI output device.</param>
    <param name="puDeviceID">Pointer to a variable to be filled with the device identifier.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmo</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutGetNumDevs">
    <summary>The <b>midiOutGetNumDevs</b> function retrieves the number of MIDI output devices present in the system.</summary>
    <returns>Returns the number of MIDI output devices. A return value of zero means that there are no devices (not that there is no error).</returns>
  </member>
  <member name="Windows.midiOutGetVolume">
    <summary>The <b>midiOutGetVolume</b> function retrieves the current volume setting of a MIDI output device.</summary>
    <param name="hmo">Handle to an open MIDI output device. This parameter can also contain the handle of a MIDI stream, as long as it is cast to <b>HMIDIOUT</b>. This parameter can also be a device identifier.</param>
    <param name="pdwVolume">
      <para>Pointer to the location to contain the current volume setting. The low-order word of this location contains the left-channel volume setting, and the high-order word contains the right-channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of the specified location contains the mono volume level.</para>
      <para>Any value set by using the <a href="https://docs.microsoft.com//previous-versions/dd798480(v=vs.85)">midiOutSetVolume</a> function is returned, regardless of whether the device supports that value.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutLongMsg">
    <summary>The <b>midiOutLongMsg</b> function sends a system-exclusive MIDI message to the specified MIDI output device.</summary>
    <param name="hmo">Handle to the MIDI output device. This parameter can also be the handle of a MIDI stream cast to <b>HMIDIOUT</b>.</param>
    <param name="pmh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure that identifies the MIDI buffer.</param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_NOTREADY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The hardware is busy with other data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_UNPREPARED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by <i>lpMidiOutHdr</i> has not been prepared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutMessage">
    <summary>The <b>midiOutMessage</b> function sends a message to the MIDI device drivers. This function is used only for driver-specific messages that are not supported by the MIDI API.</summary>
    <param name="hmo">Identifier of the MIDI device that receives the message. You must cast the device ID to the <b>HMIDIOUT</b> handle type. If you supply a handle instead of a device ID, the function fails and returns the MMSYSERR_NOSUPPORT error code.</param>
    <param name="uMsg">Message to send.</param>
    <param name="dw1">Message parameter.</param>
    <param name="dw2">Message parameter.</param>
    <returns>Returns the value returned by the audio device driver.</returns>
  </member>
  <member name="Windows.midiOutOpen">
    <summary>The <b>midiOutOpen</b> function opens a MIDI output device for playback.</summary>
    <param name="phmo">Pointer to an <b>HMIDIOUT</b> handle. This location is filled with a handle identifying the opened MIDI output device. The handle is used to identify the device in calls to other MIDI output functions.</param>
    <param name="uDeviceID">Identifier of the MIDI output device that is to be opened.</param>
    <param name="dwCallback">Pointer to a callback function, an event handle, a thread identifier, or a handle of a window or thread called during MIDI playback to process messages related to the progress of the playback. If no callback is desired, specify <b>NULL</b> for this parameter. For more information on the callback function, see <a href="https://docs.microsoft.com//previous-versions/dd798478(v=vs.85)">MidiOutProc</a>.</param>
    <param name="dwInstance">User instance data passed to the callback. This parameter is not used with window callbacks or threads.</param>
    <param name="fdwOpen">
      <para>Callback flag for opening the device. It can be the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>CALLBACK_EVENT</description>
          <description>The <i>dwCallback</i> parameter is an event handle. This callback mechanism is for output only.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_FUNCTION</description>
          <description>The <i>dwCallback</i> parameter is a callback function address.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_NULL</description>
          <description>There is no callback mechanism. This value is the default setting.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_THREAD</description>
          <description>The <i>dwCallback</i> parameter is a thread identifier.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_WINDOW</description>
          <description>The <i>dwCallback</i> parameter is a window handle.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_NODEVICE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No MIDI port was found. This error occurs only when the mapper is opened.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_ALLOCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified resource is already allocated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutPrepareHeader">
    <summary>The <b>midiOutPrepareHeader</b> function prepares a MIDI system-exclusive or stream buffer for output.</summary>
    <param name="hmo">Handle to the MIDI output device. To get the device handle, call <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a>. This parameter can also be the handle of a MIDI stream cast to a <b>HMIDIOUT</b> type.</param>
    <param name="pmh">
      <para>Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure that identifies the buffer to be prepared.</para>
      <para>Before calling the function, set the <b>lpData</b>, <b>dwBufferLength</b>, and <b>dwFlags</b> members of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure. The <b>dwFlags</b> member must be set to zero.</para>
    </param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified address is invalid or the given stream buffer is greater than 64K.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutReset">
    <summary>The <b>midiOutReset</b> function turns off all notes on all MIDI channels for the specified MIDI output device.</summary>
    <param name="hmo">Handle to the MIDI output device. This parameter can also be the handle of a MIDI stream cast to <b>HMIDIOUT</b>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutSetVolume">
    <summary>The <b>midiOutSetVolume</b> function sets the volume of a MIDI output device.</summary>
    <param name="hmo">Handle to an open MIDI output device. This parameter can also contain the handle of a MIDI stream, as long as it is cast to <b>HMIDIOUT</b>. This parameter can also be a device identifier.</param>
    <param name="dwVolume">
      <para>New volume setting. The low-order word contains the left-channel volume setting, and the high-order word contains the right-channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of <i>dwVolume</i> specifies the mono volume level, and the high-order word is ignored.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function is not supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutShortMsg">
    <summary>The <b>midiOutShortMsg</b> function sends a short MIDI message to the specified MIDI output device.</summary>
    <param name="hmo">Handle to the MIDI output device. This parameter can also be the handle of a MIDI stream cast to <b>HMIDIOUT</b>.</param>
    <param name="dwMsg">
      <para>MIDI message. The message is packed into a <b>DWORD</b> value with the first byte of the message in the low-order byte. The message is packed into this parameter as follows.</para>
      <list type="table">
        <listheader>
          <description>Word</description>
          <description>Byte</description>
          <description>Usage</description>
        </listheader>
        <listheader>
          <description>High</description>
          <description>High-order</description>
          <description>Not used.</description>
        </listheader>
        <listheader>
          <description>Low-order</description>
          <description>The second byte of MIDI data (when needed).</description>
        </listheader>
        <listheader>
          <description>Low</description>
          <description>High-order</description>
          <description>The first byte of MIDI data (when needed).</description>
        </listheader>
        <listheader>
          <description>Low-order</description>
          <description>The MIDI status.</description>
        </listheader>
      </list> <para>The two MIDI data bytes are optional, depending on the MIDI status byte. When a series of messages have the same status byte, the status byte can be omitted from messages after the first one in the series, creating a running status. Pack a message for running status as follows:</para><list type="table"><listheader><description>Word</description><description>Byte</description><description>Usage</description></listheader><listheader><description>High</description><description>High-order</description><description>Not used.</description></listheader><listheader><description>Low-order</description><description>Not used.</description></listheader><listheader><description>Low</description><description>High-order</description><description>The second byte of MIDI data (when needed).</description></listheader><listheader><description>Low-order</description><description>The first byte of MIDI data.</description></listheader></list></param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_BADOPENMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application sent a message without a status byte to a stream handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_NOTREADY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The hardware is busy with other data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiOutUnprepareHeader">
    <summary>The <b>midiOutUnprepareHeader</b> function cleans up the preparation performed by the <a href="https://docs.microsoft.com//previous-versions/dd798477(v=vs.85)">midiOutPrepareHeader</a> function.</summary>
    <param name="hmo">Handle to the MIDI output device. This parameter can also be the handle of a MIDI stream cast to <b>HMIDIOUT</b>.</param>
    <param name="pmh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure identifying the buffer to be cleaned up.</param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by <i>lpMidiOutHdr</i> is still in the queue.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamClose">
    <summary>The <b>midiStreamClose</b> function closes an open MIDI stream.</summary>
    <param name="hms">Handle to a MIDI stream, as retrieved by using the <a href="https://docs.microsoft.com//previous-versions/dd798486(v=vs.85)">midiStreamOpen</a> function.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamOpen">
    <summary>The <b>midiStreamOpen</b> function opens a MIDI stream for output. By default, the device is opened in paused mode. The stream handle retrieved by this function must be used in all subsequent references to the stream.</summary>
    <param name="phms">Pointer to a variable to contain the stream handle when the function returns.</param>
    <param name="puDeviceID">Pointer to a device identifier. The device is opened on behalf of the stream and closed again when the stream is closed.</param>
    <param name="cMidi">Reserved; must be 1.</param>
    <param name="dwCallback">Pointer to a callback function, an event handle, a thread identifier, or a handle of a window or thread called during MIDI playback to process messages related to the progress of the playback. If no callback mechanism is desired, specify <b>NULL</b> for this parameter.</param>
    <param name="dwInstance">Application-specific instance data that is returned to the application with every callback function.</param>
    <param name="fdwOpen">
      <para>Callback flag for opening the device. One of the following callback flags must be specified.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>CALLBACK_EVENT</description>
          <description>The <i>dwCallback</i> parameter is an event handle. This callback mechanism is for output only.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_FUNCTION</description>
          <description>The <i>dwCallback</i> parameter is a callback procedure address. For the callback signature, see <a href="https://docs.microsoft.com//previous-versions/dd798478(v=vs.85)">MidiOutProc</a>.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_NULL</description>
          <description>There is no callback mechanism. This is the default setting.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_THREAD</description>
          <description>The <i>dwCallback</i> parameter is a thread identifier.</description>
        </listheader>
        <listheader>
          <description>CALLBACK_WINDOW</description>
          <description>The <i>dwCallback</i> parameter is a window handle.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The given handle or flags parameter is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamOut">
    <summary>The <b>midiStreamOut</b> function plays or queues a stream (buffer) of MIDI data to a MIDI output device.</summary>
    <param name="hms">Handle to a MIDI stream. This handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798486(v=vs.85)">midiStreamOpen</a> function. This handle identifies the output device.</param>
    <param name="pmh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure that identifies the MIDI buffer.</param>
    <param name="cbmh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd798449(v=vs.85)">MIDIHDR</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The system is unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The output buffer pointed to by <i>lpMidiHdr</i> is still playing or is queued from a previous call to <a href="https://docs.microsoft.com//previous-versions/dd798487(v=vs.85)">midiStreamOut</a>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIDIERR_UNPREPARED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The header pointed to by <i>lpMidiHdr</i> has not been prepared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The pointer specified by <i>lpMidiHdr</i> is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamPause">
    <summary>The <b>midiStreamPause</b> function pauses playback of a specified MIDI stream.</summary>
    <param name="hms">Handle to a MIDI stream. This handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798448(v=vs.85)">MIDIEVENT</a> function. This handle identifies the output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamPosition">
    <summary>The <b>midiStreamPosition</b> function retrieves the current position in a MIDI stream.</summary>
    <param name="hms">Handle to a MIDI stream. This handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798486(v=vs.85)">midiStreamOpen</a> function. This handle identifies the output device.</param>
    <param name="lpmmt">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd757347(v=vs.85)">MMTIME</a> structure.</param>
    <param name="cbmmt">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd757347(v=vs.85)">MMTIME</a> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified pointer or structure is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamProperty">
    <summary>The <b>midiStreamProperty</b> function sets or retrieves properties of a MIDI data stream associated with a MIDI output device.</summary>
    <param name="hms">Handle to the MIDI device that the property is associated with.</param>
    <param name="lppropdata">Pointer to the property data.</param>
    <param name="dwProperty">
      <para>Flags that specify the action to perform and identify the appropriate property of the MIDI data stream. The <b>midiStreamProperty</b> function requires setting two flags in each use. One flag (either MIDIPROP_GET or MIDIPROP_SET) specifies an action, and the other identifies a specific property to examine or edit.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIDIPROP_GET</description>
          <description>Retrieves the current setting of the given property.</description>
        </listheader>
        <listheader>
          <description>MIDIPROP_SET</description>
          <description>Sets the given property.</description>
        </listheader>
        <listheader>
          <description>MIDIPROP_TEMPO</description>
          <description>Retrieves the tempo property. The <i>lppropdata</i> parameter points to a <a href="https://docs.microsoft.com//previous-versions/dd798483(v=vs.85)">MIDIPROPTEMPO</a> structure. The current tempo value can be retrieved at any time. Output devices set the tempo by inserting MEVT_TEMPO events into the MIDI data.</description>
        </listheader>
        <listheader>
          <description>MIDIPROP_TIMEDIV</description>
          <description>Specifies the time division property. You can get or set this property. The <i>lppropdata</i> parameter points to a <a href="https://docs.microsoft.com//previous-versions/dd798484(v=vs.85)">MIDIPROPTIMEDIV</a> structure. This property can be set only when the device is stopped.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is not a stream handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The given handle or flags parameter is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamRestart">
    <summary>The <b>midiStreamRestart</b> function restarts a paused MIDI stream.</summary>
    <param name="hms">Handle to a MIDI stream. This handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798486(v=vs.85)">midiStreamOpen</a> function. This handle identifies the output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.midiStreamStop">
    <summary>The <b>midiStreamStop</b> function turns off all notes on all MIDI channels for the specified MIDI output device.</summary>
    <param name="hms">Handle to a MIDI stream. This handle must have been returned by a call to the <a href="https://docs.microsoft.com//previous-versions/dd798486(v=vs.85)">midiStreamOpen</a> function. This handle identifies the output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerClose">
    <summary>The <b>mixerClose</b> function closes the specified mixer device.</summary>
    <param name="hmx">Handle to the mixer device. This handle must have been returned successfully by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. If <b>mixerClose</b> is successful, <i>hmx</i> is no longer valid.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetails">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsA">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsW">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetails">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsA">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsW">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetails">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsA">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetControlDetailsW">
    <summary>The <b>mixerGetControlDetails</b> function retrieves details about a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object being queried.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure, which is filled with state information about the control.</param>
    <param name="fdwDetails">
      <para>Flags for retrieving control details. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_LISTTEXT</description>
          <description>The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more <a href="https://docs.microsoft.com//previous-versions/dd757296(v=vs.85)">MIXERCONTROLDETAILS_LISTTEXT</a> structures to receive text labels for multiple-item controls. An application must get all list text items for a multiple-item control at once. This flag cannot be used with MIXERCONTROL_CONTROLTYPE_CUSTOM controls.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETCONTROLDETAILSF_VALUE</description>
          <description>Current values for a control are retrieved. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more details structures appropriate for the control class.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI (Musical Instrument Digital Interface) input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCaps">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsA">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsW">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCaps">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsA">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsW">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCaps">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsA">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetDevCapsW">
    <summary>The <b>mixerGetDevCaps</b> function queries a specified mixer device to determine its capabilities.</summary>
    <param name="uMxId">Identifier or handle of an open mixer device.</param>
    <param name="pmxcaps">Pointer to a <see cref="MIXERCAPS" /> structure that receives information about the capabilities of the device.</param>
    <param name="cbmxcaps">Size, in bytes, of the <see cref="MIXERCAPS" /> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetID">
    <summary>The <b>mixerGetID</b> function retrieves the device identifier for a mixer device associated with a specified device handle.</summary>
    <param name="hmxobj">Handle to the audio mixer object to map to a mixer device identifier.</param>
    <param name="puMxId">Pointer to a variable that receives the mixer device identifier. If no mixer device is available for the <i>hmxobj</i> object, the value -1 is placed in this location and the MMSYSERR_NODRIVER error value is returned.</param>
    <param name="fdwId">
      <para>Flags for mapping the mixer object <i>hmxobj</i>. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No audio mixer device is available for the object specified by <i>hmxobj</i>. The location referenced by <i>puMxId</i> also contains the value -1.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControls">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsA">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsW">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControls">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsA">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsW">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControls">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsA">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineControlsW">
    <summary>The <b>mixerGetLineControls</b> function retrieves one or more controls associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object that is being queried.</param>
    <param name="pmxlc">Pointer to a <see cref="MIXERLINECONTROLS" /> structure. This structure is used to reference one or more <see cref="MIXERCONTROL" /> structures to be filled with information about the controls associated with an audio line. The <b>cbStruct</b> member of the <b>MIXERLINECONTROLS</b> structure must always be initialized to be the size, in bytes, of the <b>MIXERLINECONTROLS</b> structure.</param>
    <param name="fdwControls">
      <para>Flags for retrieving information about one or more controls associated with an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ALL</description>
          <description>The <i>pmxlc</i> parameter references a list of <see cref="MIXERCONTROL" /> structures that will receive information on all controls associated with the audio line identified by the <b>dwLineID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to the number of controls associated with the line. This number is retrieved from the <b>cControls</b> member of the <see cref="MIXERLINE" /> structure returned by the <a href="https://docs.microsoft.com//previous-versions/dd757303(v=vs.85)">mixerGetLineInfo</a> function. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to the first <b>MIXERCONTROL</b> structure to be filled. The <b>dwControlID</b> and <b>dwControlType</b> members are ignored for this query.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYID</description>
          <description>The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information on the control identified by the <b>dwControlID</b> member of the <see cref="MIXERLINECONTROLS" /> structure. The <b>cControls</b> member must be initialized to 1. The <b>cbmxctrl</b> member must be initialized to the size, in bytes, of a single <b>MIXERCONTROL</b> structure. The <b>pamxctrl</b> member must point to a <b>MIXERCONTROL</b> structure to be filled. The <b>dwLineID</b> and <b>dwControlType</b> members are ignored for this query. This query is usually used to refresh a control after receiving a <a href="https://docs.microsoft.com//windows/desktop/Multimedia/mm-mixm-control-change">MM_MIXM_CONTROL_CHANGE</a> control change notification message by the user-defined callback (see <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a>).</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINECONTROLSF_ONEBYTYPE</description>
          <description>The <b>mixerGetLineControls</b> function retrieves information about the first control of a specific class for the audio line that is being queried. The <i>pmxlc</i> parameter references a single <see cref="MIXERCONTROL" /> structure that will receive information about the specific control. The audio line is identified by the <b>dwLineID</b> member. The control class is specified in the <b>dwControlType</b> member of the <see cref="MIXERLINECONTROLS" /> structure.The <b>dwControlID</b> member is ignored for this query. This query can be used by an application to get information on a single control associated with a line. For example, you might want your application to use a peak meter only from a waveform-audio output line.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a mixer device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfo">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoA">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoW">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfo">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoA">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoW">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfo">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoA">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetLineInfoW">
    <summary>The <b>mixerGetLineInfo</b> function retrieves information about a specific line of a mixer device.</summary>
    <param name="hmxobj">Handle to the mixer device object that controls the specific audio line.</param>
    <param name="pmxl">Pointer to a <see cref="MIXERLINE" /> structure. This structure is filled with information about the audio line for the mixer device. The <b>cbStruct</b> member must always be initialized to be the size, in bytes, of the <b>MIXERLINE</b> structure.</param>
    <param name="fdwInfo">
      <para>Flags for retrieving information about an audio line. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_COMPONENTTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the first audio line of the type specified in the <b>dwComponentType</b> member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line of a specific component type. Remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_DESTINATION</description>
          <description>The <i>pmxl</i> parameter will receive information about the destination audio line specified by the <b>dwDestination</b> member of the <see cref="MIXERLINE" /> structure. This index ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_LINEID</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line specified by the <b>dwLineID</b> member of the <see cref="MIXERLINE" /> structure. This is usually used to retrieve updated information about the state of an audio line. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_SOURCE</description>
          <description>The <i>pmxl</i> parameter will receive information about the source audio line specified by the <b>dwDestination</b> and <b>dwSource</b> members of the <see cref="MIXERLINE" /> structure. The index specified by <b>dwDestination</b> ranges from zero to one less than the value in the <b>cDestinations</b> member of the <see cref="MIXERCAPS" /> structure. The index specified by <b>dwSource</b> ranges from zero to one less than the value in the <b>cConnections</b> member of the <b>MIXERLINE</b> structure returned for the audio line stored in the <b>dwDestination</b> member. All remaining structure members except <b>cbStruct</b> require no further initialization.</description>
        </listheader>
        <listheader>
          <description>MIXER_GETLINEINFOF_TARGETTYPE</description>
          <description>The <i>pmxl</i> parameter will receive information about the audio line that is for the <b>dwType</b> member of the <b>Target</b> structure, which is a member of the <see cref="MIXERLINE" /> structure. This flag is used to retrieve information about an audio line that handles the target type (for example, <b>MIXERLINE_TARGETTYPE_WAVEOUT</b>). The application must initialize the <b>dwType</b>, <b>wMid</b>, <b>wPid</b>, <b>vDriverVersion</b> and <b>szPname</b> members of the <see cref="MIXERLINE" /> structure before calling <b>mixerGetLineInfo</b>. All of these values can be retrieved from the device capabilities structures for all media devices. Remaining structure members except <b>cbStruct</b> require no further initialization.<div><b>Note</b>  In the ANSI version of this function (<b>mixerGetLineInfoA</b>), you cannot use the ANSI string returned from <b>mixerGetLineInfo</b> or <a href="https://docs.microsoft.com//previous-versions/dd743857(v=vs.85)">waveOutGetDevCaps</a> for the value of the <b>psPname</b> string when calling <b>mixerGetLineInfo</b> with the <b>MIXER_GETLINEINFOF_TARGETTYPE</b> flag. The reason is that an internal conversion to and from Unicode is performed, which might result in loss of data.</div></description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio line reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerGetNumDevs">
    <summary>The <b>mixerGetNumDevs</b> function retrieves the number of mixer devices present in the system.</summary>
    <returns>Returns the number of mixer devices or zero if no mixer devices are available.</returns>
  </member>
  <member name="Windows.mixerMessage">
    <summary>The <b>mixerMessage</b> function sends a custom mixer driver message directly to a mixer driver.</summary>
    <param name="hmx">Identifier of the mixer that receives the message. You must cast the device ID to the <b>HMIXER</b> handle type. If you supply a handle instead of a device ID, the function fails and returns the MMSYSERR_NOSUPPORT error code.</param>
    <param name="uMsg">Custom mixer driver message to send to the mixer driver. This message must be above or equal to the MXDM_USER constant.</param>
    <param name="dwParam1">Parameter associated with the message being sent.</param>
    <param name="dwParam2">Parameter associated with the message being sent.</param>
    <returns>
      <para>Returns a value that is specific to the custom mixer driver message. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>uMsg</i> parameter specified in the MXDM_USER message is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOSUPPORT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>deviceID</i> parameter must be a valid device ID.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The mixer device did not process the message.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerOpen">
    <summary>The <b>mixerOpen</b> function opens a specified mixer device and ensures that the device will not be removed until the application closes the handle.</summary>
    <param name="phmx">Pointer to a variable that will receive a handle identifying the opened mixer device. Use this handle to identify the device when calling other audio mixer functions. This parameter cannot be <b>NULL</b>.</param>
    <param name="uMxId">Identifier of the mixer device to open. Use a valid device identifier or any <b>HMIXEROBJ</b> (see the <a href="https://docs.microsoft.com//previous-versions/dd757301(v=vs.85)">mixerGetID</a> function for a description of mixer object handles). A "mapper" for audio mixer devices does not currently exist, so a mixer device identifier of -1 is not valid.</param>
    <param name="dwCallback">Handle to a window called when the state of an audio line and/or control associated with the device being opened is changed. Specify <b>NULL</b> for this parameter if no callback mechanism is to be used.</param>
    <param name="dwInstance">Reserved. Must be zero.</param>
    <param name="fdwOpen">
      <para>Flags for opening the device. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_WINDOW</b>
          </description>
          <description>The <i>dwCallback</i> parameter is assumed to be a window handle (<b>HWND</b>).</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_AUX</b>
          </description>
          <description>The <i>uMxId</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_HMIDIIN</b>
          </description>
          <description>The <i>uMxId</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_HMIDIOUT</b>
          </description>
          <description>The <i>uMxId</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_HMIXER</b>
          </description>
          <description>The <i>uMxId</i> parameter is a mixer device handle returned by the <b>mixerOpen</b> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_HWAVEIN</b>
          </description>
          <description>The <i>uMxId</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_HWAVEOUT</b>
          </description>
          <description>The <i>uMxId</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_MIDIIN</b>
          </description>
          <description>The <i>uMxId</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_MIDIOUT</b>
          </description>
          <description>The <i>uMxId</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_MIXER</b>
          </description>
          <description>The <i>uMxId</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_WAVEIN</b>
          </description>
          <description>The <i>uMxId</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>
            <b>MIXER_OBJECTF_WAVEOUT</b>
          </description>
          <description>The <i>uMxId</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns <b>MMSYSERR_NOERROR</b> if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_ALLOCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified resource is already allocated by the maximum number of clients possible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>uMxId</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>uMxId</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>uMxId</i>. Note that the location referenced by <i>uMxId</i> will also contain the value –1.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate resources.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.mixerSetControlDetails">
    <summary>The <b>mixerSetControlDetails</b> function sets properties of a single control associated with an audio line.</summary>
    <param name="hmxobj">Handle to the mixer device object for which properties are being set.</param>
    <param name="pmxcd">Pointer to a <see cref="MIXERCONTROLDETAILS" /> structure. This structure is used to reference control detail structures that contain the desired state for the control.</param>
    <param name="fdwDetails">
      <para>Flags for setting properties for a control. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_AUX</description>
          <description>The <i>hmxobj</i> parameter is an auxiliary device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd756713(v=vs.85)">auxGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI input device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798458(v=vs.85)">midiInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the handle of a MIDI output device. This handle must have been returned by the <a href="https://docs.microsoft.com//previous-versions/dd798476(v=vs.85)">midiOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HMIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd757308(v=vs.85)">mixerOpen</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEIN</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio input handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743847(v=vs.85)">waveInOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_HWAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is a waveform-audio output handle returned by the <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI input device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798456(v=vs.85)">midiInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIDIOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a MIDI output device. This identifier must be in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd798472(v=vs.85)">midiOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_MIXER</description>
          <description>The <i>hmxobj</i> parameter is a mixer device identifier in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd757304(v=vs.85)">mixerGetNumDevs</a> function. This flag is optional.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEIN</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio input device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743844(v=vs.85)">waveInGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_OBJECTF_WAVEOUT</description>
          <description>The <i>hmxobj</i> parameter is the identifier of a waveform-audio output device in the range of zero to one less than the number of devices returned by the <a href="https://docs.microsoft.com//previous-versions/dd743860(v=vs.85)">waveOutGetNumDevs</a> function.</description>
        </listheader>
        <listheader>
          <description>MIXER_SETCONTROLDETAILSF_CUSTOM</description>
          <description>A custom dialog box for the specified custom mixer control is displayed. The mixer device gathers the required information from the user and returns the data in the specified buffer. The handle for the owning window is specified in the <b>hwndOwner</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure. (This handle can be set to <b>NULL</b>.) The application can then save the data from the dialog box and use it later to reset the control to the same state by using the MIXER_SETCONTROLDETAILSF_VALUE flag.</description>
        </listheader>
        <listheader>
          <description>MIXER_SETCONTROLDETAILSF_VALUE</description>
          <description>The current value(s) for a control are set. The <b>paDetails</b> member of the <see cref="MIXERCONTROLDETAILS" /> structure points to one or more mixer-control details structures of the appropriate class for the control.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MIXERR_INVALCONTROL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The control reference is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid device identifier.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALFLAG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more flags are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hmxobj</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALPARAM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No mixer device is available for the object specified by <i>hmxobj</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInAddBuffer">
    <summary>The <b>waveInAddBuffer</b> function sends an input buffer to the given waveform-audio input device. When the buffer is filled, the application is notified.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure that identifies the buffer.</param>
    <param name="cbwh">Size, in bytes, of the <b>WAVEHDR</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_UNPREPARED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by the <i>pwh</i> parameter hasn't been prepared.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInClose">
    <summary>The <b>waveInClose</b> function closes the given waveform-audio input device.</summary>
    <param name="hwi">Handle to the waveform-audio input device. If the function succeeds, the handle is no longer valid after this call.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are still buffers in the queue.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInGetDevCaps">
    <summary>The <b>waveInGetDevCaps</b> function retrieves the capabilities of a given waveform-audio input device.</summary>
    <param name="uDeviceID">Identifier of the waveform-audio output device. It can be either a device identifier or a handle of an open waveform-audio input device.</param>
    <param name="pwic">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743839(v=vs.85)">WAVEINCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbwic">Size, in bytes, of the <b>WAVEINCAPS</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInGetErrorText">
    <summary>The <b>waveInGetErrorText</b> function retrieves a textual description of the error identified by the given error number.</summary>
    <param name="mmrError">Error number.</param>
    <param name="pszText">Pointer to the buffer to be filled with the textual error description.</param>
    <param name="cchText">Size, in characters, of the buffer pointed to by <i>pszText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInGetID">
    <summary>
      <para>The <b>waveInGetID</b> function gets the device identifier for the given waveform-audio input device.</para>
      <para>This function is supported for backward compatibility. New applications can cast a handle of the device rather than retrieving the device identifier.</para>
    </summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <param name="puDeviceID">Pointer to a variable to be filled with the device identifier.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hwi</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInGetNumDevs">
    <summary>The <b>waveInGetNumDevs</b> function returns the number of waveform-audio input devices present in the system.</summary>
    <returns>Returns the number of devices. A return value of zero means that no devices are present or that an error occurred.</returns>
  </member>
  <member name="Windows.waveInMessage">
    <summary>The <b>waveInMessage</b> function sends messages to the waveform-audio input device drivers.</summary>
    <param name="hwi">Identifier of the waveform device that receives the message. You must cast the device ID to the <b>HWAVEIN</b> handle type. If you supply a handle instead of a device ID, the function fails and returns the MMSYSERR_NOSUPPORT error code.</param>
    <param name="uMsg">Message to send.</param>
    <param name="dw1">Message parameter.</param>
    <param name="dw2">Message parameter.</param>
    <returns>Returns the value returned from the driver.</returns>
  </member>
  <member name="Windows.waveInOpen">
    <summary>The <b>waveInOpen</b> function opens the given waveform-audio input device for recording.</summary>
    <param name="phwi">Pointer to a buffer that receives a handle identifying the open waveform-audio input device. Use this handle to identify the device when calling other waveform-audio input functions. This parameter can be <b>NULL</b> if <b>WAVE_FORMAT_QUERY</b> is specified for <i>fdwOpen</i>.</param>
    <param name="uDeviceID">
      <para>Identifier of the waveform-audio input device to open. It can be either a device identifier or a handle of an open waveform-audio input device. You can use the following flag instead of a device identifier.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>WAVE_MAPPER</description>
          <description>The function selects a waveform-audio input device capable of recording in the specified format.</description>
        </listheader>
      </list>
    </param>
    <param name="pwfx">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd757713(v=vs.85)">WAVEFORMATEX</a> structure that identifies the desired format for recording waveform-audio data. You can free this structure immediately after <b>waveInOpen</b> returns.</param>
    <param name="dwCallback">Pointer to a fixed callback function, an event handle, a handle to a window, or the identifier of a thread to be called during waveform-audio recording to process messages related to the progress of recording. If no callback function is required, this value can be zero. For more information on the callback function, see <a href="https://docs.microsoft.com//previous-versions/dd743849(v=vs.85)">waveInProc</a>.</param>
    <param name="dwInstance">User-instance data passed to the callback mechanism. This parameter is not used with the window callback mechanism.</param>
    <param name="fdwOpen">
      <para>Flags for opening the device. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_EVENT</b>
          </description>
          <description>The <i>dwCallback</i> parameter is an event handle.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_FUNCTION</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a callback procedure address.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_NULL</b>
          </description>
          <description>No callback mechanism. This is the default setting.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_THREAD</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a thread identifier.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_WINDOW</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a window handle.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE</b>
          </description>
          <description>If this flag is specified and the <i>uDeviceID</i> parameter is <b>WAVE_MAPPER</b>, the function opens the default communication device. <para>This flag applies only when <i>uDeviceID</i> equals <b>WAVE_MAPPER</b>.</para><div><b>Note</b>  Requires Windows 7</div></description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_FORMAT_DIRECT</b>
          </description>
          <description>If this flag is specified, the ACM driver does not perform conversions on the audio data.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_FORMAT_QUERY</b>
          </description>
          <description>The function queries the device to determine whether it supports the given format, but it does not open the device.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_MAPPED</b>
          </description>
          <description>The <i>uDeviceID</i> parameter specifies a waveform-audio device to be mapped to by the wave mapper.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns <b>MMSYSERR_NOERROR</b> if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_ALLOCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified resource is already allocated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_BADFORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Attempted to open with an unsupported waveform-audio format.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInPrepareHeader">
    <summary>The <b>waveInPrepareHeader</b> function prepares a buffer for waveform-audio input.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure that identifies the buffer to be prepared.</param>
    <param name="cbwh">Size, in bytes, of the <b>WAVEHDR</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInReset">
    <summary>The <b>waveInReset</b> function stops input on the given waveform-audio input device and resets the current position to zero. All pending buffers are marked as done and returned to the application.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInStart">
    <summary>The <b>waveInStart</b> function starts input on the given waveform-audio input device.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInStop">
    <summary>The <b>waveInStop</b> function stops waveform-audio input.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveInUnprepareHeader">
    <summary>The <b>waveInUnprepareHeader</b> function cleans up the preparation performed by the <a href="https://docs.microsoft.com//previous-versions/dd743848(v=vs.85)">waveInPrepareHeader</a> function. This function must be called after the device driver fills a buffer and returns it to the application. You must call this function before freeing the buffer.</summary>
    <param name="hwi">Handle to the waveform-audio input device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure identifying the buffer to be cleaned up.</param>
    <param name="cbwh">Size, in bytes, of the <b>WAVEHDR</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer pointed to by the <i>pwh</i> parameter is still in the queue.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutBreakLoop">
    <summary>The <b>waveOutBreakLoop</b> function breaks a loop on the given waveform-audio output device and allows playback to continue with the next block in the driver list.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutClose">
    <summary>The <b>waveOutClose</b> function closes the given waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device. If the function succeeds, the handle is no longer valid after this call.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are still buffers in the queue.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetDevCaps">
    <summary>The <b>waveOutGetDevCaps</b> function retrieves the capabilities of a given waveform-audio output device.</summary>
    <param name="uDeviceID">Identifier of the waveform-audio output device. It can be either a device identifier or a handle of an open waveform-audio output device.</param>
    <param name="pwoc">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743855(v=vs.85)">WAVEOUTCAPS</a> structure to be filled with information about the capabilities of the device.</param>
    <param name="cbwoc">Size, in bytes, of the <b>WAVEOUTCAPS</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetErrorText">
    <summary>The <b>waveOutGetErrorText</b> function retrieves a textual description of the error identified by the given error number.</summary>
    <param name="mmrError">Error number.</param>
    <param name="pszText">Pointer to a buffer to be filled with the textual error description.</param>
    <param name="cchText">Size, in characters, of the buffer pointed to by <i>pszText</i>.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADERRNUM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified error number is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetID">
    <summary>
      <para>The <b>waveOutGetID</b> function retrieves the device identifier for the given waveform-audio output device.</para>
      <para>This function is supported for backward compatibility. New applications can cast a handle of the device rather than retrieving the device identifier.</para>
    </summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="puDeviceID">Pointer to a variable to be filled with the device identifier.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>hwo</i> parameter specifies an invalid handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetNumDevs">
    <summary>The <b>waveOutGetNumDevs</b> function retrieves the number of waveform-audio output devices present in the system.</summary>
    <returns>Returns the number of devices. A return value of zero means that no devices are present or that an error occurred.</returns>
  </member>
  <member name="Windows.waveOutGetPitch">
    <summary>The <b>waveOutGetPitch</b> function retrieves the current pitch setting for the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pdwPitch">
      <para>Pointer to a variable to be filled with the current pitch multiplier setting. The pitch multiplier indicates the current change in pitch from the original authored setting. The pitch multiplier must be a positive value.</para>
      <para>The pitch multiplier is specified as a fixed-point value. The high-order word of the variable contains the signed integer part of the number, and the low-order word contains the fractional part. A value of 0x8000 in the low-order word represents one-half, and 0x4000 represents one-quarter. For example, the value 0x00010000 specifies a multiplier of 1.0 (no pitch change), and a value of 0x000F8000 specifies a multiplier of 15.5.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function isn't supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetPlaybackRate">
    <summary>The <b>waveOutGetPlaybackRate</b> function retrieves the current playback rate for the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pdwRate">
      <para>Pointer to a variable to be filled with the current playback rate. The playback rate setting is a multiplier indicating the current change in playback rate from the original authored setting. The playback rate multiplier must be a positive value.</para>
      <para>The rate is specified as a fixed-point value. The high-order word of the variable contains the signed integer part of the number, and the low-order word contains the fractional part. A value of 0x8000 in the low-order word represents one-half, and 0x4000 represents one-quarter. For example, the value 0x00010000 specifies a multiplier of 1.0 (no playback rate change), and a value of 0x000F8000 specifies a multiplier of 15.5.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function isn't supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetPosition">
    <summary>The <b>waveOutGetPosition</b> function retrieves the current playback position of the given waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pmmt">Pointer to an <a href="https://docs.microsoft.com//previous-versions/dd757347(v=vs.85)">MMTIME</a> structure.</param>
    <param name="cbmmt">Size, in bytes, of the <b>MMTIME</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutGetVolume">
    <summary>The <b>waveOutGetVolume</b> function retrieves the current volume level of the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to an open waveform-audio output device. This parameter can also be a device identifier.</param>
    <param name="pdwVolume">
      <para>Pointer to a variable to be filled with the current volume setting. The low-order word of this location contains the left-channel volume setting, and the high-order word contains the right-channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of the specified location contains the mono volume level.</para>
      <para>The full 16-bit setting(s) set with the <a href="https://docs.microsoft.com//previous-versions/dd743874(v=vs.85)">waveOutSetVolume</a> function is returned, regardless of whether the device supports the full 16 bits of volume-level control.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function isn't supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutMessage">
    <summary>The <b>waveOutMessage</b> function sends messages to the waveform-audio output device drivers.</summary>
    <param name="hwo">Identifier of the waveform device that receives the message. You must cast the device ID to the <b>HWAVEOUT</b> handle type. If you supply a handle instead of a device ID, the function fails and returns the MMSYSERR_NOSUPPORT error code.</param>
    <param name="uMsg">Message to send.</param>
    <param name="dw1">Message parameter.</param>
    <param name="dw2">Message parameter.</param>
    <returns>Returns the value returned from the driver.</returns>
  </member>
  <member name="Windows.waveOutOpen">
    <summary>The <b>waveOutOpen</b> function opens the given waveform-audio output device for playback.</summary>
    <param name="phwo">Pointer to a buffer that receives a handle identifying the open waveform-audio output device. Use the handle to identify the device when calling other waveform-audio output functions. This parameter might be <b>NULL</b> if the <b>WAVE_FORMAT_QUERY</b> flag is specified for <i>fdwOpen</i>.</param>
    <param name="uDeviceID">
      <para>Identifier of the waveform-audio output device to open. It can be either a device identifier or a handle of an open waveform-audio input device. You can also use the following flag instead of a device identifier:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_MAPPER</b>
          </description>
          <description>The function selects a waveform-audio output device capable of playing the given format.</description>
        </listheader>
      </list>
    </param>
    <param name="pwfx">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd757713(v=vs.85)">WAVEFORMATEX</a> structure that identifies the format of the waveform-audio data to be sent to the device. You can free this structure immediately after passing it to <b>waveOutOpen</b>.</param>
    <param name="dwCallback">
      <para>Specifies the callback mechanism. The value must be one of the following:</para>
      <list type="bullet">
        <item>
          <description>A pointer to a callback function. For the function signature, see <a href="https://docs.microsoft.com//previous-versions/dd743869(v=vs.85)">waveOutProc</a>.</description>
        </item>
        <item>
          <description>A handle to a window.</description>
        </item>
        <item>
          <description>A thread identifier.</description>
        </item>
        <item>
          <description>A handle to an event.</description>
        </item>
        <item>
          <description>The value <b>NULL</b>.</description>
        </item>
      </list>The <i>fdwOpen</i> parameter specifies how the <i>dwCallback</i> parameter is interpreted. For more information, see Remarks.</param>
    <param name="dwInstance">User-instance data passed to the callback mechanism. This parameter is not used with the window callback mechanism.</param>
    <param name="fdwOpen">
      <para>Flags for opening the device. The following values are defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_EVENT</b>
          </description>
          <description>The <i>dwCallback</i> parameter is an event handle.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_FUNCTION</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a callback procedure address.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_NULL</b>
          </description>
          <description>No callback mechanism. This is the default setting.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_THREAD</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a thread identifier.</description>
        </listheader>
        <listheader>
          <description>
            <b>CALLBACK_WINDOW</b>
          </description>
          <description>The <i>dwCallback</i> parameter is a window handle.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_ALLOWSYNC</b>
          </description>
          <description>If this flag is specified, a synchronous waveform-audio device can be opened. If this flag is not specified while opening a synchronous driver, the device will fail to open.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE</b>
          </description>
          <description>If this flag is specified and the <i>uDeviceID</i> parameter is <b>WAVE_MAPPER</b>, the function opens the default communication device. <para>This flag applies only when <i>uDeviceID</i> equals <b>WAVE_MAPPER</b>.</para><div><b>Note</b>  Requires Windows 7</div></description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_FORMAT_DIRECT</b>
          </description>
          <description>If this flag is specified, the ACM driver does not perform conversions on the audio data.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_FORMAT_QUERY</b>
          </description>
          <description>If this flag is specified, <b>waveOutOpen</b> queries the device to determine if it supports the given format, but the device is not actually opened.</description>
        </listheader>
        <listheader>
          <description>
            <b>WAVE_MAPPED</b>
          </description>
          <description>If this flag is specified, the <i>uDeviceID</i> parameter specifies a waveform-audio device to be mapped to by the wave mapper.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns <b>MMSYSERR_NOERROR</b> if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_ALLOCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified resource is already allocated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_BADDEVICEID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device identifier is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_BADFORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Attempted to open with an unsupported waveform-audio format.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_SYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device is synchronous but <a href="https://docs.microsoft.com//previous-versions/dd743866(v=vs.85)">waveOutOpen</a> was called without using the <b>WAVE_ALLOWSYNC</b> flag.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutPause">
    <summary>The <b>waveOutPause</b> function pauses playback on the given waveform-audio output device. The current position is saved. Use the <a href="https://docs.microsoft.com//previous-versions/dd743871(v=vs.85)">waveOutRestart</a> function to resume playback from the current position.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device is synchronous and does not support pausing.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutPrepareHeader">
    <summary>The <b>waveOutPrepareHeader</b> function prepares a waveform-audio data block for playback.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure that identifies the data block to be prepared.</param>
    <param name="cbwh">Size, in bytes, of the <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure.</param>
    <returns>
      <para>Returns <b>MMSYSERR_NOERROR</b> if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutReset">
    <summary>The <b>waveOutReset</b> function stops playback on the given waveform-audio output device and resets the current position to zero. All pending playback buffers are marked as done (WHDR_DONE) and returned to the application.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device is synchronous and does not support pausing.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutRestart">
    <summary>The <b>waveOutRestart</b> function resumes playback on a paused waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device is synchronous and does not support pausing.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutSetPitch">
    <summary>The <b>waveOutSetPitch</b> function sets the pitch for the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="dwPitch">
      <para>New pitch multiplier setting. This setting indicates the current change in pitch from the original authored setting. The pitch multiplier must be a positive value.</para>
      <para>The pitch multiplier is specified as a fixed-point value. The high-order word contains the signed integer part of the number, and the low-order word contains the fractional part. A value of 0x8000 in the low-order word represents one-half, and 0x4000 represents one-quarter. For example, the value 0x00010000 specifies a multiplier of 1.0 (no pitch change), and a value of 0x000F8000 specifies a multiplier of 15.5.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function isn't supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutSetPlaybackRate">
    <summary>The <b>waveOutSetPlaybackRate</b> function sets the playback rate for the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="dwRate">
      <para>New playback rate setting. This setting is a multiplier indicating the current change in playback rate from the original authored setting. The playback rate multiplier must be a positive value.</para>
      <para>The rate is specified as a fixed-point value. The high-order word contains the signed integer part of the number, and the low-order word contains the fractional part. A value of 0x8000 in the low-order word represents one-half, and 0x4000 represents one-quarter. For example, the value 0x00010000 specifies a multiplier of 1.0 (no playback rate change), and a value of 0x000F8000 specifies a multiplier of 15.5.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function isn't supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutSetVolume">
    <summary>The <b>waveOutSetVolume</b> function sets the volume level of the specified waveform-audio output device.</summary>
    <param name="hwo">Handle to an open waveform-audio output device. This parameter can also be a device identifier.</param>
    <param name="dwVolume">
      <para>New volume setting. The low-order word contains the left-channel volume setting, and the high-order word contains the right-channel setting. A value of 0xFFFF represents full volume, and a value of 0x0000 is silence.</para>
      <para>If a device does not support both left and right volume control, the low-order word of <i>dwVolume</i> specifies the volume level, and the high-order word is ignored.</para>
    </param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOTSUPPORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Function is not supported.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutUnprepareHeader">
    <summary>The <b>waveOutUnprepareHeader</b> function cleans up the preparation performed by the <a href="https://docs.microsoft.com//previous-versions/dd743868(v=vs.85)">waveOutPrepareHeader</a> function. This function must be called after the device driver is finished with a data block. You must call this function before freeing the buffer.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure identifying the data block to be cleaned up.</param>
    <param name="cbwh">Size, in bytes, of the <b>WAVEHDR</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_STILLPLAYING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data block pointed to by the <i>pwh</i> parameter is still in the queue.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.waveOutWrite">
    <summary>The <b>waveOutWrite</b> function sends a data block to the given waveform-audio output device.</summary>
    <param name="hwo">Handle to the waveform-audio output device.</param>
    <param name="pwh">Pointer to a <a href="https://docs.microsoft.com//previous-versions/dd743837(v=vs.85)">WAVEHDR</a> structure containing information about the data block.</param>
    <param name="cbwh">Size, in bytes, of the <b>WAVEHDR</b> structure.</param>
    <returns>
      <para>Returns MMSYSERR_NOERROR if successful or an error otherwise. Possible error values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_INVALHANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specified device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NODRIVER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device driver is present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MMSYSERR_NOMEM</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Unable to allocate or lock memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WAVERR_UNPREPARED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The data block pointed to by the <i>pwh</i> parameter hasn't been prepared.</description>
        </listheader>
      </list>
    </returns>
  </member>
</doc>