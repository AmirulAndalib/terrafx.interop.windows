<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFont.AddRefHfont">
    <summary>Notifies the font object that the previously realized font identified with <i>hFont</i> should remain valid until <see cref="ReleaseHfont" /> is called or the font object itself is released completely.</summary>
    <param name="hFont">Font handle previously realized through <see cref="get_hFont" /> to be locked in the font object's cache.</param>
    <returns>
      <para>The method supports the standard return values <b>E_UNEXPECTED</b> and <b>E_INVALIDARG</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font was successfully locked in the cache.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.Clone">
    <summary>Creates a duplicate font object with a state identical to the current font.</summary>
    <param name="ppFont">Address of <see cref="IFont" /> pointer variable that receives the interface pointer to the new font object. The caller must call<see cref="IFont.Release" /> when this new font object is no longer needed.</param>
    <returns>
      <para>The method supports the standard return values <b>E_UNEXPECTED</b> and<b>E_OUTOFMEMORY</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The new font object was successfully created.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This font object does not support cloning.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppfont</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Bold">
    <summary>Gets the font's current Bold property.</summary>
    <param name="pBold">A pointer to a caller-allocated variable that receives the current Bold property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state was retrieved successfully. If the state is indeterminate, a font object should set *<i>pBold</i> to <b>FALSE</b> and return <b>S_OK</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in pBold is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Charset">
    <summary>Retrieves the character set used in the font. The character set can be any of those defined for Windows fonts.</summary>
    <param name="pCharset">A pointer to the caller-allocated variable that receives the character set value.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The character set was retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pCharset</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_hFont">
    <summary>Retrieves a handle to the font described by this font object.</summary>
    <param name="phFont">A pointer to the caller-allocated variable that receives the font handle. The caller does not own this resource and must not attempt to destroy the font.</param>
    <returns>
      <para>The method supports the standard return values <b>E_UNEXPECTED</b> and<b>E_OUTOFMEMORY</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font handle was retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>phFont</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Italic">
    <summary>Gets the font's current Italic property.</summary>
    <param name="pItalic">A pointer to the caller-allocated variable that receives the current Italic property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state was retrieved successfully. If the state is indeterminate, a font object should set *<i>pItalic</i> to <b>FALSE</b> and return <b>S_OK</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in pitalic is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Name">
    <summary>Retrieves the name of the font family.</summary>
    <param name="pName">A pointer to the caller-allocated variable that receives the name. This string must be freed with <b>SysFreeString</b> when it is no longer needed.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pname</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Size">
    <summary>Retrieves the point size of the font.</summary>
    <param name="pSize">A pointer to the caller-allocated variable that receives the size, in <b>HIMETRIC</b>units.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size was retrieved successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pSize</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Strikethrough">
    <summary>Gets the font's current Strikethrough property.</summary>
    <param name="pStrikethrough">A pointer to the caller-allocated variable that receives the current Strikethrough property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state was retrieved successfully. If the state is indeterminate, a font object should set *<i>pStrikethrough</i> to <b>FALSE</b> and return <b>S_OK</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pStrikethrough</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Underline">
    <summary>Gets the font's current Underline property..</summary>
    <param name="pUnderline">A pointer to the caller-allocated variable that receives the current Underline property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The state was retrieved successfully. If the state is indeterminate, a font object should set *<i>pUnderline</i> to <b>FALSE</b> and return <b>S_OK</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pUnderline</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.get_Weight">
    <summary>Gets the font's current Weight property.</summary>
    <param name="pWeight">A pointer to the caller-allocated variable that receives the current Weight property for the font. For a list of possible values, see the <b>lfWeight</b> member of the <see cref="LOGFONT" /> structure.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
            </list>
          </description>
          <description>The weight was retrieved successfully. If the weight is indeterminate, a font object should store <b>FW_NORMAL</b> in *<i>pWeight</i> and return <b>S_OK</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
            </list>
          </description>
          <description>The address in the <i>pWeight</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.IsEqual">
    <summary>Compares this font object to another for equivalence.</summary>
    <param name="pFontOther">A pointer to the <see cref="IFont" /> interface on the font object to be compared to this font. The reference count of the object referred to by this pointer is not affected by the comparison operation.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The two fonts are equivalent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The two fonts are not equivalent.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>pFontOther</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Bold">
    <summary>Sets the font's Bold property.</summary>
    <param name="bold">The new Bold property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The bold state was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font does not support a bold state. Note that this is not an error condition.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Charset">
    <summary>Sets the font's character set.</summary>
    <param name="charset">The new character set for the font.</param>
    <returns>The method supports the standard return value <b>E_INVALIDARG</b> and S_OK.</returns>
  </member>
  <member name="IFont.put_Italic">
    <summary>Sets the font's Italic property.</summary>
    <param name="italic">The new Italic property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The italic state was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font does not support an italic state. This value is not an error condition.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Name">
    <summary>Specifies a new name for the font family.</summary>
    <param name="name">The new name of the font family. This value is both allocated and freed by the caller.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>name</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Size">
    <summary>Sets the point size of the font.</summary>
    <param name="size">The new size of the font, in <b>HIMETRIC</b> units.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font was resized successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of the <i>size</i> parameter is not valid. For example, it does not contain a usable font size.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Strikethrough">
    <summary>Sets the font's Strikethrough property.</summary>
    <param name="strikethrough">The new Strikethrough property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Strikethrough property was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font does not support a strikethrough state. This value is not an error condition.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Underline">
    <summary>Sets the font's Underline property.</summary>
    <param name="underline">The new Underline property for the font.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The underline state was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font does not support an underline state. This value is not an error condition.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.put_Weight">
    <summary>Sets the font's Weight property.</summary>
    <param name="weight">The new Weight for the font. For a list of available font weights, see the description of the <b>lfWeight</b> member of the <see cref="LOGFONT" /> structure.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Weight property was changed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This font does not support different weights. This value is not an error condition.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.QueryTextMetrics">
    <summary>Fills a caller-allocated structure with information about the font.</summary>
    <param name="pTM">Pointer to the caller-allocated structure that receives the font information. The<b>TEXTMETRICOLE</b> structure is defined as a<see cref="TEXTMETRICW" /> structure.</param>
    <returns>
      <para>The method supports the standard return value <b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The text metrics were returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in the <i>ptm</i> parameter is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.ReleaseHfont">
    <summary>Notifies the font object that the caller that previously locked this font in the cache with<see cref="IFont.AddRefHfont" /> no longer requires the lock.</summary>
    <param name="hFont">A font handle previously realized through<see cref="IFont.get_hFont" />. This value was passed to a previous call to <see cref="IFont.AddRefHfont" /> to lock the font, and the caller would now like to unlock the font in the cache.</param>
    <returns>
      <para>The method supports the standard return values <b>E_UNEXPECTED</b> and<b>E_INVALIDARG</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font was unlocked successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font was not locked in the cache. This return value is a benign notification to the caller that it may have a font reference counting problem.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.SetHdc">
    <summary>Provides a device context to the font that describes the logical mapping mode.</summary>
    <param name="hDC">A handle to the device context in which to select the font.</param>
    <returns>
      <para>The method supports the standard return value <b>E_INVALIDARG</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font was selected successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font selection is not supported through this font object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IFont.SetRatio">
    <summary>
      <para>Converts the scaling factor for this font between logical units and <b>HIMETRIC</b> units.<b>HIMETRIC</b> units are used to express the point size in the<see cref="IFont.get_Size" /> and<see cref="IFont.put_Size" /> methods. The values passed to<b>IFont.SetRatio</b> are used to compute the display size of the font in logical units from the value in the <b>Size</b> property:</para>
      <para>
        <code>Display Size = ( cyLogical / cyHimetric ) * Size</code>
      </para>
    </summary>
    <param name="cyLogical">The font size, in logical units.</param>
    <param name="cyHimetric">The font size, in <b>HIMETRIC</b> units.</param>
    <returns>The method supports the standard return values E_UNEXPECTED, E_INVALIDARG, and S_OK.</returns>
  </member>
  <member name="IFont">
    <summary>
      <para>Provides a wrapper around a Windows font object. The COM font object supports a number of read/write properties as well as a set of methods through its <b>IFont</b>interface. It supports the same set of properties (but not the methods) through the dispatch interface<see cref="IFontDisp" />, which is derived from<b>IDispatch</b> to provide access to the font's properties through Automation. The system provides a standard implementation of the font object with both interfaces.</para>
      <para>The font object also supports the outgoing interface<see cref="IPropertyNotifySink" /> so a client can determine when font properties change. Because the font object supports at least one outgoing interface, it also implements<see cref="IConnectionPointContainer" /> and related interfaces for this purpose.</para>
      <para>The font object provides an hFont property, which is a Windows font handle that conforms to the other attributes specified for the font. The font object delays realizing this hFont object when possible, so consecutively setting two properties on a font will not cause an intermediate font to be realized. In addition, as an optimization, the system-implemented font object maintains a cache of font handles. Two font objects in the same process that have identical properties will return the same font handle. The font object can remove font handles from this cache at will, which introduces special considerations for clients using the hFont property.</para>
      <para>The font object also supports <see cref="IPersistStream" /> so that it can save and load itself from an instance of <see cref="IStream" />. An object that uses a font object internally would normally save and load the font as part of the object's own persistence handling.</para>
      <para>In addition, the font object supports <see cref="IDataObject" />, which can render a property set containing the font's attributes, allowing a client to save these properties as text.</para>
    </summary>
  </member>
</doc>