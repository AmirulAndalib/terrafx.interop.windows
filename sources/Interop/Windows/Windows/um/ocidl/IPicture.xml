<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IPicture.get_Attributes">
    <summary>Retrieves the current set of the picture's bit attributes.</summary>
    <param name="pDwAttr">
      <para>A pointer to a variable that receives the value of the Attributes property.</para>
      <para>The Attributes property can contain any combination of the values from the <see cref="PICTUREATTRIBUTES" /> enumeration.</para>
    </param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute bits were returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>pdwAttr</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_CurDC">
    <summary>Retrieves the handle of the current device context. This property is valid only for bitmap pictures.</summary>
    <param name="phDC">A pointer a variable that receives the device context.</param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute bits were returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>phDC</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_Handle">
    <summary>Retrieves the handle to the picture managed within this picture object to a specified location.</summary>
    <param name="pHandle">A pointer to a variable that receives the handle. The caller is responsible for this handle upon successful return. The variable is set to <b>NULL</b> on failure.</param>
    <returns>
      <para>This method supports the standard return values E_FAIL and E_OUTOFMEMORY, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The handle was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>phandle</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_Height">
    <summary>Retrieves the current height of the picture in the picture object.</summary>
    <param name="pHeight">A pointer to a variable that receives the height.</param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The height was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>pHeight</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_hPal">
    <summary>Retrieves a copy of the palette currently used by the picture object.</summary>
    <param name="phPal">A pointer to a variable that receives the palette handle. The variable is set to <b>NULL</b> on failure.</param>
    <returns>
      <para>This method supports the standard return values E_FAIL and E_OUTOFMEMORY, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The height was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This picture has no palette. The variable that <i>phpal</i> points to was set to <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>phPal</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_KeepOriginalFormat">
    <summary>Retrieves the current value of the picture's KeepOriginalFormat property.</summary>
    <param name="pKeep">A pointer to a variable that receives the value of the property.</param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following value.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of the KeepOriginalFormat property was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>pKeep</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_Type">
    <summary>Retrieves the current type of the picture contained in the picture object.</summary>
    <param name="pType">Pointer to a variable that receives the picture type. The Type property can have any one of the values contained in the <a href="https://docs.microsoft.com//windows/desktop/com/pictype-constants">PICTYPE</a> enumeration.</param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The type was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>pType</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.get_Width">
    <summary>Retrieves the current width of the picture in the picture object.</summary>
    <param name="pWidth">A pointer to a variable that receives the width.</param>
    <returns>
      <para>This method supports the standard return value E_FAIL, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The width was returned successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The value of <i>pWidth</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.PictureChanged">
    <summary>Notifies the picture object that its picture resource has changed. This method only calls <see cref="IPropertyNotifySink.OnChanged" /> with DISPID_PICT_HANDLE for any connected sinks.</summary>
    <returns>This method S_OK if it succeeds and E_FAIL if the picture object is uninitialized.</returns>
  </member>
  <member name="IPicture.put_KeepOriginalFormat">
    <summary>Sets the value of the picture's KeepOriginalFormat property.</summary>
    <param name="keep">Specifies the new value to assign to the property.</param>
    <returns>This method returns S_OK on success and E_FAIL otherwise.</returns>
  </member>
  <member name="IPicture.Render">
    <summary>Renders (draws) a specified portion of the picture defined by the offset (<i>xSrc</i>,<i>ySrc</i>) of the source picture and the dimensions to copy (<i>cxSrc</i>,<i>xySrc</i>). This picture is rendered onto the specified device context, positioned at the point (<i>x</i>,<i>y</i>), and scaled to the dimensions (<i>cx</i>,<i>cy</i>). The <i>prcWBounds</i> parameter specifies the position of this rendering if the destination device context is itself a metafile. Such information is necessary to place one metafile in another. For more information, see the <i>prcWBounds</i> parameter of <see cref="IViewObject2.Draw" />.</summary>
    <param name="hDC">A handle of the device context on which to render the image.</param>
    <param name="x">The horizontal coordinate in <i>hdc</i> at which to place the rendered image.</param>
    <param name="y">The vertical coordinate in <i>hdc</i> at which to place the rendered image.</param>
    <param name="cx">The horizontal dimension (width) of the destination rectangle.</param>
    <param name="cy">The vertical dimension (height) of the destination rectangle</param>
    <param name="xSrc">The horizontal offset in the source picture from which to start copying.</param>
    <param name="ySrc">The vertical offset in the source picture from which to start copying.</param>
    <param name="cxSrc">The horizontal extent to copy from the source picture.</param>
    <param name="cySrc">The vertical extent to copy from the source picture.</param>
    <param name="pRcWBounds">A pointer to a rectangle containing the position of the destination within a metafile device context if <i>hdc</i> is a metafile DC. Cannot be <b>NULL</b> in such cases.</param>
    <returns>
      <para>This method supports the standard return values E_FAIL, E_INVALIDARG, and E_OUTOFMEMORY, as well as the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The picture was rendered successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>prcWBounds</i> is not valid when <i>hdc</i> contains a metafile device context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CTL_E_INVALIDPROPERTYVALUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter <i>cx</i>, <i>cy</i>, <i>cxSrc</i>, or <i>cySrc</i> has a value of zero.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPicture.SaveAsFile">
    <summary>Saves the picture's data into a stream in the same format that it would save itself into a file. Bitmaps use the BMP file format, metafiles the WMF format, and icons the ICO format.</summary>
    <param name="pStream">A pointer to the stream into which the picture writes its data.</param>
    <param name="fSaveMemCopy">A flag indicating whether to save a copy of the picture in memory.</param>
    <param name="pCbSize">Pointer to a variable that receives the number of bytes written into the stream. This value can be <b>NULL</b>, indicating that the caller does not require this information.</param>
    <returns>This method supports the standard return values E_FAIL, E_INVALIDARG, and S_OK.</returns>
  </member>
  <member name="IPicture.SelectPicture">
    <summary>Selects a bitmap picture into a given device context, and returns the device context in which the picture was previously selected as well as the picture's GDI handle. This method works in conjunction with <see cref="IPicture.get_CurDC" />.</summary>
    <param name="hDCIn">A handle for the device context in which to select the picture.</param>
    <param name="phDCOut">A pointer to a variable that receives the previous device context. This parameter can be <b>NULL</b> if the caller does not need this information. Ownership of the device context is always the responsibility of the caller.</param>
    <param name="phBmpOut">A pointer to a variable that receives the GDI handle of the picture. This parameter can be <b>NULL</b> if the caller does not need the handle. Ownership of this handle is determined by the <i>fOwn</i> parameter passed to <see cref="OleCreatePictureIndirect" />. Pictures loaded from a stream always own their resources.</param>
    <returns>This method supports the standard return values E_FAIL, E_INVALIDARG, E_OUTOFMEMORY, and S_OK.</returns>
  </member>
  <member name="IPicture.set_hPal">
    <summary>Assigns a GDI palette to the picture contained in the picture object.</summary>
    <param name="hPal">A handle to the GDI palette assigned to the picture.</param>
    <returns>This method supports the standard return values E_FAIL, E_INVALIDARG, E_OUTOFMEMORY, and S_OK.</returns>
  </member>
  <member name="IPicture">
    <summary>
      <para>Manages a picture object and its properties. Picture objects provide a language-neutral abstraction for bitmaps, icons, and metafiles. As with the standard font object, the system provides a standard implementation of the picture object. Its primary interfaces are <b>IPicture</b> and <see cref="IPictureDisp" />, the latter being derived from <b>IDispatch</b> to provide access to the picture's properties through Automation. A picture object is created with <see cref="OleCreatePictureIndirect" />.</para>
      <para>The picture object also supports the outgoing interface <see cref="IPropertyNotifySink" />, so a client can determine when picture properties change. Because the picture object supports at least one outgoing interface, it also implements <see cref="IConnectionPointContainer" /> and its associated interfaces for this purpose.</para>
      <para>The picture object also supports <see cref="IPersistStream" /> so that it can save and load itself from an instance of <see cref="IStream" />. An object that uses a picture object internally would normally save and load the picture as part of the object's own persistence handling. The function <see cref="OleLoadPicture" /> simplifies the creation of a picture object based on stream contents.</para>
    </summary>
  </member>
</doc>