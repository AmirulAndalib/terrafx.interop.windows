<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IConnectionPointContainer.EnumConnectionPoints">
    <summary>Creates an enumerator object to iterate through all the connection points supported in the connectable object, one connection point per outgoing IID.</summary>
    <param name="ppEnum">A pointer to an <see cref="IEnumConnectionPoints" /> interface pointer variable that receives the pointer to the newly created enumerator.</param>
    <returns>
      <para>This method can return the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The enumerator object was created successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppEnum</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IConnectionPointContainer.FindConnectionPoint">
    <summary>Returns a pointer to the <see cref="IConnectionPoint" /> interface of a connection point for a specified IID, if that IID describes a supported outgoing interface.</summary>
    <param name="riid">Interface identifier of the outgoing interface whose connection point object is being requested.</param>
    <param name="ppCP">The address of an <see cref="IConnectionPoint" /> interface pointer variable that receives the pointer to the connection point that supports the <i>riid</i> interface. If an error occurs, the implementation sets the value to <b>NULL</b>.</param>
    <returns>
      <para>This method can return the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppCP</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CONNECT_E_NOCONNECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This connectable object does not support the outgoing interface specified by <i>riid</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IConnectionPointContainer">
    <summary>Supports connection points for connectable objects.</summary>
  </member>
</doc>