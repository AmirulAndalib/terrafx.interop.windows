<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleInPlaceSiteWindowless.OnInPlaceDeactivateEx">
    <summary>Notifies the container if the object needs to be redrawn upon deactivation.</summary>
    <param name="fNoRedraw">If <b>TRUE</b>, the container need not redraw the object after completing the deactivation; if <b>FALSE</b> the object must be redrawn after deactivation.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected error has occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.AdjustRect">
    <summary>Adjusts a specified rectangle if it is entirely or partially covered by overlapping, opaque objects.</summary>
    <param name="prc">The rectangle to be adjusted.</param>
    <returns>
      <para>This method returns S_OK if rectangle was adjusted successfully; meaning that the rectangle was not completely covered. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The rectangle was adjusted successfully. Note S_FALSE means that the rectangle was completely covered. Its width and height are now <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.CanWindowlessActivate">
    <summary>Informs an object if its container can support it as a windowless object that can be in-place activated.</summary>
    <returns>This method returns S_OK if the object can activate in-place without a window.</returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.GetCapture">
    <summary>Called by an in-place active, windowless object to determine whether it still has the mouse capture.</summary>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not currently have the mouse capture.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.GetDC">
    <summary>Provides an object with a handle to a device context for a screen or compatible device from its container.</summary>
    <param name="pRect">A pointer to the rectangle that the object wants to redraw, in client coordinates of the containing window. If this parameter is <b>NULL</b>, the object's full extent is redrawn.</param>
    <param name="grfFlags">A combination of values from the <see cref="OLEDCFLAGS" /> enumeration.</param>
    <param name="phDC">A pointer to a returned device context.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NESTEDPAINT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The container is already in the middle of a paint session. That is, this method has already been called, and the <see cref="IOleInPlaceSiteWindowless.ReleaseDC" /> method has not yet been called.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.GetFocus">
    <summary>Called by an in-place active, windowless object to determine whether it still has the keyboard focus.</summary>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not currently have the keyboard focus.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.InvalidateRect">
    <summary>Enables an object to invalidate a specified rectangle of its in-place image on the screen.</summary>
    <param name="pRect">The rectangle to be invalidated, in client coordinates of the containing window. If this parameter is <b>NULL</b>, the object's full extent is invalidated.</param>
    <param name="fErase">Specifies whether the background within the update region is to be erased when the region is updated. If this parameter is <b>TRUE</b>, the background is erased. If this parameter is <b>FALSE</b>, the background remains unchanged.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.InvalidateRgn">
    <summary>Enables an object to invalidate a specified region of its in-place image on the screen.</summary>
    <param name="hRGN">The region to invalidate, in client coordinates of the containing window. If this parameter is <b>NULL</b>, the object's full extent is invalidated.</param>
    <param name="fErase">Specifies whether the background within the update region is to be erased when the region is updated. If this parameter is <b>TRUE</b>, the background is erased. If this parameter is <b>FALSE</b>, the background remains unchanged.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.OnDefWindowMessage">
    <summary>Invokes the default processing for all messages passed to an object.</summary>
    <param name="msg">The identifier for the window message provided to the container by Windows.</param>
    <param name="wParam">A parameter for the window message provided to the container by Windows.</param>
    <param name="lParam">A parameter for the window message provided to the container by Windows.</param>
    <param name="plResult">A pointer to result code for the window message.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The container's default processing for the window message was not invoked. See Note to Implementers below.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.ReleaseDC">
    <summary>Releases the device context previously obtained by a call to <see cref="IOleInPlaceSiteWindowless.GetDC" />.</summary>
    <param name="hDC">The device context to be released.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.ScrollRect">
    <summary>Enables an object to scroll an area within its in-place active image on the screen.</summary>
    <param name="dx">The amount to scroll the x-axis.</param>
    <param name="dy">The amount to scroll the y-axis.</param>
    <param name="pRectScroll">The rectangle to scroll, in client coordinates of the containing window. A value of <b>NULL</b> indicates the full object.</param>
    <param name="pRectClip">The rectangle to clip. Only pixels scrolling into this rectangle are drawn. Pixels scrolling out are not. If this parameter is <b>NULL</b>, the rectangle is not clipped.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.SetCapture">
    <summary>Enables an in-place active, windowless object to capture all mouse messages.</summary>
    <param name="fCapture">If <b>TRUE</b>, the container should capture the mouse for the object. If <b>FALSE</b>, the container should release mouse capture for the object.</param>
    <returns>
      <para>This method returns S_OK if the mouse capture was successfully granted to the object. If called to release the mouse capture, this method must not fail. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Mouse capture was denied to the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless.SetFocus">
    <summary>Sets the keyboard focus for a UI-active, windowless object.</summary>
    <param name="fFocus">If <b>TRUE</b>, sets the keyboard focus to the calling object. If <b>FALSE</b>, removes the keyboard focus from the calling object, provided that the object has the focus.</param>
    <returns>
      <para>This method returns S_OK if the keyboard focus was successfully given to the object. If this method is called to release the focus, it should never fail. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Keyboard focus was denied to the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleInPlaceSiteWindowless">
    <summary>
      <para>Extends the <see cref="IOleInPlaceSiteEx" /> interface. <b>IOleInPlaceSiteWindowless</b> works with <see cref="IOleInPlaceObjectWindowless" /> which is implemented on the windowless object. Together, these two interfaces provide services to a windowless object from its container allowing the windowless object to:</para>
      <list type="bullet">
        <item>
          <description>Process window messages</description>
        </item>
        <item>
          <description>Participate in drag and drop operations</description>
        </item>
        <item>
          <description>Perform drawing operations</description>
        </item>
      </list>Having a window can place unnecessary burdens on small objects, such as controls. It prevents an object from being non-rectangular. It prevents windows from being transparent. It prevents the small instance size needed by many small controls.<para>A windowless object can enter the in-place active state without requiring a window or the resources associated with a window. Instead, the object's container provides the object with many of the services associated with having a window.</para></summary>
  </member>
</doc>