<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IPropertyPage.Activate">
    <summary>
      <para>Creates the dialog box window for the property page.</para>
      <para>The dialog box is created without a frame, caption, or system menu/controls. The text in the dialog should match the locale obtained through <see cref="IPropertyPageSite.GetLocaleID" />.</para>
    </summary>
    <param name="hWndParent">The window handle of the parent of the dialog box that is being created.</param>
    <param name="pRect">A pointer to the <see cref="RECT" /> structure containing the positioning information for the dialog box. This method must create its dialog box with the placement and dimensions described by this structure.</param>
    <param name="bModal">Indicates whether the dialog box frame is modal (<b>TRUE</b>) or modeless (<b>FALSE</b>).</param>
    <returns>
      <para>This method can return the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>prc</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.Apply">
    <summary>Applies the current values to the underlying objects associated with the property page as previously passed to<see cref="IPropertyPage.SetObjects" />.</summary>
    <returns>
      <para>This method can return the standard return values <b>E_OUTOFMEMORY</b> and<b>E_UNEXPECTED</b>, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Changes were successfully applied and the property page is current with the underlying objects.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Changes were applied, but the property page cannot determine if its state is current with the objects.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.Deactivate">
    <summary>Destroys the window created in <see cref="IPropertyPage.Activate" />.</summary>
    <returns>This method can return the standard return values E_UNEXPECTED and S_OK.</returns>
  </member>
  <member name="IPropertyPage.GetPageInfo">
    <summary>Retrieves information about the property page.</summary>
    <param name="pPageInfo">A pointer to the caller-allocated <see cref="PROPPAGEINFO" /> structure in which the property page stores its page information. All allocations stored in this structure become the responsibility of the caller.</param>
    <returns>
      <para>This method can return the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The structure was successfully filled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>pPageInfo</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.Help">
    <summary>Invokes the property page help in response to an end-user request.</summary>
    <param name="pszHelpDir">A pointer to the string under the <b>HelpDir</b> key in the property page's CLSID information in the registry. If <b>HelpDir</b> does not exist, this will be the path found in the <b><a href="https://docs.microsoft.com//windows/desktop/com/inprocserver32">InprocServer32</a></b> entry minus the server file name. (Note that <b><a href="https://docs.microsoft.com//windows/desktop/com/localserver32">LocalServer32</a></b> is not checked, because local property pages are not supported).</param>
    <returns>
      <para>This method can return the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The page displayed its own help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Help is either not provided or is provided only through the information is <see cref="PROPPAGEINFO" />.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.IsPageDirty">
    <summary>Indicates whether the property page has changed since it was activated or since the most recent call to <see cref="Apply" />.</summary>
    <returns>This method returns S_OK to indicate that the property page has changed. Otherwise, it returns S_FALSE.</returns>
  </member>
  <member name="IPropertyPage.Move">
    <summary>Positions and resizes the property page dialog box within the frame.</summary>
    <param name="pRect">A pointer to the <see cref="RECT" /> structure containing the positioning information for the property page dialog box.</param>
    <returns>
      <para>This method can return the standard return value E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>prc</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.SetObjects">
    <summary>
      <para>Provides the property page with an array of pointers to objects associated with this property page.</para>
      <para>When the property page receives a call to <see cref="IPropertyPage.Apply" />, it must send value changes to these objects through whatever interfaces are appropriate. The property page must query for those interfaces. This method can fail if the objects do not support the interfaces expected by the property page.</para>
    </summary>
    <param name="cObjects">The number of pointers in the array pointed to by <i>ppUnk</i>. If this parameter is 0, the property page must release any pointers previously passed to this method.</param>
    <param name="ppUnk">A pointer to an array of <see cref="IUnknown" /> interface pointers where each pointer identifies a unique object affected by the property sheet in which this (and possibly other) property pages are displayed. The property page must cache these pointers calling <see cref="AddRef" /> for each pointer at that time. This array of pointers is the same one that was passed to <see cref="OleCreatePropertyFrame" /> or <see cref="OleCreatePropertyFrameIndirect" /> to invoke the property sheet.</param>
    <returns>
      <para>This method can return the standard return values E_FAIL, E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property page successfully saved the pointers it needed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the objects in <i>ppUnk</i> did not support the interface expected by this property page, and so this property page cannot communicate with it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppUnk</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage.SetPageSite">
    <summary>Initializes a property page and provides the page with a pointer to the <see cref="IPropertyPageSite" /> interface through which the property page communicates with the property frame.</summary>
    <param name="pPageSite">A pointer to the <see cref="IPropertyPageSite" /> interface of the page site that manages and provides services to this property page within the entire property sheet.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, and S_OK.</returns>
  </member>
  <member name="IPropertyPage.Show">
    <summary>Makes the property page dialog box visible or invisible. If the page is made visible, the page should set the focus to itself, specifically to the first property on the page.</summary>
    <param name="nCmdShow">A command describing whether to become visible (SW_SHOW or SW_SHOWNORMAL) or hidden (SW_HIDE). No other values are valid for this parameter.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_UNEXPECTED, and S_OK.</returns>
  </member>
  <member name="IPropertyPage.TranslateAccelerator">
    <summary>Passes a keystroke to the property page for processing.</summary>
    <param name="pMsg">A pointer to the <see cref="MSG" /> structure describing the keystroke to be processed.</param>
    <returns>
      <para>This method can return the standard return value E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property page handles the accelerator.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property page handles accelerators, but this one was not useful to it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property page does not handle accelerators.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>pMsg</i> is not valid. For example, it may be <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IPropertyPage">
    <summary>
      <para>Provides the main features of a property page object that manages a particular page within a property sheet. A property page implements at least <b>IPropertyPage</b> and can optionally implement <see cref="IPropertyPage2" /> if selection of a specific property is supported. See <see cref="IPerPropertyBrowsing.MapPropertyToPage" /> for more information on specific property browsing. The methods of <b>IPropertyPage2</b> enable the property sheet or property frame to instruct the page when to perform specific actions, mostly based on user input such as switching between pages or pressing various buttons that the frame itself manages in the dialog box.</para>
      <para>A property page manages a dialog box that contains only those controls that should be displayed for that one page within the property sheet itself. This means that the dialog box template used to define the page should only carry the WS_CHILD style and no others. It should not include any style related to a frame, caption, or system menus or controls.</para>
    </summary>
  </member>
</doc>