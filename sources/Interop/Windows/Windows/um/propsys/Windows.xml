<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.PropVariantToWinRTPropertyValue">
    <summary>Extracts data from a <see cref="PROPVARIANT" /> structure into a Windows Runtime property value. Note that in some cases more than one <see cref="PROPVARIANT" /> type maps to a single Windows Runtime property type.</summary>
    <param name="propvar">Reference to a source <see cref="PROPVARIANT" /> structure.</param>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>, typically IID_IPropertyValue (defined in Windows.Foundation.h).</param>
    <param name="ppv">When this method returns successfully, contains the interface pointer requested in <i>riid</i>. This is typically an <a href="https://docs.microsoft.com//uwp/api/Windows.Foundation.IPropertyValue">IPropertyValue</a> pointer. If the call fails, this value is <b>NULL</b>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCoerceToCanonicalValue">
    <summary>Converts the value of a property to the canonical value, according to the property description.</summary>
    <param name="key">Reference to a <see cref="PROPERTYKEY" /> structure that identifies the property whose value is to be coerced.</param>
    <param name="ppropvar">On entry, contains a pointer to a <see cref="PROPVARIANT" /> structure that contains the original value. When this function returns successfully, contains the canonical value.</param>
    <returns>
      <para>Possible return values include the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The function succeeded. The property value specified by <i>ppropvar</i> is now in a canonical form.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INPLACE_S_TRUNCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property value specified by <i>ppropvar</i> is now in a truncated, canonical form.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppropvar</i> parameter is invalid. The <see cref="PROPVARIANT" /> structure has been cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_TYPEMISMATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Coercion from the value's type to the property description's type was not possible. The <see cref="PROPVARIANT" /> structure has been cleared.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any other failure code</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Coercion from the value's type to the property description's type was not possible. The <see cref="PROPVARIANT" /> structure has been cleared.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSCreateAdapterFromPropertyStore">
    <summary>Creates an adapter from an <see cref="IPropertyStore" />.</summary>
    <param name="pps">Pointer to an <see cref="IPropertyStore" /> object that represents the property store.</param>
    <param name="riid">Reference to an IID.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreateDelayedMultiplexPropertyStore">
    <summary>Creates a read-only, delayed-binding property store that contains multiple property stores.</summary>
    <param name="flags">One or more <see cref="GETPROPERTYSTOREFLAGS" /> values. These values specify details of the created property store object.</param>
    <param name="pdpsf">Interface pointer to an instance of <see cref="IDelayedPropertyStoreFactory" />.</param>
    <param name="rgStoreIds">Pointer to an array of property store IDs. This array does not need to be initialized.</param>
    <param name="cStores">The number of elements in the array pointed to by <i>rgStoreIds</i>.</param>
    <param name="riid">Reference to the requested IID of the interface that will represent the created property store.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyStore" />.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreateMemoryPropertyStore">
    <summary>Creates an in-memory property store.</summary>
    <param name="riid">Reference to the requested interface ID.</param>
    <param name="ppv">When this function returns, contains a pointer to the desired interface, typically <see cref="IPropertyStore" /> or <see cref="IPersistSerializedPropStorage" />.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreateMultiplexPropertyStore">
    <summary>Creates a read-only property store that contains multiple property stores, each of which must support either <see cref="IPropertyStore" /> or <see cref="IPropertySetStorage" />.</summary>
    <param name="prgpunkStores">Address of a pointer to an array of property stores that implement either <see cref="IPropertyStore" /> or <see cref="IPropertySetStorage" />.</param>
    <param name="cStores">The number of elements in the array referenced in <i>prgpunkStores</i>.</param>
    <param name="riid">Reference to the requested IID.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyStore" />.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreatePropertyChangeArray">
    <summary>Creates a container for a set of <see cref="IPropertyChange" /> objects. This container can be used with <see cref="IFileOperation" /> to apply a set of property changes to a set of files.</summary>
    <param name="rgpropkey">Pointer to an array of <see cref="PROPERTYKEY" /> structures that name the specific properties whose changes are being stored. If this value is <b>NULL</b>, <i>cChanges</i> must be 0.</param>
    <param name="rgflags">Pointer to an array of <see cref="PKA_FLAGS" /> values. If this value is <b>NULL</b>, <i>cChanges</i> must be 0.</param>
    <param name="rgpropvar">Pointer to an array of <see cref="PROPVARIANT" /> structures. If this value is <b>NULL</b>, <i>cChanges</i> must be 0.</param>
    <param name="cChanges">Count of changes to be applied. This is the number of elements in each of the arrays <i>rgpropkey</i>, <i>rgflags</i>, and <i>rgpropvar</i>.</param>
    <param name="riid">Reference to the ID of the requested interface.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyChangeArray" />.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreatePropertyStoreFromObject">
    <summary>Accepts the <see cref="IUnknown" /> interface of an object that supports <see cref="IPropertyStore" /> or <see cref="IPropertySetStorage" />. If the object supports <b>IPropertySetStorage</b>, it is wrapped so that it supports <b>IPropertyStore</b>.</summary>
    <param name="punk">A pointer to an interface that supports either <see cref="IPropertyStore" /> or <see cref="IPropertySetStorage" />.</param>
    <param name="grfMode">
      <para>Specifies the access mode to use. One of these values:</para>
      <h4>STGM_READ</h4>
      <para>Open for reading.</para>
      <h4>STGM_READWRITE</h4>
      <para>Open for reading and writing.</para>
    </param>
    <param name="riid">Reference to the requested IID.</param>
    <param name="ppv">When this function returns successfully, contains the address of a pointer to an interface guaranteed to support <see cref="IPropertyStore" />.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreatePropertyStoreFromPropertySetStorage">
    <summary>Wraps an <see cref="IPropertySetStorage" /> interface in an <see cref="IPropertyStore" /> interface.</summary>
    <param name="ppss">A pointer to an <see cref="IPropertySetStorage" /> interface.</param>
    <param name="grfMode">
      <para>Specifies the access mode to enforce. grfMode should match the access mode used to open the <see cref="IPropertySetStorage" />. Valid values are as follows:</para>
      <h4>STGM_READ</h4>
      <para>Calls to <see cref="IPropertyStore.SetValue" /> update an internal cache of properties, and calls to <see cref="IPropertyStore.Commit" /> call the appropriate <see cref="IPropertySetStorage" /> methods to write out the changed properties.</para>
      <h4>STGM_WRITE</h4>
      <para>Not supported.</para>
      <h4>STGM_READWRITE</h4>
      <para>Not supported.</para>
    </param>
    <param name="riid">Reference to an IID.</param>
    <param name="ppv">When this function returns, contains the interface pointer specified in <i>riid</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSCreateSimplePropertyChange">
    <summary>Creates a simple property change.</summary>
    <param name="flags">
      <see cref="PKA_FLAGS" /> flags.</param>
    <param name="key">Reference to a <see cref="PROPERTYKEY" /> structure.</param>
    <param name="propvar">Reference to a <see cref="PROPVARIANT" /> structure.</param>
    <param name="riid">Reference to a specified IID.</param>
    <param name="ppv">The address of an <see cref="IPropertyChange" /> interface pointer.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSEnumeratePropertyDescriptions">
    <summary>A wrapper API that calls the schema subsystem's <see cref="IPropertySystem.EnumeratePropertyDescriptions" />. This function retrieves an instance of the subsystem object that implements <see cref="IPropertyDescriptionList" />, to obtain either the entire list or a partial list of property descriptions in the system.</summary>
    <param name="filterOn">The list to return. <see cref="PROPDESC_ENUMFILTER" /> shows the valid values for this method.</param>
    <param name="riid">Reference to the interface ID of the requested interface.</param>
    <param name="ppv">The address of an <see cref="IPropertyDescriptionList" /> interface pointer.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates an interface is obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates that <i>ppv</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSFormatForDisplay">
    <summary>Gets a formatted, Unicode string representation of a property value stored in a <see cref="PROPVARIANT" /> structure. The caller is responsible for allocating the output buffer.</summary>
    <param name="propkey">Reference to a <see cref="PROPERTYKEY" /> that names the property whose value is being retrieved.</param>
    <param name="propvar">Reference to a <see cref="PROPVARIANT" /> structure that contains the type and value of the property.</param>
    <param name="pdfFlags">A flag that specifies the format to apply to the property string. See <see cref="PROPDESC_FORMAT_FLAGS" /> for possible values.</param>
    <param name="pwszText">When the function returns, contains a pointer to the formatted value as a null-terminated, Unicode string. The calling application is responsible for allocating memory for the buffer before it calls <see cref="PSFormatForDisplay" />.</param>
    <param name="cchText">Specifies the length of the buffer at <i>pwszText</i> in <b>WCHAR</b><b>s</b>, including the terminating null character.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The formatted string was successfully created.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The formatted string was not created. S_FALSE indicates that an empty string resulted from a VT_EMPTY.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates allocation failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSFormatForDisplayAlloc">
    <summary>Gets a formatted, Unicode string representation of a property value stored in a <see cref="PROPVARIANT" /> structure. This function allocates memory for the output string.</summary>
    <param name="key">Reference to a <see cref="PROPERTYKEY" /> that names the property whose value is being retrieved.</param>
    <param name="propvar">Reference to a <see cref="PROPVARIANT" /> structure that contains the type and value of the property.</param>
    <param name="pdff">One or more flags that specify the format to apply to the property string. See <see cref="PROPDESC_FORMAT_FLAGS" /> for possible values.</param>
    <param name="ppszDisplay">When the function returns, contains a pointer to a null-terminated, Unicode string representation of the requested property value.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The formatted string was successfully created. <b>S_OK</b> together with an empty return string indicates that there was an empty input string or a non-empty value that was formatted as an empty string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The formatted string was not created. S_FALSE together with an empty return string indicates that the empty string resulted from a VT_EMPTY.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates allocation failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSFormatPropertyValue">
    <summary>Gets a formatted, Unicode string representation of a property value stored in a property store. This function allocates memory for the output string.</summary>
    <param name="pps">Pointer to an <see cref="IPropertyStore" />, which represents the property store from which the property value is taken.</param>
    <param name="ppd">Pointer to an <see cref="IPropertyDescription" />, which represents the property whose value is being retrieved.</param>
    <param name="pdff">One or more <see cref="PROPDESC_FORMAT_FLAGS" /> that specify the format to apply to the property string. See <b>PROPDESC_FORMAT_FLAGS</b> for possible values.</param>
    <param name="ppszDisplay">When the function returns, contains a pointer to the formatted value as a null-terminated, Unicode string.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSGetImageReferenceForValue">
    <summary>Gets an instance of a property description interface for a specified property.</summary>
    <param name="propkey">A reference to a <see cref="PROPERTYKEY" /> structure that specifies the property.</param>
    <param name="propvar">A reference to the IID of the interface to retrieve through <i>ppv</i>.</param>
    <param name="ppszImageRes">When this function returns successfully, contains the interface pointer requested in <i>riid</i>.</param>
    <returns>
      <para>Returns <b>S_OK</b> if successful, or an error value otherwise, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetItemPropertyHandler">
    <summary>Retrieves a property handler for a Shell item.</summary>
    <param name="punkItem">
      <para>A pointer to the <see cref="IUnknown" /> interface of a Shell item that supports <see cref="IShellItem" />.</para>
      <para>
        <b>Windows XP:</b> Use <see cref="SHCreateShellItem" /> to create the Shell item.</para>
      <para>
        <b>Windows Vista:</b> Use <see cref="SHCreateItemFromIDList" />, <see cref="SHCreateItemFromParsingName" />, <see cref="SHCreateItemFromRelativeName" />, <see cref="SHCreateItemInKnownFolder" />, or <see cref="SHCreateItemWithParent" /> to create the Shell item.</para>
    </param>
    <param name="fReadWrite">
      <b>TRUE</b> to retrieve a read/write property handler. <b>FALSE</b> to retrieve a read-only property handler.</param>
    <param name="riid">Reference to the IID of the interface the handler object should return. This should be <see cref="IPropertyStore" /> or an interface derived from <b>IPropertyStore</b>.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>.</param>
    <returns>Returns <b>S_OK</b> if successful, or an error value otherwise.</returns>
  </member>
  <member name="Windows.PSGetItemPropertyHandlerWithCreateObject">
    <summary>Retrieves a property handler for a Shell item.</summary>
    <param name="punkItem">
      <para>A pointer to the <see cref="IUnknown" /> interface of a Shell item that supports <see cref="IShellItem" />.</para>
      <para>
        <b>Windows XP:</b> Use <see cref="SHCreateShellItem" /> to create the Shell item.</para>
      <para>
        <b>Windows Vista:</b> Use <see cref="SHCreateItemFromIDList" />, <see cref="SHCreateItemFromParsingName" />, <see cref="SHCreateItemFromRelativeName" />, <see cref="SHCreateItemInKnownFolder" />, or <see cref="SHCreateItemWithParent" /> to create the Shell item.</para>
    </param>
    <param name="fReadWrite">
      <b>TRUE</b> to retrieve a read/write property handler. <b>FALSE</b> to retrieve a read-only property handler.</param>
    <param name="punkCreateObject">Pointer to the <see cref="IUnknown" /> interface of a class factory object that supports <see cref="ICreateObject" />.</param>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>.</param>
    <param name="ppv">When this function returns successfully, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyStore" /> or <see cref="IPropertyStoreCapabilities" />.</param>
    <returns>Returns <b>S_OK</b> if successful, or an error value otherwise.</returns>
  </member>
  <member name="Windows.PSGetNamedPropertyFromPropertyStorage">
    <summary>Gets a value from serialized property storage by property name.</summary>
    <param name="psps">A pointer to an allocated buffer that contains the serialized properties. Call <see cref="IPersistSerializedPropStorage.GetPropertyStorage" /> to obtain the buffer.</param>
    <param name="cb">The size, in bytes, of the USERIALIZESPROPSTORAGE buffer pointed to by <i>psps</i>.</param>
    <param name="pszName">A pointer to a null-terminated, Unicode string that contains the name of the property.</param>
    <param name="ppropvar">When this function returns, contains the requested value.</param>
    <returns>Returns <b>S_OK</b> if successful, or an error value otherwise.</returns>
  </member>
  <member name="Windows.PSGetNameFromPropertyKey">
    <summary>Retrieves the canonical name of the property, given its <see cref="PROPERTYKEY" />.</summary>
    <param name="propkey">Reference to a <see cref="PROPERTYKEY" /> structure that identifies the requested property.</param>
    <param name="ppszCanonicalName">When this function returns, contains a pointer to the property name as a null-terminated Unicode string.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property's canonical name is obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates that the <see cref="PROPERTYKEY" /> does not exist in the schema subsystem cache.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertyDescription">
    <summary>Gets an instance of a property description interface for a property specified by a <see cref="PROPERTYKEY" /> structure.</summary>
    <param name="propkey">Reference to a <see cref="PROPERTYKEY" />.</param>
    <param name="riid">Reference to the interface ID of the requested interface.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyDescription" />, <see cref="IPropertyDescriptionAliasInfo" />, or <see cref="IPropertyDescriptionSearchInfo" />.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The interface was obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppv</i> parameter is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <see cref="PROPERTYKEY" /> does not exist in the schema subsystem cache.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertyDescriptionByName">
    <summary>Gets an instance of a property description interface for a specified property name.</summary>
    <param name="pszCanonicalName">A pointer to a null-terminated, Unicode string that identifies the property.</param>
    <param name="riid">Reference to the interface ID of the requested property.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyDescription" />, <see cref="IPropertyDescriptionAliasInfo" />, or <see cref="IPropertyDescriptionSearchInfo" />.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The interface was obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pszCanonicalName</i> parameter is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The canonical name does not exist in the schema subsystem cache.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertyDescriptionListFromString">
    <summary>Gets an instance of a property description list interface for a specified property list.</summary>
    <param name="pszPropList">Pointer to a null-terminated, Unicode string that identifies the property list. See <see cref="IPropertySystem.GetPropertyDescriptionListFromString" /> for more information about the format of this parameter.</param>
    <param name="riid">Reference to the interface ID of the requested interface.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertyDescriptionList" />.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The interface was obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppv</i> parameter is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertyFromPropertyStorage">
    <summary>Gets the value of a property as stored in serialized property storage.</summary>
    <param name="psps">Pointer to an allocated buffer that contains the serialized properties. This buffer is obtained by a call to <see cref="IPersistSerializedPropStorage.GetPropertyStorage" />.</param>
    <param name="cb">The size, in bytes, of the <b>USERIALIZESPROPSTORAGE</b> buffer pointed to by <i>psps</i>.</param>
    <param name="rpkey">Reference to the <see cref="PROPERTYKEY" /> that identifies the property for which to get the value.</param>
    <param name="ppropvar">When this function returns, contains the requested value.</param>
    <returns>Returns <b>S_OK</b> if successful, or an error value otherwise.</returns>
  </member>
  <member name="Windows.PSGetPropertyKeyFromName">
    <summary>Gets the property key for a canonical property name.</summary>
    <param name="pszName">Pointer to a property name as a null-terminated, Unicode string.</param>
    <param name="ppropkey">When this function returns, contains the requested property key.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Property key structure was obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pszName</i> parameter is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The canonical property name does not exist in the schema subsystem cache.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertySystem">
    <summary>Gets an instance of the subsystem object that implements <see cref="IPropertySystem" />.</summary>
    <param name="riid">Reference to the IID of the requested interface.</param>
    <param name="ppv">When this function returns, contains the interface pointer requested in <i>riid</i>. This is typically <see cref="IPropertySystem" />.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The interface was obtained.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppv</i> parameter is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSGetPropertyValue">
    <summary>Gets a property value from a property store.</summary>
    <param name="pps">Pointer to an instance of the <see cref="IPropertyStore" /> interface, which represents the property store from which to get the value.</param>
    <param name="ppd">Pointer to an instance of the <see cref="IPropertyDescription" /> interface, which represents the property in the property store.</param>
    <param name="ppropvar">Pointer to an uninitialized <see cref="PROPVARIANT" /> structure. When this function returns, points to the requested property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSLookupPropertyHandlerCLSID">
    <summary>Gets the class identifier (CLSID) of a per-computer, registered file property handler.</summary>
    <param name="pszFilePath">Pointer to a null-terminated, Unicode buffer that contains the absolute path of the file whose property handler CLSID is requested.</param>
    <param name="pclsid">When this function returns, contains the requested property handler CLSID.</param>
    <returns>Returns <b>S_OK</b> if successful, or an error value otherwise.</returns>
  </member>
  <member name="Windows.PSPropertyBag_Delete">
    <summary>Deletes a property from a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadBOOL">
    <summary>Reads the <b>BOOL</b> data value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns successfully, contains a pointer to the value read from the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadBSTR">
    <summary>Reads a <b>BSTR</b> data value from a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <b>BSTR</b> property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadDWORD">
    <summary>Reads a <b>DWORD</b> data value from property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <b>DWORD</b> property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadGUID">
    <summary>Reads the GUID data value from a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a GUID property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadInt">
    <summary>Reads an <b>int</b> data value from a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to an <b>int</b> property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadLONG">
    <summary>Reads a <b>LONG</b> data value from a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <b>LONG</b> property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadPOINTL">
    <summary>Retrieves the property coordinates stored in a <see cref="POINTL" /> structure of a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <see cref="POINTL" /> structure that contains the property coordinates.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadPOINTS">
    <summary>Retrieves the property coordinates stored in a <see cref="POINTS" /> structure of a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns successfully, contains a pointer to a <see cref="POINTS" /> structure that contains the property coordinates.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadPropertyKey">
    <summary>Reads the property key of a property in a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a property key value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadRECTL">
    <summary>Retrieves the coordinates of a rectangle stored in a property contained in a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <see cref="RECTL" /> structure that contains the property coordinates.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadSHORT">
    <summary>Reads the SHORT data value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a SHORT property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadStr">
    <summary>Reads the string data value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a string property value.</param>
    <param name="characterCount">This function returns the integer that represents the size (maximum number of characters) of the <i>value</i> parameter being returned.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadStrAlloc">
    <summary>Reads a string data value from a property in a property bag and allocates memory for the string that is read.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a string data value from a property in a property bag and allocates memory for the string that is read. The caller of the <see cref="PSPropertyBag_ReadStrAlloc" /> function needs to call a <see cref="CoTaskMemFree" /> function on this parameter.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadStream">
    <summary>Reads the data stream stored in a given property contained in a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object, that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="value">The address of a pointer that, when this function returns successfully, receives the <see cref="IStream" /> object.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadType">
    <summary>Reads the type of data value of a property that is stored in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object, that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="var">Returns on successful function completion a pointer to a <b>VARIANT</b> data type that contains the property value.</param>
    <param name="type">If <i>type</i> is VT_EMPTY, this function reads the <b>VARIANT</b> of the property in the IPropertyBag <i>propBag</i> parameter. If <i>type</i> is not VT_EMPTY and not the same as the <b>VARIANT</b> read, then this function attempts to convert the <b>VARIANT</b> read to the <b>VARTYPE</b> defined by <i>type</i> parameter before returning.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadULONGLONG">
    <summary>Reads a <b>ULONGLONG</b> data value from a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">When this function returns, contains a pointer to a <b>ULONGLONG</b> property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_ReadUnknown">
    <summary>Reads a given property of an unknown data value in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object, that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="riid">A reference to the IID of the interface to retrieve through <i>ppv</i>. This interface IID should be <see cref="IPropertyBag" /> or an interface derived from <b>IPropertyBag</b>.</param>
    <param name="ppv">When this method returns successfully, contains the interface pointer requested in <i>riid</i>. This is typically <i>riid</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteBOOL">
    <summary>Sets the <b>BOOL</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The <b>BOOL</b> value to which the named property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteBSTR">
    <summary>Sets the <b>BSTR</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The <b>BSTR</b> value to which the named property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteDWORD">
    <summary>Sets the <b>DWORD</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A <b>DWORD</b> value to which the named property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteGUID">
    <summary>Sets the GUID value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A pointer to a GUID value to which the named property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteInt">
    <summary>Sets the <b>int</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The <b>int</b> value to which the property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteLONG">
    <summary>Sets the <b>LONG</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The <b>LONG</b> value to which the property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WritePOINTL">
    <summary>Stores the property coordinates in a<see cref="POINTL" /> structure of a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A pointer to a <see cref="POINTL" /> structure that specifies the coordinates to store in the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WritePOINTS">
    <summary>Stores the property coordinates in a<see cref="POINTS" /> structure of a specified property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">Pointer to a <see cref="POINTS" /> structure that specifies the coordinates to store in the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WritePropertyKey">
    <summary>Sets the property key value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A <see cref="PROPERTYKEY" /> structure that specifies the property key value to store in the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteRECTL">
    <summary>Stores the coordinates of a rectangle in a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A pointer to a <see cref="RECTL" /> structure that specifies the coordinates to store in the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteSHORT">
    <summary>Sets the SHORT value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The SHORT value to which the property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteStr">
    <summary>Sets the string value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">The string value to which the property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteStream">
    <summary>Writes a data stream to a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">A pointer to the <see cref="IStream" /> object to write to the property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteULONGLONG">
    <summary>Sets the <b>ULONGLONG</b> value of a property in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A null-terminated property name string.</param>
    <param name="value">An <b>ULONGLONG</b> value to which the property should be set.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyBag_WriteUnknown">
    <summary>Writes a property of an unknown data value in a property bag.</summary>
    <param name="propBag">A pointer to an <see cref="IPropertyBag" /> object that represents the property bag in which the property is stored.</param>
    <param name="propName">A pointer to a null-terminated property name string.</param>
    <param name="punk">A pointer to an <see cref="IUnknown" /> derived interface that copies the specified property of an unknown data value in a property bag.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSPropertyKeyFromString">
    <summary>Converts a string to a <see cref="PROPERTYKEY" /> structure.</summary>
    <param name="pszString">Pointer to a null-terminated, Unicode string to be converted.</param>
    <param name="pkey">When this function returns, contains a pointer to a <see cref="PROPERTYKEY" /> structure.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSRefreshPropertySchema">
    <summary>
      <para>Not supported.</para>
      <para>It is valid to call this function, but it is not implemented to perform any function so there is no reason to do so.</para>
    </summary>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Schema files reloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_ACCESSDENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling context does not have proper privileges.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSRegisterPropertySchema">
    <summary>Informs the schema subsystem of the addition of a property description schema file.</summary>
    <param name="pszPath">Pointer to the full file path, as a Unicode string, to the <a href="https://docs.microsoft.com//windows/desktop/properties/propdesc-schema-entry">property description schema</a> (.propdesc) file on the local machine. This can be either a fully-specified full path, or a full path that includes environment variables such as <code>%PROGRAMFILES%</code>.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>All property descriptions in the schema were registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_ACCESSDENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling context does not have proper privileges.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>INPLACE_S_TRUNCATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more property descriptions in the schema failed to register. The specific failures are logged in the application event log.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.PSSetPropertyValue">
    <summary>Sets the value of a property in a property store.</summary>
    <param name="pps">Pointer to an instance of the <see cref="IPropertyStore" /> interface, which represents the property store that contains the property.</param>
    <param name="ppd">Pointer to an instance of the <see cref="IPropertyDescription" /> interface, which identifies the individual property.</param>
    <param name="propvar">Reference to a <see cref="PROPVARIANT" /> structure that contains the new value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSStringFromPropertyKey">
    <summary>Creates a string that identifies a property from that property's key.</summary>
    <param name="pkey">Reference to a <see cref="PROPERTYKEY" /> structure that identifies a property.</param>
    <param name="psz">Pointer to a buffer that receives the output string. The buffer should be large enough to contain PKEYSTR_MAX <b>WCHAR</b><b>s</b>.</param>
    <param name="cch">The length of the buffer pointed to by <i>psz</i>, in <b>WCHAR</b><b>s</b>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PSUnregisterPropertySchema">
    <summary>Informs the schema subsystem of the removal of a property description schema file.</summary>
    <param name="pszPath">Pointer to the full file path, as a Unicode string, to the property description schema (.propdesc) file on the local machine. This can be either a fully-specified full path, or a full path that includes environment variables such as <code>%PROGRAMFILES%</code>.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The schema was unregistered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_ACCESSDENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The calling context does not have proper privileges.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WinRTPropertyValueToPropVariant">
    <summary>Copies the content from a Windows runtime property value to a <see cref="PROPVARIANT" /> structure.</summary>
    <param name="punkPropertyValue">A pointer to the <see cref="IUnknown" /> interface from which this function can access the contents of a Windows runtime property value by retrieving and using the <see cref="Windows.Foundation.IPropertyValue" /> interface.</param>
    <param name="ppropvar">Pointer to a <see cref="PROPVARIANT" /> structure. When this function returns, the <b>PROPVARIANT</b> contains the converted info.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
</doc>