<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.WslConfigureDistribution">
    <summary>Modifies the behavior of a distribution registered with the Windows Subsystem for Linux (WSL).</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <param name="defaultUID">The Linux user ID to use when launching new WSL sessions for this distribution.</param>
    <param name="wslDistributionFlags">Flags specifying what behavior to use for this distribution.</param>
    <returns>Returns S_OK on success, or a failing HRESULT otherwise.</returns>
  </member>
  <member name="Windows.WslGetDistributionConfiguration">
    <summary>Retrieves the current configuration of a distribution registered with the Windows Subsystem for Linux (WSL).</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <param name="distributionVersion">The version of WSL for which this distribution is configured.</param>
    <param name="defaultUID">The default user ID used when launching new WSL sessions for this distribution.</param>
    <param name="wslDistributionFlags">The flags governing the behavior of this distribution.</param>
    <param name="defaultEnvironmentVariables">The address of a pointer to an array of default environment variable strings used when launching new WSL sessions for this distribution.</param>
    <param name="defaultEnvironmentVariableCount">The number of elements in <i>pDefaultEnvironmentVariablesArray</i>.</param>
    <returns>Returns S_OK on success, or a failing HRESULT otherwise.</returns>
  </member>
  <member name="Windows.WslIsDistributionRegistered">
    <summary>Determines if a distribution is registered with the Windows Subsystem for Linux (WSL).</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <returns>Returns TRUE if the supplied distribution is currently registered, or FALSE otherwise.</returns>
  </member>
  <member name="Windows.WslLaunch">
    <summary>Launches a Windows Subsystem for Linux (WSL) process in the context of a particular distribution.</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <param name="command">Command to execute. If no command is supplied, launches the default shell.</param>
    <param name="useCurrentWorkingDirectory">Governs whether or not the launched process should inherit the calling process's working directory. If FALSE, the process is started in the WSL default user's home directory ("~").</param>
    <param name="stdIn">Handle to use for <b>STDIN</b>.</param>
    <param name="stdOut">Handle to use for <b>STDOUT</b>.</param>
    <param name="stdErr">Handle to use for <b>STDERR</b>.</param>
    <param name="process">Pointer to address to receive the process HANDLE associated with the newly-launched WSL process.</param>
    <returns>Returns S_OK on success, or a failing HRESULT otherwise.</returns>
  </member>
  <member name="Windows.WslLaunchInteractive">
    <summary>Launches an interactive Windows Subsystem for Linux (WSL) process in the context of a particular distribution.This differs from <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/wslapi/nf-wslapi-wsllaunch">WslLaunch</a> in that the end user will be able to interact with the newly-created process.</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <param name="command">Command to execute. If no command is supplied, launches the default shell.</param>
    <param name="useCurrentWorkingDirectory">Governs whether or not the launched process should inherit the calling process's working directory. If FALSE, the process is started in the WSL default user's home directory ("~").</param>
    <param name="exitCode">Receives the exit code of the process after it exits.</param>
    <returns>Returns S_OK on success, or a failing HRESULT otherwise.</returns>
  </member>
  <member name="Windows.WslRegisterDistribution">
    <summary>Registers a new distribution with the Windows Subsystem for Linux (WSL).</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <param name="tarGzFilename">Full path to a .tar.gz file containing the file system of the distribution to register.</param>
    <returns>
      <para>This function can return one of the following values. Use the SUCCEEDED and FAILED macros to test the return value of this function.</para>
      <list type="table">
        <listheader>
          <description>
            <b>Return Code</b>
          </description>
          <description>
            <b>Description</b>
          </description>
        </listheader>
        <listheader>
          <description>S_OK</description>
          <description>Distribution successfully registered with the Windows Subsystem for Linux.</description>
        </listheader>
        <listheader>
          <description>HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS)</description>
          <description>Failed because a distribution with this name has already been registered.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WslUnregisterDistribution">
    <summary>Unregisters a distribution from the Windows Subsystem for Linux (WSL).</summary>
    <param name="distributionName">Unique name representing a distribution (for example, "Fabrikam.Distro.10.01").</param>
    <returns>Returns S_OK on success, or a failing HRESULT otherwise.</returns>
  </member>
</doc>