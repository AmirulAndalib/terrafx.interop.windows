<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ISyncMgrRegister.GetHandlerRegistrationInfo">
    <summary>Called by the registered application's handler to get current registration information.</summary>
    <param name="clsidHandler">The CLSID of the handler.</param>
    <param name="pdwSyncMgrRegisterFlags">Returns registration flags from the <see cref="SYNCMGRREGISTERFLAGS" /> enumeration that indicate events for which the handler is registered to be notified.</param>
    <returns>
      <para>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call was successful, the handler is registered.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Call was not successful, the handler is not registered.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISyncMgrRegister.RegisterSyncMgrHandler">
    <summary>Registers a handler with the synchronization manager when the handler has items to synchronize.</summary>
    <param name="clsidHandler">The CLSID of the handler that should be registered to do synchronizations.</param>
    <param name="pwszDescription">Text identifying the handler. This parameter may be <b>NULL</b>.</param>
    <returns>
      <para>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The handler was successfully registered.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISyncMgrRegister.UnregisterSyncMgrHandler">
    <summary>Removes a handler's class identifier (CLSID) from the registration. A handler should call this when it no longer has any items to synchronize.</summary>
    <param name="clsidHandler">The CLSID of the handler that should be unregistered.</param>
    <returns>
      <para>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The handler was successfully removed from the registry with SyncMgr.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISyncMgrRegister">
    <summary>Exposes methods so that an application can register with the synchronization manager. This can be achieved either through the<b>ISyncMgrRegister</b> interface or by registering directly in the registry.</summary>
  </member>
</doc>