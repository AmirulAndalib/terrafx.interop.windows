<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleDocumentSite.ActivateMe">
    <summary>Asks a document site to activate the document making the call as a document object rather than an in-place-active object and, optionally, specifies which view of the object document to activate.</summary>
    <param name="pViewToActivate">A pointer to an <see cref="IOleDocumentView" /> interface pointer that represents the document view to be used in activating the document object. This parameter can be <b>NULL</b>, in which case the container should call <see cref="IOleDocument.CreateView" /> to obtain a document view pointer.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleDocumentSite">
    <summary>
      <para>Enables a document that has been implemented as a document object to bypass the normal activation sequence for in-place-active objects and to directly instruct its client site to activate it as a document object. A client site with this ability is called a document site.</para>
      <para>For each document object to be hosted, a container must provide a corresponding document site, which is an OLE Documents client site that, in addition to implementing <see cref="IOleClientSite" /> and <see cref="IAdviseSink" />, also implements <b>IOleDocumentSite</b>. Each document site implements a separate document view site object for each view of a document to be activated. The document view site implements <see cref="IOleInPlaceSite" /> and, optionally, <see cref="IContinueCallback" />.</para>
    </summary>
  </member>
</doc>