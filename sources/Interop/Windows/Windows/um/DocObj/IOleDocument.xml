<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleDocument.CreateView">
    <summary>Creates a document view object in the caller's process and obtains a pointer to that object's <see cref="IOleDocumentView" /> interface.</summary>
    <param name="pIPSite">A pointer to the <see cref="IOleInPlaceSite" /> interface that represents the view site object to be associated with the new document view object. This parameter can be <b>NULL</b>, for example, when the view is contained in a new, uninitialized document object, in which case the caller must initialize the view with a subsequent call to <see cref="IOleDocumentView.SetInPlaceSite" />.</param>
    <param name="pstm">A pointer to a stream containing data from which the new document view object should initialize itself. If <b>NULL</b>, the document object initializes the new document view object with a default state.</param>
    <param name="dwReserved">This parameter is reserved and must be zero.</param>
    <param name="ppView">A pointer to an <see cref="IOleDocumentView" /> pointer variable that receives the interface pointer to the new document view object. When successful, the caller is responsible for calling <see cref="IUnknown.Release" /> on the <i>ppview</i> pointer when the view object is no longer needed.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory available for the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppView</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleDocument.EnumViews">
    <summary>Creates an object that enumerates the views supported by a document object, or if only one view is supported, returns a pointer to that view.</summary>
    <param name="ppEnum">A pointer to an <see cref="IEnumOleDocumentViews" /> pointer variable that receives the interface pointer to the enumerator object.</param>
    <param name="ppView">A pointer to an <see cref="IOleDocumentView" /> pointer variable that receives the interface pointer to a single view object.</param>
    <returns>
      <para>This method returns S_OK if the object supports multiple views, then <i>ppEnum</i> contains a pointer to the enumerator object, and <i>ppView</i> is <b>NULL</b>. Otherwise, <i>ppEnum</i> is <b>NULL</b>, and <i>ppView</i> contains an interface pointer on the single view.</para>
      <para>Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory available for the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>ppEnum</i> or <i>ppView</i> is invalid. The caller must pass valid pointers for both arguments.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleDocument.GetDocMiscStatus">
    <summary>Retrieves status information about the document object.</summary>
    <param name="pdwStatus">A pointer to the information on supported behaviors. Possible values are taken from the <see cref="DOCMISC" /> enumeration.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address in <i>pdwStatus</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleDocument">
    <summary>Enables a document object to communicate to containers its ability to create views of its data. This interface also enables a document object to enumerate its views and to provide containers with miscellaneous information about itself, such as whether it supports multiple views or complex rectangles.</summary>
  </member>
</doc>