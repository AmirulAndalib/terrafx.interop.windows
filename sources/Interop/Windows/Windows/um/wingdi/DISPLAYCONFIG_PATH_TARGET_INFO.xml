<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO">
    <summary>
      <para>The DISPLAYCONFIG_PATH_TARGET_INFO structure contains target information for a single path.</para>
    </summary>
    <remarks>
      <para>A DISPLAYCONFIG_PATH_TARGET_INFO structure is specified in the <b>targetInfo</b> member of a <see cref="DISPLAYCONFIG_PATH_INFO" /> structure.</para>
      <para>A target corresponds to the number of possible video outputs on a display adapter. This number, however, does not equate to the number of physical connectors on the display adapter. Each connector exposes a number of targets that includes backward compatibility with older connector technology. For example, a DVI connector exposes a DVI target, as well as a VGA target. A DisplayPort connector, which was introduced in 2006, exposes DisplayPort, HDMI, DVI, legacy TV, and VGA targets.</para>
      <para>The <b>statusFlags</b> member is set when you call the <see cref="QueryDisplayConfig" /> function.</para>
    </remarks>
    <seealso cref="DISPLAYCONFIG_PATH_INFO" />
    <seealso cref="DISPLAYCONFIG_RATIONAL" />
    <seealso cref="DISPLAYCONFIG_ROTATION" />
    <seealso cref="DISPLAYCONFIG_SCALING" />
    <seealso cref="DISPLAYCONFIG_SCANLINE_ORDERING" />
    <seealso cref="DISPLAYCONFIG_TARGET_MODE" />
    <seealso cref="DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY" />
    <seealso cref="DISPLAYCONFIG_VIDEO_SIGNAL_INFO" />
    <seealso cref="QueryDisplayConfig" />
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.adapterId">
    <summary>
      <para>The identifier of the adapter that the path is on.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.id">
    <summary>
      <para>The target identifier on the specified adapter that this path relates to.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.DUMMYUNIONNAME">
    <summary></summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.DUMMYUNIONNAME.modeInfoIdx">
    <summary>
      <para>A valid index into the mode information table that contains the target mode information for this path only when DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE is not set. If target mode information is not available, the value of <b>modeInfoIdx</b> is DISPLAYCONFIG_PATH_MODE_IDX_INVALID.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.DUMMYUNIONNAME.DUMMYSTRUCTNAME">
    <summary></summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.DUMMYUNIONNAME.DUMMYSTRUCTNAME.desktopModeInfoIdx">
    <summary>
      <para>A valid index into the mode array of the <see cref="DISPLAYCONFIG_DESKTOP_IMAGE_INFO" /> entry that contains the desktop mode information for this path only when DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE is set. If there is no entry for this in the mode array, the value of <b>desktopModeInfoIdx</b> is DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID. Supported starting in Windows 10.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.DUMMYUNIONNAME.DUMMYSTRUCTNAME.targetModeInfoIdx">
    <summary>
      <para>A valid index into the mode array of the <see cref="DISPLAYCONFIG_TARGET_MODE" /> entry that contains the target mode information for this path only when DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE is set. If there is no entry for this in the mode array, the value of <b>targetModeInfoIdx</b> is DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID. Supported starting in Windows 10.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.outputTechnology">
    <summary>
      <para>The target's connector type. For a list of possible values, see the <see cref="DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY" /> enumerated type.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.rotation">
    <summary>
      <para>A value that specifies the rotation of the target. For a list of possible values, see the <see cref="DISPLAYCONFIG_ROTATION" /> enumerated type.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.scaling">
    <summary>
      <para>A value that specifies how the source image is scaled to the target. For a list of possible values, see the <see cref="DISPLAYCONFIG_SCALING" /> enumerated type. For more information about scaling, see <a href="https://docs.microsoft.com//windows-hardware/drivers/display/scaling-the-desktop-image">Scaling the Desktop Image</a>.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.refreshRate">
    <summary>
      <para>A <see cref="DISPLAYCONFIG_RATIONAL" /> structure that specifies the refresh rate of the target. If the caller specifies target mode information, the operating system will instead use the refresh rate that is stored in the <b>vSyncFreq</b> member of the <see cref="DISPLAYCONFIG_VIDEO_SIGNAL_INFO" /> structure. In this case, the caller specifies this value in the <b>targetVideoSignalInfo</b> member of the <see cref="DISPLAYCONFIG_TARGET_MODE" /> structure. A refresh rate with both the numerator and denominator set to zero indicates that the caller does not specify a refresh rate and the operating system should use the most optimal refresh rate available. For this case, in a call to the <see cref="SetDisplayConfig" /> function, the caller must set the <b>scanLineOrdering</b> member to the DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED value; otherwise, <b>SetDisplayConfig</b> fails.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.scanLineOrdering">
    <summary>
      <para>A value that specifies the scan-line ordering of the output on the target. For a list of possible values, see the <see cref="DISPLAYCONFIG_SCANLINE_ORDERING" /> enumerated type. If the caller specifies target mode information, the operating system will instead use the scan-line ordering that is stored in the <b>scanLineOrdering</b> member of the <see cref="DISPLAYCONFIG_VIDEO_SIGNAL_INFO" /> structure. In this case, the caller specifies this value in the <b>targetVideoSignalInfo</b> member of the <see cref="DISPLAYCONFIG_TARGET_MODE" /> structure.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.targetAvailable">
    <summary>
      <para>A Boolean value that specifies whether the target is available. <b>TRUE</b> indicates that the target is available.</para>
      <para>Because the asynchronous nature of display topology changes when a monitor is removed, a path might still be marked as active even though the monitor has been removed. In such a case, <b>targetAvailable</b> could be <b>FALSE</b> for an active path. This is typically a transient situation that will change after the operating system  takes action on the monitor removal.</para>
    </summary>
  </member>
  <member name="DISPLAYCONFIG_PATH_TARGET_INFO.statusFlags">
    <summary>
      <para>A bitwise OR of flag values that indicates the status of the target. The following values are supported:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_IN_USE</b>
                </description>
              </item>
              <item>
                <description>0x00000001</description>
              </item>
            </list>
          </description>
          <description>
            <para>Target is in use on an active path.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_FORCIBLE</b>
                </description>
              </item>
              <item>
                <description>0x00000002</description>
              </item>
            </list>
          </description>
          <description>
            <para>The output can be forced on this target even if a monitor is not detected.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT</b>
                </description>
              </item>
              <item>
                <description>0x00000004</description>
              </item>
            </list>
          </description>
          <description>
            <para>Output is currently being forced in a boot-persistent manner.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH</b>
                </description>
              </item>
              <item>
                <description>0x00000008</description>
              </item>
            </list>
          </description>
          <description>
            <para>Output is currently being forced in a path-persistent manner.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM</b>
                </description>
              </item>
              <item>
                <description>0x00000010</description>
              </item>
            </list>
          </description>
          <description>
            <para>Output is currently being forced in a nonpersistent manner.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>DISPLAYCONFIG_TARGET_IS_HMD</b>
                </description>
              </item>
              <item>
                <description>0x00000020</description>
              </item>
            </list>
          </description>
          <description>
            <para>The output is a head-mounted display (HMD). Such a path is only returned from QueryDisplayConfig using the QDC_INCLUDE_HMD flag.</para>
            <para>Supported starting in the Windows 10 Creators Update (Version 1703).</para>
          </description>
        </item>
      </list>
    </summary>
  </member>
</doc>