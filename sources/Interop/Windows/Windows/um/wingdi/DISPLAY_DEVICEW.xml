<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DISPLAY_DEVICEW">
    <summary>
      <para>The <b>DISPLAY_DEVICE</b> structure receives information about the display device specified by the <i>iDevNum</i> parameter of the <see cref="EnumDisplayDevices" /> function.</para>
    </summary>
    <remarks>
      <para>The four string members are set based on the parameters passed to <see cref="EnumDisplayDevices" />. If the <i>lpDevice</i> param is <b>NULL</b>, then DISPLAY_DEVICE is filled in with information about the display adapter(s). If it is a valid device name, then it is filled in with information about the monitor(s) for that device.</para>
      <blockquote>
        <para>[!NOTE]
The wingdi.h header defines DISPLAY_DEVICE as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/gdi/device-context-structures">Device Context Structures</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/gdi/device-contexts">Device Contexts Overview</seealso>
    <seealso cref="EnumDisplayDevices " />
    <seealso cref="GetSystemMetrics" />
  </member>
  <member name="DISPLAY_DEVICEW.cb">
    <summary>
      <para>Size, in bytes, of the <b>DISPLAY_DEVICE</b> structure. This must be initialized prior to calling <see cref="EnumDisplayDevices" />.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceName">
    <summary>
      <para>An array of characters identifying the device name. This is either the adapter device or the monitor device.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceString">
    <summary>
      <para>An array of characters containing the device context string. This is either a description of the display adapter or of the display monitor.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.StateFlags">
    <summary>
      <para>Device state flags. It can be any reasonable combination of the following.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>DISPLAY_DEVICE_ACTIVE</description>
          <description>DISPLAY_DEVICE_ACTIVE specifies whether a monitor is  presented as being "on" by the respective GDI view. <b>Windows Vista:</b> EnumDisplayDevices will only enumerate monitors that can be presented as being "on."
</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_MIRRORING_DRIVER</description>
          <description>Represents a pseudo device used to mirror application drawing for remoting or other purposes. An invisible pseudo monitor is associated with this device. For example, NetMeeting uses it. Note that <see cref="GetSystemMetrics" /> (SM_MONITORS) only accounts for visible display monitors.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_MODESPRUNED</description>
          <description>The device has more display modes than its output devices support.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_PRIMARY_DEVICE</description>
          <description>The primary desktop is on the device. For a system with a single display card, this is always set. For a system with multiple display cards, only one device can have this set.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_REMOVABLE</description>
          <description>The device is removable; it cannot be the primary display.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_VGA_COMPATIBLE</description>
          <description>The device is VGA compatible.</description>
        </item>
      </list>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceID">
    <summary>
      <para>Not used.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceKey">
    <summary>
      <para>Reserved.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW">
    <summary>
      <para>The <b>DISPLAY_DEVICE</b> structure receives information about the display device specified by the <i>iDevNum</i> parameter of the <see cref="EnumDisplayDevices" /> function.</para>
    </summary>
    <remarks>
      <para>The four string members are set based on the parameters passed to <see cref="EnumDisplayDevices" />. If the <i>lpDevice</i> param is <b>NULL</b>, then DISPLAY_DEVICE is filled in with information about the display adapter(s). If it is a valid device name, then it is filled in with information about the monitor(s) for that device.</para>
      <blockquote>
        <para>[!NOTE]
The wingdi.h header defines DISPLAY_DEVICE as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/gdi/device-context-structures">Device Context Structures</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/gdi/device-contexts">Device Contexts Overview</seealso>
    <seealso cref="EnumDisplayDevices " />
    <seealso cref="GetSystemMetrics" />
  </member>
  <member name="DISPLAY_DEVICEW.cb">
    <summary>
      <para>Size, in bytes, of the <b>DISPLAY_DEVICE</b> structure. This must be initialized prior to calling <see cref="EnumDisplayDevices" />.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceName">
    <summary>
      <para>An array of characters identifying the device name. This is either the adapter device or the monitor device.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceString">
    <summary>
      <para>An array of characters containing the device context string. This is either a description of the display adapter or of the display monitor.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.StateFlags">
    <summary>
      <para>Device state flags. It can be any reasonable combination of the following.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>DISPLAY_DEVICE_ACTIVE</description>
          <description>DISPLAY_DEVICE_ACTIVE specifies whether a monitor is  presented as being "on" by the respective GDI view. <b>Windows Vista:</b> EnumDisplayDevices will only enumerate monitors that can be presented as being "on."
</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_MIRRORING_DRIVER</description>
          <description>Represents a pseudo device used to mirror application drawing for remoting or other purposes. An invisible pseudo monitor is associated with this device. For example, NetMeeting uses it. Note that <see cref="GetSystemMetrics" /> (SM_MONITORS) only accounts for visible display monitors.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_MODESPRUNED</description>
          <description>The device has more display modes than its output devices support.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_PRIMARY_DEVICE</description>
          <description>The primary desktop is on the device. For a system with a single display card, this is always set. For a system with multiple display cards, only one device can have this set.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_REMOVABLE</description>
          <description>The device is removable; it cannot be the primary display.</description>
        </item>
        <item>
          <description>DISPLAY_DEVICE_VGA_COMPATIBLE</description>
          <description>The device is VGA compatible.</description>
        </item>
      </list>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceID">
    <summary>
      <para>Not used.</para>
    </summary>
  </member>
  <member name="DISPLAY_DEVICEW.DeviceKey">
    <summary>
      <para>Reserved.</para>
    </summary>
  </member>
</doc>