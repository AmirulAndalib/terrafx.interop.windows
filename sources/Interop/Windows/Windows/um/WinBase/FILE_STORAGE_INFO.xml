<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="FILE_STORAGE_INFO">
    <summary>Contains directory information for a file. This structure is returned from the<see cref="GetFileInformationByHandleEx" /> function when<b>FileStorageInfo</b> is passed in the <i>FileInformationClass</i>parameter.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.LogicalBytesPerSector">
    <summary>Logical bytes per sector reported by physical storage. This is the smallest size for which uncached I/O is supported.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.PhysicalBytesPerSectorForAtomicity">
    <summary>Bytes per sector for atomic writes. Writes smaller than this may require a read before the entire block can be written atomically.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.PhysicalBytesPerSectorForPerformance">
    <summary>Bytes per sector for optimal performance for writes.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.FileSystemEffectivePhysicalBytesPerSectorForAtomicity">
    <summary>This is the size of the block used for atomicity by the file system. This may be a trade-off between the optimal size of the physical media and one that is easier to adapt existing code and structures.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.Flags">
    <summary>
      <para>This member can contain combinations of flags specifying information about the alignment of the storage.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STORAGE_INFO_FLAGS_ALIGNED_DEVICE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>When set, this flag indicates that the logical sectors of the storage device are aligned to physical sector boundaries.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>When set, this flag indicates that the partition is aligned to physical sector boundaries on the storage device.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="FILE_STORAGE_INFO.ByteOffsetForSectorAlignment">
    <summary>Logical sector offset within the first physical sector where the first logical sector is placed, in bytes. If this value is set to <b>STORAGE_INFO_OFFSET_UNKNOWN</b> (0xffffffff), there was insufficient information to compute this field.</summary>
  </member>
  <member name="FILE_STORAGE_INFO.ByteOffsetForPartitionAlignment">
    <summary>Offset used to align the partition to a physical sector boundary on the storage device, in bytes. If this value is set to <b>STORAGE_INFO_OFFSET_UNKNOWN</b> (0xffffffff), there was insufficient information to compute this field.</summary>
  </member>
</doc>