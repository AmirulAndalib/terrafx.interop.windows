<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.ImmAssociateContext">
    <summary>
      <para>Associates the specified input context with the specified window. By default, the operating system associates the default input context with each window as it is created.</para>
      <div>
        <b>Note</b>  To specify a type of association, the application should use the <see cref="ImmAssociateContextEx" /> function.</div>
    </summary>
    <param name="HWND">Handle to the window to associate with the input context.</param>
    <param name="HIMC">Handle to the input context. If <i>hIMC</i> is <b>NULL</b>, the function removes any association the window has with an input context. Thus IME cannot be used in the window.</param>
    <returns>Returns the handle to the input context previously associated with the window.</returns>
  </member>
  <member name="Windows.ImmAssociateContextEx">
    <summary>Changes the association between the input method context and the specified window or its children.</summary>
    <param name="unnamedParam1">Handle to the window to associate with the input context.</param>
    <param name="unnamedParam2">Handle to the input method context.</param>
    <param name="unnamedParam3">
      <para>Flags specifying the type of association between the window and the input method context. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IACE_CHILDREN</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Associate the input method context to the child windows of the specified window only.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IACE_DEFAULT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Restore the default input method context of the window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IACE_IGNORENOCONTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Do not associate the input method context with windows that are not associated with any input method context.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns <b>TRUE</b> if successful or <b>FALSE</b> otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIME">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIMEA">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIMEW">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIME">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIMEA">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmConfigureIMEW">
    <summary>Displays the configuration dialog box for the IME of the specified input locale identifier.</summary>
    <param name="HKL">Input locale identifier of an IME.</param>
    <param name="HWND">Handle to the parent window for the dialog box.</param>
    <param name="DWORD">
      <para>Flags specifying the type of dialog box to display. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_GENERAL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display general-purpose configuration dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_REGISTERWORD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display register word dialog box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_CONFIG_SELECTDICTIONARY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Display dictionary selection dialog box.</description>
        </listheader>
      </list>
    </param>
    <param name="LPVOID">Pointer to supplemental data. If <i>dwMode</i> is set to IME_CONFIG_REGISTERWORD, this parameter must indicate a <see cref="REGISTERWORD" /> structure. If <i>dwMode</i> is not IME_CONFIG_REGISTERWORD, this parameter is ignored.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmCreateContext">
    <summary>Creates a new input context, allocating memory for the context and initializing it. An application calls this function to prepare its own input context.</summary>
    <returns>Returns the handle to the new input context if successful, or <b>NULL</b> otherwise.</returns>
  </member>
  <member name="Windows.ImmDestroyContext">
    <summary>Releases the input context and frees associated memory.</summary>
    <param name="HIMC">Handle to the input context to free.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmDisableIME">
    <summary>Disables the IME for a thread or for all threads in a process.</summary>
    <param name="DWORD">Identifier of the thread for which to disable the IME. The thread must be in the same process as the application calling this function. The application sets this parameter to 0 to disable the IME for the current thread. The application specifies -1 to disable the IME for all threads in the current process.</param>
    <returns>Returns <b>TRUE</b> if successful or <b>FALSE</b> otherwise.</returns>
  </member>
  <member name="Windows.IMMDisableLegacyIME">
    <summary>Indicates that this thread is a Windows Store app UI thread.</summary>
    <returns>Returns <b>TRUE</b> if successful; otherwise, <b>FALSE</b>.</returns>
  </member>
  <member name="Windows.ImmEnumInputContext">
    <summary>Retrieves the input context for the specified thread.</summary>
    <param name="idThread">
      <para>Identifier for the thread. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>0</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Current thread.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>1</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Current process.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Thread ID</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Identifier of the thread for which to enumerate the context. This thread identifier can belong to another process.</description>
        </listheader>
      </list>
    </param>
    <param name="lpfn">Pointer to the enumeration callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-imcenumproc">EnumInputContext</a>.</param>
    <param name="lParam">Application-supplied data. The function passes this data to the callback function.</param>
    <returns>Returns <b>TRUE</b> if successful or <b>FALSE</b> otherwise.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWord">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCA">Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">Pointer to application-supplied data. The function passes this data to the callback function.</param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWordA">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCA">Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">Pointer to application-supplied data. The function passes this data to the callback function.</param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWordW">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCA">Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">Pointer to application-supplied data. The function passes this data to the callback function.</param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWord">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCW">TBD</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">
      <para>Pointer to application-supplied data. The function passes this data to the callback function.</para>
      <h4>- REGISTERWORDENUMPROCA [in]</h4>
      <para>Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</para>
    </param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWordA">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCW">TBD</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">
      <para>Pointer to application-supplied data. The function passes this data to the callback function.</para>
      <h4>- REGISTERWORDENUMPROCA [in]</h4>
      <para>Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</para>
    </param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEnumRegisterWordW">
    <summary>Enumerates the register strings having the specified reading string, style, and register string.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="REGISTERWORDENUMPROCW">TBD</param>
    <param name="lpszReading">Pointer to the reading string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all available reading strings that match the <i>dwStyle</i> and <i>lpszRegister</i> settings.</param>
    <param name="DWORD">Style to enumerate. The application specifies 0 if the function is to enumerate all available styles that match the <i>lpszReading</i> and <i>lpszRegister</i> settings.</param>
    <param name="lpszRegister">Pointer to the register string to enumerate. The application sets this parameter to <b>NULL</b> if the function is to enumerate all register strings that match the <i>lpszReading</i> and <i>dwStyle</i> settings.</param>
    <param name="LPVOID">
      <para>Pointer to application-supplied data. The function passes this data to the callback function.</para>
      <h4>- REGISTERWORDENUMPROCA [in]</h4>
      <para>Pointer to the callback function. For more information, see <a href="https://docs.microsoft.com//windows/desktop/api/imm/nc-imm-registerwordenumproca">EnumRegisterWordProc</a>.</para>
    </param>
    <returns>Returns the last value returned by the callback function, with the meaning defined by the application. The function returns 0 if it cannot enumerate the register strings.</returns>
  </member>
  <member name="Windows.ImmEscape">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmEscapeA">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmEscapeW">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmEscape">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmEscapeA">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmEscapeW">
    <summary>Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="UINT">Index of the operations. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <param name="LPVOID">Pointer to the data required for the escape specified in <i>uEscape</i>. On output, this parameter indicates the result of the escape. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-escapes">IME Escapes</a>.</param>
    <returns>Returns an operation-specific value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateList">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateListA">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateListW">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateListCount">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateListCountA">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateListCountW">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateListCount">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateListCountA">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateListCountW">
    <summary>Retrieves the size of the candidate lists.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpdwListCount">Pointer to the buffer in which this function retrieves the size of the candidate lists.</param>
    <returns>Returns the number of bytes required for all candidate lists if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCandidateList">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateListA">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateListW">
    <summary>Retrieves a candidate list.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="deIndex">Zero-based index of the candidate list.</param>
    <param name="lpCandList">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the candidate list.</param>
    <param name="dwBufLen">Size, in bytes, of the buffer to receive the candidate list. The application can specify 0 for this parameter if the function is to return the required size of the output buffer only.</param>
    <returns>
      <para>Returns the number of bytes copied to the candidate list buffer if successful. If the application has supplied 0 for the <i>dwBufLen</i> parameter, the function returns the size required for the candidate list buffer.</para>
      <para>The function returns 0 if it does not succeed.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetCandidateWindow">
    <summary>Retrieves information about the candidates window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the candidates window.</param>
    <param name="lpCandidate">Pointer to a <see cref="CANDIDATEFORM" /> structure in which this function retrieves information about the candidates window.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFont">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFontA">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFontW">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFont">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFontA">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionFontW">
    <summary>Retrieves information about the logical font currently used to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure in which this function retrieves the font information.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetCompositionString">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionStringA">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionStringW">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionString">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionStringA">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionStringW">
    <summary>Retrieves information about the composition string.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="DWORD">Index of the information to retrieve, which is one of the values specified in <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-composition-string-values">IME Composition String Values</a>. For each value except GCS_CURSORPOS and GCS_DELTASTART, the function copies the requested information to the output buffer. The function returns the cursor and delta position values in the low 16 bits of the return value.</param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the composition string information.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer, even if the output is a Unicode string. The application sets this parameter to 0 if the function is to return the size of the required output buffer.</param>
    <returns>
      <para>Returns the number of bytes copied to the output buffer. If <i>dwBufLen</i> is set to 0, the function returns the buffer size, in bytes, required to receive all requested information, excluding the terminating null character. The return value is always the size, in bytes, even if the requested data is a Unicode string.</para>
      <para>This function returns one of the following negative error codes if it does not succeed:</para>
      <list type="bullet">
        <item>
          <description>IMM_ERROR_NODATA. Composition data is not ready in the input context.</description>
        </item>
        <item>
          <description>IMM_ERROR_GENERAL. General error detected by IME.</description>
        </item>
      </list>
    </returns>
  </member>
  <member name="Windows.ImmGetCompositionWindow">
    <summary>Retrieves information about the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpCompForm">Pointer to a <see cref="COMPOSITIONFORM" /> structure in which the function retrieves information about the composition window.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetContext">
    <summary>Returns the input context associated with the specified window.</summary>
    <param name="HWND">Handle to the window for which to retrieve the input context.</param>
    <returns>Returns the handle to the input context.</returns>
  </member>
  <member name="Windows.ImmGetConversionList">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionListA">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionListW">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionList">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionListA">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionListW">
    <summary>Retrieves the conversion result list of characters or words without generating any IME-related messages.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpSrc">Pointer to a null-terminated character string specifying the source of the list.</param>
    <param name="lpDst">Pointer to a <see cref="CANDIDATELIST" /> structure in which the function retrieves the list.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size required for the complete conversion result list.</param>
    <param name="uFlag">
      <para>Action flag. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the reading string. The function copies the result string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSECONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function copies the reading string to the destination buffer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GCL_REVERSE_LENGTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Source string is the result string. The function returns the size, in bytes, of the reading string created if GCL_REVERSECONVERSION is specified.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the number of bytes copied to the output buffer. If the application sets the <i>dwBufLen</i> parameter to 0, the function returns the size, in bytes, of the required output buffer.</returns>
  </member>
  <member name="Windows.ImmGetConversionStatus">
    <summary>Retrieves the current conversion status.</summary>
    <param name="HIMC">Handle to the input context for which to retrieve status information.</param>
    <param name="lpfdwConversion">Pointer to a variable in which the function retrieves a combination of conversion mode values. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-conversion-mode-values">IME Conversion Mode Values</a>.</param>
    <param name="lpfdwSentence">Pointer to a variable in which the function retrieves a sentence mode value. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-sentence-mode-values">IME Sentence Mode Values</a>.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetDefaultIMEWnd">
    <summary>Retrieves the default window handle to the IME class.</summary>
    <param name="HWND">Handle to the window.</param>
    <returns>Returns the default window handle to the IME class if successful, or <b>NULL</b> otherwise.</returns>
  </member>
  <member name="Windows.ImmGetDescription">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetDescriptionA">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetDescriptionW">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetDescription">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetDescriptionA">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetDescriptionW">
    <summary>Copies the description of the IME to the specified buffer.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszDescription">Pointer to a buffer in which the function retrieves the null-terminated string describing the IME.</param>
    <param name="uBufLen">
      <para>Size, in characters, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed for the complete description, excluding the terminating null character.</para>
      <para>
        <b>Windows NT, Windows 2000, Windows XP:</b> The size of the buffer is in Unicode characters, each consisting of two bytes. If the parameter is set to 0, the function returns the size of the buffer required in Unicode characters, excluding the Unicode terminating null character.</para>
    </param>
    <returns>Returns the number of characters copied to the output buffer. If the application sets the <i>uBufLen</i> parameter to 0, the function returns the size of the buffer required to receive the description. Neither value includes the terminating null character. For Unicode, the function returns the number of Unicode characters, not including the Unicode terminating null character.</returns>
  </member>
  <member name="Windows.ImmGetGuideLine">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetGuideLineA">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetGuideLineW">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetGuideLine">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetGuideLineA">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetGuideLineW">
    <summary>Retrieves information about errors. Applications use the information for user notifications.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of guideline information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_LEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error level.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_INDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_STRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return the error message string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GGL_PRIVATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Return information about reverse conversion.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuf">Pointer to a buffer in which the function retrieves the error message string. This parameter contains <b>NULL</b> if <i>dwIndex</i> is not GGL_STRING or GGL_PRIVATE or if <i>dwBufLen</i> is set to 0.</param>
    <param name="dwBufLen">Size, in bytes, of the output buffer. The application sets this parameter to 0 if the function is to return the buffer size needed to receive the error message string, not including the terminating null character.</param>
    <returns>
      <para>Returns an error level, an error index, or the size of an error message string, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is GGL_LEVEL, the return is one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_ERROR</description>
          <description>Error. The IME might not be able to continue.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_FATAL</description>
          <description>Fatal error. The IME cannot continue, and data might be lost.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_INFORMATION</description>
          <description>No error. Information is available for the user.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_NOGUIDELINE</description>
          <description>No error. Remove previous error message if still visible.</description>
        </listheader>
        <listheader>
          <description>GL_LEVEL_WARNING</description>
          <description>Unexpected input or other result. The user should be warned, but the IME can continue.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is GGL_INDEX, the return value is one of the following values.</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>GL_ID_CANNOTSAVE</description><description>The dictionary or the statistics data cannot be saved.</description></listheader><listheader><description>GL_ID_NOCONVERT</description><description>The IME cannot convert any more.</description></listheader><listheader><description>GL_ID_NODICTIONARY</description><description>The IME cannot find the dictionary, or the dictionary has an unexpected format.</description></listheader><listheader><description>GL_ID_NOMODULE</description><description>The IME cannot find the module that is needed.</description></listheader><listheader><description>GL_ID_READINGCONFLICT</description><description>A reading conflict occurred. For example, some vowels cannot be put together to form one character.</description></listheader><listheader><description>GL_ID_TOOMANYSTROKE</description><description>There are too many strokes for one character or one clause.</description></listheader><listheader><description>GL_ID_TYPINGERROR</description><description>Typing error. The IME cannot handle this typing.</description></listheader><listheader><description>GL_ID_UNKNOWN</description><description>Unknown error. Refer to the error message string.</description></listheader><listheader><description>GL_ID_INPUTREADING</description><description>The IME is accepting reading character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTRADICAL</description><description>The IME is accepting radical character input from the end user.</description></listheader><listheader><description>GL_ID_INPUTCODE</description><description>The IME is accepting character code input from the end user.</description></listheader><listheader><description>GL_ID_CHOOSECANDIDATE</description><description>The IME is accepting candidate string selection from the end user.</description></listheader><listheader><description>GL_ID_REVERSECONVERSION</description><description>Information about reverse conversion is available by calling <b>ImmGetGuideLine</b>, specifying GGL_PRIVATE. The information retrieved is in <see cref="CANDIDATELIST" /> format.</description></listheader></list> <para>If <i>dwIndex</i> is GGL_STRING, the return value is the number of bytes of the string copied to the buffer. However, if <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the string, not including the terminating null character. For Unicode, if <i>dwBufLen</i> is 0, the return value is the size, in bytes not including the Unicode terminating null character.</para><para>If <i>dwIndex</i> is GGL_PRIVATE, the return value is the number of bytes of information copied to the buffer. If <i>dwIndex</i> is GGL_PRIVATE and <i>dwBufLen</i> is 0, the return value is the buffer size needed to receive the information.</para></returns>
  </member>
  <member name="Windows.ImmGetIMEFileName">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetIMEFileNameA">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetIMEFileNameW">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetIMEFileName">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetIMEFileNameA">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetIMEFileNameW">
    <summary>Retrieves the file name of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszFileName">Pointer to a buffer in which the function retrieves the file name. This parameter contains <b>NULL</b> when <i>uBufLen</i> is set to <b>NULL</b>.</param>
    <param name="uBufLen">Size, in bytes, of the output buffer. The application specifies 0 if the function is to return the buffer size needed to receive the file name, not including the terminating null character. For Unicode, <i>uBufLen</i> specifies the size in Unicode characters, not including the terminating null character.</param>
    <returns>
      <para>Returns the number of bytes in the file name copied to the output buffer. If the application sets <i>uBufLen</i> to 0, the function returns the size of the buffer required for the file name. In either case, the terminating null character is not included.</para>
      <para>For Unicode, the function returns the number of Unicode characters copied into the output buffer, not including the Unicode terminating null character.</para>
    </returns>
  </member>
  <member name="Windows.ImmGetImeMenuItems">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetImeMenuItemsA">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetImeMenuItemsW">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetImeMenuItems">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetImeMenuItemsA">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetImeMenuItemsW">
    <summary>Retrieves the menu items that are registered in the IME menu of a specified input context.</summary>
    <param name="unnamedParam1">Handle to the input context for the specified menu items.</param>
    <param name="unnamedParam2">
      <para>Flag specifying menu information options. The following value is defined.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMIF_RIGHTMENU</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items for the context menu, obtained by a right mouse click.</description>
        </listheader>
      </list>
    </param>
    <param name="unnamedParam3">
      <para>Type of menu to retrieve. This parameter can have one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control conversion mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_SMODE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control sentence mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_CONFIGURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME configuration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_TOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that are related to IME tools.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_HELP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control IME Help.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_OTHER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control other IME functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGIMII_INPUTTOOLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieve the menu items that control menu items related to IME input tools providing an extended way to input characters.</description>
        </listheader>
      </list>
    </param>
    <param name="lpImeParentMenu">Pointer to an <see cref="IMEMENUITEMINFO" /> structure in which the function retrieves parent menu information. To retrieve information about the submenu items of this parent menu, the application sets the <b>fType</b> member to MFT_SUBMENU. This parameter contains <b>NULL</b> if the function retrieves only top-level menu items.</param>
    <param name="lpImeMenu">Pointer to an array of <see cref="IMEMENUITEMINFO" /> structures in which the function retrieves information about the menu items. This parameter contains <b>NULL</b> if the function retrieves the number of registered menu items.</param>
    <param name="dwSize">Size of the buffer to receive the <see cref="IMEMENUITEMINFO" /> structure.</param>
    <returns>Returns the number of menu items copied into <i>lpImeMenu</i>. If <i>lpImeMenu</i> specifies <b>NULL</b>, the function returns the number of registered menu items in the specified input context.</returns>
  </member>
  <member name="Windows.ImmGetOpenStatus">
    <summary>Determines whether the IME is open or closed.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <returns>Returns a nonzero value if the IME is open, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetProperty">
    <summary>Retrieves the property and capabilities of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="DWORD">
      <para>Type of property information to retrieve. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_CONVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Conversion capabilities.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_GETIMEVERSION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>System version number for which the specified IME was created.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_PROPERTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Property information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_SELECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Selection inheritance capabilities.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_SENTENCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sentence mode capabilities.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_SETCOMPSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Composition string capabilities.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IGP_UI</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>User interface capabilities.</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>Returns the property or capability value, depending on the value of the <i>dwIndex</i> parameter. If <i>dwIndex</i> is set to IGP_PROPERTY, the function returns one or more of the following values:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>IME_PROP_AT_CARET</description>
          <description>If set, conversion window is at the caret position. If clear, the window is near the caret position.</description>
        </listheader>
        <listheader>
          <description>IME_PROP_SPECIAL_UI</description>
          <description>If set, the IME has a nonstandard user interface. The application should not draw in the IME window.</description>
        </listheader>
        <listheader>
          <description>IME_PROP_CANDLIST_START_FROM_1</description>
          <description>If set, strings in the candidate list are numbered starting at 1. If clear, strings start at 0.</description>
        </listheader>
        <listheader>
          <description>IME_PROP_UNICODE</description>
          <description>If set, the IME is viewed as a Unicode IME. The operating system and the IME communicate through the Unicode IME interface. If clear, the IME uses the ANSI interface to communicate with the operating system.</description>
        </listheader>
        <listheader>
          <description>IME_PROP_COMPLETE_ON_UNSELECT</description>
          <description>If set, the IME completes the composition string when the IME is deactivated. If clear, the IME cancels the composition string when the IME is deactivated, for example, from a keyboard layout change.</description>
        </listheader>
        <listheader>
          <description>IME_PROP_ACCEPT_WIDE_VKEY</description>
          <description>If set, the IME processes the injected Unicode that came from the <see cref="SendInput" /> function by using VK_PACKET. If clear, the IME might not process the injected Unicode, and might send the injected Unicode to the application directly.</description>
        </listheader>
      </list> <para>If <i>dwIndex</i> is set to IGP_UI, the function returns one or more of the following values:</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>UI_CAP_2700</description><description>Support text escapement values of 0 or 2700. For more information, see the <b>lfEscapement</b> member of the <see cref="LOGFONT" /> structure.</description></listheader><listheader><description>UI_CAP_ROT90</description><description>Support text escapement values of 0, 900, 1800, or 2700. For more information, see <b>lfEscapement</b>.</description></listheader><listheader><description>UI_CAP_ROTANY</description><description>Support any text escapement value. For more information, see <b>lfEscapement</b>.</description></listheader></list> <para>If <i>dwIndex</i> is set to IGP_SETCOMPSTR, the function returns one or more of the following values:</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>SCS_CAP_COMPSTR</description><description>Create the composition string by calling the <see cref="ImmSetCompositionString" /> function with the SCS_SETSTR value.</description></listheader><listheader><description>SCS_CAP_MAKEREAD</description><description>Create the reading string from corresponding composition string when using the <see cref="ImmSetCompositionString" /> function with SCS_SETSTR and without setting <i>lpRead</i>.</description></listheader><listheader><description>SCS_CAP_SETRECONVERTSTRING:</description><description>This IME can support reconversion. Use <see cref="ImmSetCompositionString" /> to do reconversion.</description></listheader></list> <para>If <i>dwIndex</i> is set to IGP_SELECT, the function returns one or more of the following values:</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>SELECT_CAP_CONVMODE</description><description>Inherit conversion mode when a new IME is selected.</description></listheader><listheader><description>SELECT_CAP_SENTENCE</description><description>Inherit sentence mode when a new IME is selected.</description></listheader></list> <para>If <i>dwIndex</i> is set to IGP_GETIMEVERSION, the function returns one or more of the following values:</para><list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description>IMEVER_0310</description><description>The IME was created for Windows 3.1.</description></listheader><listheader><description>IMEVER_0400</description><description>The IME was created for Windows Me/98/95.</description></listheader></list></returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyle">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyleA">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyleW">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyle">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyleA">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetRegisterWordStyleW">
    <summary>Retrieves a list of the styles supported by the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="nItem">Maximum number of styles that the output buffer can hold. The application sets this parameter to 0 if the function is to count the number of styles available in the IME.</param>
    <param name="lpStyleBuf">Pointer to a <see cref="STYLEBUF" /> structure in which the function retrieves the style information.</param>
    <returns>Returns the number of styles copied to the buffer. If the application sets the <i>nItem</i> parameter to 0, the return value is the number of styles available in the IME.</returns>
  </member>
  <member name="Windows.ImmGetStatusWindowPos">
    <summary>Retrieves the position of the status window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpptPos">Pointer to a <see cref="POINT" /> structure in which the function retrieves the position coordinates. These are screen coordinates, relative to the upper left corner of the screen.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmGetVirtualKey">
    <summary>Retrieves the original virtual key value associated with a key input message that the IME has already processed.</summary>
    <param name="HWND">Handle to the window that receives the key message.</param>
    <returns>If <see cref="TranslateMessage" /> has been called by the application, <b>ImmGetVirtualKey</b> returns VK_PROCESSKEY; otherwise, it returns the virtual key.</returns>
  </member>
  <member name="Windows.ImmInstallIME">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmInstallIMEA">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmInstallIMEW">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmInstallIME">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmInstallIMEA">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmInstallIMEW">
    <summary>Installs an IME.</summary>
    <param name="lpszIMEFileName">Pointer to a null-terminated string that specifies the full path of the IME.</param>
    <param name="lpszLayoutText">Pointer to a null-terminated string that specifies the name of the IME and the associated layout text.</param>
    <returns>Returns the input locale identifier for the IME.</returns>
  </member>
  <member name="Windows.ImmIsIME">
    <summary>Determines if the specified input locale has an IME.</summary>
    <param name="HKL">Input locale identifier.</param>
    <returns>Returns a nonzero value if the specified locale has an IME, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessage">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessageA">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessageW">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessage">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessageA">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmIsUIMessageW">
    <summary>Checks for messages intended for the IME window and sends those messages to the window.</summary>
    <param name="HWND">Handle to a window belonging to the IME window class.</param>
    <param name="UINT">Message to check.</param>
    <param name="WPARAM">Message-specific parameter.</param>
    <param name="LPARAM">Message-specific parameter.</param>
    <returns>Returns a nonzero value if the message is processed by the IME window, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmNotifyIME">
    <summary>Notifies the IME about changes to the status of the input context.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwAction">
      <para>Notification code. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_CHANGECANDIDATELIST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application changed the current selected candidate. The <i>dwIndex</i> parameter specifies an index of a candidate list to be selected and <i>dwValue</i> is not used.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_CLOSECANDIDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application directs the IME to close a candidate list. The <i>dwIndex</i> parameter specifies an index of the list to close, and <i>dwValue</i> is not used. The IME sends a <a href="https://docs.microsoft.com//windows/desktop/Intl/imn-closecandidate">IMN_CLOSECANDIDATE</a> command to the application if it closes the list.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_COMPOSITIONSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application directs the IME to carry out an action on the composition string. The <i>dwIndex</i> parameter can be CPS_CANCEL, CPS_COMPLETE, CPS_CONVERT, or CPS_REVERT.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_IMEMENUSELECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application directs the IME to allow the application to handle the specified menu. The <i>dwIndex</i> parameter specifies the ID of the menu and <i>dwValue</i> is an application-defined value for that menu item.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_OPENCANDIDATE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application directs the IME to open a candidate list. The <i>dwIndex</i> parameter specifies the index of the list to open, and <i>dwValue</i> is not used. The IME sends a <a href="https://docs.microsoft.com//windows/desktop/Intl/imn-opencandidate">IMN_OPENCANDIDATE</a> command to the application if it opens the list.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_SELECTCANDIDATESTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An application has selected one of the candidates. The <i>dwIndex</i> parameter specifies an index of a candidate list to be selected. The <i>dwValue</i> parameter specifies an index of a candidate string in the selected candidate list.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_SETCANDIDATE_PAGESIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application changes the page size of a candidate list. The <i>dwIndex</i> parameter specifies the candidate list to be changed and must have a value in the range 0 to 3. The <i>dwValue</i> parameter specifies the new page size.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NI_SETCANDIDATE_PAGESTART</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application changes the page starting index of a candidate list. The <i>dwIndex</i> parameter specifies the candidate list to be changed and must have a value in the range 0 to 3. The <i>dwValue</i> parameter specifies the new page start index.</description>
        </listheader>
      </list>
    </param>
    <param name="dwIndex">
      <para>Index of a candidate list. Alternatively, if <i>dwAction</i> is NI_COMPOSITIONSTR, this parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CPS_CANCEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Clear the composition string and set the status to no composition string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CPS_COMPLETE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string as the result string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CPS_CONVERT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Convert the composition string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CPS_REVERT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cancel the current composition string and set the composition string to be the unconverted string.</description>
        </listheader>
      </list>
    </param>
    <param name="dwValue">Index of a candidate string. The application can set this parameter or ignore it, depending on the value of the <i>dwAction</i> parameter.</param>
    <returns>Returns nonzero if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWord">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWordA">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWordW">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWord">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWordA">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmRegisterWordW">
    <summary>Registers a string with the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to register.</param>
    <param name="DWORD">
      <para>Style of the string to register. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value in the range from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string has a private style maintained by the specified IME. See the Remarks section for more details.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszRegister">Pointer to the null-terminated string to register.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmReleaseContext">
    <summary>Releases the input context and unlocks the memory associated in the input context. An application must call this function for each call to the <see cref="ImmGetContext" /> function.</summary>
    <param name="HWND">Handle to the window for which the input context was previously retrieved.</param>
    <param name="HIMC">Handle to the input context.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCandidateWindow">
    <summary>Sets information about the candidates window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpCandidate">Pointer to a <see cref="CANDIDATEFORM" /> structure that contains information about the candidates window.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFont">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFontA">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFontW">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFont">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFontA">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionFontW">
    <summary>Sets the logical font to use to display characters in the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lplf">Pointer to a <see cref="LOGFONT" /> structure containing the font information to set.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionString">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionStringA">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionStringW">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionString">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionStringA">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionStringW">
    <summary>Sets the characters, attributes, and clauses of the composition and reading strings.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="dwIndex">
      <para>Type of information to set. This parameter can have one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETSTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid string. If either string is too long, the IME truncates it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGEATTR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set attributes for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must indicate a valid attribute array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_CHANGECLAUSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Set the clause information for the composition string, the reading string, or both. At least one of the <i>lpComp</i> and <i>lpRead</i> parameters must point to a valid clause information array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_SETRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to reconvert the string using a specified <see cref="RECONVERTSTRING" /> structure.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SCS_QUERYRECONVERTSTRING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>Windows Me/98, Windows 2000, Windows XP:</b> Ask IME to adjust the <see cref="RECONVERTSTRING" /> structure. Then the application can pass the adjusted structure into this function using SCS_SETRECONVERTSTRING. IME does not generate any <a href="https://docs.microsoft.com//windows/desktop/Intl/wm-ime-composition">WM_IME_COMPOSITION</a> messages.</description>
        </listheader>
      </list>
    </param>
    <param name="lpComp">Pointer to a buffer containing the information to set for the composition string, as specified by the value of <i>dwIndex</i>.</param>
    <param name="dwCompLen">Size, in bytes, of the information buffer for the composition string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <param name="lpRead">Pointer to a buffer containing the information to set for the reading string, as specified by the value of <i>dwIndex</i>. The application can set this parameter to <b>NULL</b>.</param>
    <param name="dwReadLen">Size, in bytes, of the information buffer for the reading string, even if SCS_SETSTR is specified and the buffer contains a Unicode string.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetCompositionWindow">
    <summary>Sets the position of the composition window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpCompForm">Pointer to a <see cref="COMPOSITIONFORM" /> structure that contains the new position and other related information about the composition window.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetConversionStatus">
    <summary>Sets the current conversion status.</summary>
    <param name="unnamedParam1">Handle to the input context.</param>
    <param name="unnamedParam2">Conversion mode values. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-conversion-mode-values">IME Conversion Mode Values</a>.</param>
    <param name="unnamedParam3">Sentence mode values. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-sentence-mode-values">IME Sentence Mode Values</a>.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetOpenStatus">
    <summary>Opens or closes the IME.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="BOOL">
      <b>TRUE</b> if the IME is open, or <b>FALSE</b> if it is closed.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSetStatusWindowPos">
    <summary>Sets the position of the status window.</summary>
    <param name="HIMC">Handle to the input context.</param>
    <param name="lpptPos">Pointer to a <see cref="POINT" /> structure containing the new position of the status window, in screen coordinates relative to the upper left corner of the display screen.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmSimulateHotKey">
    <summary>Simulates the specified IME hot key, causing the same response as if the user presses the hot key in the specified window.</summary>
    <param name="HWND">Handle to the window.</param>
    <param name="DWORD">Identifier of the IME hot key. For more information, see <a href="https://docs.microsoft.com//windows/desktop/Intl/ime-hot-key-identifiers">IME Hot Key Identifiers</a>.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWord">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWordA">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWordW">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWord">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWordA">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
  <member name="Windows.ImmUnregisterWordW">
    <summary>Removes a register string from the dictionary of the IME associated with the specified input locale.</summary>
    <param name="HKL">Input locale identifier.</param>
    <param name="lpszReading">Pointer to a null-terminated reading string associated with the string to remove.</param>
    <param name="DWORD">
      <para>Style of the register string. This parameter can have any of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IME_REGWORD_STYLE_EUDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in the end-user-defined character (EUDC) range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>Any value from IME_REGWORD_STYLE_USER_FIRST to IME_REGWORD_STYLE_USER_LAST</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is in a private style maintained by the specified IME.</description>
        </listheader>
      </list>
    </param>
    <param name="lpszUnregister">Pointer to a null-terminated string specifying the register string to remove.</param>
    <returns>Returns a nonzero value if successful, or 0 otherwise.</returns>
  </member>
</doc>