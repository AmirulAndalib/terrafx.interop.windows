<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="KEYBDINPUT">
    <summary>Contains information about a simulated keyboard event.</summary>
  </member>
  <member name="KEYBDINPUT.wVk">
    <summary>A <a href="https://docs.microsoft.com//windows/desktop/inputdev/virtual-key-codes">virtual-key code</a>. The code must be a value in the range 1 to 254. If the <b>dwFlags</b> member specifies <b>KEYEVENTF_UNICODE</b>, <b>wVk</b> must be 0.</summary>
  </member>
  <member name="KEYBDINPUT.wScan">
    <summary>A hardware scan code for the key. If <b>dwFlags</b> specifies <b>KEYEVENTF_UNICODE</b>, <b>wScan</b> specifies a Unicode character which is to be sent to the foreground application.</summary>
  </member>
  <member name="KEYBDINPUT.dwFlags">
    <summary>
      <para>Specifies various aspects of a keystroke. This member can be certain combinations of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>KEYEVENTF_EXTENDEDKEY</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>If specified, the <b>wScan</b> scan code consists of a sequence of two bytes, where the first byte has a value of 0xE0. See <a href="https://docs.microsoft.com//windows/win32/inputdev/about-keyboard-input#extended-key-flag">Extended-Key Flag</a> for more info.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>KEYEVENTF_KEYUP</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>If specified, the key is being released. If not specified, the key is being pressed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>KEYEVENTF_SCANCODE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>If specified, <b>wScan</b> identifies the key and <b>wVk</b> is ignored.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>KEYEVENTF_UNICODE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description> If specified, the system synthesizes a <b>VK_PACKET</b> keystroke. The <b>wVk</b> parameter must be zero. This flag can only be combined with the <b>KEYEVENTF_KEYUP</b> flag. For more information, see the Remarks section.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="KEYBDINPUT.time">
    <summary>The time stamp for the event, in milliseconds. If this parameter is zero, the system will provide its own time stamp.</summary>
  </member>
  <member name="KEYBDINPUT.dwExtraInfo">
    <summary>An additional value associated with the keystroke. Use the <see cref="GetMessageExtraInfo" /> function to obtain this information.</summary>
  </member>
</doc>