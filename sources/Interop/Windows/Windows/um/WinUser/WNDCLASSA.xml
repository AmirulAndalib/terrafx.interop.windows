<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="WNDCLASSA">
    <summary>
      <para>Contains the window class attributes that are registered by the <see cref="RegisterClass" /> function.</para>
      <para>This structure has been superseded by the <see cref="WNDCLASSEX" /> structure used with the <see cref="RegisterClassEx" /> function. You can still use <b>WNDCLASS</b> and <see cref="RegisterClass" /> if you do not need to set the small icon associated with the window class.</para>
    </summary>
  </member>
  <member name="WNDCLASSA.style">
    <summary>The class style(s). This member can be any combination of the <a href="https://docs.microsoft.com//windows/desktop/winmsg/about-window-classes#class-styles">Class Styles</a>.</summary>
  </member>
  <member name="WNDCLASSA.lpfnWndProc">
    <summary>A pointer to the window procedure. You must use the <see cref="CallWindowProc" /> function to call the window procedure. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ms633573(v=vs.85)">WindowProc</a>.</summary>
  </member>
  <member name="WNDCLASSA.cbClsExtra">
    <summary>The number of extra bytes to allocate following the window-class structure. The system initializes the bytes to zero.</summary>
  </member>
  <member name="WNDCLASSA.cbWndExtra">
    <summary>The number of extra bytes to allocate following the window instance. The system initializes the bytes to zero. If an application uses <b>WNDCLASS</b> to register a dialog box created by using the<b>CLASS</b> directive in the resource file, it must set this member to <b>DLGWINDOWEXTRA</b>.</summary>
  </member>
  <member name="WNDCLASSA.hInstance">
    <summary>A handle to the instance that contains the window procedure for the class.</summary>
  </member>
  <member name="WNDCLASSA.hIcon">
    <summary>A handle to the class icon. This member must be a handle to an icon resource. If this member is <b>NULL</b>, the system provides a default icon.</summary>
  </member>
  <member name="WNDCLASSA.hCursor">
    <summary>A handle to the class cursor. This member must be a handle to a cursor resource. If this member is <b>NULL</b>, an application must explicitly set the cursor shape whenever the mouse moves into the application's window.</summary>
  </member>
  <member name="WNDCLASSA.hbrBackground">
    <summary>
      <para>A handle to the class background brush. This member can be a handle to the physical brush to be used for painting the background, or it can be a color value. A color value must be one of the following standard system colors (the value 1 must be added to the chosen color). If a color value is given, you must convert it to one of the following<b>HBRUSH</b> types:</para>
      <list type="bullet">
        <item>
          <description>COLOR_ACTIVEBORDER</description>
        </item>
        <item>
          <description>COLOR_ACTIVECAPTION</description>
        </item>
        <item>
          <description>COLOR_APPWORKSPACE</description>
        </item>
        <item>
          <description>COLOR_BACKGROUND</description>
        </item>
        <item>
          <description>COLOR_BTNFACE</description>
        </item>
        <item>
          <description>COLOR_BTNSHADOW</description>
        </item>
        <item>
          <description>COLOR_BTNTEXT</description>
        </item>
        <item>
          <description>COLOR_CAPTIONTEXT</description>
        </item>
        <item>
          <description>COLOR_GRAYTEXT</description>
        </item>
        <item>
          <description>COLOR_HIGHLIGHT</description>
        </item>
        <item>
          <description>COLOR_HIGHLIGHTTEXT</description>
        </item>
        <item>
          <description>COLOR_INACTIVEBORDER</description>
        </item>
        <item>
          <description>COLOR_INACTIVECAPTION</description>
        </item>
        <item>
          <description>COLOR_MENU</description>
        </item>
        <item>
          <description>COLOR_MENUTEXT</description>
        </item>
        <item>
          <description>COLOR_SCROLLBAR</description>
        </item>
        <item>
          <description>COLOR_WINDOW</description>
        </item>
        <item>
          <description>COLOR_WINDOWFRAME</description>
        </item>
        <item>
          <description>COLOR_WINDOWTEXT</description>
        </item>
      </list>The system automatically deletes class background brushes when the class is unregistered by using <see cref="UnregisterClass" />. An application should not delete these brushes. <para>When this member is <b>NULL</b>, an application must paint its own background whenever it is requested to paint in its client area. To determine whether the background must be painted, an application can either process the<a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-erasebkgnd">WM_ERASEBKGND</a> message or test the<b>fErase</b> member of the <see cref="PAINTSTRUCT" /> structure filled by the <see cref="BeginPaint" /> function.</para></summary>
  </member>
  <member name="WNDCLASSA.lpszMenuName">
    <summary>The resource name of the class menu, as the name appears in the resource file. If you use an integer to identify the menu, use the <see cref="MAKEINTRESOURCE" /> macro. If this member is <b>NULL</b>, windows belonging to this class have no default menu.</summary>
  </member>
  <member name="WNDCLASSA.lpszClassName">
    <summary>
      <para>A pointer to a null-terminated string or is an atom. If this parameter is an atom, it must be a class atom created by a previous call to the <see cref="RegisterClass" /> or <see cref="RegisterClassEx" /> function. The atom must be in the low-order word of<b>lpszClassName</b>; the high-order word must be zero.</para>
      <para>If <b>lpszClassName</b> is a string, it specifies the window class name. The class name can be any name registered with <see cref="RegisterClass" /> or <see cref="RegisterClassEx" />, or any of the predefined control-class names.</para>
      <para>The maximum length for <b>lpszClassName</b> is 256. If <b>lpszClassName</b> is greater than the maximum length, the <see cref="RegisterClass" /> function will fail.</para>
    </summary>
  </member>
  <member name="WNDCLASSA">
    <summary>
      <para>Contains the window class attributes that are registered by the <see cref="RegisterClass" /> function.</para>
      <para>This structure has been superseded by the <see cref="WNDCLASSEX" /> structure used with the <see cref="RegisterClassEx" /> function. You can still use <b>WNDCLASS</b> and <see cref="RegisterClass" /> if you do not need to set the small icon associated with the window class.</para>
    </summary>
  </member>
  <member name="WNDCLASSA.style">
    <summary>The class style(s). This member can be any combination of the <a href="https://docs.microsoft.com//windows/desktop/winmsg/about-window-classes">Class Styles</a>.</summary>
  </member>
  <member name="WNDCLASSA.lpfnWndProc">
    <summary>A pointer to the window procedure. You must use the <see cref="CallWindowProc" /> function to call the window procedure. For more information, see <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ms633573(v=vs.85)">WindowProc</a>.</summary>
  </member>
  <member name="WNDCLASSA.cbClsExtra">
    <summary>The number of extra bytes to allocate following the window-class structure. The system initializes the bytes to zero.</summary>
  </member>
  <member name="WNDCLASSA.cbWndExtra">
    <summary>The number of extra bytes to allocate following the window instance. The system initializes the bytes to zero. If an application uses <b>WNDCLASS</b> to register a dialog box created by using the<b>CLASS</b> directive in the resource file, it must set this member to <b>DLGWINDOWEXTRA</b>.</summary>
  </member>
  <member name="WNDCLASSA.hInstance">
    <summary>A handle to the instance that contains the window procedure for the class.</summary>
  </member>
  <member name="WNDCLASSA.hIcon">
    <summary>A handle to the class icon. This member must be a handle to an icon resource. If this member is <b>NULL</b>, the system provides a default icon.</summary>
  </member>
  <member name="WNDCLASSA.hCursor">
    <summary>A handle to the class cursor. This member must be a handle to a cursor resource. If this member is <b>NULL</b>, an application must explicitly set the cursor shape whenever the mouse moves into the application's window.</summary>
  </member>
  <member name="WNDCLASSA.hbrBackground">
    <summary>
      <para>A handle to the class background brush. This member can be a handle to the physical brush to be used for painting the background, or it can be a color value. A color value must be one of the following standard system colors (the value 1 must be added to the chosen color). If a color value is given, you must convert it to one of the following<b>HBRUSH</b> types:</para>
      <list type="bullet">
        <item>
          <description>COLOR_ACTIVEBORDER</description>
        </item>
        <item>
          <description>COLOR_ACTIVECAPTION</description>
        </item>
        <item>
          <description>COLOR_APPWORKSPACE</description>
        </item>
        <item>
          <description>COLOR_BACKGROUND</description>
        </item>
        <item>
          <description>COLOR_BTNFACE</description>
        </item>
        <item>
          <description>COLOR_BTNSHADOW</description>
        </item>
        <item>
          <description>COLOR_BTNTEXT</description>
        </item>
        <item>
          <description>COLOR_CAPTIONTEXT</description>
        </item>
        <item>
          <description>COLOR_GRAYTEXT</description>
        </item>
        <item>
          <description>COLOR_HIGHLIGHT</description>
        </item>
        <item>
          <description>COLOR_HIGHLIGHTTEXT</description>
        </item>
        <item>
          <description>COLOR_INACTIVEBORDER</description>
        </item>
        <item>
          <description>COLOR_INACTIVECAPTION</description>
        </item>
        <item>
          <description>COLOR_MENU</description>
        </item>
        <item>
          <description>COLOR_MENUTEXT</description>
        </item>
        <item>
          <description>COLOR_SCROLLBAR</description>
        </item>
        <item>
          <description>COLOR_WINDOW</description>
        </item>
        <item>
          <description>COLOR_WINDOWFRAME</description>
        </item>
        <item>
          <description>COLOR_WINDOWTEXT</description>
        </item>
      </list>The system automatically deletes class background brushes when the class is unregistered by using <see cref="UnregisterClass" />. An application should not delete these brushes. <para>When this member is <b>NULL</b>, an application must paint its own background whenever it is requested to paint in its client area. To determine whether the background must be painted, an application can either process the<a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-erasebkgnd">WM_ERASEBKGND</a> message or test the<b>fErase</b> member of the <see cref="PAINTSTRUCT" /> structure filled by the <see cref="BeginPaint" /> function.</para></summary>
  </member>
  <member name="WNDCLASSA.lpszMenuName">
    <summary>The resource name of the class menu, as the name appears in the resource file. If you use an integer to identify the menu, use the <see cref="MAKEINTRESOURCE" /> macro. If this member is <b>NULL</b>, windows belonging to this class have no default menu.</summary>
  </member>
  <member name="WNDCLASSA.lpszClassName">
    <summary>
      <para>A pointer to a null-terminated string or is an atom. If this parameter is an atom, it must be a class atom created by a previous call to the <see cref="RegisterClass" /> or <see cref="RegisterClassEx" /> function. The atom must be in the low-order word of<b>lpszClassName</b>; the high-order word must be zero.</para>
      <para>If <b>lpszClassName</b> is a string, it specifies the window class name. The class name can be any name registered with <see cref="RegisterClass" /> or <see cref="RegisterClassEx" />, or any of the predefined control-class names.</para>
      <para>The maximum length for <b>lpszClassName</b> is 256. If <b>lpszClassName</b> is greater than the maximum length, the <see cref="RegisterClass" /> function will fail.</para>
    </summary>
  </member>
</doc>