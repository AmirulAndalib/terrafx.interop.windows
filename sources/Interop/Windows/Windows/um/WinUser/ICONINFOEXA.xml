<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICONINFOEXA">
    <summary>
      <para>Contains information about an icon or a cursor. Extends <see cref="ICONINFO" />. Used by <see cref="GetIconInfoEx" />.</para>
    </summary>
    <remarks>
      <blockquote>
        <para>[!NOTE]
The winuser.h header defines ICONINFOEX as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso cref="CreateIconIndirect" />
    <seealso cref="GetIconInfo" />
    <seealso href="https://docs.microsoft.com//windows/desktop/menurc/icons">Icons</seealso>
  </member>
  <member name="ICONINFOEXA.cbSize">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The size, in bytes, of this structure.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.fIcon">
    <summary>
      <para>Type: <b>BOOL</b></para>
      <para>Specifies whether this structure defines an icon or a cursor. A value of <b>TRUE</b> specifies an icon; <b>FALSE</b> specifies a cursor.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.xHotspot">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The x-coordinate of a cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.yHotspot">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The y-coordinate of the cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.hbmMask">
    <summary>
      <para>Type: <b>HBITMAP</b></para>
      <para>The icon bitmask bitmap. If this structure defines a black and white icon, this bitmask is formatted so that the upper half is the icon AND bitmask and the lower half is the icon XOR bitmask. Under this condition, the height should be an even multiple of two. If this structure defines a color icon, this mask only defines the AND bitmask of the icon.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.hbmColor">
    <summary>
      <para>Type: <b>HBITMAP</b></para>
      <para>A handle to the icon color bitmap. This member can be optional if this structure defines a black and white icon. The AND bitmask of <b>hbmMask</b> is applied with the <b>SRCAND</b> flag to the destination; subsequently, the color bitmap is applied (using XOR) to the destination by using the <b>SRCINVERT</b> flag.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.wResID">
    <summary>
      <para>Type: <b>WORD</b></para>
      <para>The icon or cursor resource bits. These bits are typically loaded by calls to the <see cref="LookupIconIdFromDirectoryEx" /> and <see cref="LoadResource" /> functions.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.szModName">
    <summary>
      <para>Type: <b>TCHAR[MAX_PATH]</b></para>
      <para>The fully qualified path of the module.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.szResName">
    <summary>
      <para>Type: <b>TCHAR[MAX_PATH]</b></para>
      <para>The fully qualified path of the resource.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA">
    <summary>
      <para>Contains information about an icon or a cursor. Extends <see cref="ICONINFO" />. Used by <see cref="GetIconInfoEx" />.</para>
    </summary>
    <remarks>
      <blockquote>
        <para>[!NOTE]
The winuser.h header defines ICONINFOEX as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso cref="CreateIconIndirect" />
    <seealso cref="GetIconInfo" />
    <seealso href="https://docs.microsoft.com//windows/desktop/menurc/icons">Icons</seealso>
  </member>
  <member name="ICONINFOEXA.cbSize">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The size, in bytes, of this structure.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.fIcon">
    <summary>
      <para>Type: <b>BOOL</b></para>
      <para>Specifies whether this structure defines an icon or a cursor. A value of <b>TRUE</b> specifies an icon; <b>FALSE</b> specifies a cursor.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.xHotspot">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The x-coordinate of a cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.yHotspot">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The y-coordinate of the cursor's hot spot. If this structure defines an icon, the hot spot is always in the center of the icon, and this member is ignored.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.hbmMask">
    <summary>
      <para>Type: <b>HBITMAP</b></para>
      <para>The icon bitmask bitmap. If this structure defines a black and white icon, this bitmask is formatted so that the upper half is the icon AND bitmask and the lower half is the icon XOR bitmask. Under this condition, the height should be an even multiple of two. If this structure defines a color icon, this mask only defines the AND bitmask of the icon.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.hbmColor">
    <summary>
      <para>Type: <b>HBITMAP</b></para>
      <para>A handle to the icon color bitmap. This member can be optional if this structure defines a black and white icon. The AND bitmask of <b>hbmMask</b> is applied with the <b>SRCAND</b> flag to the destination; subsequently, the color bitmap is applied (using XOR) to the destination by using the <b>SRCINVERT</b> flag.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.wResID">
    <summary>
      <para>Type: <b>WORD</b></para>
      <para>The icon or cursor resource bits. These bits are typically loaded by calls to the <see cref="LookupIconIdFromDirectoryEx" /> and <see cref="LoadResource" /> functions.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.szModName">
    <summary>
      <para>Type: <b>TCHAR[MAX_PATH]</b></para>
      <para>The fully qualified path of the module.</para>
    </summary>
  </member>
  <member name="ICONINFOEXA.szResName">
    <summary>
      <para>Type: <b>TCHAR[MAX_PATH]</b></para>
      <para>The fully qualified path of the resource.</para>
    </summary>
  </member>
</doc>