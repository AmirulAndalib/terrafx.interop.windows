<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="WINDOWPLACEMENT">
    <summary>Contains information about the placement of a window on the screen.</summary>
  </member>
  <member name="WINDOWPLACEMENT.length">
    <summary>
      <para>The length of the structure, in bytes. Before calling the <see cref="GetWindowPlacement" /> or <see cref="SetWindowPlacement" /> functions, set this member to <code>sizeof(WINDOWPLACEMENT)</code>.</para>
      <para>
        <see cref="GetWindowPlacement" /> and <see cref="SetWindowPlacement" /> fail if this member is not set correctly.</para>
    </summary>
  </member>
  <member name="WINDOWPLACEMENT.flags">
    <summary>
      <para>The flags that control the position of the minimized window and the method by which the window is restored. This member can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WPF_ASYNCWINDOWPLACEMENT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description> If the calling thread and the thread that owns the window are attached to different input queues, the system posts the request to the thread that owns the window. This prevents the calling thread from blocking its execution while other threads process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WPF_RESTORETOMAXIMIZED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>The restored window will be maximized, regardless of whether it was maximized before it was minimized. This setting is only valid the next time the window is restored. It does not change the default restoration behavior. <para>This flag is only valid when the <b>SW_SHOWMINIMIZED</b> value is specified for the <b>showCmd</b> member.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WPF_SETMINPOSITION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>The coordinates of the minimized window may be specified. <para>This flag must be specified if the coordinates are set in the <b>ptMinPosition</b> member.</para></description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="WINDOWPLACEMENT.showCmd">
    <summary>The current show state of the window. It can be any of the values that can be specified in the <i>nCmdShow</i> parameter for the <see cref="ShowWindow" /> function.</summary>
  </member>
  <member name="WINDOWPLACEMENT.ptMinPosition">
    <summary>The coordinates of the window's upper-left corner when the window is minimized.</summary>
  </member>
  <member name="WINDOWPLACEMENT.ptMaxPosition">
    <summary>The coordinates of the window's upper-left corner when the window is maximized.</summary>
  </member>
  <member name="WINDOWPLACEMENT.rcNormalPosition">
    <summary>The window's coordinates when the window is in the restored position.</summary>
  </member>
  <member name="WINDOWPLACEMENT.rcDevice"></member>
</doc>