<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="CREATESTRUCTA">
    <summary>
      <para>Defines the initialization parameters passed to the window procedure of an application. These members are identical to the parameters of the <see cref="CreateWindowEx" /> function.</para>
    </summary>
    <remarks>
      <para>Because the <b>lpszClass</b> member can contain a pointer to a local (and thus inaccessible) atom, do not obtain the class name by using this member. Use the <see cref="GetClassName" /> function instead.</para>
      <para>You should access the data represented by the <b>lpCreateParams</b> member using a pointer that has been declared using the <b>UNALIGNED</b> type, because the pointer may not be <b>DWORD</b> aligned. This is demonstrated in the following example:</para>
      <code>typedef struct tagMyData
{
    // Define creation data here.
} MYDATA;

typedef struct tagMyDlgData
{
    SHORT   cbExtra;
    MYDATA  myData;
} MYDLGDATA, UNALIGNED *PMYDLGDATA;

PMYDLGDATA pMyDlgdata = (PMYDLGDATA) (((LPCREATESTRUCT) lParam)-&gt;lpCreateParams);
</code>
      <blockquote>
        <para>[!NOTE]
The winuser.h header defines CREATESTRUCT as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/winmsg/about-the-multiple-document-interface">About the Multiple Document Interface</seealso>
    <seealso cref="CreateWindow" />
    <seealso cref="CreateWindowEx" />
    <seealso cref="MDICREATESTRUCT" />
    <seealso href="https://docs.microsoft.com//windows/desktop/winmsg/windows">Windows</seealso>
  </member>
  <member name="CREATESTRUCTA.lpCreateParams">
    <summary>
      <para>Type: <b>LPVOID</b></para>
      <para>Contains additional data which may be used to create the window. If the window is being created as a result of a call to the <see cref="CreateWindow" /> or <see cref="CreateWindowEx" /> function, this member contains the value of the <i>lpParam</i> parameter specified in the function call.</para>
      <para>If the window being created is a MDI client window, this member contains a pointer to a <see cref="CLIENTCREATESTRUCT" /> structure. If the window being created is a MDI child window, this member contains a pointer to an <see cref="MDICREATESTRUCT" /> structure.</para>
      <para>If the window is being created from a dialog template, this member is the address of a <b>SHORT</b> value that specifies the size, in bytes, of the window creation data. The value is immediately followed by the creation data. For more information, see the following Remarks section.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hInstance">
    <summary>
      <para>Type: <b>HINSTANCE</b></para>
      <para>A handle to the module that owns the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hMenu">
    <summary>
      <para>Type: <b>HMENU</b></para>
      <para>A handle to the menu to be used by the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hwndParent">
    <summary>
      <para>Type: <b>HWND</b></para>
      <para>A handle to the parent window, if the window is a child window. If the window is owned, this member identifies the owner window. If the window is not a child or owned window, this member is <b>NULL</b>.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.cy">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The height of the new window, in pixels.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.cx">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The width of the new window, in pixels.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.y">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The y-coordinate of the upper left corner of the new window. If the new window is a child window, coordinates are relative to the parent window. Otherwise, the coordinates are relative to the screen origin.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.x">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The x-coordinate of the upper left corner of the new window. If the new window is a child window, coordinates are relative to the parent window. Otherwise, the coordinates are relative to the screen origin.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.style">
    <summary>
      <para>Type: <b>LONG</b></para>
      <para>The style for the new window. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/winmsg/window-styles">Window Styles</a>.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.lpszName">
    <summary>
      <para>Type: <b>LPCTSTR</b></para>
      <para>The name of the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.lpszClass">
    <summary>
      <para>Type: <b>LPCTSTR</b></para>
      <para>A pointer to a null-terminated string or an atom that specifies the class name of the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.dwExStyle">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The extended window style for the new window. For a list of possible values, see  <a href="https://docs.microsoft.com//windows/desktop/winmsg/extended-window-styles">Extended Window Styles</a>.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA">
    <summary>
      <para>Defines the initialization parameters passed to the window procedure of an application. These members are identical to the parameters of the <see cref="CreateWindowEx" /> function.</para>
    </summary>
    <remarks>
      <para>Because the <b>lpszClass</b> member can contain a pointer to a local (and thus inaccessible) atom, do not obtain the class name by using this member. Use the <see cref="GetClassName" /> function instead.</para>
      <para>You should access the data represented by the <b>lpCreateParams</b> member using a pointer that has been declared using the <b>UNALIGNED</b> type, because the pointer may not be <b>DWORD</b> aligned. This is demonstrated in the following example:</para>
      <code>typedef struct tagMyData
{
    // Define creation data here.
} MYDATA;

typedef struct tagMyDlgData
{
    SHORT   cbExtra;
    MYDATA  myData;
} MYDLGDATA, UNALIGNED *PMYDLGDATA;

PMYDLGDATA pMyDlgdata = (PMYDLGDATA) (((LPCREATESTRUCT) lParam)-&gt;lpCreateParams);
</code>
      <blockquote>
        <para>[!NOTE]
The winuser.h header defines CREATESTRUCT as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/winmsg/about-the-multiple-document-interface">About the Multiple Document Interface</seealso>
    <seealso cref="CreateWindow" />
    <seealso cref="CreateWindowEx" />
    <seealso cref="MDICREATESTRUCT" />
    <seealso href="https://docs.microsoft.com//windows/desktop/winmsg/windows">Windows</seealso>
  </member>
  <member name="CREATESTRUCTA.lpCreateParams">
    <summary>
      <para>Type: <b>LPVOID</b></para>
      <para>Contains additional data which may be used to create the window. If the window is being created as a result of a call to the <see cref="CreateWindow" /> or <see cref="CreateWindowEx" /> function, this member contains the value of the <i>lpParam</i> parameter specified in the function call.</para>
      <para>If the window being created is a MDI client window, this member contains a pointer to a <see cref="CLIENTCREATESTRUCT" /> structure. If the window being created is a MDI child window, this member contains a pointer to an <see cref="MDICREATESTRUCT" /> structure.</para>
      <para>If the window is being created from a dialog template, this member is the address of a <b>SHORT</b> value that specifies the size, in bytes, of the window creation data. The value is immediately followed by the creation data. For more information, see the following Remarks section.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hInstance">
    <summary>
      <para>Type: <b>HINSTANCE</b></para>
      <para>A handle to the module that owns the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hMenu">
    <summary>
      <para>Type: <b>HMENU</b></para>
      <para>A handle to the menu to be used by the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.hwndParent">
    <summary>
      <para>Type: <b>HWND</b></para>
      <para>A handle to the parent window, if the window is a child window. If the window is owned, this member identifies the owner window. If the window is not a child or owned window, this member is <b>NULL</b>.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.cy">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The height of the new window, in pixels.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.cx">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The width of the new window, in pixels.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.y">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The y-coordinate of the upper left corner of the new window. If the new window is a child window, coordinates are relative to the parent window. Otherwise, the coordinates are relative to the screen origin.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.x">
    <summary>
      <para>Type: <b>int</b></para>
      <para>The x-coordinate of the upper left corner of the new window. If the new window is a child window, coordinates are relative to the parent window. Otherwise, the coordinates are relative to the screen origin.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.style">
    <summary>
      <para>Type: <b>LONG</b></para>
      <para>The style for the new window. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/winmsg/window-styles">Window Styles</a>.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.lpszName">
    <summary>
      <para>Type: <b>LPCTSTR</b></para>
      <para>The name of the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.lpszClass">
    <summary>
      <para>Type: <b>LPCTSTR</b></para>
      <para>A pointer to a null-terminated string or an atom that specifies the class name of the new window.</para>
    </summary>
  </member>
  <member name="CREATESTRUCTA.dwExStyle">
    <summary>
      <para>Type: <b>DWORD</b></para>
      <para>The extended window style for the new window. For a list of possible values, see  <a href="https://docs.microsoft.com//windows/desktop/winmsg/extended-window-styles">Extended Window Styles</a>.</para>
    </summary>
  </member>
</doc>