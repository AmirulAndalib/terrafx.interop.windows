<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA">
    <summary>The <b>CRYPT_KEY_SIGN_MESSAGE_PARA</b> structure contains information about the <a href="https://docs.microsoft.com//windows/desktop/SecGloss/c-gly">cryptographic service provider</a> (CSP) and algorithms used to sign a message.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.cbSize">
    <summary>The size, in bytes, of this data structure.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.dwMsgAndCertEncodingType">
    <summary>
      <para>Specifies the type of message and certificate encoding used. This can be a combination of one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>X509_ASN_ENCODING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies <a href="https://docs.microsoft.com//windows/desktop/SecGloss/x-gly">X.509</a> certificate encoding.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PKCS_7_ASN_ENCODING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies PKCS 7 message encoding.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.DUMMYUNIONNAME"></member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.DUMMYUNIONNAME.hCryptProv">
    <summary>The handle of the CSP to use to sign the message. The <see cref="CryptAcquireContext" /> function is called to obtain this handle.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.DUMMYUNIONNAME.hNCryptKey">
    <summary>The handle of the Cryptography API: Next Generation (CNG) CSP to use to sign the message. CNG signature algorithms are only supported in CNG functions.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.dwKeySpec">
    <summary>
      <para>Identifies the type of <a href="https://docs.microsoft.com//windows/desktop/SecGloss/p-gly">private key</a> to use to sign the message. This must be one of the following values. This member is ignored if a CNG key is passed in the <i>hNCryptKey</i> member.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AT_KEYEXCHANGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Use the key exchange key.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AT_SIGNATURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Use the digital signature key.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.HashAlgorithm">
    <summary>A <see cref="CRYPT_ALGORITHM_IDENTIFIER" /> structure that specifies the algorithm to use to generate the hash of the message. This must be a hash algorithm.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.pvHashAuxInfo">
    <summary>This member is not used and must be set to <b>NULL</b>.</summary>
  </member>
  <member name="CRYPT_KEY_SIGN_MESSAGE_PARA.PubKeyAlgorithm">
    <summary>A <see cref="CRYPT_ALGORITHM_IDENTIFIER" /> structure that specifies the algorithm to use to sign the message. This must be either a public key or a signature algorithm.</summary>
  </member>
</doc>