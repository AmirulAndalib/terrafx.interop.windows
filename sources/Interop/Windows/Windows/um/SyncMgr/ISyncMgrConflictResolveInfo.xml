<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ISyncMgrConflictResolveInfo.GetItemChoice">
    <summary>Gets the index of an item that the user wants to keep.</summary>
    <param name="iChoice">The item that the user wants to keep.</param>
    <param name="piChoiceIndex">The index into the conflict's item array. This value is passed to the resolver for subsequent conflicts in the same conflict set if the user chooses to apply the same operation to all selected conflicts of the same type from the same handler.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.GetItemChoiceCount">
    <summary>Gets the number of items that the user wants to keep.</summary>
    <param name="pcChoices">When this method returns, contains a pointer to the number of items that the user wants to keep.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.GetIterationInfo">
    <summary>Gets information about which conflict in a set of conflicts is being resolved.</summary>
    <param name="pnCurrentConflict">When this method returns, contains a pointer to the index of the conflict in the set that is being resolved.</param>
    <param name="pcConflicts">When this method returns, contains a pointer to the number of conflicts that are being resolved.</param>
    <param name="pcRemainingForApplyToAll">When this method returns, contains a pointer to the number of the remaining conflicts to which an "apply to all" response would be applied.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.GetPresenterChoice">
    <summary>Gets what kind of choice was made and whether to apply the choice to all subsequent conflicts in the set.</summary>
    <param name="pnPresenterChoice">When this method returns, contains a pointer to the choice that was made about the conflict resolution. One of the members of the <see cref="SYNCMGR_PRESENTER_CHOICE" /> enumeration.</param>
    <param name="pfApplyToAll">When this method returns, contains a pointer to a flag. If <b>TRUE</b>, then the given choice is to be applied to all subsequent conflicts in the set, and <see cref="ISyncMgrConflictResolveInfo.GetItemChoice" /> and <see cref="ISyncMgrConflictResolveInfo.GetItemChoiceCount" /> have information on how to apply this choice. Otherwise <b>FALSE</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.GetPresenterNextStep">
    <summary>Gets what the presenter wants to do as the next step in the sync manager conflict resolution.</summary>
    <param name="pnPresenterNextStep">When this method returns, contains a pointer to the next step in conflict resolution. One of the members of the <see cref="SYNCMGR_PRESENTER_NEXT_STEP" /> enumeration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.SetItemChoices">
    <summary>Sets the array of indexes that represents which items the user wants to keep. This method is used when the user chooses to apply the same operation to all selected conflicts of the same type from the same handler.</summary>
    <param name="prgiConflictItemIndexes">The array of indexes of items that the user wants to keep.</param>
    <param name="cChoices">The number of item choices in <i>prgiConflictItemIndexes</i>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.SetPresenterChoice">
    <summary>Sets what kind of choice was made about a sync manager conflict resolution and whether to apply the choice to all subsequent conflicts in the set.</summary>
    <param name="nPresenterChoice">The choice that was made about the conflict resolution. One of the members of the <see cref="SYNCMGR_PRESENTER_CHOICE" /> enumeration.</param>
    <param name="fApplyToAll">If <b>TRUE</b>, then apply the given choice to all subsequent conflicts in the set. In this case, <see cref="ISyncMgrConflictResolveInfo.SetItemChoices" /> must also be called.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo.SetPresenterNextStep">
    <summary>Sets what the presenter wants to do as the next step in the sync manager conflict resolution.</summary>
    <param name="nPresenterNextStep">The next step in the conflict resolution. One of the members of the <see cref="SYNCMGR_PRESENTER_NEXT_STEP" /> enumeration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ISyncMgrConflictResolveInfo">
    <summary>Exposes methods that get and set information about sync manager conflict resolution.</summary>
  </member>
</doc>