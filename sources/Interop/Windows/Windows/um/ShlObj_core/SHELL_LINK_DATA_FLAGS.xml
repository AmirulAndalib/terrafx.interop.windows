<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="SHELL_LINK_DATA_FLAGS">
    <summary>
      <para>Specifies option settings. Used with <see cref="IShellLinkDataList.GetFlags" /> and <see cref="IShellLinkDataList.SetFlags" />.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_DEFAULT">
    <summary>
      <para>0x00000000. Default value used when no other flag is explicitly set.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_ID_LIST">
    <summary>
      <para>0x00000001. The Shell link was saved with an ID list.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_LINK_INFO">
    <summary>
      <para>0x00000002. The Shell link was saved with link information to enable distributed tracking. This information is used by .lnk files to locate the target if the targets's path has changed. It includes information such as volume label and serial number, although the specific stored information can change from release to release.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_NAME">
    <summary>
      <para>0x00000004. The link has a name.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_RELPATH">
    <summary>
      <para>0x00000008. The link has a relative path.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_WORKINGDIR">
    <summary>
      <para>0x00000010. The link has a working directory.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_ARGS">
    <summary>
      <para>0x00000020. The link has arguments.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_ICONLOCATION">
    <summary>
      <para>0x00000040. The link has an icon location.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_UNICODE">
    <summary>
      <para>0x00000080. Stored strings are Unicode.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_FORCE_NO_LINKINFO">
    <summary>
      <para>0x00000100. Prevents the storage of link tracking information. If this flag is set, it is less likely, though not impossible, that a target can be found by the link if that target is moved.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_EXP_SZ">
    <summary>
      <para>0x00000200. The link contains expandable environment strings such as <code>%windir%</code>.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_RUN_IN_SEPARATE">
    <summary>
      <para>0x00000400. Causes a 16-bit target application to run in a separate Virtual DOS Machine (VDM)/Windows on Windows (WOW).</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_LOGO3ID">
    <summary>
      <para>0x00000800. Not supported. Note that as of Windows Vista, this value is no longer defined.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_DARWINID">
    <summary>
      <para>0x00001000. The link is a special Windows Installer link.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_RUNAS_USER">
    <summary>
      <para>0x00002000. Causes the target application to run as a different user.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_HAS_EXP_ICON_SZ">
    <summary>
      <para>0x00004000. The icon path in the link contains an expandable environment string such as such as <code>%windir%</code>.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_NO_PIDL_ALIAS">
    <summary>
      <para>0x00008000. Prevents the use of ID list alias mapping when parsing the ID list from the path.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_FORCE_UNCNAME">
    <summary>
      <para>0x00010000. Forces the use of the UNC name (a full network resource name), rather than the local name.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_RUN_WITH_SHIMLAYER">
    <summary>
      <para>0x00020000. Causes the target of this link to launch with a shim layer active. A shim is an intermediate DLL that facilitates compatibility between otherwise incompatible software services. Shims are typically used to provide version compatibility.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_FORCE_NO_LINKTRACK">
    <summary>
      <para>0x00040000. <b>Introduced in Windows Vista</b>. Disable object ID distributed tracking information.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_ENABLE_TARGET_METADATA">
    <summary>
      <para>0x00080000. <b>Introduced in Windows Vista</b>. Enable the caching of target metadata into the link file.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_DISABLE_LINK_PATH_TRACKING">
    <summary>
      <para>0x00100000. <b>Introduced in Windows 7</b>. Disable shell link tracking.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING">
    <summary>
      <para>0x00200000. <b>Introduced in Windows Vista</b>. Disable known folder tracking information.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_NO_KF_ALIAS">
    <summary>
      <para>0x00400000. <b>Introduced in Windows 7</b>. Disable known folder alias mapping when loading the IDList during deserialization.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_ALLOW_LINK_TO_LINK">
    <summary>
      <para>0x00800000. <b>Introduced in Windows 7</b>. Allow link to point to another shell link as long as this does not create cycles.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_UNALIAS_ON_SAVE">
    <summary>
      <para>0x01000000. <b>Introduced in Windows 7</b>. Remove alias when saving the IDList.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_PREFER_ENVIRONMENT_PATH">
    <summary>
      <para>0x02000000. <b>Introduced in Windows 7</b>. Recalculate the IDList from the path with the environmental variables at load time, rather than persisting the IDList.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET">
    <summary>
      <para>0x04000000. <b>Introduced in Windows 7</b>. If the target is a UNC location on a local machine, keep the local IDList target in addition to the remote target.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_PERSIST_VOLUME_ID_RELATIVE">
    <summary>
      <para>0x08000000. <b>Introduced in Windows 8</b>. Persist the target IDlist in its volume-ID-relative form to avoid a dependency on drive letters.</para>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_VALID">
    <summary>
      <para>
        <b>Introduced in Windows Vista</b>. A mask for valid <see cref="SHELL_LINK_DATA_FLAGS" /> bits.</para>
      <list type="table">
        <listheader>
          <description>OS</description>
          <description>Value</description>
        </listheader>
        <item>
          <description>Windows 8</description>
          <description>0x0FFFF7FF</description>
        </item>
        <item>
          <description>Windows 7</description>
          <description>0x07FFF7FF</description>
        </item>
        <item>
          <description>Windows Vista</description>
          <description>0x003FF7FF</description>
        </item>
      </list>
    </summary>
  </member>
  <member name="SHELL_LINK_DATA_FLAGS.SLDF_RESERVED">
    <summary>
      <para>Reserved; do not use.</para>
    </summary>
  </member>
</doc>