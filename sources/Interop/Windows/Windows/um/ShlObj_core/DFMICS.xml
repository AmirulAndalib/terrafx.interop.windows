<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="DFMICS">
    <summary>Contains additional arguments used by <a href="https://docs.microsoft.com//windows/desktop/shell/prophand-content-view">DFM_INVOKECOMMANDEX</a>.</summary>
  </member>
  <member name="DFMICS.cbSize">
    <summary>The size of this structure, in bytes.</summary>
  </member>
  <member name="DFMICS.fMask">
    <summary>
      <para>Zero, or one or more of the following flags that specify how to handle the data in the <see cref="CMINVOKECOMMANDINFO" /> or <see cref="CMINVOKECOMMANDINFOEX" /> structure pointed to by <b>pici</b>.</para>
      <h4>CMIC_MASK_HOTKEY</h4>
      <para>The <b>dwHotKey</b> member is valid.</para>
      <h4>CMIC_MASK_ICON</h4>
      <para>Not used.</para>
      <h4>CMIC_MASK_FLAG_NO_UI</h4>
      <para>The implementation of <see cref="IContextMenu.InvokeCommand" /> is prevented from displaying user interface elements (for example, error messages) while carrying out a command.</para>
      <h4>CMIC_MASK_UNICODE</h4>
      <para>Used only when <b>pici</b> points to a <see cref="CMINVOKECOMMANDINFOEX" /> structure. Indicates that the shortcut menu handler should use <b>lpVerbW</b>, <b>lpParametersW</b>, <b>lpTitleW</b>, and <b>lpDirectoryW</b> members instead of their ANSI equivalents. Because some shortcut menu handlers may not support Unicode, you should also pass valid ANSI strings in the <b>lpVerb</b>, <b>lpParameters</b>, <b>lpTitleW</b>, and <b>lpDirectory</b> members.</para>
      <h4>CMIC_MASK_NO_CONSOLE</h4>
      <para>If a shortcut menu handler needs to create a new process, it normally creates a new console. Setting the <b>CMIC_MASK_NO_CONSOLE</b> flag suppresses the creation of a new console.</para>
      <h4>CMIC_MASK_FLAG_SEP_VDM</h4>
      <para>This flag is valid only when referring to a 16-bit Windows-based application. If set, the application that the shortcut points to runs in a private Virtual DOS Machine (VDM). See Remarks.</para>
      <h4>CMIC_MASK_ASYNCOK</h4>
      <para>The implementation of <see cref="IContextMenu.InvokeCommand" /> can spin off a new thread or process to handle the call and does not need to block on completion of the function being invoked. For example, if the verb is "delete" the <b>IContextMenu.InvokeCommand</b> call may return before all of the items have been deleted. Since this is advisory, calling applications that specify this flag cannot guarantee that this request will be honored if they are not familiar with the implementation of the verb that they are invoking.</para>
      <h4>CMIC_MASK_NOASYNC</h4>
      <para>
        <b>Windows Vista and later.</b> The implementation of <see cref="IContextMenu.InvokeCommand" /> should be synchronous, not returning before it is complete. Since this is recommended, calling applications that specify this flag cannot guarantee that this request will be honored if they are not familiar with the implementation of the verb that they are invoking.</para>
      <h4>CMIC_MASK_SHIFT_DOWN</h4>
      <para>The SHIFT key is pressed. Use this instead of polling the current state of the keyboard that may have changed since the verb was invoked.</para>
      <h4>CMIC_MASK_CONTROL_DOWN</h4>
      <para>The CTRL key is pressed. Use this instead of polling the current state of the keyboard that may have changed since the verb was invoked.</para>
      <h4>CMIC_MASK_FLAG_LOG_USAGE</h4>
      <para>Indicates that the implementation of <see cref="IContextMenu.InvokeCommand" /> might want to keep track of the item being invoked for features like the "Recent documents" menu.</para>
      <h4>CMIC_MASK_NOZONECHECKS</h4>
      <para>Do not perform a zone check. This flag allows <see cref="ShellExecuteEx" /> to bypass zone checking put into place by <see cref="IAttachmentExecute" />.</para>
      <h4>CMIC_MASK_PTINVOKE</h4>
      <para>Used only when <b>pici</b> points to a <see cref="CMINVOKECOMMANDINFOEX" /> structure. The <b>ptInvoke</b> member is valid.</para>
    </summary>
  </member>
  <member name="DFMICS.lParam">
    <summary>A pointer to a null-terminated string that contains additional arguments to the selected menu command. This member can be <b>NULL</b>.</summary>
  </member>
  <member name="DFMICS.idCmdFirst">
    <summary>The minimum value that the handler can specify for a menu item identifier.</summary>
  </member>
  <member name="DFMICS.idDefMax">
    <summary>The maximum value that the handler can specify for a menu item identifier.</summary>
  </member>
  <member name="DFMICS.pici">
    <summary>A pointer to a <see cref="CMINVOKECOMMANDINFO" /> or <b>CMINVOKECOMMANDINFO</b> structure.</summary>
  </member>
  <member name="DFMICS.punkSite">
    <summary>A pointer to the site of the context menu handler.</summary>
  </member>
</doc>