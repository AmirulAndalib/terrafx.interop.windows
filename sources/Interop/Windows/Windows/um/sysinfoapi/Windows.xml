<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.EnumSystemFirmwareTables">
    <summary>Enumerates all system firmware tables of the specified type.</summary>
    <param name="FirmwareTableProviderSignature">
      <para>The identifier of the firmware table provider to which the query is to be directed. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>'ACPI'</description>
          <description>The ACPI firmware table provider.</description>
        </listheader>
        <listheader>
          <description>'FIRM'</description>
          <description>The raw firmware table provider. Not supported for UEFI systems; use 'RSMB' instead.</description>
        </listheader>
        <listheader>
          <description>'RSMB'</description>
          <description>The raw SMBIOS firmware table provider.</description>
        </listheader>
      </list>
    </param>
    <param name="pFirmwareTableEnumBuffer">
      <para>A pointer to a buffer that receives the list of firmware tables. If this parameter is <b>NULL</b>, the return value is the required buffer size.</para>
      <para>For more information on the contents of this buffer, see the Remarks section.</para>
    </param>
    <param name="BufferSize">The size of the <i>pFirmwareTableBuffer</i> buffer, in bytes.</param>
    <returns>
      <para>If the function succeeds, the return value is the number of bytes written to the buffer. This value will always be less than or equal to <i>BufferSize</i>.</para>
      <para>If the function fails because the buffer is not large enough, the return value is the required buffer size, in bytes. This value is always greater than <i>BufferSize</i>.</para>
      <para>If the function fails for any other reason, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetComputerNameEx">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetComputerNameExA">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetComputerNameExW">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetComputerNameEx">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetComputerNameExA">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetComputerNameExW">
    <summary>Retrieves a NetBIOS or DNS name associated with the local computer. The names are established at system startup, when the system reads them from the registry.</summary>
    <param name="NameType">
      <para>The type of name to be retrieved. This parameter is a value from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type. The following table provides additional information.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the local computer. This name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNameNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the DNS domain assigned to the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS domain name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsFullyQualified</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The fully qualified DNS name that uniquely identifies the computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the fully qualified DNS name of the local computer, not the name of the cluster virtual server. <para>The fully qualified DNS name is a combination of the DNS host name and the DNS domain name, using the form <i>HostName</i>.<i>DomainName</i>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DNS host name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the DNS host name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The NetBIOS name of the local computer. If the local computer is a node in a cluster, <i>lpBuffer</i> receives the NetBIOS name of the local computer, not the name of the cluster virtual server.</description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">
      <para>A pointer to a buffer that receives the computer name or the cluster virtual server name.</para>
      <para>The length of the name may be greater than MAX_COMPUTERNAME_LENGTH characters because DNS allows longer names. To ensure that this buffer is large enough, set this parameter to <b>NULL</b> and use the required buffer size returned in the <i>lpnSize</i> parameter.</para>
    </param>
    <param name="nSize">
      <para>On input, specifies the size of the buffer, in <b>TCHARs</b>. On output, receives the number of <b>TCHARs</b> copied to the destination buffer, not including the terminating <b>null</b> character.</para>
      <para>If the buffer is too small, the function fails and <see cref="GetLastError" /> returns ERROR_MORE_DATA. This parameter receives the size of the buffer required, including the terminating <b>null</b> character.</para>
      <para>If <i>lpBuffer</i> is <b>NULL</b>, this parameter must be zero.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. Possible values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_MORE_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>lpBuffer</i> buffer is too small. The <i>lpnSize</i> parameter contains the number of bytes required to receive the name.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetIntegratedDisplaySize">
    <summary>Retrieves the best estimate of the diagonal size of the built-in screen, in inches.</summary>
    <param name="sizeInInches">The best estimate of the diagonal size of the built-in screen, in inches.</param>
    <returns>The result code indicating if the function succeeded or failed.</returns>
  </member>
  <member name="Windows.GetLocalTime">
    <summary>
      <para>Retrieves the current local date and time.</para>
      <para>To retrieve the current date and time in Coordinated Universal Time (UTC) format, use the <see cref="GetSystemTime" /> function.</para>
    </summary>
    <param name="lpSystemTime">A pointer to a<see cref="SYSTEMTIME" /> structure to receive the current local date and time.</param>
  </member>
  <member name="Windows.GetLogicalProcessorInformation">
    <summary>
      <para>Retrieves information about logical processors and related hardware.</para>
      <para>To retrieve information about logical processors and related hardware, including processor groups, use the <see cref="GetLogicalProcessorInformationEx" /> function.</para>
    </summary>
    <param name="Buffer">A pointer to a buffer that receives an array of <see cref="SYSTEM_LOGICAL_PROCESSOR_INFORMATION" /> structures. If the function fails, the contents of this buffer are undefined.</param>
    <param name="ReturnedLength">On input, specifies the length of the buffer pointed to by <i>Buffer</i>, in bytes. If the buffer is large enough to contain all of the data, this function succeeds and <i>ReturnLength</i> is set to the number of bytes returned. If the buffer is not large enough to contain all of the data, the function fails, <see cref="GetLastError" /> returns ERROR_INSUFFICIENT_BUFFER, and <i>ReturnLength</i> is set to the buffer length required to contain all of the data. If the function fails with an error other than ERROR_INSUFFICIENT_BUFFER, the value of <i>ReturnLength</i> is undefined.</param>
    <returns>
      <para>If the function succeeds, the return value is TRUE and at least one <see cref="SYSTEM_LOGICAL_PROCESSOR_INFORMATION" /> structure is written to the output buffer.</para>
      <para>If the function fails, the return value is FALSE. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetNativeSystemInfo">
    <summary>Retrieves information about the current system to an application running under <a href="https://docs.microsoft.com//windows/desktop/WinProg64/running-32-bit-applications">WOW64</a>. If the function is called from a 64-bit application, it is equivalent to the <see cref="GetSystemInfo" /> function. If the function is called from an x86 or x64 application running on a 64-bit system that does not have an Intel64 or x64 processor (such as ARM64), it will return information as if the system is x86 only if x86 emulation is supported (or x64 if x64 emulation is also supported).</summary>
    <param name="lpSystemInfo">A pointer to a<see cref="SYSTEM_INFO" /> structure that receives the information.</param>
  </member>
  <member name="Windows.GetPhysicallyInstalledSystemMemory">
    <summary>Retrieves the amount of RAM that is physically installed on the computer.</summary>
    <param name="TotalMemoryInKilobytes">A pointer to a variable that receives the amount of physically installed RAM, in kilobytes.</param>
    <returns>
      <para>If the function succeeds, it returns <b>TRUE</b> and sets the<i>TotalMemoryInKilobytes</i> parameter to a nonzero value.</para>
      <para>If the function fails, it returns <b>FALSE</b> and does not modify the<i>TotalMemoryInKilobytes</i> parameter. To get extended error information, use the <see cref="GetLastError" /> function. Common errors are listed in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_PARAMETER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>TotalMemoryInKilobytes</i> parameter is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ERROR_INVALID_DATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The System Management BIOS (SMBIOS) data is malformed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetProcessorSystemCycleTime">
    <summary>Retrieves the cycle time each processor in the specified processor group spent executing deferred procedure calls (DPCs) and interrupt service routines (ISRs) since the processor became active.</summary>
    <param name="Group">The number of the processor group for which to retrieve the cycle time.</param>
    <param name="Buffer">A pointer to a buffer to receive a SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION structure for each processor in the group. On output, the DWORD64 <b>CycleTime</b> member of this structure is set to the cycle time for one processor.</param>
    <param name="ReturnedLength">The size of the buffer, in bytes. When the function returns, this parameter contains the number of bytes written to <i>Buffer</i>. If the buffer is too small for the data, the function fails with ERROR_INSUFFICIENT_BUFFER and sets the <i>ReturnedLength</i> parameter to the required buffer size.</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, use <see cref="GetLastError" />.</para>
      <para>If the error value is ERROR_INSUFFICIENT_BUFFER, the <i>ReturnedLength</i> parameter contains the required buffer size.</para>
    </returns>
  </member>
  <member name="Windows.GetProductInfo">
    <summary>
      <para>Retrieves the product type for the operating system on the local computer, and maps the type to the product types supported by the specified operating system.</para>
      <para>To retrieve product type information on versions of Windows prior to the minimum supported operating systems specified in the Requirements section, use the <see cref="GetVersionEx" /> function. You can also use the <b>OperatingSystemSKU</b> property of the <a href="https://docs.microsoft.com//windows/desktop/CIMWin32Prov/win32-operatingsystem">Win32_OperatingSystem</a> WMI class.</para>
    </summary>
    <param name="dwOSMajorVersion">
      <para>The major version number of the operating system. The minimum value is 6.</para>
      <para>The combination of the <i>dwOSMajorVersion</i>, <i>dwOSMinorVersion</i>, <i>dwSpMajorVersion</i>, and <i>dwSpMinorVersion</i> parameters describes the maximum target operating system version for the application. For example, Windows Vista and Windows Server 2008 are version 6.0.0.0 and Windows 7 and Windows Server 2008 R2 are version 6.1.0.0. All Windows 10 based releases will be listed as version 6.3.</para>
    </param>
    <param name="dwOSMinorVersion">The minor version number of the operating system. The minimum value is 0.</param>
    <param name="dwSpMajorVersion">The major version number of the operating system service pack. The minimum value is 0.</param>
    <param name="dwSpMinorVersion">The minor version number of the operating system service pack. The minimum value is 0.</param>
    <param name="pdwReturnedProductType">
      <para>The product type. This parameter cannot be <b>NULL</b>. If the specified operating system is less than the current operating system, this information is mapped to the types supported by the specified operating system. If the specified operating system is greater than the highest supported operating system, this information is mapped to the types supported by the current operating system.</para>
      <para>This parameter can be one of the following values (some products below may be out of support).</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_BUSINESS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000006</term>
              </listheader>
            </list>
          </description>
          <description>Business</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_BUSINESS_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Business N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CLUSTER_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000012</term>
              </listheader>
            </list>
          </description>
          <description>HPC Edition</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CLUSTER_SERVER_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000040</term>
              </listheader>
            </list>
          </description>
          <description>Server Hyper Core V</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000065</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Home</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CORE_COUNTRYSPECIFIC</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000063</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Home China</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CORE_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000062</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Home N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_CORE_SINGLELANGUAGE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000064</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Home Single Language</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_EVALUATION_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000050</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter (evaluation installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_A_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000091</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter, Semi-Annual Channel (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_A_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000092</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard, Semi-Annual Channel (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter (full installation. For Server Core installations of Windows Server 2012 and later, use the method, <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/hh846315(v=vs.85)">Determining whether Server Core is running</a>.)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000C</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter (core installation, Windows Server 2008 R2 and earlier)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_SERVER_CORE_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000027</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter without Hyper-V (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_DATACENTER_SERVER_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000025</term>
              </listheader>
            </list>
          </description>
          <description>Server Datacenter without Hyper-V (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_EDUCATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000079</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Education</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_EDUCATION_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000007A</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Education N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000046</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise E</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_EVALUATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000048</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise Evaluation</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001B</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_N_EVALUATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000054</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise N Evaluation</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_S</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000007D</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise 2015 LTSB</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_S_EVALUATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000081</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise 2015 LTSB Evaluation</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_S_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000007E</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise 2015 LTSB N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_S_N_EVALUATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000082</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise 2015 LTSB N Evaluation</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000A</term>
              </listheader>
            </list>
          </description>
          <description>Server Enterprise (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000E</term>
              </listheader>
            </list>
          </description>
          <description>Server Enterprise (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_SERVER_CORE_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000029</term>
              </listheader>
            </list>
          </description>
          <description>Server Enterprise without Hyper-V (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_SERVER_IA64</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000F</term>
              </listheader>
            </list>
          </description>
          <description>Server Enterprise for Itanium-based Systems</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ENTERPRISE_SERVER_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000026</term>
              </listheader>
            </list>
          </description>
          <description>Server Enterprise without Hyper-V (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000003C</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Server Solution Additional</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000003E</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Server Solution Additional SVC</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000003B</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Server Solution Management</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000003D</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Server Solution Management SVC</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_BASIC</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Home Basic</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_BASIC_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000043</term>
              </listheader>
            </list>
          </description>
          <description>Not supported</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_BASIC_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000005</term>
              </listheader>
            </list>
          </description>
          <description>Home Basic N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_PREMIUM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000003</term>
              </listheader>
            </list>
          </description>
          <description>Home Premium</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_PREMIUM_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000044</term>
              </listheader>
            </list>
          </description>
          <description>Not supported</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_PREMIUM_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001A</term>
              </listheader>
            </list>
          </description>
          <description>Home Premium N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_PREMIUM_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000022</term>
              </listheader>
            </list>
          </description>
          <description>Windows Home Server 2011</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HOME_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000013</term>
              </listheader>
            </list>
          </description>
          <description>Windows Storage Server 2008 R2 Essentials</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_HYPERV</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002A</term>
              </listheader>
            </list>
          </description>
          <description>Microsoft Hyper-V Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_IOTENTERPRISE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000BC</term>
              </listheader>
            </list>
          </description>
          <description>Windows IoT Enterprise</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_IOTENTERPRISE_S</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000BF</term>
              </listheader>
            </list>
          </description>
          <description>Windows IoT Enterprise LTSC</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_IOTUAP</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000007B</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 IoT Core</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_IOTUAPCOMMERCIAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000083</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 IoT Core Commercial</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001E</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Business Server Management Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000020</term>
              </listheader>
            </list>
          </description>
          <description>Windows Essential Business Server Messaging Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001F</term>
              </listheader>
            </list>
          </description>
          <description> Windows Essential Business Server Security Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MOBILE_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000068</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Mobile</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MOBILE_ENTERPRISE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000085</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Mobile Enterprise</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MULTIPOINT_PREMIUM_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000004D</term>
              </listheader>
            </list>
          </description>
          <description>Windows MultiPoint Server Premium (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_MULTIPOINT_STANDARD_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000004C</term>
              </listheader>
            </list>
          </description>
          <description>Windows MultiPoint Server Standard (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PPI_PRO</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000077</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Team</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PRO_FOR_EDUCATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000A4</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Pro Education</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PRO_WORKSTATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000A1</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Pro for Workstations</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PRO_WORKSTATION_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000A2</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Pro for Workstations N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PROFESSIONAL</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000030</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Pro</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PROFESSIONAL_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000045</term>
              </listheader>
            </list>
          </description>
          <description> Not supported</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PROFESSIONAL_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000031</term>
              </listheader>
            </list>
          </description>
          <description> Windows 10 Pro N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_PROFESSIONAL_WMC</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000067</term>
              </listheader>
            </list>
          </description>
          <description>Professional with Media Center</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SB_SOLUTION_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000032</term>
              </listheader>
            </list>
          </description>
          <description>Windows Small Business Server 2011 Essentials</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SB_SOLUTION_SERVER_EM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000036</term>
              </listheader>
            </list>
          </description>
          <description>Server For SB Solutions EM</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVER_FOR_SB_SOLUTIONS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000033</term>
              </listheader>
            </list>
          </description>
          <description>Server For SB Solutions</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000037</term>
              </listheader>
            </list>
          </description>
          <description>Server For SB Solutions EM</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVER_FOR_SMALLBUSINESS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000018</term>
              </listheader>
            </list>
          </description>
          <description>Windows Server 2008 for Windows Essential Server Solutions</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVER_FOR_SMALLBUSINESS_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000023</term>
              </listheader>
            </list>
          </description>
          <description>Windows Server 2008 without Hyper-V for Windows Essential Server Solutions</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVER_FOUNDATION</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000021</term>
              </listheader>
            </list>
          </description>
          <description>Server Foundation</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SERVERRDSH</b>
                </term>
              </listheader>
              <listheader>
                <term>0x000000AF</term>
              </listheader>
            </list>
          </description>
          <description>Windows 10 Enterprise for Virtual Desktops</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SMALLBUSINESS_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000009</term>
              </listheader>
            </list>
          </description>
          <description>Windows Small Business Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SMALLBUSINESS_SERVER_PREMIUM</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000019</term>
              </listheader>
            </list>
          </description>
          <description>Small Business Server Premium</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000003F</term>
              </listheader>
            </list>
          </description>
          <description>Small Business Server Premium (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_SOLUTION_EMBEDDEDSERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000038</term>
              </listheader>
            </list>
          </description>
          <description>Windows MultiPoint Server</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_EVALUATION_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000004F</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard (evaluation installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000007</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard (full installation. For Server Core installations of Windows Server 2012 and later, use the method, <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/hh846315(v=vs.85)">Determining whether Server Core is running</a>.)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000D</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard (core installation, Windows Server 2008 R2 and earlier)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER_CORE_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000028</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard without Hyper-V (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER_V</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000024</term>
              </listheader>
            </list>
          </description>
          <description>Server Standard without Hyper-V</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER_SOLUTIONS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000034</term>
              </listheader>
            </list>
          </description>
          <description>Server Solutions Premium</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000035</term>
              </listheader>
            </list>
          </description>
          <description>Server Solutions Premium (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STARTER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000000B</term>
              </listheader>
            </list>
          </description>
          <description>Starter</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STARTER_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000042</term>
              </listheader>
            </list>
          </description>
          <description>Not supported</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STARTER_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002F</term>
              </listheader>
            </list>
          </description>
          <description>Starter N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_ENTERPRISE_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000017</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Enterprise</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002E</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Enterprise (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_EXPRESS_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000014</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Express</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_EXPRESS_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002B</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Express (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000060</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Standard (evaluation installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_STANDARD_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000015</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Standard</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_STANDARD_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002C</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Standard (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000005F</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Workgroup (evaluation installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_WORKGROUP_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000016</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Workgroup</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_STORAGE_WORKGROUP_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000002D</term>
              </listheader>
            </list>
          </description>
          <description>Storage Server Workgroup (core installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ULTIMATE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Ultimate</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ULTIMATE_E</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000047</term>
              </listheader>
            </list>
          </description>
          <description>Not supported</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_ULTIMATE_N</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001C</term>
              </listheader>
            </list>
          </description>
          <description>Ultimate N</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_UNDEFINED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000</term>
              </listheader>
            </list>
          </description>
          <description>An unknown product</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_WEB_SERVER</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000011</term>
              </listheader>
            </list>
          </description>
          <description>Web Server (full installation)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>PRODUCT_WEB_SERVER_CORE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0000001D</term>
              </listheader>
            </list>
          </description>
          <description>Web Server (core installation)</description>
        </listheader>
      </list>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. This function fails if one of the input parameters is invalid.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectory">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectoryA">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectoryW">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectory">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectoryA">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemDirectoryW">
    <summary>
      <para>Retrieves the path of the system directory. The system directory contains system files such as dynamic-link libraries and drivers.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the system directory is the root directory. For example, if the system directory is named Windows\System32 on drive C, the path of the system directory retrieved by this function is C:\Windows\System32.</param>
    <param name="uSize">The maximum size of the buffer, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length, in <b>TCHARs</b>, of the string copied to the buffer, not including the terminating null character. If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path, including the terminating null character.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemFirmwareTable">
    <summary>Retrieves the specified firmware table from the firmware table provider.</summary>
    <param name="FirmwareTableProviderSignature">
      <para>The identifier of the firmware table provider to which the query is to be directed. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>'ACPI'</description>
          <description>The ACPI firmware table provider.</description>
        </listheader>
        <listheader>
          <description>'FIRM'</description>
          <description>The raw firmware table provider.</description>
        </listheader>
        <listheader>
          <description>'RSMB'</description>
          <description>The raw SMBIOS firmware table provider.</description>
        </listheader>
      </list>
    </param>
    <param name="FirmwareTableID">
      <para>The identifier of the firmware table. This identifier is little endian, you must reverse the characters in the string.</para>
      <para>For example, FACP is an ACPI provider, as described in the Signature field of the DESCRIPTION_HEADER structure in the ACPI specification (see the <a href="https://uefi.org/htmlspecs/acpi_spec_6_4_html/">Advanced Configuration and Power Interface (ACPI) Specification</a>. Therefore, use 'PCAF' to specify the FACP table, as shown in the following example:</para>
      <para>
        <code>retVal = GetSystemFirmwareTable('ACPI', 'PCAF', pBuffer, BUFSIZE);</code>
      </para>
      <para>For more information, see the Remarks section of the <see cref="EnumSystemFirmwareTables" /> function.</para>
    </param>
    <param name="pFirmwareTableBuffer">
      <para>A pointer to a buffer that receives the requested firmware table. If this parameter is <b>NULL</b>, the return value is the required buffer size.</para>
      <para>For more information on the contents of this buffer, see the Remarks section.</para>
    </param>
    <param name="BufferSize">The size of the <i>pFirmwareTableBuffer</i> buffer, in bytes.</param>
    <returns>
      <para>If the function succeeds, the return value is the number of bytes written to the buffer. This value will always be less than or equal to <i>BufferSize</i>.</para>
      <para>If the function fails because the buffer is not large enough, the return value is the required buffer size, in bytes. This value is always greater than <i>BufferSize</i>.</para>
      <para>If the function fails for any other reason, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemInfo">
    <summary>
      <para>Retrieves information about the current system.</para>
      <para>To retrieve accurate information for an application running on WOW64, call the<see cref="GetNativeSystemInfo" /> function.</para>
    </summary>
    <param name="lpSystemInfo">A pointer to a<see cref="SYSTEM_INFO" /> structure that receives the information.</param>
  </member>
  <member name="Windows.GetSystemTime">
    <summary>
      <para>Retrieves the current system date and time in Coordinated Universal Time (UTC) format.</para>
      <para>To retrieve the current system date and time in local time, use the <see cref="GetLocalTime" /> function.</para>
    </summary>
    <param name="lpSystemTime">A pointer to a<see cref="SYSTEMTIME" /> structure to receive the current system date and time. The <i>lpSystemTime</i> parameter must not be <b>NULL</b>. Using <b>NULL</b> will result in an access violation.</param>
  </member>
  <member name="Windows.GetSystemTimeAdjustment">
    <summary>Determines whether the system is applying periodic time adjustments to its time-of-day clock, and obtains the value and period of any such adjustments.</summary>
    <param name="lpTimeAdjustment">A pointer to a variable that the function sets to the number of <i>lpTimeIncrement</i> 100-nanosecond units added to the time-of-day clock for every period of time which actually passes as counted by the system. This value only has meaning if <i>lpTimeAdjustmentDisabled</i> is <b>FALSE</b>.</param>
    <param name="lpTimeIncrement">A pointer to a variable that the function sets to the interval in 100-nanosecond units at which the system will add <i>lpTimeAdjustment</i> to the time-of-day clock. This value only has meaning if <i>lpTimeAdjustmentDisabled</i> is <b>FALSE</b>.</param>
    <param name="lpTimeAdjustmentDisabled">
      <para>A pointer to a variable that the function sets to indicate whether periodic time adjustment is in effect.</para>
      <para>A value of <b>TRUE</b> indicates that periodic time adjustment is disabled, and the system time-of-day clock advances at the normal rate. In this mode, the system may adjust the time of day using its own internal time synchronization mechanisms. These internal time synchronization mechanisms may cause the time-of-day clock to change during the normal course of the system operation, which can include noticeable jumps in time as deemed necessary by the system.</para>
      <para>A value of <b>FALSE</b> indicates that periodic time adjustment is being used to adjust the time-of-day clock. For each <i>lpTimeIncrement</i> period of time that actually passes, <i>lpTimeAdjustment</i> will be added to the time of day. If the <i>lpTimeAdjustment</i> value is smaller than <i>lpTimeIncrement</i>, the system time-of-day clock will advance at a rate slower than normal. If the <i>lpTimeAdjustment</i> value is larger than <i>lpTimeIncrement</i>, the time-of-day clock will advance at a rate faster than normal. If <i>lpTimeAdjustment</i> equals <i>lpTimeIncrement</i>, the time-of-day clock will advance at its normal speed. The <i>lpTimeAdjustment</i> value can be set by calling <see cref="SetSystemTimeAdjustment" />. The <i>lpTimeIncrement</i> value is fixed by the system upon start, and does not change during system operation. In this mode, the system will not interfere with the time adjustment scheme, and will not attempt to synchronize time of day on its own via other techniques.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call <see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemTimeAsFileTime">
    <summary>Retrieves the current system date and time. The information is in Coordinated Universal Time (UTC) format.</summary>
    <param name="lpSystemTimeAsFileTime">A pointer to a<see cref="FILETIME" /> structure to receive the current system date and time in UTC format.</param>
  </member>
  <member name="Windows.GetSystemTimePreciseAsFileTime">
    <summary>The<b>GetSystemTimePreciseAsFileTime</b>function retrieves the current system date and time with the highest possible level of precision (&lt;1us). The retrieved information is in Coordinated Universal Time (UTC) format.</summary>
    <param name="lpSystemTimeAsFileTime">A pointer to a <see cref="FILETIME" /> structure that contains the current system date and time in UTC format.</param>
  </member>
  <member name="Windows.GetSystemWindowsDirectory">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemWindowsDirectoryA">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemWindowsDirectoryW">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemWindowsDirectory">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemWindowsDirectoryA">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetSystemWindowsDirectoryW">
    <summary>
      <para>Retrieves the path of the shared Windows directory on a multi-user system.</para>
      <para>This function is provided primarily for compatibility. Applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to the buffer to receive the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in <b>TCHARs</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in <b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetTickCount">
    <summary>Retrieves the number of milliseconds that have elapsed since the system was started, up to 49.7 days.</summary>
    <returns>The return value is the number of milliseconds that have elapsed since the system was started.</returns>
  </member>
  <member name="Windows.GetTickCount64">
    <summary>Retrieves the number of milliseconds that have elapsed since the system was started.</summary>
    <returns>The number of milliseconds.</returns>
  </member>
  <member name="Windows.GetVersion">
    <summary>
      <para>
        <b>GetVersion</b> may be altered or unavailable for releases after Windows 8.1. Instead, use the <a href="https://docs.microsoft.com//windows/desktop/SysInfo/version-helper-apis">Version Helper functions</a>. For Windows 10 apps, please see <a href="https://docs.microsoft.com//windows/win32/sysinfo/targeting-your-application-at-windows-8-1">Targeting your applications for Windows</a>.</para>
      <para>With the release of Windows 8.1, the behavior of the <b>GetVersion</b> API has changed in the value it will return for the operating system version. The value returned by the <b>GetVersion</b> function now depends on how the application is manifested.</para>
      <para>Applications not manifested for Windows 8.1 or Windows 10 will return the Windows 8 OS version value (6.2). Once an application is manifested for a given operating system version, <b>GetVersion</b> will always return the version that the application is manifested for in future releases. To manifest your applications for Windows 8.1 or Windows 10, refer to <a href="https://docs.microsoft.com//windows/desktop/SysInfo/targeting-your-application-at-windows-8-1">Targeting your application for Windows</a>.</para>
    </summary>
    <returns>
      <para>If the function succeeds, the return value includes the major and minor version numbers of the operating system in the low-order word, and information about the operating system platform in the high-order word.</para>
      <para>For all platforms, the low-order word contains the version number of the operating system. The low-order byte of this word specifies the major version number, in hexadecimal notation. The high-order byte specifies the minor version (revision) number, in hexadecimal notation. The high-order bit is zero, the next 7 bits represent the build number, and the low-order byte is 5.</para>
    </returns>
  </member>
  <member name="Windows.GetVersionEx">
    <summary>
      <para>
        <b>GetVersionExA</b> may be altered or unavailable for releases after Windows 8.1. Instead, use the <a href="https://docs.microsoft.com//windows/desktop/SysInfo/version-helper-apis">Version Helper functions</a>. For Windows 10 apps, please see <a href="https://docs.microsoft.com//windows/win32/sysinfo/targeting-your-application-at-windows-8-1">Targeting your applications for Windows</a>.</para>
      <para>With the release of Windows 8.1, the behavior of the <b>GetVersionEx</b> API has changed in the value it will return for the operating system version. The value returned by the <b>GetVersionEx</b> function now depends on how the application is manifested.</para>
      <para>Applications not manifested for Windows 8.1 or Windows 10 will return the Windows 8 OS version value (6.2). Once an application is manifested for a given operating system version, <b>GetVersionEx</b> will always return the version that the application is manifested for in future releases. To manifest your applications for Windows 8.1 or Windows 10, refer to <a href="https://docs.microsoft.com//windows/desktop/SysInfo/targeting-your-application-at-windows-8-1">Targeting your application for Windows</a>.</para>
    </summary>
    <param name="lpVersionInformation">
      <para>An<see cref="OSVERSIONINFO" /> or <see cref="OSVERSIONINFOEX" /> structure that receives the operating system information.</para>
      <para>Before calling the<b>GetVersionEx</b> function, set the <b>dwOSVersionInfoSize</b> member of the structure as appropriate to indicate which data structure is being passed to this function.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. The function fails if you specify an invalid value for the <b>dwOSVersionInfoSize</b> member of the<see cref="OSVERSIONINFO" /> or<see cref="OSVERSIONINFOEX" /> structure.</para>
    </returns>
  </member>
  <member name="Windows.GetVersionExA">
    <summary>
      <para>
        <b>GetVersionExA</b> may be altered or unavailable for releases after Windows 8.1. Instead, use the <a href="https://docs.microsoft.com//windows/desktop/SysInfo/version-helper-apis">Version Helper functions</a>. For Windows 10 apps, please see <a href="https://docs.microsoft.com//windows/win32/sysinfo/targeting-your-application-at-windows-8-1">Targeting your applications for Windows</a>.</para>
      <para>With the release of Windows 8.1, the behavior of the <b>GetVersionEx</b> API has changed in the value it will return for the operating system version. The value returned by the <b>GetVersionEx</b> function now depends on how the application is manifested.</para>
      <para>Applications not manifested for Windows 8.1 or Windows 10 will return the Windows 8 OS version value (6.2). Once an application is manifested for a given operating system version, <b>GetVersionEx</b> will always return the version that the application is manifested for in future releases. To manifest your applications for Windows 8.1 or Windows 10, refer to <a href="https://docs.microsoft.com//windows/desktop/SysInfo/targeting-your-application-at-windows-8-1">Targeting your application for Windows</a>.</para>
    </summary>
    <param name="lpVersionInformation">
      <para>An<see cref="OSVERSIONINFO" /> or <see cref="OSVERSIONINFOEX" /> structure that receives the operating system information.</para>
      <para>Before calling the<b>GetVersionEx</b> function, set the <b>dwOSVersionInfoSize</b> member of the structure as appropriate to indicate which data structure is being passed to this function.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. The function fails if you specify an invalid value for the <b>dwOSVersionInfoSize</b> member of the<see cref="OSVERSIONINFO" /> or<see cref="OSVERSIONINFOEX" /> structure.</para>
    </returns>
  </member>
  <member name="Windows.GetVersionExW">
    <summary>
      <para>
        <b>GetVersionExA</b> may be altered or unavailable for releases after Windows 8.1. Instead, use the <a href="https://docs.microsoft.com//windows/desktop/SysInfo/version-helper-apis">Version Helper functions</a>. For Windows 10 apps, please see <a href="https://docs.microsoft.com//windows/win32/sysinfo/targeting-your-application-at-windows-8-1">Targeting your applications for Windows</a>.</para>
      <para>With the release of Windows 8.1, the behavior of the <b>GetVersionEx</b> API has changed in the value it will return for the operating system version. The value returned by the <b>GetVersionEx</b> function now depends on how the application is manifested.</para>
      <para>Applications not manifested for Windows 8.1 or Windows 10 will return the Windows 8 OS version value (6.2). Once an application is manifested for a given operating system version, <b>GetVersionEx</b> will always return the version that the application is manifested for in future releases. To manifest your applications for Windows 8.1 or Windows 10, refer to <a href="https://docs.microsoft.com//windows/desktop/SysInfo/targeting-your-application-at-windows-8-1">Targeting your application for Windows</a>.</para>
    </summary>
    <param name="lpVersionInformation">
      <para>An<see cref="OSVERSIONINFO" /> or <see cref="OSVERSIONINFOEX" /> structure that receives the operating system information.</para>
      <para>Before calling the<b>GetVersionEx</b> function, set the <b>dwOSVersionInfoSize</b> member of the structure as appropriate to indicate which data structure is being passed to this function.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. The function fails if you specify an invalid value for the <b>dwOSVersionInfoSize</b> member of the<see cref="OSVERSIONINFO" /> or<see cref="OSVERSIONINFOEX" /> structure.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectory">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectoryA">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectoryW">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectory">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectoryA">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GetWindowsDirectoryW">
    <summary>
      <para>Retrieves the path of the Windows directory.</para>
      <para>This function is provided primarily for compatibility with legacy applications. New applications should store code in the Program Files folder and persistent data in the Application Data folder in the user's profile. For more information, see<see cref="ShGetFolderPath" />.</para>
    </summary>
    <param name="lpBuffer">A pointer to a buffer that receives the path. This path does not end with a backslash unless the Windows directory is the root directory. For example, if the Windows directory is named Windows on drive C, the path of the Windows directory retrieved by this function is C:\Windows. If the system was installed in the root directory of drive C, the path retrieved is C:.</param>
    <param name="uSize">The maximum size of the buffer specified by the <i>lpBuffer</i> parameter, in<b>TCHARs</b>. This value should be set to <b>MAX_PATH</b>.</param>
    <returns>
      <para>If the function succeeds, the return value is the length of the string copied to the buffer, in<b>TCHARs</b>, not including the terminating null character.</para>
      <para>If the length is greater than the size of the buffer, the return value is the size of the buffer required to hold the path.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.GlobalMemoryStatusEx">
    <summary>Retrieves information about the system's current usage of both physical and virtual memory.</summary>
    <param name="lpBuffer">A pointer to a<see cref="MEMORYSTATUSEX" /> structure that receives information about current memory availability.</param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.InstallELAMCertificateInfo">
    <summary>Installs the certificate information specified in the resource file, which is linked into the ELAM driver at build time. This API is used by anti-malware vendors to launch the anti-malware software's user-mode service as protected. For more information, see<a href="https://docs.microsoft.com//windows/desktop/Services/protecting-anti-malware-services-">Protecting Anti-Malware Services</a>.</summary>
    <param name="ELAMFile">A handle to an ELAM driver file which contains the resource file with the certificate information. The handle to the ELAM driver file must be opened for read access only and must not be shared for write access.</param>
    <returns>
      <para>If the function succeeds, the return value is TRUE.</para>
      <para>If the function fails, the return value is FALSE. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.IsUserCetAvailableInEnvironment">
    <summary>Queries whether user-mode Hardware-enforced Stack Protection is available for the specified environment.</summary>
    <param name="UserCetEnvironment">
      <para>The environment to query. This parameter can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USER_CET_ENVIRONMENT_WIN32_PROCESS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000000UL</term>
              </listheader>
            </list>
          </description>
          <description>The Win32 environment.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USER_CET_ENVIRONMENT_SGX2_ENCLAVE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002UL</term>
              </listheader>
            </list>
          </description>
          <description>The Intel Software Guard Extensions 2 (SGX2) enclave environment.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USER_CET_ENVIRONMENT_VBS_ENCLAVE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010UL</term>
              </listheader>
            </list>
          </description>
          <description>The virtualization-based security (VBS) enclave environment.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000011UL</term>
              </listheader>
            </list>
          </description>
          <description>The virtualization-based security (VBS) basic enclave environment.</description>
        </listheader>
      </list>
    </param>
    <returns>TRUE if user-mode Hardware-enforced Stack Protection is available for the specified environment, FALSE otherwise.</returns>
  </member>
  <member name="Windows.SetComputerName">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameA">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameW">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameEx">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameExA">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameExW">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameEx">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameExA">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameExW">
    <summary>Sets a new NetBIOS or DNS name for the local computer. Name changes made by<b>SetComputerNameEx</b> do not take effect until the user restarts the computer.</summary>
    <param name="NameType">
      <para>The type of name to be set. This parameter can be one of the following values from the<see cref="COMPUTER_NAME_FORMAT" /> enumeration type.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsDomain</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the primary DNS suffix of the computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalDnsHostname</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS and the Computer Name (the first label of the full DNS name) to the name specified in <i>lpBuffer</i>. If the name exceeds MAX_COMPUTERNAME_LENGTH characters, the NetBIOS name is truncated to MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ComputerNamePhysicalNetBIOS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Sets the NetBIOS name to the name specified in <i>lpBuffer</i>. The name cannot exceed MAX_COMPUTERNAME_LENGTH characters, not including the terminating null character. <para>Warning: Using this option to set the NetBIOS name breaks the convention of interdependent NetBIOS and DNS names. Applications that use the<see cref="DnsHostnameToComputerName" /> function to derive the NetBIOS name from the first label of the DNS name will fail if this convention is broken.</para></description>
        </listheader>
      </list>
    </param>
    <param name="lpBuffer">The new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters: " / \ [ ] : | &lt; &gt; + = ; , ?</param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerName">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameA">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetComputerNameW">
    <summary>
      <para>Sets a new NetBIOS name for the local computer. The name is stored in the registry and the name change takes effect the next time the user restarts the computer.</para>
      <para>If the local computer is a node in a cluster,<b>SetComputerName</b> sets NetBIOS name of the local computer, not that of the cluster virtual server.</para>
      <para>To set the DNS host name or the DNS domain name, call the<see cref="SetComputerNameEx" /> function.</para>
    </summary>
    <param name="lpComputerName">
      <para>The computer name that will take effect the next time the computer is started. The name must not be longer than MAX_COMPUTERNAME_LENGTH characters.</para>
      <para>The standard character set includes letters, numbers, and the following symbols: ! @ # $ % ^ &amp; ' ) ( . - _ { } ~ . If this parameter contains one or more characters that are outside the standard character set,<b>SetComputerName</b> returns ERROR_INVALID_PARAMETER.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is a nonzero value.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetLocalTime">
    <summary>Sets the current local time and date.</summary>
    <param name="lpSystemTime">
      <para>A pointer to a<see cref="SYSTEMTIME" /> structure that contains the new local date and time.</para>
      <para>The <b>wDayOfWeek</b> member of the<see cref="SYSTEMTIME" /> structure is ignored.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetSystemTime">
    <summary>Sets the current system time and date. The system time is expressed in Coordinated Universal Time (UTC).</summary>
    <param name="lpSystemTime">
      <para>A pointer to a<see cref="SYSTEMTIME" /> structure that contains the new system date and time.</para>
      <para>The <b>wDayOfWeek</b> member of the<see cref="SYSTEMTIME" /> structure is ignored.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is nonzero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />.</para>
    </returns>
  </member>
  <member name="Windows.SetSystemTimeAdjustmentPrecise">
    <summary>Enables or disables periodic time adjustments to the system's time-of-day clock. When enabled, such time adjustments can be used to synchronize the time of day with some other source of time information.</summary>
    <param name="dwTimeAdjustment">Supplies the adjusted clock update frequency.</param>
    <param name="bTimeAdjustmentDisabled">
      <para>Supplies a flag which specifies the time adjustment mode that the system is to use.</para>
      <para>A value of <b>TRUE</b> indicates that the system should synchronize time-of-day using its own internal mechanisms. In this case, the value of <i>dwTimeAdjustment</i> is ignored.</para>
      <para>A value of <b>FALSE</b> indicates that the application is in control, and that the specified value of <i>dwTimeAdjustment</i> is to be added to the time-of-day clock at each clock update interrupt.</para>
    </param>
    <returns>
      <para>If the function succeeds, the return value is non-zero.</para>
      <para>If the function fails, the return value is zero. To get extended error information, call<see cref="GetLastError" />. One way the function can fail is if the caller does not possess the SE_SYSTEMTIME_NAME privilege.</para>
    </returns>
  </member>
</doc>