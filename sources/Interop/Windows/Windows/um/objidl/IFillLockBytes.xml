<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IFillLockBytes.FillAppend">
    <summary>The <b>FillAppend</b> method writes a new block of bytes to the end of a byte array.</summary>
    <param name="pv">Pointer to the data to be appended to the end of an existing byte array. This operation does not create a danger of a memory leak or a buffer overrun.</param>
    <param name="cb">Size of <i>pv</i> in bytes.</param>
    <param name="pcbWritten">Number of bytes that were successfully written.</param>
    <returns>This function supports the standard return values E_OUTOFMEMORY, E_UNEXPECTED, E_INVALIDARG, and E_FAIL.</returns>
  </member>
  <member name="IFillLockBytes.FillAt">
    <summary>The<b>FillAt</b> method writes a new block of data to a specified location in the byte array.</summary>
    <param name="ulOffset">The offset, expressed in number of bytes, from the first element of the byte array.</param>
    <param name="pv">Pointer to the data to be written at the location specified by <i>uIOffset</i>.</param>
    <param name="cb">Size of <i>pv</i> in bytes.</param>
    <param name="pcbWritten">Number of bytes that were successfully written.</param>
    <returns>
      <para>This function supports the standard return values E_OUTOFMEMORY, E_UNEXPECTED, E_INVALIDARG, and E_FAIL in addition to the following:</para>
      <para>| Return code | Description | |----------------|---------------| | E_NOTIMPL | The byte array does not support the <b>FillAt</b> method. |</para>
    </returns>
  </member>
  <member name="IFillLockBytes.SetFillSize">
    <summary>The<b>SetFillSize</b> method sets the expected size of the byte array.</summary>
    <param name="ulSize">Size in bytes of the byte array object that is to be filled in subsequent calls to<see cref="IFillLockBytes.FillAppend" />.</param>
    <returns>This function supports the standard return values E_OUTOFMEMORY, E_UNEXPECTED, E_INVALIDARG, and E_FAIL.</returns>
  </member>
  <member name="IFillLockBytes.Terminate">
    <summary>The <b>Terminate</b> method informs the byte array that the download has been terminated, either successfully or unsuccessfully.</summary>
    <param name="bCanceled">Download is complete. If <b>TRUE</b>, the download was terminated unsuccessfully. If <b>FALSE</b>, the download terminated successfully.</param>
    <returns>This function supports the standard return values E_OUTOFMEMORY, E_UNEXPECTED, E_INVALIDARG, and E_FAIL.</returns>
  </member>
  <member name="IFillLockBytes">
    <summary>The<b>IFillLockBytes</b> interface enables downloading code to write data asynchronously to a structured storage byte array. When the downloading code has new data available, it calls<see cref="IFillLockBytes.FillAppend" /> or <see cref="IFillLockBytes.FillAt" /> to write the data to the byte array. An application attempting to access this data, through calls to the<see cref="ILockBytes" /> interface, can do so even as the downloader continues to make calls to<b>IFillLockBytes</b>. If the application attempts to access data that has not already been downloaded through a call to<b>IFillLockBytes</b>, then<b>ILockBytes</b> returns a new error, E_PENDING.</summary>
  </member>
</doc>