<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IProgressNotify.OnProgress">
    <summary>Notifies registered objects and applications of the progress of a downloading operation.</summary>
    <param name="dwProgressCurrent">The amount of data available.</param>
    <param name="dwProgressMaximum">The total amount of data to be downloaded.</param>
    <param name="fAccurate">Indicates the accuracy of the values in <i>dwProgressCurrent</i> and <i>dwProgressMaximum</i>. They are either reliable (<b>TRUE</b>) or unreliable (<b>FALSE</b>). The <b>FALSE</b> value indicates that control structures for determining the actual position of, or amount of, data yet to be downloaded are not available.</param>
    <param name="fOwner">Indicates whether this <b>OnProgress</b> call can control the blocking behavior of the operation. If <b>TRUE</b>, the caller can use return values from <b>OnProgress</b> to block (STG_S_BLOCK), retry (STG_S_RETRYNOW), or monitor (STG_S_MONITORING) the operation. If <b>FALSE</b>, the return value from <b>OnProgress</b> has no influence on blocking behavior.</param>
    <returns>
      <para>This method can return the standard return values E_FAIL, E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STG_S_RETRYNOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller is to retry the operation immediately. (This value is most useful for applications that do blocking from within the callback routine.)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STG_S_BLOCK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The caller is to block the download and retry the call as needed to determine if additional data is available. This is the default behavior if no sinks are registered on the connection point.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STG_S_MONITORING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The callback recipient relinquishes control of the downloading process to one of the other objects or applications that have registered progress notification sinks on the same stream. This is useful if the notification sink is interested only in gathering statistics.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_PENDING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Data is currently unavailable. The caller is to try again after some desired interval. The notification sink returns this value if the asynchronous storage is to operate in nonblocking mode.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IProgressNotify">
    <summary>Enables applications and other objects to receive notifications of changes in the progress of a downloading operation.</summary>
  </member>
</doc>