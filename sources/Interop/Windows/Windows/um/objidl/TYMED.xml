<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="TYMED">
    <summary>
      <para>Indicates the type of storage medium being used in a data transfer. They are used in the <see cref="STGMEDIUM" /> or <see cref="FORMATETC" /> structures.</para>
    </summary>
    <remarks>
      <para>During data transfer operations, a storage medium is specified. This medium must be released after the data transfer operation. The provider of the medium indicates its choice of ownership scenarios in the value it provides in the <see cref="STGMEDIUM" /> structure. A <b>NULL</b> value for the <b>pUnkForRelease</b> member indicates that the receiving body of code owns and can free the medium. A non-<b>NULL</b> pointer specifies that <see cref="ReleaseStgMedium" /> can always be called to free the medium.</para>
    </remarks>
    <seealso cref="FORMATETC" />
    <seealso cref="IAdviseSink" />
    <seealso cref="IDataObject" />
    <seealso cref="IOleCache" />
    <seealso cref="ReleaseStgMedium" />
    <seealso cref="STGMEDIUM" />
  </member>
  <member name="TYMED.TYMED_HGLOBAL">
    <summary>
      <para>The storage medium is a global memory handle (<b>HGLOBAL</b>). Allocate the global handle with the GMEM_MOVEABLE flag. If the <b>punkForRelease</b> member of <see cref="STGMEDIUM" /> is <b>NULL</b>, the destination process should use <see cref="GlobalFree" /> to release the memory.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_FILE">
    <summary>
      <para>The storage medium is a disk file identified by a path. If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is <b>NULL</b>, the destination process should use <see cref="OpenFile" /> to delete the file.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_ISTREAM">
    <summary>
      <para>The storage medium is a stream object identified by an <see cref="IStream" /> pointer. Use <see cref="ISequentialStream.Read" /> to read the data. If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is not <b>NULL</b>, the destination process should use <see cref="Release" /> to release the stream component.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_ISTORAGE">
    <summary>
      <para>The storage medium is a storage component identified by an <see cref="IStorage" /> pointer. The data is in the streams and storages contained by this <b>IStorage</b> instance. If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is not <b>NULL</b>, the destination process should use <see cref="Release" /> to release the storage component.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_GDI">
    <summary>
      <para>The storage medium is a GDI component (<b>HBITMAP</b>). If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is <b>NULL</b>, the destination process should use <see cref="DeleteObject" /> to delete the bitmap.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_MFPICT">
    <summary>
      <para>The storage medium is a metafile (<b>HMETAFILE</b>). Use the GDI functions to access the metafile's data. If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is <b>NULL</b>, the destination process should use <see cref="DeleteMetaFile" /> to delete the bitmap.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_ENHMF">
    <summary>
      <para>The storage medium is an enhanced metafile. If the <see cref="STGMEDIUM" /><b>punkForRelease</b> member is <b>NULL</b>, the destination process should use <see cref="DeleteEnhMetaFile" /> to delete the bitmap.</para>
    </summary>
  </member>
  <member name="TYMED.TYMED_NULL">
    <summary>
      <para>No data is being passed.</para>
    </summary>
  </member>
</doc>