<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IBindCtx.EnumObjectParam">
    <summary>Retrieves a pointer to an interface that can be used to enumerate the keys of the bind context's string-keyed table of pointers.</summary>
    <param name="ppenum">The address of an <see cref="IEnumString" />* pointer variable that receives the interface pointer to the enumerator. If an error occurs, *<i>ppenum</i> is set to <b>NULL</b>. If *<i>ppenum</i> is non-<b>NULL</b>, the implementation calls <see cref="AddRef" /> on *<i>ppenum</i>; it is the caller's responsibility to call <see cref="Release" />.</param>
    <returns>This method can return the standard return values E_OUTOFMEMORY and S_OK.</returns>
  </member>
  <member name="IBindCtx.GetBindOptions">
    <summary>Retrieves the binding options stored in this bind context.</summary>
    <param name="pbindopts">A pointer to an initialized structure that receives the current binding parameters on return. See <see cref="BIND_OPTS3" />.</param>
    <returns>This method can return the standard return values E_UNEXPECTED and S_OK.</returns>
  </member>
  <member name="IBindCtx.GetObjectParam">
    <summary>Retrieves an interface pointer to the object associated with the specified key in the bind context's string-keyed table of pointers.</summary>
    <param name="pszKey">The <a href="https://docs.microsoft.com//windows/desktop/shell/str-constants">bind context string key</a> to be searched for. Key string comparison is case-sensitive.</param>
    <param name="ppunk">The address of an <see cref="IUnknown" />* pointer variable that receives the interface pointer to the object associated with <i>pszKey</i>. When successful, the implementation calls <see cref="AddRef" /> on *<i>ppunk</i>. It is the caller's responsibility to call <see cref="Release" />. If an error occurs, the implementation sets *<i>ppunk</i> to <b>NULL</b>.</param>
    <returns>If the method succeeds, the return value is S_OK. Otherwise, it is E_FAIL.</returns>
  </member>
  <member name="IBindCtx.GetRunningObjectTable">
    <summary>Retrieves an interface pointer to the running object table (ROT) for the computer on which this bind context is running.</summary>
    <param name="pprot">The address of a <see cref="IRunningObjectTable" />* pointer variable that receives the interface pointer to the running object table. If an error occurs, *<i>pprot</i> is set to <b>NULL</b>. If *<i>pprot</i> is non-<b>NULL</b>, the implementation calls <see cref="AddRef" /> on the running table object; it is the caller's responsibility to call <see cref="Release" />.</param>
    <returns>This method can return the standard return values E_OUTOFMEMORY, E_UNEXPECTED, and S_OK.</returns>
  </member>
  <member name="IBindCtx.RegisterObjectBound">
    <summary>Registers an object with the bind context to ensure that the object remains active until the bind context is released.</summary>
    <param name="punk">A pointer to the <see cref="IUnknown" /> interface on the object that is being registered as bound.</param>
    <returns>This method can return the standard return values E_OUTOFMEMORY and S_OK.</returns>
  </member>
  <member name="IBindCtx.RegisterObjectParam">
    <summary>Associates an object with a string key in the bind context's string-keyed table of pointers.</summary>
    <param name="pszKey">The <a href="https://docs.microsoft.com//windows/desktop/shell/str-constants">bind context string key</a> under which the object is being registered. Key string comparison is case-sensitive.</param>
    <param name="punk">
      <para>A pointer to the <see cref="IUnknown" /> interface on the object that is to be registered.</para>
      <para>The method calls <see cref="AddRef" /> on the pointer.</para>
    </param>
    <returns>This method can return the standard return values E_OUTOFMEMORY and S_OK.</returns>
  </member>
  <member name="IBindCtx.ReleaseBoundObjects">
    <summary>Releases all pointers to all objects that were previously registered by calls to <see cref="RegisterObjectBound" />.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IBindCtx.RevokeObjectBound">
    <summary>Removes the object from the bind context, undoing a previous call to <see cref="RegisterObjectBound" />.</summary>
    <param name="punk">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/com/iunknown-and-interface-inheritance">IUnknown</a> interface on the object to be removed.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object was released successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_NOTBOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object was not previously registered.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IBindCtx.RevokeObjectParam">
    <summary>Removes the specified key and its associated pointer from the bind context's string-keyed table of objects. The key must have previously been inserted into the table with a call to <see cref="RegisterObjectParam" />.</summary>
    <param name="pszKey">The <a href="https://docs.microsoft.com//windows/desktop/shell/str-constants">bind context string key</a> to be removed. Key string comparison is case-sensitive.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was removed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object was not previously registered.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IBindCtx.SetBindOptions">
    <summary>Sets new values for the binding parameters stored in the bind context.</summary>
    <param name="pbindopts">A pointer to a <see cref="BIND_OPTS3" /> structure containing the binding parameters.</param>
    <returns>This method can return the standard return values E_OUTOFMEMORY and S_OK.</returns>
  </member>
  <member name="IBindCtx">
    <summary>Provides access to a bind context, which is an object that stores information about a particular moniker binding operation.</summary>
  </member>
</doc>