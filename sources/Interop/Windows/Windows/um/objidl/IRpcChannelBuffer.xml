<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IRpcChannelBuffer.FreeBuffer">
    <summary>Frees a previously allocated RPC channel buffer.</summary>
    <param name="pMessage">A pointer to an <see cref="RPCOLEMESSAGE" /> data structure.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, E_FAIL, and S_OK.</returns>
  </member>
  <member name="IRpcChannelBuffer.GetBuffer">
    <summary>Retrieves a buffer into which data can be marshaled for transmission.</summary>
    <param name="pMessage">A pointer to an <see cref="RPCOLEMESSAGE" /> data structure.</param>
    <param name="riid">A reference to the identifier of the interface to be marshaled.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, E_FAIL, and S_OK.</returns>
  </member>
  <member name="IRpcChannelBuffer.GetDestCtx">
    <summary>Retrieves the destination context for the RPC channel.</summary>
    <param name="pdwDestContext">The destination context in which the interface is unmarshaled. Possible values come from the <see cref="MSHCTX" /> enumeration.</param>
    <param name="ppvDestContext">This parameter is reserved and must be <b>NULL</b>.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, E_FAIL, and S_OK.</returns>
  </member>
  <member name="IRpcChannelBuffer.IsConnected">
    <summary>Determines whether the RPC channel is connected.</summary>
    <returns>If the RPC channel knows that the server object has been disconnected, the return value is <b>S_FALSE</b>. Otherwise, it is <b>S_OK</b>.</returns>
  </member>
  <member name="IRpcChannelBuffer.SendReceive">
    <summary>Sends a method invocation across an RPC channel to the server stub.</summary>
    <param name="pMessage">A pointer to an <see cref="RPCOLEMESSAGE" /> structure that has been populated with marshaled data.</param>
    <param name="pStatus">If not <b>NULL</b>, set to 0 on successful execution.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, E_FAIL, and S_OK.</returns>
  </member>
  <member name="IRpcChannelBuffer">
    <summary>Marshals data between a COM client proxy and a COM server stub.</summary>
  </member>
</doc>