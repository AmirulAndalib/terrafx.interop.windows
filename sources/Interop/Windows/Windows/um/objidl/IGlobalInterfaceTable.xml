<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IGlobalInterfaceTable.GetInterfaceFromGlobal">
    <summary>Retrieves a pointer to an interface on an object that is usable by the calling apartment. This interface must be currently registered in the global interface table.</summary>
    <param name="dwCookie">Identifies the interface (and its object), and is retrieved through a call to <see cref="IGlobalInterfaceTable.RegisterInterfaceInGlobal" />.</param>
    <param name="riid">The IID of the interface.</param>
    <param name="ppv">A pointer to the pointer for the requested interface.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IGlobalInterfaceTable.RegisterInterfaceInGlobal">
    <summary>Registers the specified interface on an object residing in one apartment of a process as a global interface, enabling other apartments access to that interface.</summary>
    <param name="pUnk">An interface pointer of type <i>riid</i> on the object on which the interface to be registered as global is implemented.</param>
    <param name="riid">The IID of the interface to be registered as global.</param>
    <param name="pdwCookie">An identifier that can be used by another apartment to get access to a pointer to the interface being registered. The value of an invalid cookie is 0.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IGlobalInterfaceTable.RevokeInterfaceFromGlobal">
    <summary>Revokes the registration of an interface in the global interface table.</summary>
    <param name="dwCookie">Identifies the interface whose global registration is to be revoked.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IGlobalInterfaceTable">
    <summary>Enables any apartment in a process to get access to an interface implemented on an object in any other apartment in the process.</summary>
  </member>
</doc>