<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IRunningObjectTable.EnumRunning">
    <summary>Creates and returns a pointer to an enumerator that can list the monikers of all the objects currently registered in the running object table (ROT).</summary>
    <param name="ppenumMoniker">A pointer to an <see cref="IEnumMoniker" /> pointer variable that receives the interface pointer to the new enumerator for the ROT. When successful, the implementation calls <see cref="AddRef" /> on the enumerator; it is the caller's responsibility to call <see cref="Release" />. If an error occurs; the implementation sets *<i>ppenumMoniker</i> to <b>NULL</b>.</param>
    <returns>This method can return the standard return values E_OUTOFMEMORY and S_OK.</returns>
  </member>
  <member name="IRunningObjectTable.GetObject">
    <summary>Determines whether the object identified by the specified moniker is running, and if it is, retrieves a pointer to that object.</summary>
    <param name="pmkObjectName">A pointer to the <see cref="IMoniker" /> interface on the moniker.</param>
    <param name="ppunkObject">A pointer to an <see cref="IUnknown" /> pointer variable that receives the interface pointer to the running object. When successful, the implementation calls <see cref="AddRef" /> on the object; it is the caller's responsibility to call <see cref="Release" />. If the object is not running or if an error occurs, the implementation sets *<i>ppunkObject</i> to <b>NULL</b>.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates that <i>pmkObjectName</i> was found in the ROT and a pointer was retrieved.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is no entry for <i>pmkObjectName</i> in the ROT, or that the object it identifies is no longer running (in which case, the entry is revoked).</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IRunningObjectTable.GetTimeOfLastChange">
    <summary>Retrieves the time that an object was last modified.</summary>
    <param name="pmkObjectName">A pointer to the <see cref="IMoniker" /> interface on the moniker.</param>
    <param name="pfiletime">A pointer to a <see cref="FILETIME" /> structure that receives the object's last change time.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is no entry for <i>pmkObjectName</i> in the ROT, or that the object it identifies is no longer running (in which case, the entry is revoked).</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IRunningObjectTable.IsRunning">
    <summary>Determines whether the object identified by the specified moniker is currently running.</summary>
    <param name="pmkObjectName">A pointer to the <see cref="IMoniker" /> interface on the moniker.</param>
    <returns>If the object is in the running state, the return value is <b>TRUE</b>. Otherwise, it is <b>FALSE</b>.</returns>
  </member>
  <member name="IRunningObjectTable.NoteChangeTime">
    <summary>Records the time that a running object was last modified. The object must have previously been registered with the running object table (ROT). This method stores the time of last change in the ROT.</summary>
    <param name="dwRegister">The identifier of the ROT entry of the changed object. This value was previously returned by <see cref="IRunningObjectTable.Register" />.</param>
    <param name="pfiletime">A pointer to a <see cref="FILETIME" /> structure containing the object's last change time.</param>
    <returns>This method can return the standard return values E_INVALIDARG and S_OK.</returns>
  </member>
  <member name="IRunningObjectTable.Register">
    <summary>Registers an object and its identifying moniker in the running object table (ROT).</summary>
    <param name="grfFlags">
      <para>Specifies whether the ROT's reference to punkObject is weak or strong and controls access to the object through its entry in the ROT. For details, see the Remarks section.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ROTFLAGS_REGISTRATIONKEEPSALIVE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>When set, indicates a strong registration for the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>ROTFLAGS_ALLOWANYCLIENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>When set, any client can connect to the running object through its entry in the ROT. When not set, only clients in the window station that registered the object can connect to it.</description>
        </listheader>
      </list>
    </param>
    <param name="punkObject">A pointer to the object that is being registered as running.</param>
    <param name="pmkObjectName">A pointer to the moniker that identifies <i>punkObject</i>.</param>
    <param name="pdwRegister">An identifier for this ROT entry that can be used in subsequent calls to <see cref="IRunningObjectTable.Revoke" /> or <see cref="IRunningObjectTable.NoteChangeTime" />. The caller cannot specify <b>NULL</b> for this parameter. If an error occurs, *<i>pdwRegister</i> is set to zero.</param>
    <returns>
      <para>This method can return the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_S_MONIKERALREADYREGISTERED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The moniker/object pair was successfully registered, but that another object (possibly the same object) has already been registered with the same moniker.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IRunningObjectTable.Revoke">
    <summary>Removes an entry from the running object table (ROT) that was previously registered by a call to <see cref="IRunningObjectTable.Register" />.</summary>
    <param name="dwRegister">The identifier of the ROT entry to be revoked.</param>
    <returns>This method can return the standard return values E_INVALIDARG and S_OK.</returns>
  </member>
  <member name="IRunningObjectTable">
    <summary>Manages access to the running object table (ROT), a globally accessible look-up table on each workstation. A workstation's ROT keeps track of those objects that can be identified by a moniker and that are currently running on the workstation. When a client tries to bind a moniker to an object, the moniker checks the ROT to see if the object is already running; this allows the moniker to bind to the current instance instead of loading a new one.</summary>
  </member>
</doc>