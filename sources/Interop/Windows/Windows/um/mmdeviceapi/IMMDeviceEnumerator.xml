<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMMDeviceEnumerator.EnumAudioEndpoints">
    <summary>The <b>EnumAudioEndpoints</b> method generates a collection of audio endpoint devices that meet the specified criteria.</summary>
    <param name="dataFlow">
      <para>The data-flow direction for the endpoint devices in the collection. The caller should set this parameter to one of the following <see cref="EDataFlow" /> enumeration values:</para>
      <para>eRender</para>
      <para>eCapture</para>
      <para>eAll</para>
      <para>If the caller specifies eAll, the method includes both rendering and capture endpoints in the collection.</para>
    </param>
    <param name="dwStateMask">
      <para>The state or states of the endpoints that are to be included in the collection. The caller should set this parameter to the bitwise OR of one or more of the following <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/device-state-xxx-constants">DEVICE_STATE_XXX</a> constants:</para>
      <para>DEVICE_STATE_ACTIVE</para>
      <para>DEVICE_STATE_DISABLED</para>
      <para>DEVICE_STATE_NOTPRESENT</para>
      <para>DEVICE_STATE_UNPLUGGED</para>
      <para>For example, if the caller sets the <i>dwStateMask</i> parameter to DEVICE_STATE_ACTIVE | DEVICE_STATE_UNPLUGGED, the method includes endpoints that are either active or unplugged from their jacks, but excludes endpoints that are on audio adapters that have been disabled or are not present. To include all endpoints, regardless of state, set <i>dwStateMask</i> = DEVICE_STATEMASK_ALL.</para>
    </param>
    <param name="ppDevices">Pointer to a pointer variable into which the method writes the address of the <see cref="IMMDeviceCollection" /> interface of the device-collection object. Through this method, the caller obtains a counted reference to the interface. The caller is responsible for releasing the interface, when it is no longer needed, by calling the interface's <b>Release</b> method. If the <b>EnumAudioEndpoints</b> call fails, <i>*ppDevices</i> is <b>NULL</b>.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>ppDevices</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>dataFlow</i> or <i>dwStateMask</i> is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDeviceEnumerator.GetDefaultAudioEndpoint">
    <summary>The <b>GetDefaultAudioEndpoint</b> method retrieves the default audio endpoint for the specified data-flow direction and role.</summary>
    <param name="dataFlow">
      <para>The data-flow direction for the endpoint device. The caller should set this parameter to one of the following two <see cref="EDataFlow" /> enumeration values:</para>
      <para>eRender</para>
      <para>eCapture</para>
      <para>The data-flow direction for a rendering device is eRender. The data-flow direction for a capture device is eCapture.</para>
    </param>
    <param name="role">
      <para>The role of the endpoint device. The caller should set this parameter to one of the following <see cref="ERole" /> enumeration values:</para>
      <para>eConsole</para>
      <para>eMultimedia</para>
      <para>eCommunications</para>
      <para>For more information, see Remarks.</para>
    </param>
    <param name="ppEndpoint">Pointer to a pointer variable into which the method writes the address of the <see cref="IMMDevice" /> interface of the endpoint object for the default audio endpoint device. Through this method, the caller obtains a counted reference to the interface. The caller is responsible for releasing the interface, when it is no longer needed, by calling the interface's <b>Release</b> method. If the <b>GetDefaultAudioEndpoint</b> call fails, <i>*ppDevice</i> is <b>NULL</b>.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>ppDevice</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>dataFlow</i> or <i>role</i> is out of range.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No device is available.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDeviceEnumerator.GetDevice">
    <summary>The <b>GetDevice</b> method retrieves an audio endpoint device that is identified by an <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/endpoint-id-strings">endpoint ID string</a>.</summary>
    <param name="pwstrId">Pointer to a string containing the endpoint ID. The caller typically obtains this string from the <see cref="IMMDevice.GetId" /> method or from one of the methods in the <see cref="IMMNotificationClient" /> interface.</param>
    <param name="ppDevice">Pointer to a pointer variable into which the method writes the address of the <see cref="IMMDevice" /> interface for the specified device. Through this method, the caller obtains a counted reference to the interface. The caller is responsible for releasing the interface, when it is no longer needed, by calling the interface's <b>Release</b> method. If the <b>GetDevice</b> call fails, <i>*ppDevice</i> is <b>NULL</b>.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pwstrId</i> or <i>ppDevice</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device ID does not identify an audio device that is in this system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDeviceEnumerator.RegisterEndpointNotificationCallback">
    <summary>The <b>RegisterEndpointNotificationCallback</b> method registers a client's notification callback interface.</summary>
    <param name="pClient">Pointer to the <see cref="IMMNotificationClient" /> interface that the client is registering for notification callbacks.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pNotify</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDeviceEnumerator.UnregisterEndpointNotificationCallback">
    <summary>The <b>UnregisterEndpointNotificationCallback</b> method deletes the registration of a notification interface that the client registered in a previous call to the <see cref="IMMDeviceEnumerator.RegisterEndpointNotificationCallback" /> method.</summary>
    <param name="pClient">Pointer to the client's <see cref="IMMNotificationClient" /> interface. The client passed this same interface pointer to the device enumerator in a previous call to the <see cref="IMMDeviceEnumerator.RegisterEndpointNotificationCallback" /> method. For more information, see Remarks.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pNotify</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified notification interface was not found.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDeviceEnumerator">
    <summary>
      <para>The <b>IMMDeviceEnumerator</b> interface provides methods for enumerating multimedia device resources. In the current implementation of the MMDevice API, the only device resources that this interface can enumerate are <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-endpoint-devices">audio endpoint devices</a>. A client obtains a reference to an <b>IMMDeviceEnumerator</b> interface by calling the <b>CoCreateInstance</b> function, as described previously (see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/mmdevice-api">MMDevice API</a>).</para>
      <para>The device resources enumerated by the methods in the <b>IMMDeviceEnumerator</b> interface are represented as collections of objects with <see cref="IMMDevice" /> interfaces. A collection has an <see cref="IMMDeviceCollection" /> interface. The <see cref="IMMDeviceEnumerator.EnumAudioEndpoints" /> method creates a device collection.</para>
      <para>To obtain a pointer to the <b>IMMDevice</b> interface of an item in a device collection, the client calls the <see cref="IMMDeviceCollection.Item" /> method.</para>
      <para>For code examples that use the <b>IMMDeviceEnumerator</b> interface, see the following topics:</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/device-properties">Device Properties</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/rendering-a-stream">Rendering a Stream</a>
          </description>
        </item>
      </list>
    </summary>
  </member>
</doc>