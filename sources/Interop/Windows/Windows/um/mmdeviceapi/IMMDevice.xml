<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMMDevice.Activate">
    <summary>The <b>Activate</b> method creates a COM object with the specified interface.</summary>
    <param name="iid">
      <para>The interface identifier. This parameter is a reference to a GUID that identifies the interface that the caller requests be activated. The caller will use this interface to communicate with the COM object. Set this parameter to one of the following interface identifiers:</para>
      <para>IID_IAudioClient</para>
      <para>IID_IAudioEndpointVolume</para>
      <para>IID_IAudioMeterInformation</para>
      <para>IID_IAudioSessionManager</para>
      <para>IID_IAudioSessionManager2</para>
      <para>IID_IBaseFilter</para>
      <para>IID_IDeviceTopology</para>
      <para>IID_IDirectSound</para>
      <para>IID_IDirectSound8</para>
      <para>IID_IDirectSoundCapture</para>
      <para>IID_IDirectSoundCapture8</para>
      <para>IID_IMFTrustedOutput</para>
      <para>IID_ISpatialAudioClient</para>
      <para>IID_ISpatialAudioMetadataClient</para>
      <para>For more information, see Remarks.</para>
    </param>
    <param name="dwClsCtx">The execution context in which the code that manages the newly created object will run. The caller can restrict the context by setting this parameter to the bitwise <b>OR</b> of one or more <b>CLSCTX</b> enumeration values. Alternatively, the client can avoid imposing any context restrictions by specifying CLSCTX_ALL. For more information about <b>CLSCTX</b>, see the Windows SDK documentation.</param>
    <param name="pActivationParams">Set to <b>NULL</b> to activate an <see cref="IAudioClient" />, <see cref="IAudioEndpointVolume" />, <see cref="IAudioMeterInformation" />, <see cref="IAudioSessionManager" />, or <see cref="IDeviceTopology" /> interface on an audio endpoint device. When activating an <b>IBaseFilter</b>, <b>IDirectSound</b>, <b>IDirectSound8</b>, <b>IDirectSoundCapture</b>, or <b>IDirectSoundCapture8</b> interface on the device, the caller can specify a pointer to a <b>PROPVARIANT</b> structure that contains stream-initialization information. For more information, see Remarks.</param>
    <param name="ppInterface">Pointer to a pointer variable into which the method writes the address of the interface specified by parameter <i>iid</i>. Through this method, the caller obtains a counted reference to the interface. The caller is responsible for releasing the interface, when it is no longer needed, by calling the interface's <b>Release</b> method. If the <b>Activate</b> call fails, <i>*ppInterface</i> is <b>NULL</b>.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not support the requested interface type.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>ppInterface</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pActivationParams</i> parameter must be <b>NULL</b> for the specified interface; or <i>pActivationParams</i> points to invalid data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user has removed either the audio endpoint device or the adapter device that the endpoint device connects to.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDevice.GetId">
    <summary>The <b>GetId</b> method retrieves an <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/endpoint-id-strings">endpoint ID string</a> that identifies the audio endpoint device.</summary>
    <param name="ppstrId">Pointer to a pointer variable into which the method writes the address of a null-terminated, wide-character string containing the endpoint device ID. The method allocates the storage for the string. The caller is responsible for freeing the storage, when it is no longer needed, by calling the <b>CoTaskMemFree</b> function. If the <b>GetId</b> call fails, <i>*ppstrId is NULL.</i> For information about <b>CoTaskMemFree</b>, see the Windows SDK documentation.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pwstrId</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDevice.GetState">
    <summary>The <b>GetState</b> method retrieves the current device state.</summary>
    <param name="pdwState">
      <para>Pointer to a <b>DWORD</b> variable into which the method writes the current state of the device. The device-state value is one of the following <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/device-state-xxx-constants">DEVICE_STATE_XXX</a> constants:</para>
      <para>DEVICE_STATE_ACTIVE</para>
      <para>DEVICE_STATE_DISABLED</para>
      <para>DEVICE_STATE_NOTPRESENT</para>
      <para>DEVICE_STATE_UNPLUGGED</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pdwState</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDevice.OpenPropertyStore">
    <summary>The <b>OpenPropertyStore</b> method retrieves an interface to the device's property store.</summary>
    <param name="stgmAccess">
      <para>The storage-access mode. This parameter specifies whether to open the property store in read mode, write mode, or read/write mode. Set this parameter to one of the following STGM constants:</para>
      <para>STGM_READ</para>
      <para>STGM_WRITE</para>
      <para>STGM_READWRITE</para>
      <para>The method permits a client running as an administrator to open a store for read-only, write-only, or read/write access. A client that is not running as an administrator is restricted to read-only access. For more information about STGM constants, see the Windows SDK documentation.</para>
    </param>
    <param name="ppProperties">Pointer to a pointer variable into which the method writes the address of the <b>IPropertyStore</b> interface of the device's property store. Through this method, the caller obtains a counted reference to the interface. The caller is responsible for releasing the interface, when it is no longer needed, by calling the interface's <b>Release</b> method. If the <b>OpenPropertyStore</b> call fails, <i>*ppProperties</i> is <b>NULL</b>. For more information about <b>IPropertyStore</b>, see the Windows SDK documentation.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>stgmAccess</i> is not a valid access mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>ppProperties</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMMDevice">
    <summary>
      <para>The <b>IMMDevice</b> interface encapsulates the generic features of a multimedia device resource. In the current implementation of the MMDevice API, the only type of device resource that an <b>IMMDevice</b> interface can represent is an <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-endpoint-devices">audio endpoint device</a>.</para>
      <para>A client can obtain an <b>IMMDevice</b> interface from one of the following methods:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="IMMDeviceCollection.Item" />
          </description>
        </item>
        <item>
          <description>
            <see cref="IMMDeviceEnumerator.GetDefaultAudioEndpoint" />
          </description>
        </item>
        <item>
          <description>
            <see cref="IMMDeviceEnumerator.GetDevice" />
          </description>
        </item>
      </list>For more information, see <see cref="IMMDeviceCollection Interface" />.<para>After obtaining the <b>IMMDevice</b> interface of an audio endpoint device, a client can obtain an interface that encapsulates the endpoint-specific features of the device by calling the <b>IMMDevice.QueryInterface</b> method with parameter <i>iid</i> set to <b>REFIID</b> IID_IMMEndpoint. For more information, see <see cref="IMMEndpoint Interface" />.</para><para>For code examples that use the <b>IMMDevice</b> interface, see the following topics:</para><list type="bullet"><item><description><a href="https://docs.microsoft.com//windows/desktop/CoreAudio/device-properties">Device Properties</a></description></item><item><description><a href="https://docs.microsoft.com//windows/desktop/CoreAudio/rendering-a-stream">Rendering a Stream</a></description></item><item><description><a href="https://docs.microsoft.com//windows/desktop/CoreAudio/device-roles-for-legacy-windows-multimedia-applications">Device Roles for Legacy Windows Multimedia Applications</a></description></item></list></summary>
  </member>
</doc>