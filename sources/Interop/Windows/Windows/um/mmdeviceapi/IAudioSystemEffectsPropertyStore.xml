<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAudioSystemEffectsPropertyStore.OpenDefaultPropertyStore">
    <summary>Opens the audio system effects default property store.</summary>
    <param name="stgmAccess">
      <para>The storage-access mode. This parameter specifies whether to open the property store in read mode, write mode, or read/write mode. Set this parameter to one of the following STGM constants:</para>
      <para>STGM_READ</para>
      <para>STGM_WRITE</para>
      <para>STGM_READWRITE</para>
      <para>The method permits a client running as an administrator to open a store for read-only, write-only, or read/write access. A client that is not running as an administrator is restricted to read-only access.</para>
    </param>
    <param name="propStore">Receives a pointer to an <see cref="IPropertyStore" /> representing the default property store.</param>
    <returns>
      <para>Returns an HRESULT including, but not limited to the following:</para>
      <para>| Value | Description | |-------|-------------| | S_OK | Success | | E_NOTFOUND | The call is attempting to open a property store that does not exist. See Remarks. | | E_ACCESSDENIED | The caller was denied access for the specified <i>stgmAccess</i> value |</para>
    </returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.OpenUserPropertyStore">
    <summary>Opens the audio system effects user property store.</summary>
    <param name="stgmAccess">
      <para>The storage-access mode. This parameter specifies whether to open the property store in read mode, write mode, or read/write mode. Set this parameter to one of the following STGM constants:</para>
      <para>STGM_READ</para>
      <para>STGM_WRITE</para>
      <para>STGM_READWRITE</para>
      <para>The method permits a client running as an administrator to open a store for read-only, write-only, or read/write access. A client that is not running as an administrator is restricted to read-only access.</para>
    </param>
    <param name="propStore">Receives a pointer to an <see cref="IPropertyStore" /> representing the user property store.</param>
    <returns>
      <para>Returns an HRESULT including, but not limited to the following:</para>
      <para>| Value | Description | |-------|-------------| | S_OK | Success | | E_NOTFOUND | The call is attempting to open a property store that does not exist. See Remarks. | | E_ACCESSDENIED | The caller was denied access for the specified <i>stgmAccess</i> value |</para>
    </returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.OpenVolatilePropertyStore">
    <summary>Opens the audio system effects volatile property store.</summary>
    <param name="stgmAccess">
      <para>The storage-access mode. This parameter specifies whether to open the property store in read mode, write mode, or read/write mode. Set this parameter to one of the following STGM constants:</para>
      <para>STGM_READ</para>
      <para>STGM_WRITE</para>
      <para>STGM_READWRITE</para>
      <para>The method permits a client running as an administrator to open a store for read-only, write-only, or read/write access. A client that is not running as an administrator is restricted to read-only access.</para>
    </param>
    <param name="propStore">Receives a pointer to an <see cref="IPropertyStore" /> representing the volatile property store.</param>
    <returns>
      <para>Returns an HRESULT including, but not limited to the following:</para>
      <para>| Value | Description | |-------|-------------| | S_OK | Success | | E_NOTFOUND | The call is attempting to open a property store that does not exist. See Remarks. | | E_ACCESSDENIED | The caller was denied access for the specified <i>stgmAccess</i> value |</para>
    </returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.RegisterPropertyChangeNotification">
    <summary>Registers an <see cref="IAudioSystemEffectsPropertyChangeNotificationClient" /> callback interface to receive notifications when audio system effect properties change.</summary>
    <param name="callback">A pointer to the <b>IAudioSystemEffectsPropertyChangeNotificationClient</b> callback interface to register.</param>
    <returns>Returns S_OK on success.</returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.ResetUserPropertyStore">
    <summary>Deletes all existing key value pairs in the audio system effect user property store.</summary>
    <returns>S_OK on success.</returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.ResetVolatilePropertyStore">
    <summary>Deletes all existing key value pairs in the audio system effect volatile property store.</summary>
    <returns>S_OK on success.</returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore.UnregisterPropertyChangeNotification">
    <summary>Unregisters an <see cref="IAudioSystemEffectsPropertyChangeNotificationClient" /> callback interface previously registered to receive notifications when audio system effect properties change.</summary>
    <param name="callback">A pointer to the <b>IAudioSystemEffectsPropertyChangeNotificationClient</b> callback interface to unregister.</param>
    <returns>Returns S_OK on success.</returns>
  </member>
  <member name="IAudioSystemEffectsPropertyStore">
    <summary>Provides access to manage audio system effects audio stores and to register for notifications when audio system effect properties change.</summary>
  </member>
</doc>