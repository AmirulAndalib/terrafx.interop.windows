<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWICColorContext.GetExifColorSpace">
    <summary>
      <para>Retrieves the Exchangeable Image File (EXIF) color space color context.</para>
    </summary>
    <param name="pValue">
      <para>Type: <b>UINT*</b></para>
      <para>A pointer that receives the EXIF color space color context.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b></b>
                </description>
              </item>
              <item>
                <description>1</description>
              </item>
            </list>
          </description>
          <description>
            <para>A sRGB color space.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b></b>
                </description>
              </item>
              <item>
                <description>2</description>
              </item>
            </list>
          </description>
          <description>
            <para>An Adobe RGB color space.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b></b>
                </description>
              </item>
              <item>
                <description>3 through 65534</description>
              </item>
            </list>
          </description>
          <description>
            <para>Unused.</para>
          </description>
        </item>
      </list>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>This method should only be used when <see cref="IWICColorContext.GetType" /> indicates <see cref="WICColorContextExifColorSpace" />.</para>
    </remarks>
  </member>
  <member name="IWICColorContext.GetProfileBytes">
    <summary>
      <para>Retrieves the color context profile.</para>
    </summary>
    <param name="cbBuffer">
      <para>Type: <b>UINT</b></para>
      <para>The size of the <i>pbBuffer</i> buffer.</para>
    </param>
    <param name="pbBuffer">
      <para>Type: <b>BYTE*</b></para>
      <para>A pointer that receives the color context profile.</para>
    </param>
    <param name="pcbActual">
      <para>Type: <b>UINT*</b></para>
      <para>A pointer that receives the actual buffer size needed to retrieve the entire color context profile.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Only use this method if the context type is <see cref="WICColorContextProfile" />.</para>
      <para>Calling this method with <i>pbBuffer</i> set to <b>NULL</b> will cause it to return the required buffer size in <i>pcbActual</i>.</para>
    </remarks>
  </member>
  <member name="IWICColorContext.GetType">
    <summary>
      <para>Retrieves the color context type.</para>
    </summary>
    <param name="pType">
      <para>Type: <b><see cref="WICColorContextType" />*</b></para>
      <para>A pointer that receives the <see cref="WICColorContextType" /> of the color context.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
  </member>
  <member name="IWICColorContext.InitializeFromExifColorSpace">
    <summary>
      <para>Initializes the color context using an Exchangeable Image File (EXIF) color space.</para>
    </summary>
    <param name="value">
      <para>Type: <b>UINT</b></para>
      <para>The value of the EXIF color space.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b></b>
                </description>
              </item>
              <item>
                <description>1</description>
              </item>
            </list>
          </description>
          <description>
            <para>A sRGB color space.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b></b>
                </description>
              </item>
              <item>
                <description>2</description>
              </item>
            </list>
          </description>
          <description>
            <para>An Adobe RGB color space.</para>
          </description>
        </item>
      </list>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Once a color context has been initialized, it can't be re-initialized.</para>
    </remarks>
  </member>
  <member name="IWICColorContext.InitializeFromFilename">
    <summary>
      <para>Initializes the color context from the given file.</para>
    </summary>
    <param name="wzFilename">
      <para>Type: <b>LPCWSTR</b></para>
      <para>The name of the file.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Once a color context has been initialized, it can't be re-initialized.</para>
    </remarks>
    <seealso cref="GetColorDirectoryW" />
    <seealso cref="IWICColorContext" />
  </member>
  <member name="IWICColorContext.InitializeFromMemory">
    <summary>
      <para>Initializes the color context from a memory block.</para>
    </summary>
    <param name="pbBuffer">
      <para>Type: <b>const BYTE*</b></para>
      <para>The buffer used to initialize the <see cref="IWICColorContext" />.</para>
    </param>
    <param name="cbBufferSize">
      <para>Type: <b>UINT</b></para>
      <para>The size of the <i>pbBuffer</i> buffer.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Once a color context has been initialized, it can't be re-initialized.</para>
    </remarks>
  </member>
  <member name="IWICColorContext">
    <summary>
      <para>Exposes methods for color management.</para>
    </summary>
    <remarks>
      <para>A Color Context is an abstraction for a color profile. The profile can either be loaded from a file (like "sRGB Color Space Profile.icm"), read from a memory buffer, or can be defined by an EXIF color space. The system color profile directory can be obtained by calling <see cref="GetColorDirectoryW" />.</para>
      <para>Once a color context has been initialized, it cannot be re-initialized.</para>
    </remarks>
  </member>
</doc>