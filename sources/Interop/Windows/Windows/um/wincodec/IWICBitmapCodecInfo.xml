<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWICBitmapCodecInfo.DoesSupportAnimation">
    <summary>Retrieves a value indicating whether the codec supports animation.</summary>
    <param name="pfSupportAnimation">Receives <b>TRUE</b> if the codec supports images with timing information; otherwise, <b>FALSE</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.DoesSupportChromakey">
    <summary>Retrieves a value indicating whether the codec supports chromakeys.</summary>
    <param name="pfSupportChromakey">Receives <b>TRUE</b> if the codec supports chromakeys; otherwise, <b>FALSE</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.DoesSupportLossless">
    <summary>Retrieves a value indicating whether the codec supports lossless formats.</summary>
    <param name="pfSupportLossless">Receives <b>TRUE</b> if the codec supports lossless formats; otherwise, <b>FALSE</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.DoesSupportMultiframe">
    <summary>Retrieves a value indicating whether the codec supports multi frame images.</summary>
    <param name="pfSupportMultiframe">Receives <b>TRUE</b> if the codec supports multi frame images; otherwise, <b>FALSE</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetColorManagementVersion">
    <summary>Retrieves the color management version number the codec supports.</summary>
    <param name="cchColorManagementVersion">The size of the version buffer. Use <code>0</code> on first call to determine needed buffer size.</param>
    <param name="wzColorManagementVersion">Receives the color management version number. Use <code>NULL</code> on first call to determine needed buffer size.</param>
    <param name="pcchActual">The actual buffer size needed to retrieve the full color management version number.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetContainerFormat">
    <summary>Retrieves the container GUID associated with the codec.</summary>
    <param name="pguidContainerFormat">Receives the container GUID.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetDeviceManufacturer">
    <summary>Retrieves the name of the device manufacture associated with the codec.</summary>
    <param name="cchDeviceManufacturer">The size of the device manufacture's name. Use <code>0</code> on first call to determine needed buffer size.</param>
    <param name="wzDeviceManufacturer">Receives the device manufacture's name. Use <code>NULL</code> on first call to determine needed buffer size.</param>
    <param name="pcchActual">The actual buffer size needed to retrieve the device manufacture's name.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetDeviceModels">
    <summary>Retrieves a comma delimited list of device models associated with the codec.</summary>
    <param name="cchDeviceModels">The size of the device models buffer. Use <code>0</code> on first call to determine needed buffer size.</param>
    <param name="wzDeviceModels">Receives a comma delimited list of device model names associated with the codec. Use <code>NULL</code> on first call to determine needed buffer size.</param>
    <param name="pcchActual">The actual buffer size needed to retrieve all of the device model names.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetFileExtensions">
    <summary>Retrieves a comma delimited list of the file name extensions associated with the codec.</summary>
    <param name="cchFileExtensions">The size of the file name extension buffer. Use <code>0</code> on first call to determine needed buffer size.</param>
    <param name="wzFileExtensions">Receives a comma delimited list of file name extensions associated with the codec. Use <code>NULL</code> on first call to determine needed buffer size.</param>
    <param name="pcchActual">The actual buffer size needed to retrieve all file name extensions associated with the codec.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetMimeTypes">
    <summary>Retrieves a comma delimited sequence of mime types associated with the codec.</summary>
    <param name="cchMimeTypes">The size of the mime types buffer. Use <code>0</code> on first call to determine needed buffer size.</param>
    <param name="wzMimeTypes">Receives the mime types associated with the codec. Use <code>NULL</code> on first call to determine needed buffer size.</param>
    <param name="pcchActual">The actual buffer size needed to retrieve all mime types associated with the codec.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.GetPixelFormats">
    <summary>Retrieves the pixel formats the codec supports.</summary>
    <param name="cFormats">The size of the <i>pguidPixelFormats</i> array. Use <code>0</code> on first call to determine the needed array size.</param>
    <param name="pguidPixelFormats">Receives the supported pixel formats. Use <code>NULL</code> on first call to determine needed array size.</param>
    <param name="pcActual">The array size needed to retrieve all supported pixel formats.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IWICBitmapCodecInfo.MatchesMimeType">
    <summary>Retrieves a value indicating whether the given mime type matches the mime type of the codec.</summary>
    <param name="wzMimeType">The mime type to compare.</param>
    <param name="pfMatches">Receives <b>TRUE</b> if the mime types match; otherwise, <b>FALSE</b>.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The codec does not implement this method.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IWICBitmapCodecInfo">
    <summary>Exposes methods that provide information about a particular codec.</summary>
  </member>
</doc>