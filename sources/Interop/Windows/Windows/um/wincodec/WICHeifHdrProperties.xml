<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="WICHeifHdrProperties">
    <summary>
      <para>Specifies the HDR properties of a High Efficiency Image Format (HEIF) image.</para>
    </summary>
    <remarks>
      <para>Use <see cref="IWicMetadataReader.GetValue" /> to retrieve the value of the properties specified with this enumeration. Instantiate the <b>IWicMetadataReader</b> instance using the GUID <b>CLSID_WICMetadataReader</b>. Call <see cref="IWicMetadataReader.GetMetadataFormat" /> and confirm that the value is <b>GUID_MetadataFormatHeifHDR</b> to verify that the metadata format is HEIF HDR metadata.</para>
      <para>Not all HEIF HDR images will have all of these properties present in the file, so only those properties that are available will be exposed by the metadata reader.</para>
      <code>using namespace winrt;

std.optional&lt;uint32_t&gt; GetMaximumLuminanceLevelFromMetadataReader(_In_ IWICMetadataReader* metadataReader)
{
    std.optional&lt;uint32_t&gt; result;
    GUID metadataFormat;

    // Retrieve the format of the metadata used by this IWICMetadataReader
    check_hresult(metadataReader-&gt;GetMetadataFormat(&amp;amp;amp;amp;amp;amp;metadataFormat));

    // This function only handles HEIF HDR metadata
    if (metadataFormat != GUID_MetadataFormatHeifHDR)
    {
        throw_hresult(E_INVALIDARG);
    }

    PROPVARIANT variantId = {};
    PROPVARIANT variantValue = {};

    variantId.vt = VT_UI4;
    variantId.uiVal = WICHeifHdrMaximumLuminanceLevel;
    if (SUCCEEDED(metadataReader-&gt;GetValue(nullptr, &amp;amp;amp;amp;amp;amp;variantId, &amp;amp;amp;amp;amp;amp;variantValue)))
    {
        if (variantValue.vt == VT_UI4)
        {
            result = variantValue.uiVal;
        }
        PropVariantClear(&amp;amp;amp;amp;amp;amp;variantValue);
    }

    return result;
}
</code>
    </remarks>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrMaximumLuminanceLevel">
    <summary>
      <para>[VT_UI2] Specifies the maximum luminance level of the content in Nits.</para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrMaximumFrameAverageLuminanceLevel">
    <summary>
      <para>[VT_UI2] Specifies the maximum average per-frame luminance level of the content in Nits.</para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrMinimumMasteringDisplayLuminanceLevel">
    <summary>
      <para>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrMaximumMasteringDisplayLuminanceLevel">
    <summary>
      <para>[VT_UI2] Specifies the maximum luminance of the display on which the content was authored, in Nits.</para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrCustomVideoPrimaries">
    <summary>
      <para>[VT_BLOB] Specifies custom color primaries for a video media type. The value of this property is a <see cref="MT_CUSTOM_VIDEO_PRIMARIES" />structure, returned as an array of bytes (VT_BLOB).</para>
    </summary>
  </member>
  <member name="WICHeifHdrProperties.WICHeifHdrProperties_FORCE_DWORD">
    <summary></summary>
  </member>
</doc>