<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IWICJpegFrameDecode.ClearIndexing">
    <summary>Removes the indexing from a JPEG that has been indexed using <see cref="IWICJpegFrameDecode.SetIndexing" />.</summary>
    <returns>Returns S_OK upon successful completion.</returns>
  </member>
  <member name="IWICJpegFrameDecode.CopyScan">
    <summary>Retrieves a copy of the compressed JPEG scan directly from the WIC decoder frame's output stream.</summary>
    <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
    <param name="scanOffset">The byte position in the scan data to begin copying. Use 0 on the first call. If the output buffer size is insufficient to store the entire scan, this offset allows you to resume copying from the end of the previous copy operation.</param>
    <param name="cbScanData">The size, in bytes, of the <i>pbScanData</i> array.</param>
    <param name="pbScanData">A pointer that receives the table data. This parameter must not be NULL.</param>
    <param name="pcbScanDataActual">A pointer that receives the size of the scan data actually copied into <i>pbScanData</i>. The size returned may be smaller that the size of <i>cbScanData</i>. This parameter may be NULL.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>S_OK</term>
              </listheader>
            </list>
          </description>
          <description>The operation was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDJPEGSCANINDEX</term>
              </listheader>
            </list>
          </description>
          <description>The specified scan index is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IWICJpegFrameDecode.DoesSupportIndexing">
    <summary>Retrieves a value indicating whether this decoder supports indexing for efficient random access.</summary>
    <param name="pfIndexingSupported">True if indexing is supported; otherwise, false.</param>
    <returns>Returns S_OK on successful completion.</returns>
  </member>
  <member name="IWICJpegFrameDecode.GetAcHuffmanTable">
    <summary>Retrieves a copy of the AC Huffman table for the specified scan and table.</summary>
    <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
    <param name="tableIndex">The index of the AC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <see cref="IWICJpegFrameDecode.GetScanHeader" />.</param>
    <param name="pAcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>S_OK</term>
              </listheader>
            </list>
          </description>
          <description>The operation was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDJPEGSCANINDEX</term>
              </listheader>
            </list>
          </description>
          <description>The specified scan index is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDPARAMETER</term>
              </listheader>
            </list>
          </description>
          <description>Can occur if <i>pAcHuffmanTable</i> is NULL or if <i>tableIndex</i> does not point to a valid table slot. Check the scan header for valid table indices.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IWICJpegFrameDecode.GetDcHuffmanTable">
    <summary>Retrieves a copy of the DC Huffman table for the specified scan and table.</summary>
    <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
    <param name="tableIndex">The index of the DC Huffman table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <see cref="IWICJpegFrameDecode.GetScanHeader" />.</param>
    <param name="pDcHuffmanTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>S_OK</term>
              </listheader>
            </list>
          </description>
          <description>The operation was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDJPEGSCANINDEX</term>
              </listheader>
            </list>
          </description>
          <description>The specified scan index is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDPARAMETER</term>
              </listheader>
            </list>
          </description>
          <description>Can occur if <i>pTable</i> is NULL or if <i>tableIndex</i> does not point to a valid table slot. Check the scan header for valid table indices.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IWICJpegFrameDecode.GetFrameHeader">
    <summary>Retrieves header data from the entire frame. The result includes parameters from the Start Of Frame (SOF) marker for the scan as well as parameters derived from other metadata such as the color model of the compressed data.</summary>
    <param name="pFrameHeader">A pointer that receives the frame header data.</param>
    <returns>Returns S_OK on successful completion.</returns>
  </member>
  <member name="IWICJpegFrameDecode.GetQuantizationTable">
    <summary>Retrieves a copy of the quantization table.</summary>
    <param name="scanIndex">The zero-based index of the scan for which data is retrieved.</param>
    <param name="tableIndex">The index of the quantization table to retrieve. Valid indices for a given scan can be determined by retrieving the scan header with <see cref="IWICJpegFrameDecode.GetScanHeader" />.</param>
    <param name="pQuantizationTable">A pointer that receives the table data. This parameter must not be NULL.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>S_OK</term>
              </listheader>
            </list>
          </description>
          <description>The operation was successful.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDJPEGSCANINDEX</term>
              </listheader>
            </list>
          </description>
          <description>The specified scan index is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>WINCODEC_ERR_INVALIDPARAMETER</term>
              </listheader>
            </list>
          </description>
          <description>Can occur if <i>pTable</i> is NULL or if <i>tableIndex</i> does not point to a valid table slot. Check the scan header for valid table indices.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IWICJpegFrameDecode.GetScanHeader">
    <summary>Retrieves parameters from the Start Of Scan (SOS) marker for the scan with the specified index.</summary>
    <param name="scanIndex">The index of the scan for which header data is retrieved.</param>
    <param name="pScanHeader">A pointer that receives the frame header data.</param>
    <returns>Returns S_OK on successful completion.</returns>
  </member>
  <member name="IWICJpegFrameDecode.SetIndexing">
    <summary>Enables indexing of the JPEG for efficient random access.</summary>
    <param name="options">A value specifying whether indexes should be generated immediately or deferred until a future call to <see cref="IWICBitmapSource.CopyPixels" />.</param>
    <param name="horizontalIntervalSize">The granularity of the indexing, in pixels.</param>
    <returns>Returns S_OK upon successful completion.</returns>
  </member>
  <member name="IWICJpegFrameDecode">
    <summary>Exposes methods for decoding JPEG images. Provides access to the Start Of Frame (SOF) header, Start of Scan (SOS) header, the Huffman and Quantization tables, and the compressed JPEG JPEG data. Also enables indexing for efficient random access.</summary>
  </member>
</doc>