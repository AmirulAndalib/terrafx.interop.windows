<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IP_ADAPTER_ADDRESSES">
    <summary>The <b>IP_ADAPTER_ADDRESSES</b> structure is the<i>header node</i> for a linked list of addresses for a particular adapter. This structure can simultaneously be used as part of a linked list of<b>IP_ADAPTER_ADDRESSES</b> structures.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Alignment">
    <summary>Reserved. Used by the compiler to align the structure.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Length">
    <summary>The length, in bytes, of this structure. Note that the length of the<b>IP_ADAPTER_ADDRESSES</b> structure changed on Windows XP with SP1 and later and also on Windows Vista and later.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.IfIndex">
    <summary>The index of the IPv4 interface with which these addresses are associated. On Windows Server 2003 and Windows XP, this member is zero if IPv4 is not available on the interface.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Next">
    <summary>A pointer to the next adapter addresses structure in the list.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.AdapterName">
    <summary>An array of characters that contains the name of the adapter with which these addresses are associated. Unlike an adapter's friendly name, the adapter name specified in <b>AdapterName</b> is permanent and cannot be modified by the user.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstUnicastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_UNICAST_ADDRESS" /> structure in a linked list of IP unicast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstAnycastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_ANYCAST_ADDRESS" /> structure in a linked list of IP anycast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstMulticastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_MULTICAST_ADDRESS" /> structure in a list of IP multicast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstDnsServerAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_DNS_SERVER_ADDRESS" /> structure in a linked list of DNS server addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.DnsSuffix">
    <summary>The Domain Name System (DNS) suffix associated with this adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Description">
    <summary>A description for the adapter. This member is read-only.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FriendlyName">
    <summary>
      <para>A user-friendly name for the adapter. For example: "Local Area Connection 1." This name appears in contexts such as the <b>ipconfig</b> command line program and the Connection folder. This member is read only and can't be modified using any IP Helper functions.</para>
      <para>This member is the ifAlias field used by NDIS as described in<a href="https://www.ietf.org/rfc/rfc2863.txt">RFC 2863</a>. The ifAlias field can be set by an NDIS interface provider when the NDIS driver is installed. For NDIS miniport drivers, this field is set by NDIS.</para>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.PhysicalAddress">
    <summary>The Media Access Control (MAC) address for the adapter. For example, on an Ethernet network this member would specify the Ethernet hardware address.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.PhysicalAddressLength">
    <summary>The length, in bytes, of the address specified in the <b>PhysicalAddress</b> member. For interfaces that do not have a data-link layer, this value is zero.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Flags">
    <summary>
      <para>A set of flags specifying various settings for the adapter. These values are defined in the<i>Iptypes.h</i> header file. Combinations of these flag bits are possible.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_DDNS_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Dynamic DNS is enabled on this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_REGISTER_ADAPTER_SUFFIX</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Register the DNS suffix for this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_DHCP_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>The Dynamic Host Configuration Protocol (DHCP) is enabled on this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_RECEIVE_ONLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is a receive-only adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_NO_MULTICAST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is not a multicast recipient.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_OTHER_STATEFUL_CONFIG</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>The adapter contains other IPv6-specific stateful configuration information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_NETBIOS_OVER_TCPIP_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0040</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for NetBIOS over TCP/IP. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>NetbiosOverTcpipEnabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV4_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0080</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv4. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv4Enabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv6. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv6Enabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_MANAGE_ADDRESS_CONFIG</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0200</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv6 managed address configuration. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv6ManagedAddressConfigurationSupported</b> bitfield.</div></description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.DdnsEnabled"></member>
  <member name="IP_ADAPTER_ADDRESSES.RegisterAdapterSuffix"></member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv4Enabled"></member>
  <member name="IP_ADAPTER_ADDRESSES.ReceiveOnly"></member>
  <member name="IP_ADAPTER_ADDRESSES.NoMulticast"></member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6OtherStatefulConfig"></member>
  <member name="IP_ADAPTER_ADDRESSES.NetbiosOverTcpipEnabled"></member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv4Enabled"></member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6Enabled"></member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6ManagedAddressConfigurationSupported"></member>
  <member name="IP_ADAPTER_ADDRESSES.Mtu">
    <summary>The maximum transmission unit (MTU) size, in bytes.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.IfType">
    <summary>
      <para>The interface type as defined by the Internet Assigned Names Authority (IANA). Possible values for the interface type are listed in the <i>Ipifcons.h</i> header file.</para>
      <para>The table below lists common values for the interface type although many other values are possible.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_OTHER</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Some other type of network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ETHERNET_CSMACD</b>
                </term>
              </listheader>
              <listheader>
                <term>6</term>
              </listheader>
            </list>
          </description>
          <description>An Ethernet network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ISO88025_TOKENRING</b>
                </term>
              </listheader>
              <listheader>
                <term>9</term>
              </listheader>
            </list>
          </description>
          <description>A token ring network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_PPP</b>
                </term>
              </listheader>
              <listheader>
                <term>23</term>
              </listheader>
            </list>
          </description>
          <description>A PPP network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_SOFTWARE_LOOPBACK</b>
                </term>
              </listheader>
              <listheader>
                <term>24</term>
              </listheader>
            </list>
          </description>
          <description>A software loopback network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ATM</b>
                </term>
              </listheader>
              <listheader>
                <term>37</term>
              </listheader>
            </list>
          </description>
          <description>An ATM network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_IEEE80211</b>
                </term>
              </listheader>
              <listheader>
                <term>71</term>
              </listheader>
            </list>
          </description>
          <description>An IEEE 802.11 wireless network interface. <para>On Windows Vista and later, wireless network cards are reported as <b>IF_TYPE_IEEE80211</b>. On earlier versions of Windows, wireless network cards are reported as <b>IF_TYPE_ETHERNET_CSMACD</b>.</para><para>On Windows XP with SP3 and on Windows XP with SP2 x86 with the Wireless LAN API for Windows XP with SP2 installed, the <see cref="WlanEnumInterfaces" /> function can be used to enumerate wireless interfaces on the local computer.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_TUNNEL</b>
                </term>
              </listheader>
              <listheader>
                <term>131</term>
              </listheader>
            </list>
          </description>
          <description>A tunnel type encapsulation network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_IEEE1394</b>
                </term>
              </listheader>
              <listheader>
                <term>144</term>
              </listheader>
            </list>
          </description>
          <description>An IEEE 1394 (Firewire) high performance serial bus network interface.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.OperStatus">
    <summary>
      <para>The operational status for the interface as defined in RFC 2863. For more information, see<a href="https://www.ietf.org/rfc/rfc2863.txt">http://www.ietf.org/rfc/rfc2863.txt</a>. This member can be one of the values from the <b>IF_OPER_STATUS</b> enumeration type defined in the <i>Iftypes.h</i> header file. On Windows Vista and later, the header files were reorganized and this enumeration is defined in the <i>Ifdef.h</i> header file.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusUp</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The interface is up and able to pass packets.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusDown</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The interface is down and not in a condition to pass packets. The <b>IfOperStatusDown</b> state has two meanings, depending on the value of <b>AdminStatus</b> member. If <b>AdminStatus</b> is not set to <b>NET_IF_ADMIN_STATUS_DOWN</b> and <b>ifOperStatus</b> is set to <b>IfOperStatusDown</b> then a fault condition is presumed to exist on the interface. If <b>AdminStatus</b> is set to <b>IfOperStatusDown</b>, then <b>ifOperStatus</b> will normally also be set to <b>IfOperStatusDown</b> or <b>IfOperStatusNotPresent</b> and there is not necessarily a fault condition on the interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusTesting</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>The interface is in testing mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusUnknown</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The operational status of the interface is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusDormant</b>
                </term>
              </listheader>
              <listheader>
                <term>5</term>
              </listheader>
            </list>
          </description>
          <description>The interface is not actually in a condition to pass packets (it is not up), but is in a pending state, waiting for some external event. For on-demand interfaces, this new state identifies the situation where the interface is waiting for events to place it in the <b>IfOperStatusUp</b> state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusNotPresent</b>
                </term>
              </listheader>
              <listheader>
                <term>6</term>
              </listheader>
            </list>
          </description>
          <description>A refinement on the <b>IfOperStatusDown</b> state which indicates that the relevant interface is down specifically because some component (typically, a hardware component) is not present in the managed system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusLowerLayerDown</b>
                </term>
              </listheader>
              <listheader>
                <term>7</term>
              </listheader>
            </list>
          </description>
          <description>A refinement on the <b>IfOperStatusDown</b> state. This new state indicates that this interface runs on top of one or more other interfaces and that this interface is down specifically because one or more of these lower-layer interfaces are down.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6IfIndex">
    <summary>
      <para>The interface index for the IPv6 IP address. This member is zero if IPv6 is not available on the interface.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.ZoneIndices">
    <summary>
      <para>An array of scope IDs for each scope level used for composing<a href="https://docs.microsoft.com//windows/desktop/WinSock/sockaddr-2">sockaddr</a> structures. The<see cref="SCOPE_LEVEL" /> enumeration is used to index the array. On IPv6, a single interface may be assigned multiple IPv6 multicast addresses based on a scope ID.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstPrefix">
    <summary>
      <para>A pointer to the first <see cref="IP_ADAPTER_PREFIX" />structure in a linked list of IP adapter prefixes for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.TransmitLinkSpeed">
    <summary>
      <para>The current speed in bits per second of the transmit link for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.ReceiveLinkSpeed">
    <summary>
      <para>The current speed in bits per second of the receive link for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstWinsServerAddress">
    <summary>
      <para>A pointer to the first<see cref="IP_ADAPTER_WINS_SERVER_ADDRESS" /> structure in a linked list of Windows Internet Name Service (WINS) server addresses for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstGatewayAddress">
    <summary>
      <para>A pointer to the first <see cref="IP_ADAPTER_GATEWAY_ADDRESS" /> structure in a linked list of gateways for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv4Metric">
    <summary>
      <para>The IPv4 interface metric for the adapter address. This member is only applicable to an IPv4 adapter address.</para>
      <para>The actual route metric used to compute the route preferences for IPv4 is the summation of the route metric offset specified in the <b>Metric</b> member of the<see cref="MIB_IPFORWARD_ROW2" /> structure and the interface metric specified in this member for IPv4.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6Metric">
    <summary>
      <para>The IPv6 interface metric for the adapter address. This member is only applicable to an IPv6 adapter address.</para>
      <para>The actual route metric used to compute the route preferences for IPv6 is the summation of the route metric offset specified in the <b>Metric</b> member of the<see cref="MIB_IPFORWARD_ROW2" /> structure and the interface metric specified in this member for IPv4.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Luid">
    <summary>
      <para>The interface LUID for the adapter address.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv4Server">
    <summary>
      <para>The IPv4 address of the DHCP server for the adapter address. This member is only applicable to an IPv4 adapter address configured using DHCP.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.CompartmentId">
    <summary>
      <para>The routing compartment ID for the adapter address.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later. This member is not currently supported and is reserved for future use.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.NetworkGuid">
    <summary>
      <para>The <b>GUID</b> that is associated with the network that the interface belongs to.</para>
      <para>If the interface provider cannot provide the network GUID, this member can be a zero <b>GUID</b>. In this case, the interface was registered by NDIS in the default network.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.ConnectionType">
    <summary>
      <para>The interface connection type for the adapter address.</para>
      <para>This member can be one of the values from the <b>NET_IF_CONNECTION_TYPE</b> enumeration type defined in the <i>Ifdef.h</i> header file.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NET_IF_CONNECTION_DEDICATED</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The connection type is dedicated. The connection comes up automatically when media sense is <b>TRUE</b>. For example, an Ethernet connection is dedicated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NET_IF_CONNECTION_PASSIVE</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The connection type is passive. The remote end must bring up the connection to the local station. For example, a RAS interface is passive.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NET_IF_CONNECTION_DEMAND</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>The connection type is demand-dial. A connection of this type comes up in response to a local action (sending a packet, for example).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>NET_IF_CONNECTION_MAXIMUM</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The maximum possible value for the <b>NET_IF_CONNECTION_TYPE</b> enumeration type. This is not a legal value for <b>ConnectionType</b> member.</description>
        </listheader>
      </list> <div><b>Note</b>  This structure member is only available on Windows Vista and later.</div></summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.TunnelType">
    <summary>
      <para>The encapsulation method used by a tunnel if the adapter address is a tunnel.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>The tunnel type is defined by the Internet Assigned Names Authority (IANA). For more information, see <a href="https://www.iana.org/assignments/ianaiftype-mib">http://www.iana.org/assignments/ianaiftype-mib</a>. This member can be one of the values from the <b>TUNNEL_TYPE</b> enumeration type defined in the <i>Ifdef.h</i> header file.<list type="table"><listheader><description>Value</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_NONE</b></term></listheader><listheader><term>0</term></listheader></list></description><description>Not a tunnel.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_OTHER</b></term></listheader><listheader><term>1</term></listheader></list></description><description>None of the following tunnel types.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_DIRECT</b></term></listheader><listheader><term>2</term></listheader></list></description><description>A packet is encapsulated directly within a normal IP header, with no intermediate header, and unicast to the remote tunnel endpoint.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_6TO4</b></term></listheader><listheader><term>11</term></listheader></list></description><description>An IPv6 packet is encapsulated directly within an IPv4 header, with no intermediate header, and unicast to the destination determined by the 6to4 protocol.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_ISATAP</b></term></listheader><listheader><term>13</term></listheader></list></description><description>An IPv6 packet is encapsulated directly within an IPv4 header, with no intermediate header, and unicast to the destination determined by the ISATAP protocol.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_TEREDO</b></term></listheader><listheader><term>14</term></listheader></list></description><description>Teredo encapsulation for IPv6 packets.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>TUNNEL_TYPE_IPHTTPS</b></term></listheader><listheader><term>15</term></listheader></list></description><description>IP over HTTPS encapsulation for IPv6 packets.<div><b>Note</b>  This enumeration value is only available on Windows 7, Windows Server 2008 R2, and later.</div></description></listheader></list></summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv6Server">
    <summary>
      <para>The IPv6 address of the DHCPv6 server for the adapter address. This member is only applicable to an IPv6 adapter address configured using DHCPv6. This structure member is not currently supported and is reserved for future use.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv6ClientDuid">
    <summary>
      <para>The DHCP unique identifier (DUID) for the DHCPv6 client. This member is only applicable to an IPv6 adapter address configured using DHCPv6.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv6ClientDuidLength">
    <summary>
      <para>The length, in bytes, of the DHCP unique identifier (DUID) for the DHCPv6 client. This member is only applicable to an IPv6 adapter address configured using DHCPv6.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Dhcpv6Iaid">
    <summary>
      <para>The identifier for an identity association chosen by the DHCPv6 client. This member is only applicable to an IPv6 adapter address configured using DHCPv6.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstDnsSuffix">
    <summary>
      <para>A pointer to the first <see cref="IP_ADAPTER_DNS_SUFFIX" /> structure in a linked list of DNS suffixes for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows Vista with SP1and later and on Windows Server 2008 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES">
    <summary>The <b>IP_ADAPTER_ADDRESSES</b> structure is the<i>header node</i> for a linked list of addresses for a particular adapter. This structure can simultaneously be used as part of a linked list of<b>IP_ADAPTER_ADDRESSES</b> structures.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Alignment">
    <summary>Reserved. Used by the compiler to align the structure.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Length">
    <summary>The length, in bytes, of this structure. Note that the length of the<b>IP_ADAPTER_ADDRESSES</b> structure changed on Windows XP with SP1 and later and also on Windows Vista and later.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.IfIndex">
    <summary>The index of the IPv4 interface with which these addresses are associated. On Windows Server 2003 and Windows XP, this member is zero if IPv4 is not available on the interface.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Next">
    <summary>A pointer to the next adapter addresses structure in the list.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.AdapterName">
    <summary>An array of characters that contains the name of the adapter with which these addresses are associated. Unlike an adapter's friendly name, the adapter name specified in <b>AdapterName</b> is permanent and cannot be modified by the user.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstUnicastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_UNICAST_ADDRESS" /> structure in a linked list of IP unicast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstAnycastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_ANYCAST_ADDRESS" /> structure in a linked list of IP anycast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstMulticastAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_MULTICAST_ADDRESS" /> structure in a list of IP multicast addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstDnsServerAddress">
    <summary>A pointer to the first<see cref="IP_ADAPTER_DNS_SERVER_ADDRESS" /> structure in a linked list of DNS server addresses for the adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.DnsSuffix">
    <summary>The Domain Name System (DNS) suffix associated with this adapter.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Description">
    <summary>A description for the adapter. This member is read-only.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FriendlyName">
    <summary>
      <para>A user-friendly name for the adapter. For example: "Local Area Connection 1." This name appears in contexts such as the <b>ipconfig</b> command line program and the Connection folder. This member is read only and can't be modified using any IP Helper functions.</para>
      <para>This member is the ifAlias field used by NDIS as described in<a href="https://www.ietf.org/rfc/rfc2863.txt">RFC 2863</a>. The ifAlias field can be set by an NDIS interface provider when the NDIS driver is installed. For NDIS miniport drivers, this field is set by NDIS.</para>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.PhysicalAddress">
    <summary>The Media Access Control (MAC) address for the adapter. For example, on an Ethernet network this member would specify the Ethernet hardware address.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.PhysicalAddressLength">
    <summary>The length, in bytes, of the address specified in the <b>PhysicalAddress</b> member. For interfaces that do not have a data-link layer, this value is zero.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Flags">
    <summary>
      <para>A set of flags specifying various settings for the adapter. These values are defined in the<i>Iptypes.h</i> header file. Combinations of these flag bits are possible.</para>
      <list type="table">
        <listheader>
          <description>Flag</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_DDNS_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0001</term>
              </listheader>
            </list>
          </description>
          <description>Dynamic DNS is enabled on this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_REGISTER_ADAPTER_SUFFIX</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0002</term>
              </listheader>
            </list>
          </description>
          <description>Register the DNS suffix for this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_DHCP_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0004</term>
              </listheader>
            </list>
          </description>
          <description>The Dynamic Host Configuration Protocol (DHCP) is enabled on this adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_RECEIVE_ONLY</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0008</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is a receive-only adapter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_NO_MULTICAST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0010</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is not a multicast recipient.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_OTHER_STATEFUL_CONFIG</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0020</term>
              </listheader>
            </list>
          </description>
          <description>The adapter contains other IPv6-specific stateful configuration information.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_NETBIOS_OVER_TCPIP_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0040</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for NetBIOS over TCP/IP. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>NetbiosOverTcpipEnabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV4_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0080</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv4. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv4Enabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_ENABLED</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0100</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv6. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv6Enabled</b> bitfield.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IP_ADAPTER_IPV6_MANAGE_ADDRESS_CONFIG</b>
                </term>
              </listheader>
              <listheader>
                <term>0x0200</term>
              </listheader>
            </list>
          </description>
          <description>The adapter is enabled for IPv6 managed address configuration. <div><b>Note</b>  This flag is only supported on Windows Vista and later when the application has been compiled for a target platform with an NTDDI version equal or greater than <b>NTDDI_LONGHORN</b>. This flag is defined in the <b>IP_ADAPTER_ADDRESSES_LH</b> structure as the <b>Ipv6ManagedAddressConfigurationSupported</b> bitfield.</div></description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Mtu">
    <summary>The maximum transmission unit (MTU) size, in bytes.</summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.IfType">
    <summary>
      <para>The interface type as defined by the Internet Assigned Names Authority (IANA). Possible values for the interface type are listed in the <i>Ipifcons.h</i> header file.</para>
      <para>The table below lists common values for the interface type although many other values are possible.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_OTHER</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>Some other type of network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ETHERNET_CSMACD</b>
                </term>
              </listheader>
              <listheader>
                <term>6</term>
              </listheader>
            </list>
          </description>
          <description>An Ethernet network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ISO88025_TOKENRING</b>
                </term>
              </listheader>
              <listheader>
                <term>9</term>
              </listheader>
            </list>
          </description>
          <description>A token ring network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_PPP</b>
                </term>
              </listheader>
              <listheader>
                <term>23</term>
              </listheader>
            </list>
          </description>
          <description>A PPP network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_SOFTWARE_LOOPBACK</b>
                </term>
              </listheader>
              <listheader>
                <term>24</term>
              </listheader>
            </list>
          </description>
          <description>A software loopback network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_ATM</b>
                </term>
              </listheader>
              <listheader>
                <term>37</term>
              </listheader>
            </list>
          </description>
          <description>An ATM network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_IEEE80211</b>
                </term>
              </listheader>
              <listheader>
                <term>71</term>
              </listheader>
            </list>
          </description>
          <description>An IEEE 802.11 wireless network interface. <para>On Windows Vista and later, wireless network cards are reported as <b>IF_TYPE_IEEE80211</b>. On earlier versions of Windows, wireless network cards are reported as <b>IF_TYPE_ETHERNET_CSMACD</b>.</para><para>On Windows XP with SP3 and on Windows XP with SP2 x86 with the Wireless LAN API for Windows XP with SP2 installed, the <see cref="WlanEnumInterfaces" /> function can be used to enumerate wireless interfaces on the local computer.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_TUNNEL</b>
                </term>
              </listheader>
              <listheader>
                <term>131</term>
              </listheader>
            </list>
          </description>
          <description>A tunnel type encapsulation network interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IF_TYPE_IEEE1394</b>
                </term>
              </listheader>
              <listheader>
                <term>144</term>
              </listheader>
            </list>
          </description>
          <description>An IEEE 1394 (Firewire) high performance serial bus network interface.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.OperStatus">
    <summary>
      <para>The operational status for the interface as defined in RFC 2863. For more information, see<a href="https://www.ietf.org/rfc/rfc2863.txt">http://www.ietf.org/rfc/rfc2863.txt</a>. This member can be one of the values from the <b>IF_OPER_STATUS</b> enumeration type defined in the <i>Iftypes.h</i> header file. On Windows Vista and later, the header files were reorganized and this enumeration is defined in the <i>Ifdef.h</i> header file.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusUp</b>
                </term>
              </listheader>
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The interface is up and able to pass packets.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusDown</b>
                </term>
              </listheader>
              <listheader>
                <term>2</term>
              </listheader>
            </list>
          </description>
          <description>The interface is down and not in a condition to pass packets. The <b>IfOperStatusDown</b> state has two meanings, depending on the value of <b>AdminStatus</b> member. If <b>AdminStatus</b> is not set to <b>NET_IF_ADMIN_STATUS_DOWN</b> and <b>ifOperStatus</b> is set to <b>IfOperStatusDown</b> then a fault condition is presumed to exist on the interface. If <b>AdminStatus</b> is set to <b>IfOperStatusDown</b>, then <b>ifOperStatus</b> will normally also be set to <b>IfOperStatusDown</b> or <b>IfOperStatusNotPresent</b> and there is not necessarily a fault condition on the interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusTesting</b>
                </term>
              </listheader>
              <listheader>
                <term>3</term>
              </listheader>
            </list>
          </description>
          <description>The interface is in testing mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusUnknown</b>
                </term>
              </listheader>
              <listheader>
                <term>4</term>
              </listheader>
            </list>
          </description>
          <description>The operational status of the interface is unknown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusDormant</b>
                </term>
              </listheader>
              <listheader>
                <term>5</term>
              </listheader>
            </list>
          </description>
          <description>The interface is not actually in a condition to pass packets (it is not up), but is in a pending state, waiting for some external event. For on-demand interfaces, this new state identifies the situation where the interface is waiting for events to place it in the <b>IfOperStatusUp</b> state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusNotPresent</b>
                </term>
              </listheader>
              <listheader>
                <term>6</term>
              </listheader>
            </list>
          </description>
          <description>A refinement on the <b>IfOperStatusDown</b> state which indicates that the relevant interface is down specifically because some component (typically, a hardware component) is not present in the managed system.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>IfOperStatusLowerLayerDown</b>
                </term>
              </listheader>
              <listheader>
                <term>7</term>
              </listheader>
            </list>
          </description>
          <description>A refinement on the <b>IfOperStatusDown</b> state. This new state indicates that this interface runs on top of one or more other interfaces and that this interface is down specifically because one or more of these lower-layer interfaces are down.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.Ipv6IfIndex">
    <summary>
      <para>The interface index for the IPv6 IP address. This member is zero if IPv6 is not available on the interface.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.ZoneIndices">
    <summary>
      <para>An array of scope IDs for each scope level used for composing<a href="https://docs.microsoft.com//windows/desktop/WinSock/sockaddr-2">sockaddr</a> structures. The<see cref="SCOPE_LEVEL" /> enumeration is used to index the array. On IPv6, a single interface may be assigned multiple IPv6 multicast addresses based on a scope ID.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
  <member name="IP_ADAPTER_ADDRESSES.FirstPrefix">
    <summary>
      <para>A pointer to the first <see cref="IP_ADAPTER_PREFIX" />structure in a linked list of IP adapter prefixes for the adapter.</para>
      <div>
        <b>Note</b>  This structure member is only available on Windows XP with SP1 and later.</div>
    </summary>
  </member>
</doc>