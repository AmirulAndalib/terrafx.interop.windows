<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFSinkWriter.AddStream">
    <summary>Adds a stream to the sink writer.</summary>
    <param name="pTargetMediaType">A pointer to the <see cref="IMFMediaType" /> interface of a media type. This media type specifies the format of the samples that will be written to the file. It does not need to match the input format. To set the input format, call <see cref="IMFSinkWriter.SetInputMediaType" />.</param>
    <param name="pdwStreamIndex">Receives the zero-based index of the new stream.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFSinkWriter.BeginWriting">
    <summary>Initializes the sink writer for writing.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDREQUEST</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.Finalize">
    <summary>Completes all writing operations on the sink writer.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFSinkWriter.Flush">
    <summary>Flushes one or more streams.</summary>
    <param name="dwStreamIndex">The zero-based index of the stream to flush, or <b>MF_SINK_WRITER_ALL_STREAMS</b> to flush all of the streams.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDREQUEST</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.GetServiceForStream">
    <summary>Queries the underlying media sink or encoder for an interface.</summary>
    <param name="dwStreamIndex">The zero-based index of a stream to query, or <b>MF_SINK_WRITER_MEDIASINK</b> to query the media sink itself.</param>
    <param name="guidService">A service identifier GUID, or <b>GUID_NULL</b>. If the value is <b>GUID_NULL</b>, the method calls <b>QueryInterface</b> to get the requested interface. Otherwise, the method calls <see cref="IMFGetService.GetService" />. For a list of service identifiers, see <a href="https://docs.microsoft.com//windows/desktop/medfound/service-interfaces">Service Interfaces</a>.</param>
    <param name="riid">The interface identifier (IID) of the interface being requested.</param>
    <param name="ppvObject">Receives a pointer to the requested interface. The caller must release the interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFSinkWriter.GetStatistics">
    <summary>Gets statistics about the performance of the sink writer.</summary>
    <param name="dwStreamIndex">The zero-based index of a stream to query, or <b>MF_SINK_WRITER_ALL_STREAMS</b> to query the media sink itself.</param>
    <param name="pStats">A pointer to an <see cref="MF_SINK_WRITER_STATISTICS" /> structure. Before calling the method, set the <b>cb</b> member to the size of the structure in bytes. The method fills the structure with statistics from the sink writer.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDSTREAMNUMBER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid stream number.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.NotifyEndOfSegment">
    <summary>Notifies the media sink that a stream has reached the end of a segment.</summary>
    <param name="dwStreamIndex">The zero-based index of a stream, or <b>MF_SINK_WRITER_ALL_STREAMS</b> to signal that all streams have reached the end of a segment.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDREQUEST</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.PlaceMarker">
    <summary>Places a marker in the specified stream.</summary>
    <param name="dwStreamIndex">The zero-based index of the stream.</param>
    <param name="pvContext">Pointer to an application-defined value. The value of this parameter is returned to the caller in the <i>pvContext</i> parameter of the caller's <see cref="IMFSinkWriterCallback.OnMarker" /> callback method. The application is responsible for any memory allocation associated with this data. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDREQUEST</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.SendStreamTick">
    <summary>Indicates a gap in an input stream.</summary>
    <param name="dwStreamIndex">The zero-based index of the stream.</param>
    <param name="llTimestamp">The position in the stream where the gap in the data occurs. The value is given in 100-nanosecond units, relative to the start of the stream.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFSinkWriter.SetInputMediaType">
    <summary>Sets the input format for a stream on the sink writer.</summary>
    <param name="dwStreamIndex">The zero-based index of the stream. The index is received by the <i>pdwStreamIndex</i> parameter of the <see cref="IMFSinkWriter.AddStream" /> method.</param>
    <param name="pInputMediaType">A pointer to the <see cref="IMFMediaType" /> interface of a media type. The media type specifies the input format.</param>
    <param name="pEncodingParameters">A pointer to the <see cref="IMFAttributes" /> interface of an attribute store. Use the attribute store to configure the encoder. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDMEDIATYPE</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The underlying media sink does not support the format, no conversion is possible, or a dynamic format change is not possible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDSTREAMNUMBER</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>dwStreamIndex</i> parameter is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_TOPO_CODEC_NOT_FOUND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Could not find an encoder for the encoded format.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter.WriteSample">
    <summary>Delivers a sample to the sink writer.</summary>
    <param name="dwStreamIndex">The zero-based index of the stream for this sample.</param>
    <param name="pSample">A pointer to the <see cref="IMFSample" /> interface of the sample.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDREQUEST</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFSinkWriter">
    <summary>Implemented by the Microsoft Media Foundation sink writer object.</summary>
  </member>
</doc>