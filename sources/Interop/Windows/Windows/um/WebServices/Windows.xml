<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.WsAbandonMessage">
    <summary>Skips the remainder of a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a> on a specified channel.</summary>
    <param name="channel">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> structure representing the channel on which the message is being read or written.</param>
    <param name="message">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure representing the message to abandon. This should be the same message that was passed to the <see cref="WsWriteMessageStart" />or <see cref="WsReadMessageStart" /> function.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The channel is not in the WS_CHANNEL_STATE_OPEN or WS_CHANNEL_STATE_FAULTED state. (For channel states, see the <see cref="WS_CHANNEL_STATE" /> enumeration.)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified message is not currently being read or written on the specified channel.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAbortListener">
    <summary>Cancels any pending I/O for the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">listener</a>.</summary>
    <param name="listener">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> structure representing the listener for which to cancel I/O.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsAbortServiceHost">
    <summary>Aborts all current operations on the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/service-host">service host</a>.</summary>
    <param name="serviceHost">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-host">WS_SERVICE_HOST</a> structure representing the service host on which to abort operations.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAcceptChannel">
    <summary>Accepts the next incoming message from the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/listener">listener</a>.</summary>
    <param name="listener">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> structure representing the listener. This is the listener passed to <see cref="WsCreateChannelForListener" /> when the channel was created.</param>
    <param name="channel">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> structure representing the channel to accept.</param>
    <param name="asyncContext">Pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure with information for invoking the function asynchronously. Pass a <b>NULL</b>value for a synchronous operation.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener or channel was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OBJECT_FAULTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener has faulted. See the Remarks section.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener or the channel or both were in an inappropriate state. See the Remarks section.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAddCustomHeader">
    <summary>Adds the specified application-defined header to the <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a>.</summary>
    <param name="message">
      <para>The message to which to add the header.</para>
      <para>The message can be in any state except <b>WS_MESSAGE_STATE_EMPTY</b> (see the <see cref="WS_MESSAGE_STATE" /> enumeration..</para>
    </param>
    <param name="headerDescription">The <see cref="WS_ELEMENT_DESCRIPTION" /> structure that describes the header.</param>
    <param name="writeOption">Whether the header element is required, and how the value is allocated. For more information, see the <see cref="WS_WRITE_OPTION" /> enumeration.</param>
    <param name="value">The header value to serialize. For more information, see the <see cref="WS_WRITE_OPTION" /> enumeration.</param>
    <param name="valueSize">The size of the value being serialized, in bytes.</param>
    <param name="headerAttributes">The values of the SOAP attributes for the header.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are multiple instances of the same type of header present in the message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAddErrorString">
    <summary>Adds a specified error string to the error object.</summary>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure representing the error object to which to add the string.</param>
    <param name="string">The string to add. The error object will make a copy of the string.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAddMappedHeader">
    <summary>Adds a specified mapped header to the <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a>.</summary>
    <param name="message">
      <para>Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure representing the <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a> to which to add the mapped header.</para>
      <para>The message can be in any state except <b>WS_MESSAGE_STATE_EMPTY</b> (see the <see cref="WS_MESSAGE_STATE" /> enumeration.</para>
    </param>
    <param name="headerName">Pointer to a <see cref="WS_XML_STRING" /> containing the name of the header.</param>
    <param name="valueType">The type of header value to deserialize. For possible types and the corresponding headers, see the <see cref="WS_HEADER_TYPE" /></param>
    <param name="writeOption">Whether the header is required, and how the value is allocated. For more information, see the <see cref="WS_WRITE_OPTION" /> enumeration.</param>
    <param name="value">The header value to serialize. For more information, see the <see cref="WS_WRITE_OPTION" /> enumeration.</param>
    <param name="valueSize">The size of the value being serialized, in bytes.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAddressMessage">
    <summary>Addresses a <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a> to a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/endpoint-address">endpoint address</a>.</summary>
    <param name="message">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure representing the message to be addressed.</param>
    <param name="address">
      <para>Pointer to a <see cref="WS_ENDPOINT_ADDRESS" /> structure containing the endpoint to which to address the message.</para>
      <div>
        <b>Note</b>  Passing <b>NULL</b> to this parameter indicates that no headers are added to the message. This provides a way to set the <see cref="WS_MESSAGE_PROPERTY_ID" /> to <b>WS_MESSAGE_PROPERTY_IS_ADDRESSED</b> without modifying the set of headers in the message.</div>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The message has already been addressed. (The <b>WS_MESSAGE_PROPERTY_IS_ADDRESSED</b> property indicates whether a message has already been addressed.)</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function can return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAlloc">
    <summary>Allocates a segment of memory from the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a>.</summary>
    <param name="heap">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> structure representing the heap from which to allocate the memory.</param>
    <param name="size">The number of bytes to allocate. This value can be zero.</param>
    <param name="ptr">
      <para>On success, a pointer that receives the address of the allocated memory. This pointer is valid until <see cref="WsFreeHeap" /> or <see cref="WsResetHeap" /> is called on the <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a>.</para>
      <para>The returned pointer is aligned on an 8-byte boundary.</para>
      <para>Zero byte allocations will return a non-NULL pointer.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The requested bytes, in addition to already allocated bytes, exceed the size of the <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a>, as specified by the <see cref="WS_HEAP_PROPERTY_MAX_SIZE" /> property.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsAsyncExecute">
    <summary>Helper function for implementing an <a href="https://docs.microsoft.com//windows/desktop/wsw/asynchronous-model">asynchronous</a> operation.</summary>
    <param name="asyncState">A pointer to the <see cref="WS_ASYNC_STATE" /> structure used during the asynchronous operation. This is a state maintenance parameter not intended for direct use. The application must allocate the <b>WS_ASYNC_STATE</b> structure and ensure that it is kept alive during the entire asynchronous operation. The <b>WS_ASYNC_STATE</b> structure can be reused after an asynchronous operation has completed.</param>
    <param name="operation">Represents the initial asynchronous operation to be performed.</param>
    <param name="callbackModel">Indicates whether the callback is being invoked long or short. For more information, see <see cref="WS_CALLBACK_MODEL" /></param>
    <param name="callbackState">A void pointer to a user-defined value that is passed to each <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_async_function">WS_ASYNC_FUNCTION</a>.</param>
    <param name="asyncContext">Pointer to information for invoking the function asynchronously. Pass <b>NULL</b> to invoke the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsCall">
    <summary>Used internally by the <a href="https://docs.microsoft.com//windows/desktop/wsw/service-proxy">service proxy</a> to format the specified arguments according to the specified metadata and send them in a message. The application should never call this function directly.</summary>
    <param name="serviceProxy">Pointer to a WS_SERVICE_PROXY structure representing the service proxy.</param>
    <param name="operation">Pointer to a <see cref="WS_OPERATION_DESCRIPTION" /> structure containing the metadata for the call.</param>
    <param name="arguments">
      <para>An array of pointers to the individual arguments for the service operation being represented by the <i>operation</i> parameter.</para>
      <para>The number of elements must correspond to the number of parameters specified as part of WS_OPERATION_DESCRIPTION in the operation parameter.</para>
    </param>
    <param name="heap">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> structure representing the <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a> from which memory is allocated for the call.</param>
    <param name="callProperties">An array of <see cref="WS_CALL_PROPERTY" /> structures containing the call properties.</param>
    <param name="callPropertyCount">The number of properties in the call properties array.</param>
    <param name="asyncContext">Pointer to information for invoking the function asynchronously. Pass <b>NULL</b> to invoke the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABANDONED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was abandoned.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCheckMustUnderstandHeaders">
    <summary>
      <para>Verifies that the specified headers were understood by the receiver.<div><b>Note</b>  This function should be called after all headers have been read for a received message.</div></para>
    </summary>
    <param name="message">Pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure containing the headers to be understood.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure where additional error information is stored if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The message is not in the correct state. For more information, see the Remarks section.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The validation failed, or the message was not correctly formed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCloseChannel">
    <summary>Closes a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">channel</a>.</summary>
    <param name="channel">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> structure representing the channel to close.</param>
    <param name="asyncContext">Pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure containing information for invoking the function asynchronously. Pass a <b>NULL</b>value to call the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure where additional error information is stored if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The channel closure was aborted by a call to <see cref="WsAbortChannel" /> while the channel was closing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The channel was in an inappropriate state (see the Remarks section).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCloseListener">
    <summary>Causes the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">listener</a> to stop listening.</summary>
    <param name="listener">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> structure representing the listener to close.</param>
    <param name="asyncContext">Pointer to a <see cref="WS_ASYNC_CONTEXT" /> structure containing information for invoking the function asynchronously. Pass <b>NULL</b> to invoke the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The close was aborted by a call to <see cref="WsAbortListener" /> as the listener was closing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener was in an inappropriate state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCloseServiceHost">
    <summary>Closes down communication with the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/service-host">service host</a>.</summary>
    <param name="serviceHost">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-host">WS_SERVICE_HOST</a> structure that represents the service host to be closed.</param>
    <param name="asyncContext">Pointer to a <see cref="WS_ASYNC_CONTEXT" /> structure containing information for invoking the function asynchronously. Pass <b>NULL</b> to invoke the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The current state of the service host is not valid for this operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCloseServiceProxy">
    <summary>Closes down communication with the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/service-proxy">service proxy</a>.</summary>
    <param name="serviceProxy">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-proxy">WS_SERVICE_PROXY</a> structure representing he service proxy to be closed.</param>
    <param name="asyncContext">Pointer to a <see cref="WS_ASYNC_CONTEXT" /> structure containing information for invoking the function asynchronously. Pass <b>NULL</b> to invoke the function synchronously.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The current state of the service proxy is not valid for this operation. This is only error for which close will fail.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The underlying <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> was disconnected during the close operation. This error occurs only in cases where the underlying channel is session based.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCombineUrl">
    <summary>Produces an absolute URL from a specified URL reference (absolute or relative URL) and a specified absolute base URL.</summary>
    <param name="baseUrl">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_STRING</a> structure containing an absolute URL in encoded format.</param>
    <param name="referenceUrl">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_STRING</a> structure containing an absolute or relative URL in encoded format.</param>
    <param name="flags">Controls the format of the resulting URL. For more information, see <see cref="WS_URL_FLAGS" />.</param>
    <param name="heap">Pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> object from which the memory for the resulting URL is allocated.</param>
    <param name="resultUrl">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_STRING</a> structure that receives the resulting URL. This is an absolute URL in encoded format.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The base URL or reference URL was not in the correct format, or had a scheme that was not recognized.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCopyError">
    <summary>Copies an error object from a specified source to a specified destination.</summary>
    <param name="source">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure representing the error object to copy.</param>
    <param name="destination">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives the copied error object.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the error objects is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCopyNode">
    <summary>Copies the current node from the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/xml-reader">XML reader</a> to the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/xml-writer">XML writer</a>.</summary>
    <param name="writer">Pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> to which to copy the XML node.</param>
    <param name="reader">Pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> from which to copy the XML node.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCountOf">
    <summary>Returns the number of elements a specified array.</summary>
    <param name="arrayValue">The array of objects for which for which to get the count. The array type can be either a valid C data type or user defined data type. The array must be static.</param>
  </member>
  <member name="Windows.WsCreateChannel">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/channel">channel</a> for message exchange with an endpoint.</summary>
    <param name="channelType">The type of the channel. For channel types, see the <see cref="WS_CHANNEL_TYPE" /> enumeration. This represents the message exchange pattern for the channel being created.</param>
    <param name="channelBinding">The channel <a href="https://docs.microsoft.com//windows/desktop/wsw/binding">binding</a>, indicating the protocol stack to use for the new channel. For available channel bindings, see the <see cref="WS_CHANNEL_BINDING" /> enumeration.</param>
    <param name="properties">
      <para>An array of <see cref="WS_CHANNEL_PROPERTY" /> structures containing optional values for channel initialization. The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
      <para>For information on which channel properties can be specified when you create a channel, see the <see cref="WS_CHANNEL_PROPERTY_ID" /> enumeration.</para>
      <para>For information on creating a custom channel, see the Remarks section.</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="securityDescription">
      <para>Pointer to a <see cref="WS_SECURITY_DESCRIPTION" /> structure specifying the security for the channel.</para>
      <para>If you are creating a custom channel (using the WS_CUSTOM_CHANNEL_BINDING value of the <see cref="WS_CHANNEL_BINDING" /> enumeration), the security description must be <b>NULL</b>. See the Remarks section.</para>
    </param>
    <param name="channel">Pointer that receives the address of the created channel.<br />When the channel is no longer needed, you must free it by calling <see cref="WsFreeChannel" />.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateChannelForListener">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/channel">channel</a> associated with a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/listener">listener</a>.</summary>
    <param name="listener">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> structure representing the listener for which to create a channel. The listener can be in any state. (For listener states, see the <see cref="WS_LISTENER_STATE" /> enumeration.)</param>
    <param name="properties">
      <para>An array of <see cref="WS_CHANNEL_PROPERTY" /> structures containing optional values for channel initialization. This can be a <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
      <para>For information on creating a custom channel, see the Remarks section.</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="channel">On success, a pointer that receives the address of the created channel.<br />When the channel is no longer needed, you must free it by calling <see cref="WsFreeChannel" />.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateError">
    <summary>Creates an error object that can passed to functions to record rich error information.</summary>
    <param name="properties">An array of <see cref="WS_ERROR_PROPERTY" /> structures containing optional error properties.</param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="error">On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure representing the created error object.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateHeap">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a> object.</summary>
    <param name="maxSize">The total number of bytes that can be allocated from the heap. The total number of bytes is defined as sum of the sizes passed in all the calls to the <see cref="WsAlloc" /> function since the heap was created or reset.</param>
    <param name="trimSize">
      <para>The maximum number of bytes of memory that the heap retains after the heap has been reset by a call to the <see cref="WsResetHeap" /> function. This is an approximation value due to heap overhead. <div><b>Note</b>  If the value of <i>trimSize</i> is larger than the value of <i>maxSize</i>, the size of the heap will not be adjusted to the desired size.</div></para>
    </param>
    <param name="properties">
      <code> Reserved for future use; set to &lt;b&gt;NULL&lt;/b&gt;.</code>
    </param>
    <param name="propertyCount">Reserved for future use; set to 0 (zero).</param>
    <param name="heap">On success, pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> structure representing the new heap object.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsCreateListener">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/listener">listener</a> with the specified properties.</summary>
    <param name="channelType">The type of channel the listener listens for. For channel types, see the <see cref="WS_CHANNEL_TYPE" /> enumeration.</param>
    <param name="channelBinding">The channel protocol for the listener. For possible bindings, see the <see cref="WS_CHANNEL_BINDING" /> enumeration.</param>
    <param name="properties">
      <para>Pointer to a <see cref="WS_LISTENER_PROPERTY" /> structure containing optional properties for the listener.</para>
      <para>For information on which properties you can specify when creating a listener, see the <see cref="WS_LISTENER_PROPERTY_ID" /> enumeration.</para>
      <para>For information on creating a custom listener, see the Remarks section.</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="securityDescription">
      <para>Pointer to a <see cref="WS_SECURITY_DESCRIPTION" /> structure specifying the security for the listener.</para>
      <para>If you are creating a custom channel (using the WS_CUSTOM_CHANNEL_BINDING value of the <see cref="WS_CHANNEL_BINDING" /> enumeration), the security description must be <b>NULL</b>. See the Remarks section.</para>
    </param>
    <param name="listener">On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> structure representing the new listener.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateMessage">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a> object with the specified properties.</summary>
    <param name="envelopeVersion">A <see cref="WS_ENVELOPE_VERSION" /> enumeration value that specifies the version of the envelope for the message.</param>
    <param name="addressingVersion">A <see cref="WS_ADDRESSING_VERSION" /> that specifies the version of the addressing for the message.</param>
    <param name="properties">
      <para>An array of optional properties for the message. See <see cref="WS_MESSAGE_PROPERTY" />.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="message">
      <para>On success, a pointer that receives the address of a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure representing the new message.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeMessage" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateMessageForChannel">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/message">message</a> for use with a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/channel">channel</a>.</summary>
    <param name="channel">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> structure representing the channel for the message.</param>
    <param name="properties">
      <para>An array of optional properties for the message. See <see cref="WS_MESSAGE_PROPERTY" />.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="message">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure representing the new message.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeMessage" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateMetadata">
    <summary>Creates a metadata object that is used to collect and process metadata documents.</summary>
    <param name="properties">
      <para>An array of <see cref="WS_METADATA_PROPERTY" /> structures containing optional properties for the metadata.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="metadata">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> structure representing the new message.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeMetadata" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateReader">
    <summary>Creates an <a href="https://docs.microsoft.com//windows/desktop/wsw/xml-reader">XML reader</a> with the specified properties.</summary>
    <param name="properties">
      <para>An array of <see cref="WS_XML_READER_PROPERTY" /> structures containing optional properties for the XML reader.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
      <para>For the properties that tiy can use to configure the XML reader, see the <see cref="WS_XML_READER_PROPERTY_ID" /> enumeration.</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="reader">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> structure representing the new XML reader.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeReader" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsCreateServiceEndpointFromTemplate">
    <summary>Helper routine for creating a service endpoint (<see cref="WS_SERVICE_ENDPOINT" />) from policy templates.</summary>
    <param name="channelType">A <see cref="WS_CHANNEL_TYPE" /> enumeration value representing the type of channel hosted by the endpoint.</param>
    <param name="properties">An array of <see cref="WS_SERVICE_ENDPOINT_PROPERTY" /> structures containing properties for the service endpoint. (Application should fill in channel properties in the template structure.)</param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="addressUrl">The URL address on which the endpoint is to listen.</param>
    <param name="contract">A <see cref="WS_SERVICE_CONTRACT" /> structure representing the contract of the endpoint.</param>
    <param name="authorizationCallback">A <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_service_security_callback">WS_SERVICE_SECURITY_CALLBACK</a> authorization callback for the service endpoint.</param>
    <param name="heap">The <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a> from which memory for the service endpoint is allocated on successful return.</param>
    <param name="templateType">A <see cref="WS_BINDING_TEMPLATE_TYPE" /> enumeration value representing the type of templates being used to create the service endpoint.</param>
    <param name="templateValue">Optional template structure to be created and filled in by application. The template must be consistent with the input template type (passed in the <i>templateType</i> parameter). When the <i>templateValue</i> parameter is <b>NULL</b>, it is equivalent to the corresponding template structure initialized to zero.</param>
    <param name="templateSize">The size, in bytes, of the input templateValue structure.</param>
    <param name="templateDescription">The description of template structure (passed in the <i>templateValue</i> parameter). Needs to match templateType.</param>
    <param name="templateDescriptionSize">The size of the template description.</param>
    <param name="serviceEndpoint">On success, a pointer that receives the address of the <see cref="WS_SERVICE_ENDPOINT" /> structure representing the new service endpoint.</param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsCreateServiceHost">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/service-host">service host</a> for the specified endpoints.</summary>
    <param name="endpoints">An array of <see cref="WS_SERVICE_ENDPOINT" /> structures representing the service endpoints for which to create the service host.</param>
    <param name="endpointCount">The number of endpoints in the <i>endpoints</i> array.</param>
    <param name="serviceProperties">
      <para>An array of <see cref="WS_SERVICE_PROPERTY" /> structures containing optional properties for the service host.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>servicePropertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="servicePropertyCount">The number of properties in the <i>serviceProperties</i> array.</param>
    <param name="serviceHost">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-host">WS_SERVICE_HOST</a> structure representing the new service host.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeServiceHost" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An invalid argument is specified for creating the service host.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateServiceProxy">
    <summary>Creates a <a href="https://docs.microsoft.com//windows/desktop/wsw/service-proxy">service proxy</a> with the specified properties.</summary>
    <param name="channelType">A <see cref="WS_CHANNEL_TYPE" /> enumeration value representing the channel type for the service proxy.</param>
    <param name="channelBinding">A <see cref="WS_CHANNEL_BINDING" /> enumeration value representing the channel binding.</param>
    <param name="securityDescription">A <see cref="WS_SECURITY_DESCRIPTION" /> structure representing the security description.</param>
    <param name="properties">
      <para>An array of <see cref="WS_PROXY_PROPERTY" /> structures containing optional properties for the service proxy.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="channelProperties">
      <para>An array of <see cref="WS_CHANNEL_PROPERTY" /> structures containing optional channel properties. The value of this parameter may be <b>NULL</b>, in which case, the <i>channelPropertyCount</i> parameter must be 0 (zero).</para>
      <div>
        <b>Note</b>  Be very careful about modifying the default values for these properties.</div>
    </param>
    <param name="channelPropertyCount">The number of properties in the <i>channelProperties</i> array.</param>
    <param name="serviceProxy">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-proxy">WS_SERVICE_PROXY</a> structure representing the new service proxy.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeServiceProxy" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateServiceProxyFromTemplate">
    <summary>Helper routine for creating a <a href="https://docs.microsoft.com//windows/desktop/wsw/service-proxy">service proxy</a> from policy templates.</summary>
    <param name="channelType">A <see cref="WS_CHANNEL_TYPE" /> enumeration value representing the channel type for the service proxy.</param>
    <param name="properties">
      <para>An array of <see cref="WS_PROXY_PROPERTY" /> structures containing optional properties for the service proxy.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="templateType">
      <para>A <see cref="WS_BINDING_TEMPLATE_TYPE" /> enumeration value representing the type of templates used to create the service proxy.</para>
      <para>Please see the <b>Remarks</b> for more information.</para>
    </param>
    <param name="templateValue">
      <para>The optional template structure to be created and filled in by an application. This template structure must be consistent with the input template type (in the <i>templateType</i>). When <i>templateValue</i> parameter is <b>NULL</b>, it is equivalent to the corresponding template structure initialized to zero.</para>
      <para>Please see the <b>Remarks</b> for more information.</para>
    </param>
    <param name="templateSize">The size, in bytes, of the template structure (in the <i>templateValue</i> parameter).</param>
    <param name="templateDescription">
      <para>The description of <i>templateValue</i>. This must match <i>templateType</i>.</para>
      <para>Please see the <b>Remarks</b> for more information.</para>
    </param>
    <param name="templateDescriptionSize">The size of the template description.</param>
    <param name="serviceProxy">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-proxy">WS_SERVICE_PROXY</a> structure representing the new service proxy.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeServiceProxy" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</returns>
  </member>
  <member name="Windows.WsCreateWriter">
    <summary>creates an <a href="https://docs.microsoft.com//windows/desktop/wsw/xml-writer">XML Writer</a> with the specified properties.</summary>
    <param name="properties">
      <para>An array of <see cref="WS_XML_WRITER_PROPERTY" /> structures containing optional properties for the XML writer.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="writer">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> structure representing the created XML writer.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeWriter" />.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateXmlBuffer">
    <summary>Creates an <a href="https://docs.microsoft.com//windows/desktop/wsw/xml-buffer">XML Buffer</a> which can be used to process XML data .</summary>
    <param name="heap">Pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> structure representing the <a href="https://docs.microsoft.com//windows/desktop/wsw/heap">heap</a> from which to allocate memory for the returned XML buffer.</param>
    <param name="properties">
      <para>An array of <see cref="WS_XML_BUFFER_PROPERTY" /> structures containing optional properties for the XML buffer.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="buffer">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a> structure representing the created XML buffer. The memory for this buffer is released when its heap is reset or released.</para>
      <para>The XML buffer is initially empty.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsCreateXmlSecurityToken">
    <summary>Creates a security token from its specified XML form.</summary>
    <param name="tokenXml">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a> structure containing the security token in its XML form. The referenced buffer must have exactly one top level XML element.</param>
    <param name="tokenKey">
      <para>Pointer to a <b>SECURITY_KEY_HANDLE</b> structure that may or may not contain a cryptographic proof-of-possession key. If present the key can be used to bind this security token to a message. If the value of the <i>tokenKey</i> parameter is not <b>NULL</b>, the token is assumed to have a proof-of-possession key. If the value is <b>NULL</b>, the structure is assumed to be a "bearer token" as defined below.</para>
      <list type="bullet">
        <item>
          <description> A bearer token also called a basic or keyless token is serialized in a message to demonstrate the message's possession of the token, and to indicate the intention to apply the claims from the token to that message.</description>
        </item>
        <item>
          <description> A proof-of-possession token also called a PoP or cryptographic token has an associated cryptographic key which must be used to "sign" a message in order to demonstrate possession of the token and to indicate the intention to apply the claims from the token to that message. An example is an X.509 certificate: the message must be signed with the private key of the certificate in order for a receiving principal to accept the message as carrying the claims present in the certificate.</description>
        </item>
      </list>
    </param>
    <param name="properties">
      <para>An array of <see cref="WS_XML_SECURITY_TOKEN_PROPERTY" /> structures containing optional properties for the XML security token.</para>
      <para>The value of this parameter may be <b>NULL</b>, in which case, the <i>propertyCount</i> parameter must be 0 (zero).</para>
    </param>
    <param name="propertyCount">The number of properties in the <i>properties</i> array.</param>
    <param name="token">
      <para>On success, a pointer that receives the address of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-security-token">WS_SECURITY_TOKEN</a> structure representing the created XML security token.</para>
      <para>When you no longer need this structure, you must free it by calling <see cref="WsFreeSecurityToken" />.</para>
      <para>The returned security token may be used with <see cref="WS_XML_TOKEN_MESSAGE_SECURITY_BINDING" /> if it is to be</para>
      <para>presented to a service.</para>
    </param>
    <param name="error">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> structure that receives additional error information if the function fails.</param>
    <returns>
      <para>If the function succeeds, it returns NO_ERROR; otherwise, it returns an HRESULT error code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsDateTimeToFileTime">
    <summary>Converts a <see cref="WS_DATETIME" /> object into a FILETIME object. A reference to the FILETIME object is returned by output parameter.</summary>
    <param name="dateTime">A pointer to the <see cref="WS_DATETIME" /> structure to convert.</param>
    <param name="fileTime">A pointer to the new FILETIME object that contains the converted time.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsEncodeUrl">
    <summary>Encodes the specified <see cref="WS_URL" /> into a URL string given its component parts. Values are escaped as necessary, combined, and stored in the specified <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a>, and the result is returned as a <see cref="WS_STRING" />.</summary>
    <param name="url">A reference to the <see cref="WS_URL" /> to encode.</param>
    <param name="flags">The value of this parameter determines the URL scheme evaluation method. See <see cref="WS_URL_FLAGS" />.</param>
    <param name="heap">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> in which to allocate URL.</param>
    <param name="outUrl">A pointer to the resulting URL string.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The URL data being encoded was not valid according to the URL syntax.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsEndReaderCanonicalization">
    <summary>
      <para>This function stops XML canonicalization started by a preceding <see cref="WsStartReaderCanonicalization" /> function call.</para>
      <para>Any remaining canonical bytes buffered by the reader will be written to the callback function.</para>
    </summary>
    <param name="reader">A pointer to the XML reader on which canonicalization should be stopped.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsEndWriterCanonicalization">
    <summary>This function stops XML canonicalization started by the preceding <see cref="WsStartWriterCanonicalization" /> call. Remaining canonical bytes buffered by the writer are written to the callback function.</summary>
    <param name="writer">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object on which canonicalization should be stopped.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFileTimeToDateTime">
    <summary>Takes a reference to a FILETIME object and converts it into a <see cref="WS_DATETIME" /> object. A reference to the WS_DATETIME object is returned by output parameter.</summary>
    <param name="fileTime">A pointer to the FILETIME structure to convert.</param>
    <param name="dateTime">A pointer to the new WS_DATETIME object that has the newly converted time.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFillBody">
    <summary>
      <para>Ensures that there are a sufficient number of bytes available in a message for reading. It is up to the application to specify the number of bytes sufficient to contain the next XML construct to read.</para>
      <div>
        <b>Note</b> This function is called before using <see cref="WsReadBody" /> or the XML Readerof the message to read the message body.</div>
      <para>This function is a shortcut for calling <see cref="WsFillReader" /> for the XML Reader being used to write the message. Calling <b>WsFillReader</b> directly is equivalent to calling this function.</para>
    </summary>
    <param name="message">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure intended for "filling".</param>
    <param name="minSize">
      <para>The minimum number of bytes that the message should have buffered. If the current byte count buffered is equal to or greater than the value of <i>minSize</i> the function does nothing.</para>
      <div>
        <b>Note</b>  The value of <i>minSize</i> represents the size of the encoded form of the XML that is expected. This can vary by encoding and also how the actual XML is structured. Typical use of this function is to select an expected upper bound byte count for encoding or XML structure to ensure that the expected data is read.</div>
    </param>
    <param name="asyncContext">A pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure with information about invoking the function asynchronously. A <b>NULL</b> value indicates a request for synchronous operation.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Start of message was received successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFillReader">
    <summary>Ensures that the reader has buffered the minimum byte count of XML data for use by subsequent reader functions. It will invoke the callback specified by <see cref="WS_XML_READER_STREAM_INPUT" /> as many times as necessary to obtain the number of bytes specified by the value of the <i>minSize</i> parameter. On completion the buffered data is available to other reader functions. If a subsequent reader function requires more data than what has been obtained the function will return a <b>WS_E_QUOTA_EXCEEDED</b> exception. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</summary>
    <param name="reader">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> structure used for obtaining the data.</param>
    <param name="minSize">Specifies the minimum number of bytes that the reader should have obtained. If the current byte count buffered is equal to or greater than the value of <i>minSize</i> the function will do nothing and will return immediately.</param>
    <param name="asyncContext">A pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure with information about invoking the function asynchronously. A <b>NULL</b>value indicates a request for synchronous operation.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFindAttribute">
    <summary>Searches the attributes of the current element for an attribute with the specified name and namespace and returns its index which may be passed to <see cref="WsReadStartAttribute" />.</summary>
    <param name="reader">The reader on which to find the attribute.</param>
    <param name="localName">The local name of the attribute to search for.</param>
    <param name="ns">The namespace of the attribute to search for.</param>
    <param name="required">If required is <b>TRUE</b> and the attribute is not found, the function will return <b>WS_E_INVALID_FORMAT</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.) if required is <b>FALSE</b> and the attribute is not found, the function will return S_FALSE.</param>
    <param name="attributeIndex">If the attribute is found, then the index of the attribute, is returned here. This index can then be passed to <see cref="WsReadStartAttribute" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFlushBody">
    <summary>
      <para>Flushes all accumulated message body data that has been written.</para>
      <para>When message uses <see cref="WsWriteBody" /> or XML Writer, the data is accumulated in a buffer. WsFlushBody subsequently performs the actual I/O.</para>
      <para>WsFlushBody is typically used when channel I/O is set to<see cref="WS_STREAMED_OUTPUT_TRANSFER_MODE" />, or when using an XML Writer set to use <see cref="WS_XML_WRITER_STREAM_OUTPUT" />.</para>
    </summary>
    <param name="message">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure containing the accumulated message body data.</param>
    <param name="minSize">
      <para>Specifies the minimum number of bytes that must be present in the message for the function to perform the data flush.</para>
      <div>
        <b>Note</b>  If the message contains less than <i>minSize</i> WSFlushBody terminates without doing the I/O flush. A larger value will ensure that no I/O will be done until the larger value has been accumulated. This is useful for ensuring that larger chunks are used when doing I/O. And presuming that there is at least one byte of accumulated data a value of 0 in <i>minSize</i> guarantees that it will be flushed.</div>
    </param>
    <param name="asyncContext">A pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure with information about invoking the function asynchronously. A <b>NULL</b>value indicates a request for synchronous operation.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFlushWriter">
    <summary>Instructs the writer to invoke the <see cref="callback" /> specified in <see cref="WS_XML_WRITER_STREAM_OUTPUT" /> if sufficient data has been buffered.</summary>
    <param name="writer">The writer to flush.</param>
    <param name="minSize">
      <para>Specifies the minimum number of bytes that must be buffered in order for the<a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_write_callback">callback</a> to be invoked. If fewer than this number of bytes are buffered, then the <b>callback</b> will not be invoked. This can be used to minimize the number of i/o's that occur when writing small amounts of data.</para>
      <para>Zero should be specified to guarantee that the <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_write_callback">callback</a> is invoked.</para>
    </param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsFreeChannel">
    <summary>
      <para>Releases the memory resource associated with a Channel object.</para>
      <para>The <b>Channel</b> must be in the either the <see cref="WS_CHANNEL_STATE_CREATED" /> or <b>WS_CHANNEL_STATE_CLOSED</b> state to be released. If a Channel has been successfully opened it must be closed before it can be released.</para>
    </summary>
    <param name="channel">A pointer to the <b>Channel</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> object returned by <see cref="WsCreateChannel" /> or <see cref="WsCreateChannelForListener" />. The referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeError">
    <summary>Releases the memory resource associated with an <b>Error</b> object created using <see cref="WsCreateError" />. This releases the object and its constituent information.</summary>
    <param name="error">A pointer to the <b>Error</b> object to release. The pointer must reference a valid <b>WS_ERROR</b> object returned by <see cref="WsCreateError" />. The referenced value may not be NULL.</param>
  </member>
  <member name="Windows.WsFreeHeap">
    <summary>This frees the heap object, and the memory associated with any allocations made on it using <see cref="WsAlloc" />.</summary>
    <param name="heap">The heap to free. This must be a valid heap object that was returned from <see cref="WsCreateHeap" />. This parameter may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeListener">
    <summary>Releases the memory resource associated with a Listener object. The Listener state represented in <see cref="WS_LISTENER_STATE" /> must be set to either <b>WS_LISTENER_STATE_CREATED</b>or <b>WS_LISTENER_STATE_CLOSED</b> to be released. If a Listener has been successfully opened, then it must be closed using <see cref="WsCloseListener" /> before it is released.</summary>
    <param name="listener">A pointer to the <b>Listener</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> returned by <see cref="WsCreateListener" />. The referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeMessage">
    <summary>Releases the memory resource associated with a Message object.</summary>
    <param name="message">A pointer to the <b>Message</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object returned by <see cref="WsCreateMessage" /> or <see cref="WsCreateMessageForChannel" /> and the referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeMetadata">
    <summary>Releases the memory resource associated with a metadata object.</summary>
    <param name="metadata">A pointer to the metadata object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> object returned by <see cref="WsCreateMetadata" /> and the referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeReader">
    <summary>Releases the memory resource associated with an XML_Reader object.</summary>
    <param name="reader">A pointer to the <b>XML Reader</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object returned by <see cref="WsCreateReader" /> and the referenced <b>XML Reader</b> value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeSecurityToken">
    <summary>Releases the memory resource associated with a <b>Security Token</b> object.</summary>
    <param name="token">A pointer to the <b>Security Token</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-security-token">WS_SECURITY_TOKEN</a> object returned by <see cref="WsCreateXmlSecurityToken" />.</param>
  </member>
  <member name="Windows.WsFreeServiceHost">
    <summary>Releases the memory associated with a <a href="https://docs.microsoft.com//windows/desktop/wsw/service-host">Service Host</a> object.</summary>
    <param name="serviceHost">A pointer to the <b>Service Host</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-host">WS_SERVICE_HOST</a> object returned by <see cref="WsCreateServiceHost" /> and the referenced <b>Service Host</b> value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeServiceProxy">
    <summary>Releases the memory associated with a Service Proxy resource.</summary>
    <param name="serviceProxy">A pointer to the <b>Service Proxy</b> to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-proxy">WS_SERVICE_PROXY</a> object returned by <see cref="WsCreateServiceProxy" />. The referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsFreeWriter">
    <summary>Releases the memory resource associated with an XML Writer object.</summary>
    <param name="writer">A pointer to the <b>XML Writer</b> object to release. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object returned by <see cref="WsCreateWriter" /> and the referenced value may not be <b>NULL</b>.</param>
  </member>
  <member name="Windows.WsGetChannelProperty">
    <summary>Retrieves a property of the Channel referenced by the <i>channel</i> parameter.</summary>
    <param name="channel">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> object with the property to retrieve.</param>
    <param name="id">Represents an identifier of the property to retrieve.</param>
    <param name="value">
      <para>A void pointer referencing the location to store the retrieved property.<div><b>Note</b>  The pointer must have an alignment compatible with the type of the property.</div></para>
    </param>
    <param name="valueSize">The number of bytes allocated by the caller to store the retrieved property.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property Id was not supported for this object or the specified buffer was not large enough.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetCustomHeader">
    <summary>Finds an application-defined header of the message and deserializes it.</summary>
    <param name="message">
      <para>The message containing the header.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="customHeaderDescription">A <see cref="WS_ELEMENT_DESCRIPTION" /> which describes the header element.</param>
    <param name="repeatingOption">
      <para>Whether the header may appear more than once in the message.</para>
      <para>If <see cref="WS_REPEATING_HEADER" /> is used, then the header index indicates which of the headers with the specified headerName to return.</para>
      <para>If <see cref="WS_SINGLETON_HEADER" /> is used, then the headerIndex must be zero.</para>
    </param>
    <param name="headerIndex">The zero-based index of the header within the set of headers with the specified headerName.</param>
    <param name="readOption">Whether the value is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">The heap to store the deserialized header data in. If this is <b>NULL</b>, then the message heap will be used as required by the <see cref="WS_READ_OPTION" />.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="headerAttributes">Returns the <see cref="WS_HEADER_ATTRIBUTES" /> for this header. The pointer may be <b>NULL</b>, in which case no attributes are returned.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The header does not exist, and is required. <para><see cref="WS_SINGLETON_HEADER" /> was specified, and there are multiple instances of the type of header present in the message.</para><para>The input data was not in the expected format.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough memory available to deserialize the header.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetDictionary">
    <summary>Retrieves an <see cref="XML Dictionary" /> object. The retrieved Dictionary is returned by the <i>dictionary</i> reference parameter.</summary>
    <param name="encoding">Indicates an enumeration of the Dictionary encoding.</param>
    <param name="dictionary">A reference to a <see cref="WS_XML_DICTIONARY" /> structure for the retrieved <b>Dictionary</b>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsGetErrorProperty">
    <summary>Retrieves a property of an <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object referenced by the <i>error</i> parameter.</summary>
    <param name="error">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object with the property to retrieve.</param>
    <param name="id">An identifier of the property to retrieve.</param>
    <param name="buffer">A pointer referencing the location to store the retrieved property.</param>
    <param name="bufferSize">The number of bytes allocated by the caller to store the retrieved property.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetErrorString">
    <summary>Retrieves an error string from an error object.</summary>
    <param name="error">The error object containing the string.</param>
    <param name="index">
      <para>The zero-based index identifying the string to retrieve. The first error string (index 0) will be the string most recently added to the error object (using <see cref="WsAddErrorString" />). When<see cref="WS_ERROR_PROPERTY_ORIGINAL_ERROR_CODE" /> is presented in the error object, the corresponding error text will be available in the last index.</para>
      <para>The number of errors can be retrieved using <see cref="WS_ERROR_PROPERTY_STRING_COUNT" />.</para>
    </param>
    <param name="string">
      <para>The returned string. The string is valid until <see cref="WsResetError" /> or <see cref="WsFreeError" /> is called.</para>
      <para>The string is not zero terminated.</para>
    </param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetFaultErrorDetail">
    <summary>Read the fault detail stored in a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object.</summary>
    <param name="error">The error object that contains the fault information.</param>
    <param name="faultDetailDescription">
      <para>A pointer to a description of the fault detail element.</para>
      <para>The action value of the fault detail description is used as a filter value to match against the action of the fault. If both action strings are specified (the action value of the fault detail description is not <b>NULL</b> and the action value <see cref="WS_FAULT_ERROR_PROPERTY_ACTION" /> in the<a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> has a length greater than zero), then the action strings are compared to determine a match. If there is a match, then the function will then try to deserialize the detail element.</para>
      <para>The element description of the fault detail description is used to describe the format of the element in the fault detail.</para>
    </param>
    <param name="readOption">Whether the element is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">The heap to store the deserialized values in.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetFaultErrorProperty">
    <summary>Retrieves a <see cref="Fault" /> error property of an <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object referenced by the <i>error</i> parameter.</summary>
    <param name="error">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object with the property to retrieve.</param>
    <param name="id">Represents an identifier of the fault error property to retrieve.</param>
    <param name="buffer">
      <para>A pointer referencing the location to store the retrieved fault error property.</para>
      <div>
        <b>Note</b>  The pointer must have an alignment compatible with the type of the property.</div>
    </param>
    <param name="bufferSize">The number of bytes allocated by the caller to store the retrieved property.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetHeader">
    <summary>Finds a particular standard header in the message and deserializes it.</summary>
    <param name="message">
      <para>The message containing the header.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="headerType">The type of header to deserialize.</param>
    <param name="valueType">The type of value to deserialize. See <see cref="WS_HEADER_TYPE" /> for the set of types which correspond to each type of header.</param>
    <param name="readOption">Whether the value is required, and how to allocate the value.<see cref="WS_READ_NILLABLE_VALUE" /> and <b>WS_READ_NILLABLE_POINTER</b>read options cannot be specified since the header types in <see cref="WS_HEADER_TYPE" />are not allowed to be nillable in the respective standards specifications. See <b>WS_READ_OPTION</b> for more information.</param>
    <param name="heap">The heap to store the deserialized header data in. If this is <b>NULL</b>, then the message heap will be used.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The header does not exist, and is required. <para>There are multiple instances of the type of header present in the message.</para><para>The input data was not in the expected format.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough memory available to deserialize the header.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetHeaderAttributes">
    <summary>This function populates a ULONG parameter with the <see cref="WS_HEADER_ATTRIBUTES" /> from the header element on which the reader is positioned. The envelope version of the message is used to determine which attributes to return.</summary>
    <param name="message">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> structure containing the message to query. This envelope version of the message is used to determine which attributes match. The message can be in any state except <see cref="WS_MESSAGE_STATE_EMPTY" />.</param>
    <param name="reader">A pointer to the reader to query. This must be valid WS_XML_READER object returned from <see cref="WsCreateReader" /> and cannot be <b>NULL</b>.</param>
    <param name="headerAttributes">On success the value referenced by this pointer is set to the header attributes.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetHeapProperty">
    <summary>Retrieves a particular property of a specified Heap.</summary>
    <param name="heap">A pointer to the <b>Heap</b> object to that contains the desired property data.</param>
    <param name="id">This is a <see cref="WS_HEAP_PROPERTY_ID" /> enumerator that identifies the desired property.</param>
    <param name="value">A reference to the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The buffer size allocated by the caller for the retrieved property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsGetListenerProperty">
    <summary>Retrieves a specified Listener object property. The property to retrieve is identified by a <see cref="WS_LISTENER_PROPERTY_ID" /> input parameter.</summary>
    <param name="listener">A pointer to the Listener object containing the desired property. This must be a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> that was returned from <see cref="WsCreateListener" />.</param>
    <param name="id">This is a <b>WS_LISTENER_PROPERTY_ID</b> enumerator value that identifies the desired property.</param>
    <param name="value">A reference to a location for storing the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">Represents the byte-length buffer size allocated by the caller to store the retrieved property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetMappedHeader">
    <summary>Finds a mapped header in the message and deserializes it.</summary>
    <param name="message">
      <para>The message containing the header.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="headerName">The name of the mapped header.</param>
    <param name="repeatingOption">
      <para>Whether the header may appear more than once in the message.</para>
      <para>If <see cref="WS_REPEATING_HEADER" /> is used, then the header index indicates which of the headers with the specified headerName to return.</para>
      <para>If <see cref="WS_SINGLETON_HEADER" /> is used, then the headerIndex must be zero.</para>
    </param>
    <param name="headerIndex">The zero-based index of the header within the set of headers with the specified headerName.</param>
    <param name="valueType">The type of value to deserialize.</param>
    <param name="readOption">
      <para>Whether the value is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</para>
      <para>If the header is optional (may appear zero or one times), then<see cref="WS_READ_OPTIONAL_POINTER" /> can be used.</para>
    </param>
    <param name="heap">The heap to store the deserialized header data in. If this is <b>NULL</b>, then the message heap will be used.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The header does not exist, and is required. <para>The input data was not in the expected format.</para><para><see cref="WS_SINGLETON_HEADER" /> was specified, and there are multiple instances of the header with the specified name in the message.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough memory available to deserialize the header.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetMessageProperty">
    <summary>Retrieves a specified Message object property. The property to retrieve is identified by a <see cref="WS_MESSAGE_PROPERTY_ID" /> input parameter.</summary>
    <param name="message">A pointer to a <b>Message</b> object containing the desired property. This parameter must be a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> object.</param>
    <param name="id">This is a <b>WS_MESSAGE_PROPERTY_ID</b> enumerator value that identifies the desired property.</param>
    <param name="value">A reference to a location for storing the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The byte-length buffer size allocated by the caller to store the retrieved property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application has run out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetMetadataEndpoints">
    <summary>
      <para>Returns the "Endpoints" defined within the metadata object documents. Calling this function with <see cref="WS_METADATA_STATE" />set to <b>WS_METADATA_STATE_CREATED</b> will cause the metadata object to resolve all references in the metadata documents. Any additional document validation will also be done. If this process is successful the metadata object will be set to <b>WS_METADATA_STATE_RESOLVED</b> and subsequent document additions to the metadata object are not permitted. If there is an error the metadata object will be set to <b>WS_METADATA_STATE_FAULTED</b>.</para>
      <div>
        <b>Note</b>  The data returned by this function is valid until the metadata object is released or reset. The data returned from this function should not be modified.</div>
    </summary>
    <param name="metadata">A pointer to a <b>Metadata</b> object containing the desired Endpoints. This parameter must be a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> object.</param>
    <param name="endpoints">On success this pointer parameter is populated with information about the endpoints that were defined in the metadata object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory resources.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetMetadataProperty">
    <summary>
      <para>Retrieves a specified <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> object property. The property to retrieve is identified by a <see cref="WS_METADATA_PROPERTY_ID" /> input parameter.</para>
      <div>
        <b>Note</b>  The data returned by this function is valid until the metadata object is released or reset. The data should not be modified.</div>
    </summary>
    <param name="metadata">A pointer to a <b>Metadata</b> object containing the desired property. This parameter must be a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> object.</param>
    <param name="id">Identifier value of the property to retrieve.</param>
    <param name="value">A reference to a location for storing the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The byte-length buffer size allocated by the caller to store the retrieved property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property Id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetMissingMetadataDocumentAddress">
    <summary>
      <para>This function returns the address of a missing document that is referenced by the metadata object.</para>
      <para>Each document that is added to the metadata object may contain references to other documents. After a document has been added back to the Metadata the function can be used to find the next missing document.</para>
      <div>
        <b>Note</b>  This function will fail if the host name of the URL of the missing address being returned cannot be verified as being one of the host names expected. The expected host names are a union of the following:<list type="bullet"><item><description>The host name of any URL previously passed to <see cref="WsReadMetadata" />.</description></item><item><description>The list of host names specified using the <see cref="WS_METADATA_PROPERTY_HOST_NAMES" /> property.</description></item></list></div>
    </summary>
    <param name="metadata">This parameter is a pointer to a <b>Metadata</b> object that should have the document.</param>
    <param name="address">
      <para>On success this parameter is populated with either a pointer to the address of a missing metadata document, or <b>NULL</b> if there are no missing metadata documents.</para>
      <para>The returned address URL is fully qualified.</para>
      <div>
        <b>Note</b>  The data returned by this function is valid until the metadata object is freed or reset. The data should not be modified.</div>
    </param>
    <param name="error">This parameter is a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> pointer to where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetNamespaceFromPrefix">
    <summary>
      <para>This function returns a namespace from the prefix to which it is bound.</para>
      <para>If the value of the <i>required</i> parameter is set to <b>TRUE</b> and the Prefix is not bound to any namespace a <b>WS_E_INVALID_FORMAT</b> exception will be returned. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.) If the <i>required</i> parameter is <b>FALSE</b>, and the Prefix is not bound to any namespace the <i>ns</i> parameter will be <b>NULL</b> and the function will return S_FALSE.</para>
    </summary>
    <param name="reader">A pointer to the reader for which the prefix should be searched.</param>
    <param name="prefix">A pointer to the Prefix to search for.</param>
    <param name="required">The value of this Boolean parameter determines whether or not an error should be returned if a matching namespace is not found.</param>
    <param name="ns">A reference to a namespace to which the prefix is bound if successful. The value returned is valid only until the writer advances.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetOperationContextProperty">
    <summary>Returns a property of the specified operation context. It should be noted that the validity of these property is limited to the lifetime of the operation context itself.</summary>
    <param name="context">The context that the property value is being obtained for.</param>
    <param name="id">The id of the property.</param>
    <param name="value">The address to place the retrieved value. The contents are not modified in case of a failure. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size of the buffer that the caller has allocated for the retrieved value.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsGetPolicyAlternativeCount">
    <summary>
      <para>Retrieves the number of alternatives available in the policy object. The alternative count can be used to loop through each alternative using<see cref="WsMatchPolicyAlternative" />.</para>
      <div>
        <b>Note</b>  The policy object may delay some processing until this function is called. If the processing fails, then the policy object will be set to <b>WS_POLICY_STATE_FAULTED</b> state.</div>
    </summary>
    <param name="policy">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-policy">WS_POLICY</a> object from which to count alternatives.</param>
    <param name="count">A pointer to the number value of alternatives. This may be 0.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetPolicyProperty">
    <summary>Retrieves a property of a policy object.</summary>
    <param name="policy">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-policy">WS_POLICY</a> object from which to obtain the property.</param>
    <param name="id">An identifier of the policy property to retrieve.</param>
    <param name="value">A pointer to the address to store the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The number of bytes allocated by the caller to store the retrieved property.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetPrefixFromNamespace">
    <summary>
      <para>This function returns the prefix to which a namespace is bound. There may be more than one prefix in scope and this function is free to return any one of them.</para>
      <div>
        <b>Note</b>  Under no conditions should a caller depend upon or expect a particular prefix to be returned when there is more than one prefix that may be returned.</div>
      <para>If the value of the <i>required</i> parameter is set to <b>TRUE</b> and the Namespace is not bound to any Prefix a <b>WS_E_INVALID_FORMAT</b> exception will be returned. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.) If the <i>required</i> parameter is <b>FALSE</b>, and the Namespace is not bound to any Prefix the <i>prefix</i> parameter is <b>NULL</b> and the function returns S_FALSE.</para>
      <para>If <see cref="WsWriteStartElement" /> is called but the element is not committed the Namespaces and Prefixes referenced by the element and any attributes on the element is not available to this function.</para>
    </summary>
    <param name="writer">A pointer to a Writer with the namespace to search. This must be a valid <b>WS_XML_WRITER</b> object returned by <see cref="WsCreateWriter" /> and may not be <b>NULL</b>.</param>
    <param name="ns">The namespace to search for.</param>
    <param name="required">Indicates whether or not an error should be returned if a matching prefix is not found.</param>
    <param name="prefix">
      <para>A reference to a prefix bound to the namespace or <b>NULL</b> if the value of the <i>required</i> parameter is <b>FALSE</b> and a matching namespace is not found.<div><b>Note</b>  The value returned is valid only until the writer advances.</div></para>
    </param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetReaderPosition">
    <summary>Returns the current position of the reader. This can only be used on a reader that is set to an XmlBuffer.</summary>
    <param name="reader">The reader for which the current position will be obtained.</param>
    <param name="nodePosition">The current position of the reader.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetReaderProperty">
    <summary>
      <para>This function returns a property of the specified XML Reader.</para>
      <div>
        <b>Note</b>  Obtaining the Property <b>WS_XML_READER_PROPERTY_CHARSET</b> will require inspecting up to the first four bytes of the XML data. Consequently if the Reader is using <see cref="WS_XML_READER_STREAM_INPUT" /> the <see cref="WsFillReader" /> function must be called first to ensure that this data has been read.</div>
    </summary>
    <param name="reader">A pointer to a WS_XML_READER object containing the desired property value.</param>
    <param name="id">An enumerator value identifier of the Reader property.</param>
    <param name="value">A pointer to the address for returning the retrieved value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">A byte count of the buffer that the caller has allocated for the retrieved value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetSecurityContextProperty">
    <summary>Gets a property of the specified security context.</summary>
    <param name="securityContext">The security context that is queried for its property.</param>
    <param name="id">The id of the property (one of <see cref="WS_SECURITY_CONTEXT_PROPERTY_ID" />).</param>
    <param name="value">The address to place the retrieved value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size of the buffer that the caller has allocated for the retrieved value.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetSecurityTokenProperty">
    <summary>
      <para>Extracts a field or a property from a security token. If the queried property does not use the <i>heap</i> parameter, the returned data is owned by the security token and remains valid as long as the security token itself remains valid. Specifically, for security tokens extracted from a received message, the security token and fields extracted from it are valid only as long as the message is not reset or freed.</para>
      <para>If the <i>heap</i> parameter is required by the property, then the returned data is stored on the heap, with its lifetime detached from the underlying token.</para>
    </summary>
    <param name="securityToken">The security token from which the property should be extracted.</param>
    <param name="id">The id of the property to retrieve.</param>
    <param name="value">The location to store the retrieved property. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The number of bytes allocated by the caller to store the retrieved property.</param>
    <param name="heap">Heap to store additional property data. This parameter must be non-<b>NULL</b> when the queried property is<see cref="WS_SECURITY_TOKEN_PROPERTY_SYMMETRIC_KEY" /> and must be <b>NULL</b> otherwise.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetServiceHostProperty">
    <summary>Retrieves a specified Service Host property. The property to retrieve is identified by a <see cref="WS_SERVICE_PROPERTY_ID" /> input parameter.</summary>
    <param name="serviceHost">A pointer to the WS_SERVICE_HOST object containing the property to retrieve.</param>
    <param name="id">This is a <b>WS_SERVICE_PROPERTY_ID</b> enumerator value that identifies the property to retrieve.</param>
    <param name="value">A void pointer to a location for storing the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The byte-length buffer size allocated by the caller to store the retrieved property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetServiceProxyProperty">
    <summary>This function retrieves a specified Service Proxy property. The property to retrieve is identified by a <see cref="WS_PROXY_PROPERTY_ID" /> input parameter.</summary>
    <param name="serviceProxy">This parameter is a pointer to the WS_SERVICE_PROXY object containing the property to retrieve.</param>
    <param name="id">The value of this parameter is a <b>WS_PROXY_PROPERTY_ID</b> enumerator value that identifies the property to retrieve.</param>
    <param name="value">This parameter is a reference to a location for storing the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The value of this ULONG parameter represents the byte-length buffer size allocated by the caller to store the retrieved property value.</param>
    <param name="error">This parameter is a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> pointer to where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetWriterPosition">
    <summary>Returns the current position of the writer. This can only be used on a writer that is set to an XmlBuffer. When writing to a buffer, the position represents the xml node before which new data will be placed.</summary>
    <param name="writer">The writer for which the current position will be obtained.</param>
    <param name="nodePosition">The current position of the writer is returned here.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetWriterProperty">
    <summary>Retrieves a specified XML Writer property. The property to retrieve is identified by a <see cref="WS_XML WRITER_PROPERTY_ID" /> input parameter.</summary>
    <param name="writer">A pointer to a WS_XML_WRITER structure that contains the property value to retrieve.</param>
    <param name="id">This is a <b>WS_XML_WRITER_PROPERTY_ID</b> enumerator that identifies the property to retrieve.</param>
    <param name="value">A void pointer to a location for storing the retrieved property value.</param>
    <param name="valueSize">The byte-length buffer size allocated by the caller to store the retrieved property value. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object or the specified buffer was not large enough for the value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsGetXmlAttribute">
    <summary>Finds the nearest xml attribute in scope with the specified localName and returns its value.<br />The returned value is placed on the specified heap.</summary>
    <param name="reader">The reader for which the xml attribute will be searched.</param>
    <param name="localName">The localName of the xml attribute for which to search.</param>
    <param name="heap">The heap on which the resulting value should be allocated.</param>
    <param name="valueChars">The value of the attribute is stored here.</param>
    <param name="valueCharCount">The length of the valueChars.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The xml attribute was not found.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsInitializeMessage">
    <summary>This function initializes the headers for the message in preparation for processing. After a message has been initialized an application can add additional headers. On success the message is in <see cref="WS_MESSAGE_STATE_INITIALIZED" /> state. If the function fails, then no state transitions occurs.</summary>
    <param name="message">A pointer to the Message object to initialize. The Message must be a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object instance returned by <see cref="WsCreateMessage" /> or <see cref="WsCreateMessageForChannel" /> and may not be NULL.</param>
    <param name="initialization">
      <para>Defines the Message initialization.</para>
      <div>
        <b>Note</b>  If the <i>initialization</i> value is set to <b>WS_REPLY_MESSAGE</b> or <b>WS_FAULT_MESSAGE</b> the message is automatically addressed.</div>
    </param>
    <param name="sourceMessage">A pointer to a message object that is used to initialize the <i>message</i> parameter. This value should be NULL unless the initialization parameter has the value of <b>WS_DUPLICATE_MESSAGE</b>,<b>WS_REPLY_MESSAGE</b>, or <b>WS_FAULT_MESSAGE</b>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsMoveReader">
    <summary>
      <para>Moves the current position of the reader as specified by the <i>moveTo</i> parameter.</para>
      <para>This function can only be used on a reader that is set to an XmlBuffer.</para>
    </summary>
    <param name="reader">A pointer to the <b>XML Reader</b> object with the position to move. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object and the referenced <b>Reader</b> value may not be <b>NULL</b>.</param>
    <param name="moveTo">This enumerator specifies direction or next position of the Reader relative to the current position.</param>
    <param name="found">Indicates success or failure of the specified move.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsMoveWriter">
    <summary>Moves the current position of the writer as specified by the moveTo parameter.</summary>
    <param name="writer">The writer to move.</param>
    <param name="moveTo">The relative position to move the writer.</param>
    <param name="found">
      <para>If this is non-<b>NULL</b>, then whether or not the new position could be moved to is returned here.</para>
      <para>If this is <b>NULL</b>, and the position could not be moved to, then the function will return <b>WS_E_INVALID_FORMAT</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</para>
    </param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsOffsetOf">
    <summary>Returns the offset in bytes of a field within a structure given the names of the structure and field.</summary>
    <param name="type">The object containing the field.</param>
    <param name="field">The field</param>
  </member>
  <member name="Windows.WsOpenChannel">
    <summary>Open a channel to an endpoint.</summary>
    <param name="channel">The channel to open.</param>
    <param name="endpointAddress">The address of the endpoint.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsOpenListener">
    <summary>Initiates "listening" on a specified address. Once a listener is opened channels can be accepted from it. If the open is successful the Listener must be closed using the <see cref="WsCloseListener" /> function before Listener resources can be released.</summary>
    <param name="listener">A pointer to the <b>Listener</b> object to open. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> object and the referenced value may not be <b>NULL</b>.</param>
    <param name="url">
      <para>A pointer to a object containing the URL address string for the Listener.</para>
      <div>
        <b>Note</b>  The URL is always in escaped form.. The URL may not contain a query string or fragment. This URL can include the '+' or '*' wildcards in the host name portion, or a host name, or a literal IP address. See Remarks for more information on the URL.</div>
    </param>
    <param name="asyncContext">A pointer to A WS_ASYNC_CONTEXT object that has information about how to invoke the function asynchronously. The value is set to <b>NULL</b> if invoking synchronously.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener was aborted during the open, or before the open.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener is in the incorrect state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ADDRESS_IN_USE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address is already being used.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ADDRESS_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address is not valid for this context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsOpenServiceHost">
    <summary>Opens a <a href="https://docs.microsoft.com//windows/desktop/wsw/service-host">Service Host</a> for communication and starts the Listeners on all the endpoints. Client applications cannot connect to Service endpoints until <b>WsOpenSerivceHost</b> is called.</summary>
    <param name="serviceHost">A pointer to the <b>Service Host</b> object to open. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-host">WS_SERVICE_HOST</a> object returned by <see cref="WsCreateServiceHost" /> and the referenced <b>Service Host</b> value may not be <b>NULL</b>.</param>
    <param name="asyncContext">A pointer to A WS_ASYNC_CONTEXT object that has information about how to invoke the function asynchronously. The value is set to <b>NULL</b> if invoking synchronously.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The service host was aborted before the open, or during the open.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The current state of the service proxy is not valid for this operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ADDRESS_IN_USE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address is already being used.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ADDRESS_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The address is not valid for this context.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsOpenServiceProxy">
    <summary>
      <para>Opens a Service Proxy to a Service endpoint.</para>
      <para>On success client applications can make calls using the Service Proxy. The behavior of WsOpenServiceProxy is governed by the <see cref="channel binding" /> used.</para>
    </summary>
    <param name="serviceProxy">A pointer to the <b>Service Proxy</b> to open. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-service-proxy">WS_SERVICE_PROXY</a> object and the referenced value may not be <b>NULL</b>.</param>
    <param name="address">A pointer to the address of the endpoint.</param>
    <param name="asyncContext">A pointer to A WS_ASYNC_CONTEXT object that has information about how to invoke the function asynchronously. The value is set to <b>NULL</b> if invoking synchronously.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsPullBytes">
    <summary>Sets up a callback to be invoked to obtain the bytes to be written within an element.<br />In some encodings this can be more efficient by eliminating a copy of the data.</summary>
    <param name="writer">The writer to which the bytes will be written.</param>
    <param name="callback">The callback to invoke when its time to write the binary data.</param>
    <param name="callbackState">User-defined state to be passed to the callback.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsPushBytes">
    <summary>Establishes a callback to be invoked to write bytes within an element. In some encodings this can be more efficient by eliminating a copy of the data.</summary>
    <param name="writer">A pointer to the XML Writer object to which the bytes are written. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> and the referenced value may not be <b>NULL</b>.</param>
    <param name="callback">This parameter is the callback to invoke to write the data.</param>
    <param name="callbackState">A pointer to a user-defined state that is passed to the callback function.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadArray">
    <summary>Reads a series of elements from the reader and interprets their content according to the specified value type.</summary>
    <param name="reader">The reader from which the array should be read.</param>
    <param name="localName">The localName of the repeating element.</param>
    <param name="ns">The namespace of the repeating element.</param>
    <param name="valueType">The value type to use to parse the content of each element.</param>
    <param name="array">The array to populate with parsed values. The size of the array items is determined by the value type. See <see cref="WS_VALUE_TYPE" /> for more information.</param>
    <param name="arraySize">The size in bytes (not items) of the array.</param>
    <param name="itemOffset">The item (not byte) offset within the array at which to read.</param>
    <param name="itemCount">The number of items (not bytes) to read into the array.</param>
    <param name="actualItemCount">The actual number of items that were read. This may be less than itemCount even when there are more items remaining. There are no more elements when this returns zero.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadAttribute">
    <summary>Read an attribute producing a value of the specified <see cref="WS_TYPE" />.</summary>
    <param name="reader">The reader that is positioned on the element containing the attribute.</param>
    <param name="attributeDescription">A pointer to a description of how to deserialize the attribute.</param>
    <param name="readOption">Whether the attribute is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">The heap to store the deserialized values in.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadBody">
    <summary>This is a helper function that deserializes a value from the XML Readerof the message. The <see cref="WS_MESSAGE_STATE" /> must be set to <b>WS_MESSAGE_STATE_READING</b>. This function does not cause any state transitions.</summary>
    <param name="message">A pointer to the <b>Message</b> object to read the body from. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object.</param>
    <param name="bodyDescription">A pointer to the object encapsulating the metadata that describes the mapping of the value to an element.</param>
    <param name="readOption">Determines whether the value is required and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">A pointer to the <b>Heap</b> object to read the element into. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-heap">WS_HEAP</a> object.</param>
    <param name="value">The interpretation of the data referenced by this parameter depends on the <b>WS_READ_OPTION</b>.</param>
    <param name="valueSize">The interpretation of the value of this parameter depends on the <b>WS_READ_OPTION</b>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadBytes">
    <summary>Reads text from the Reader and decodes the characters as bytes according to the base64 specification.</summary>
    <param name="reader">A pointer to the <b>XML Reader</b> from which the bytes should be read. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object.</param>
    <param name="bytes">A pointer to a location to place the decoded bytes.</param>
    <param name="maxByteCount">The maximum number of bytes that should be read.</param>
    <param name="actualByteCount">A pointer to a ULONG value of the actual number of bytes that were read. This may be less than maxByteCount even when there are more bytes remaining.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadChars">
    <summary>Reads a specified number of text characters from the Reader.</summary>
    <param name="reader">A pointer to the <b>XML Reader</b> from which the character data should be read. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object.</param>
    <param name="chars">A pointer to a location for the characters that have been read.</param>
    <param name="maxCharCount">The maximum number of characters that should be read.</param>
    <param name="actualCharCount">A pointer to a ULONG value of the actual number of characters that were read. This may be less than maxCharCount even when there are more characters remaining. There are no more characters when this returns zero.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadCharsUtf8">
    <summary>Reads a specified number of text characters from the reader and returns them encoded in UTF-8.</summary>
    <param name="reader">A pointer to the <b>XML Reader</b> from which the character data should be read. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object.</param>
    <param name="bytes">A pointer to the buffer to place the encoded bytes that have been read.</param>
    <param name="maxByteCount">The maximum number of bytes that should be read.</param>
    <param name="actualByteCount">A pointer to a ULONG value of the actual number of bytes that were read. This may be less than maxByteCount even when there are more bytes remaining. There are no more bytes when this returns zero.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadElement">
    <summary>Read an element producing a value of the specified <see cref="WS_TYPE" />.</summary>
    <param name="reader">The reader that is positioned on the XML to deserialize.</param>
    <param name="elementDescription">A pointer to a description of how to deserialize the element.</param>
    <param name="readOption">Whether the element is required, and how to allocate the value.<br />See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">The heap to store the deserialized values in.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadEndAttribute">
    <summary>Moves the reader back to the element node containing the attribute that was read.</summary>
    <param name="reader">A pointer to the <b>XML Reader</b> that reads the <b>End attribute</b>. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadEndElement">
    <summary>
      <para>This function ensures that the current Reader <see cref="node" /> is an <b>End element</b> and advances the reader to the next <b>node</b>.</para>
      <para>If the Reader is not positioned on an <b>End element</b> when the function is called it will skip whitespace attempting to find one. If after skipping whitespace it is not positioned on an <b>End element</b> it returns a <b>WS_E_INVALID_FORMAT</b> exception.</para>
      <para>(See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</para>
    </summary>
    <param name="reader">A pointer to the <b>XML Reader</b> that is reads the <b>End element</b>. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadEndpointAddressExtension">
    <summary>Reads an extension of the <see cref="WS_ENDPOINT_ADDRESS" />.</summary>
    <param name="reader">
      <para>The XML reader to use to read the extension.</para>
      <para>The function will automatically set the input of the reader as necessary to read the extensions.</para>
    </param>
    <param name="endpointAddress">The endpoint address containing the extensions.</param>
    <param name="extensionType">The type of extension to read.</param>
    <param name="readOption">
      <para>Whether the value is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</para>
      <para>This parameter must have one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="WS_READ_REQUIRED_VALUE" />.</description>
        </item>
        <item>
          <description>
            <see cref="WS_READ_REQUIRED_POINTER" />.</description>
        </item>
        <item>
          <description>
            <see cref="WS_READ_OPTIONAL_POINTER" />.</description>
        </item>
      </list>
    </param>
    <param name="heap">The heap to use to store the value that is read.</param>
    <param name="value">
      <para>The address of a buffer to place the value read.</para>
      <para>If using <see cref="WS_READ_REQUIRED_VALUE" /> for the readOption parameter, the buffer must be the size of the type of extension being read (which varies by <see cref="WS_ENDPOINT_ADDRESS_EXTENSION_TYPE" />).</para>
      <para>If using <see cref="WS_READ_REQUIRED_POINTER" /> or <b>WS_READ_OPTIONAL_POINTER</b>, the buffer should be the size of a pointer.</para>
    </param>
    <param name="valueSize">
      <para>The size of the buffer that the caller has allocated for the value read.</para>
      <para>This size should correspond to the size of the buffer passed using the value parameter.</para>
    </param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The extension type was not valid.<para>The size of the supplied buffer was not correct.</para><para>A required parameter was <b>NULL</b>.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadEnvelopeEnd">
    <summary>
      <para>Reads the closing elements of a message.</para>
      <para>The operation allows for reading of messages from sources other than Channels. If the source is a Channel use <see cref="WsReadMessageEnd" />.</para>
    </summary>
    <param name="message">A pointer to the <b>Message</b> object read. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadMessageEnd">
    <summary>Read the closing elements of a message from a channel.</summary>
    <param name="channel">The channel to receive for.</param>
    <param name="message">The message to read the end of.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadMessageStart">
    <summary>Read the headers of the next message from the channel, and prepare to read the body elements.</summary>
    <param name="channel">The channel to receive from.</param>
    <param name="message">The message to receive into.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Start of message was received successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_END</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are no more messages available on the channel.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadMetadata">
    <summary>
      <para>Reads a Metadata element and adds it to the Metadata documents of the Metadata object.</para>
      <para>The Metadata object state must be set to <b>WS_METADATA_STATE_CREATED</b>.</para>
      <para>On error the Metadata object state is reset to <b>WS_METADATA_STATE_FAULTED</b>.</para>
      <div>
        <b>Note</b>  The function will consume an element if the element contains metadata. If the element is not recognized as containing metadata, or the particular type of metadata is not needed, the element it is not read.</div>
    </summary>
    <param name="metadata">A pointer to the <b>Metadata</b> object for storing the metadata read. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a> object.</param>
    <param name="reader">A pointer to the <b>XML Reader</b> object used to read the metadata. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object and the reader must be positioned on the element containing the desired metadata.</param>
    <param name="url">
      <para>A pointer to a <see cref="WS_STRING" /> object referencing the retrieved metadata URL. The URL is used to track the metadata documents for resolving URL-based links between documents.</para>
      <div>
        <b>Note</b>  The URL MUST be fully qualified. The URL can have a fragment identifier.</div>
      <para>The following URL schemes are supported:</para>
      <list type="bullet">
        <item>
          <description>
            <b>WS_URL_HTTP_SCHEME_TYPE</b>
          </description>
        </item>
        <item>
          <description>
            <b>WS_URL_HTTPS_SCHEME_TYPE</b>
          </description>
        </item>
        <item>
          <description>
            <b>WS_URL_NETTCP_SCHEME_TYPE</b>
          </description>
        </item>
      </list>Each URL specified using this function must have a unique base URL. The base URL is computed by removing any fragment identifier from the URL specified.<para>For example if the following URLs were specified:</para><code>http://example.com/document1#fragment http://example.com/document2</code><para>The two base URLs would be:</para><code>http://example.com/document1 http://example.com/document2</code></param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The element was not consumed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadQualifiedName">
    <summary>Reads a qualified name and separates it into its prefix, localName and namespace based on the current namespace scope of the XML_READER. If the ns parameter is specified, then the namespace that the prefix is bound to will be returned, or <b>WS_E_INVALID_FORMAT</b> will be returned. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.) The strings are placed in the specified heap.</summary>
    <param name="reader">The reader which should read the qualified name.</param>
    <param name="heap">The heap on which the resulting strings should be allocated.</param>
    <param name="prefix">The prefix of the qualified name is returned here.</param>
    <param name="localName">The localName of the qualified name is returned here.</param>
    <param name="ns">The namespace to which the qualified name is bound is returned here.</param>
    <param name="error">If the localName is missing the function will return <b>WS_E_INVALID_FORMAT</b>.<br />If the ns parameter is specified, but the prefix is not bound to a namespace,<b>WS_E_INVALID_FORMAT</b> will be returned.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadStartElement">
    <summary>
      <para>Calling this function advances the reader past a start element skipping any whitespace.</para>
      <para>After parsing if the Reader is not positioned on a start element it will return a <b>WS_E_INVALID_FORMAT</b> exception.</para>
      <para>(See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</para>
    </summary>
    <param name="reader">A pointer to the <b>XML Reader</b> object used to read the Start element.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadToStartElement">
    <summary>Advances the reader to the next start element skipping whitespace and comments if necessary. Optionally, it may also verify the localName and namespace of the element.</summary>
    <param name="reader">The reader which is to read to the start element.</param>
    <param name="localName">The localName name that the element should be. If <b>NULL</b>, any localName is permitted.</param>
    <param name="ns">The namespace that the element should be. If <b>NULL</b>, any namespace is permitted.</param>
    <param name="found">If specified then this will indicate whether an element is found and the localName and namespace, if also specified, match. If not specified, and an element is not found or the localName and namespace don't match, then it will return<b>WS_E_INVALID_FORMAT</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadType">
    <summary>Read a value of a given <see cref="WS_TYPE" /> from XML according to the <see cref="WS_TYPE_MAPPING" />.</summary>
    <param name="reader">The reader that is positioned on the XML to deserialize.</param>
    <param name="typeMapping">Describes how the type maps to the XML that is being read.</param>
    <param name="type">The type of the value to deserialize.</param>
    <param name="typeDescription">Additional information about the type. Each type has a different description structure. This may be <b>NULL</b>, depending on the <see cref="WS_TYPE" />.</param>
    <param name="readOption">
      <para>Whether the value is required, and how to allocate the value. See <see cref="WS_READ_OPTION" /> for more information.</para>
      <para>This parameter must have one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="WS_READ_REQUIRED_VALUE" />.</description>
        </item>
        <item>
          <description>
            <see cref="WS_READ_REQUIRED_POINTER" />.</description>
        </item>
      </list>
    </param>
    <param name="heap">The heap to store the deserialized values in.</param>
    <param name="value">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size quota of the heap was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadXmlBuffer">
    <summary>Reads the current node from a reader into a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a>.</summary>
    <param name="reader">The reader from which to read into the XML buffer.</param>
    <param name="heap">The heap from which to allocate the XML buffer.</param>
    <param name="xmlBuffer">The XML buffer is returned here.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReadXmlBufferFromBytes">
    <summary>Uses a reader to convert a set of encoded bytes to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a>.</summary>
    <param name="reader">The reader to use to parse the encoded bytes.</param>
    <param name="encoding">The encoding to use when parsing the bytes. If <b>NULL</b>, a <see cref="WS_XML_READER_TEXT_ENCODING" />with a charset of <see cref="WS_CHARSET_AUTO" /> will be used.</param>
    <param name="properties">An array of optional properties of the reader. See <see cref="WS_XML_READER_PROPERTY" />.</param>
    <param name="propertyCount">The number of properties.</param>
    <param name="bytes">The bytes to parse.</param>
    <param name="byteCount">The number of bytes to parse.</param>
    <param name="heap">The heap from which to allocate the XML buffer.</param>
    <param name="xmlBuffer">The XML buffer into which the bytes were read is returned here.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsReceiveMessage">
    <summary>Receive a message and deserialize the body of the message as a value.</summary>
    <param name="channel">The channel to receive from.</param>
    <param name="message">
      <para>The message object used to receive.</para>
      <para>The message should be in <see cref="WS_MESSAGE_STATE_EMPTY" /> state.</para>
    </param>
    <param name="messageDescriptions">An array of pointers to message descriptions that specifies the metadata for the expected types of messages.</param>
    <param name="messageDescriptionCount">The number of items in the messageDescriptions array.</param>
    <param name="receiveOption">Whether the message is required. See <see cref="WS_RECEIVE_OPTION" /> for more information.</param>
    <param name="readBodyOption">Whether the body element is required, and how to allocate the value.<br />See <see cref="WS_READ_OPTION" /> for more information.</param>
    <param name="heap">The heap to store the deserialized values in. If the heap is not required for the given type, then this parameter can be <b>NULL</b>.</param>
    <param name="value">
      <para>The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</para>
      <para>If <see cref="WS_RECEIVE_OPTIONAL_MESSAGE" /> is specified for the receiveOption parameter, and no more messages are available on the channel, this parameter is not touched. In this case, the function returns <b>WS_S_END</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</para>
      <para>If the bodyElementDescription of the <see cref="WS_MESSAGE_DESCRIPTION" /> that matched is <b>NULL</b>, then this parameter is not touched. In this case, the parameter does not need to be specified.</para>
    </param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="index">
      <para>If <see cref="WS_RECEIVE_OPTIONAL_MESSAGE" /> is specified for the receiveOption parameter, and no more messages are available on the channel, this parameter is untouched. In this case, the function will return <b>WS_S_END</b>.</para>
      <para>Otherwise, if the function succeeds this will contain the zero-based index into the array of message descriptions indicating which one matched.</para>
      <para>This parameter may be <b>NULL</b> if the caller is not interested in the value (for example, if there is only one message description).</para>
    </param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_END</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The receive option <see cref="WS_RECEIVE_OPTIONAL_MESSAGE" /> was specified and there are no more messages available for the channel.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAULT_RECEIVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The received message contained a fault. The fault can be extracted from the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> using <see cref="WsGetErrorProperty" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRegisterOperationForCancel">
    <summary>
      <para>A service operation can use this function to register for a cancel notification. It is only valid to call this API when the service operation is executing. The behavior for calling it after the completion of Service Operation is not supported.</para>
      <para>While this API is being called and the runtime has determined that the cancellation of the service operation is necessary, it can call the callback during the call to this API by the application.</para>
      <para>The caller should therefore assume that the runtime may call on the callback<a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_operation_cancel_callback">WS_OPERATION_CANCEL_CALLBACK</a> as soon as the WsRegisterOperationForCancel is called.</para>
    </summary>
    <param name="context">The context that the property value is being obtained for.</param>
    <param name="cancelCallback">Function pointer for cancel notification function.</param>
    <param name="freestateCallback">A optional parameter specifying the function pointer to the free state call.</param>
    <param name="userState">A optional parameter specifying the application specific state which can be used to identify call data.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsRemoveCustomHeader">
    <summary>
      <para>Removes a custom header from the message.</para>
      <para>This function is designed to handle types of headers that appear once in the message and are targeted at the ultimate receiver. Headers targeted with a role other than ultimate receiver are ignored.</para>
    </summary>
    <param name="message">
      <para>A pointer to the <b>Message</b> object with the header to be removed.</para>
      <para>The message can be in any state except <b>WS_MESSAGE_STATE_EMPTY</b>.</para>
    </param>
    <param name="headerName">A pointer to the <see cref="WS_XML_STRING" /> object that references the "local name" of the header element to be removed.</param>
    <param name="headerNs">A pointer to the <see cref="WS_XML_STRING" /> object that references the namespace of the header element to be removed.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are multiple instances of the type of header present in the message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough memory available to serialize the header.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRemoveHeader">
    <summary>
      <para>Removes the standard <see cref="WS_HEADER_TYPE" /> object from a message.</para>
      <para>The function is designed to handle types of headers that appear once in the message and are targeted at the ultimate receiver. Headers targeted with a role other than ultimate receiver are ignored.</para>
      <para>For application-defined header types use the <see cref="WsRemoveCustomHeader" /> function.</para>
    </summary>
    <param name="message">A pointer to the <b>Message</b> object with the header to be removed. The message can be in any state except <b>WS_MESSAGE_STATE_EMPTY</b>.</param>
    <param name="headerType">Indicates the type of header to be removed.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are multiple instances of the type of header present in the message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRemoveMappedHeader">
    <summary>Removes all instances of a mapped header from the message.</summary>
    <param name="message">
      <para>The message to set the header in.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="headerName">The name of the mapped header to remove.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRemoveNode">
    <summary>
      <para>Removes the node at the specified position from the xml buffer. If positioned on an element it will remove the element including all of its children and its corresponding end element, otherwise it will remove a single node.</para>
      <para>The use of any API with a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> or <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> that currently depends on this position or a child of this position will fail. The WS_XML_READER or WS_XML_WRITER must be repositioned before using further.</para>
      <para>It will return <b>WS_E_INVALID_OPERATION</b> if the node is positioned on an end element or the root of the document. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</para>
      <para>Calling <see cref="WsSetReaderPosition" /> or <see cref="WsSetWriterPosition" /> after calling <b>WsRemoveNode</b> will fail.</para>
    </summary>
    <param name="nodePosition">The position of the node that should be removed.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRequestReply">
    <summary>Used to send a request message and receive a correlated reply message.</summary>
    <param name="channel">The channel to do the request-reply operation on.</param>
    <param name="requestMessage">
      <para>The message object to use to send the request.</para>
      <para>The message object should be in <see cref="WS_MESSAGE_STATE_EMPTY" /> or<b>WS_MESSAGE_STATE_INITIALIZED</b>.</para>
    </param>
    <param name="requestMessageDescription">
      <para>The action field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used as the action header for the request message. This field may be <b>NULL</b> if no action is required.</para>
      <para>The bodyElementDescription field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used to serialize the body of the request message. This field may be<b>NULL</b> if no body element is desired. See <see cref="WsWriteBody" /> for information about how the body is serialized according to the bodyElementDescription.</para>
    </param>
    <param name="writeOption">Whether the body element is required, and how the value is allocated. See <see cref="WS_WRITE_OPTION" /> for more information.</param>
    <param name="requestBodyValue">A pointer to the value to serialize in the body of the request object.</param>
    <param name="requestBodyValueSize">The size of the request value being serialized, in bytes.</param>
    <param name="replyMessage">
      <para>The message object to use to receive the reply.</para>
      <para>The message object should be in <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="replyMessageDescription">
      <para>The action field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used to verify the action header of the received reply message. This field may be <b>NULL</b> if no action is required. If <b>NULL</b>, the action header of the received message is ignored if present.</para>
      <para>The bodyElementDescription field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used to deserialize the body of the reply message. This field may be<b>NULL</b> if no body element is desired. See <see cref="WsReadBody" /> for information about how the body is deserialized according to the bodyElementDescription.</para>
    </param>
    <param name="readOption">Whether the reply body element is required, and how to allocate the value. For more information, see <see cref="WS_READ_OPTION" /> and <see cref="WsReadBody" />.</param>
    <param name="heap">The heap used to allocate deserialized reply body values. If the heap is not necessary for the given type, then this parameter can be <b>NULL</b>.</param>
    <param name="value">
      <para>Where to store the deserialized values of the body.</para>
      <para>The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</para>
      <para>If the bodyElementDescription of the reply <see cref="WS_MESSAGE_DESCRIPTION" />is <b>NULL</b>, then this parameter is not touched. In this case, the parameter does not need to be specified.</para>
    </param>
    <param name="valueSize">The interpretation of this parameter depends on the <see cref="WS_READ_OPTION" />.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAULT_RECEIVED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The reply message contained a fault. The fault can be extracted from the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> using <see cref="WsGetErrorProperty" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRequestSecurityToken">
    <summary>Get a security token from a security token service (STS) that acts as the token issuer in a federation scenario. This function is used on the client side, and performs the WS-Trust based negotiation steps with the STS until the security token is obtained or the negotiation process fails.</summary>
    <param name="channel">
      <para>The channel on which the negotiation to obtain the security token should take place.</para>
      <para>The supplied channel should have been <see cref="created" /> with the appropriate <see cref="WS_SECURITY_DESCRIPTION" /> to meet the security requirements of the issuer, and then <see cref="opened" /> to the <see cref="WS_ENDPOINT_ADDRESS" /> of the issuer. The caller is also responsible for <see cref="closing" /> and <see cref="freeing" /> the channel after the completion of this function.</para>
      <para>Thus, the channel must be in state <see cref="WS_CHANNEL_STATE_OPEN" /> when this function is called. After a successful completion of this function, the channel will be in state <b>WS_CHANNEL_STATE_OPEN</b>. After a failed completion, it will either be in state <b>WS_CHANNEL_STATE_OPEN</b> or state <b>WS_CHANNEL_STATE_FAULTED</b>.</para>
    </param>
    <param name="properties">An optional group of settings to be used in the negotiation process with the issuer.</param>
    <param name="propertyCount">The number of items in the properties array.</param>
    <param name="token">
      <para>The XML security token obtained. This is set upon successful completion of the function call, and is unmodified if any failure occurs during the execution of the function.</para>
      <para>The returned security token may be used with <see cref="WS_XML_TOKEN_MESSAGE_SECURITY_BINDING" /> if it is to be presented to a service. The token must be freed using <see cref="WsFreeSecurityToken" /> when it is no longer needed.</para>
    </param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetChannel">
    <summary>Reset a channel so it can be reused.</summary>
    <param name="channel">The channel to reset.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The channel was in an inappropriate state.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetError">
    <summary>
      <para>Releases the content of the <i>error</i> object parameter but does not release the resource allocated to the <i>error</i> object parameter.<div><b>Note</b>  The "reset" effect of this function returns the <i>error</i> object to the state set at instantiation. The object is not released consequently is available for reuse.</div></para>
    </summary>
    <param name="error">This parameter is a pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object to reset.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetHeap">
    <summary>Releases all Heap allocations. Allocations made on the Heap using <see cref="WsAlloc" /> are no longer valid. Allocation for the Heap object itself is not released.</summary>
    <param name="heap">
      <para>A pointer to a Heap instance to reset. If the heap is not required for the given type this parameter can be <b>NULL</b>.</para>
      <para>The heap object.</para>
    </param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsResetListener">
    <summary>
      <para>Resets a Listener object so it can be reused.</para>
      <para>Use of this function requires that the Listener state be set to <b>WS_LISTENER_STATE_CREATED</b> or <b>WS_LISTENER_STATE_CLOSED</b>.</para>
    </summary>
    <param name="listener">A pointer to the <b>Listener</b> object to reset. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The listener was in an inappropriate state.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetMessage">
    <summary>Sets the Message state back to <b>WS_MESSAGE_STATE_EMPTY</b>. In this state the Message object can be reused.</summary>
    <param name="message">A pointer to the Message object to reset.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetMetadata">
    <summary>
      <para>Resets a metadata object state to <b>WS_METADATA_STATE_CREATED</b>.</para>
      <para>In this state the Metadata object can be reused. <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-policy">WS_POLICY</a> objects that were retrieved using the Metadata object will be released.</para>
    </summary>
    <param name="metadata">A pointer to the <b>Metadata</b> object to reset. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-metadata">WS_METADATA</a>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The metadata was in an inappropriate state.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetServiceHost">
    <summary>
      <para>Resets service host so that it can be opened again.</para>
      <para>Rather the creating a new service host from scratch <b>WsResetServiceHost</b>provides a convenient way to reuse service host. Specifically in a scenario where a service host has to go through close and open on a regular basis, this allows for an efficient way for reusing the same service host. It resets the underlying channel and listeners for reuse.</para>
    </summary>
    <param name="serviceHost">The service host to reset.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The serviceHost was in an inappropriate state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsResetServiceProxy">
    <summary>
      <para>Resets service proxy.</para>
      <para>WsResetServiceProxy provides a convenient way to reuse the service proxy. Once the proxy is <see cref="closed" />, the application can call WsResetServiceProxy to reuse it.</para>
      <para>Reusing the service proxy is helpful in scenarios where an application connects to the same service time and time again. The cost of initialization is only paid once during the initial creation of the service proxy.</para>
    </summary>
    <param name="serviceProxy">The service proxy.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The serviceProxy was in an inappropriate state.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsRevokeSecurityContext">
    <summary>
      <para>Revokes a security context. Can only be called on the server side. Further requests using this security context will fail and a fault will be sent to the client.</para>
      <para>This function can be used when the server knows that no more messages are coming and does not want to wait for the client or the context timeouts to trigger the reclaiming of resources, or when the server wants to engage in active context management.</para>
    </summary>
    <param name="securityContext">The security context to be revoked.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsSendFaultMessageForError">
    <summary>Sends a fault message given a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object.</summary>
    <param name="channel">The channel to send the message on.</param>
    <param name="replyMessage">
      <para>A message object to use to send the reply message.</para>
      <para>The message object should be in <see cref="WS_MESSAGE_STATE_EMPTY" /> or<b>WS_MESSAGE_STATE_INITIALIZED</b>. If an initialized message is provided, it should have been initialized using <see cref="WS_FAULT_MESSAGE" />.</para>
    </param>
    <param name="faultError">The error object to use to construct the fault.</param>
    <param name="faultErrorCode">
      <para>The error code associated with the fault. This cannot be a success code.</para>
      <para>This error code is never included in the fault message directly, but instead is used as a fallback mechanism for creating a fault string in the case that the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object does not contain any error strings.</para>
    </param>
    <param name="faultDisclosure">Controls how much of the error information is included in the fault message.</param>
    <param name="requestMessage">
      <para>The request message. This is used to obtain correlation information used in formulating the reply message.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSendMessage">
    <summary>Send a message on a channel using serialization to write the body element.</summary>
    <param name="channel">The channel to send the message on.</param>
    <param name="message">
      <para>The message object to use for sending.</para>
      <para>The message object must be in <see cref="WS_MESSAGE_STATE_EMPTY" /> or<b>WS_MESSAGE_STATE_INITIALIZED</b>.</para>
    </param>
    <param name="messageDescription">
      <para>The action field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used as the action header for the message. This field may be <b>NULL</b> if no action is required.</para>
      <para>The bodyElementDescription field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used to serialize the body of the message. This field may be<b>NULL</b> if no body element is desired. See <see cref="WsWriteBody" /> for information about how the bodyElementDescription is used to serialize the value.</para>
    </param>
    <param name="writeOption">
      <code> Whether the body element is required, and how the value is allocated. This is used only when a body element is desired. For more information, see &lt;a href="/windows/desktop/api/webservices/ne-webservices-ws_write_option"&gt;WS_WRITE_OPTION&lt;/a&gt; and &lt;a href="/windows/desktop/api/webservices/nf-webservices-wswritebody"&gt;WsWriteBody&lt;/a&gt;.</code>
    </param>
    <param name="bodyValue">The value to serialize in the body of the message.</param>
    <param name="bodyValueSize">The size of the value being serialized, in bytes.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSendReplyMessage">
    <summary>Sends a message which is a reply to a received message.</summary>
    <param name="channel">A pointer to the <b>Channel</b> object on which to send the reply Message. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-channel">WS_CHANNEL</a> object.</param>
    <param name="replyMessage">
      <para>A pointer to the <b>Message</b> object for sending the reply. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object.</para>
      <para>Message object state must be set to <b>WS_MESSAGE_STATE_EMPTY</b> or <b>WS_MESSAGE_STATE_INITIALIZED</b>.</para>
      <div>
        <b>Note</b>  If an initialized message is provided it must be initialized using <b>WS_REPLY_MESSAGE</b> or <b>WS_FAULT_MESSAGE</b>.</div>
    </param>
    <param name="replyMessageDescription">
      <para>A pointer to a <see cref="WS_MESSAGE_DESCRIPTION" /> object. The <b>action</b> field of <b>WS_MESSAGE_DESCRIPTION</b> is used as the <b>action</b> header for the reply message. This field can be <b>NULL</b> if no action is required.</para>
      <para>The <b>bodyElementDescription</b> field of the <see cref="WS_MESSAGE_DESCRIPTION" /> is used to serialize the body of the reply message. This field may be <b>NULL</b> if no body element is desired. See <see cref="WsWriteBody" /> for information about how the <b>bodyElementDescription</b> is used to serialize a value.</para>
    </param>
    <param name="writeOption">
      <para>Determines whether the body element is required, and how the value is allocated.</para>
      <para>See <see cref="WS_WRITE_OPTION" /> for more information.</para>
    </param>
    <param name="replyBodyValue">A void pointer to the value to serialize in the reply message.</param>
    <param name="replyBodyValueSize">The size in bytes of the reply value being serialized.</param>
    <param name="requestMessage">
      <para>A pointer to a WS_MESSAGE object encapsulating the request message text. This is used to obtain correlation information used in formulating the reply message.</para>
      <div>
        <b>Note</b>  The message can be in any state except <b>WS_MESSAGE_STATE_EMPTY</b>.</div>
    </param>
    <param name="asyncContext">A pointer to a <see cref="WS_ASYNC_CONTEXT" /> data structure with information about invoking the function asynchronously. A <b>NULL</b> value indicates a request for synchronous operation.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetChannelProperty">
    <summary>Sets a property of the channel.</summary>
    <param name="channel">A pointer to the <b>Channel</b> on which to set the property and may not be <b>NULL</b>.</param>
    <param name="id">Identifier of the property to set.</param>
    <param name="value">A void pointer to the property value to set. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size in bytes of the property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.<para>The specified size was not appropriate for the property.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough space to set the property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetErrorProperty">
    <summary>Sets an <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object property.</summary>
    <param name="error">A pointer to the <b>Error</b> object in which to set the property. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object.</param>
    <param name="id">Identifier of the property to set.</param>
    <param name="value">A pointer to the property value to set. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size in bytes of the property value.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.<para>The specified size was not appropriate for the property.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough space to set the property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetFaultErrorDetail">
    <summary>Write the fault detail stored in a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object.</summary>
    <param name="error">The error object that will contain the fault information.</param>
    <param name="faultDetailDescription">
      <para>A pointer to a description of the fault detail.</para>
      <para>If the action field of the fault detail description is non-<b>NULL</b>, then it is set as the <see cref="WS_FAULT_ERROR_PROPERTY_ACTION" /> of the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a>.</para>
      <para>The element description of the fault detail description describes the format of the element in the fault detail.</para>
    </param>
    <param name="writeOption">Information about how the value is allocated. See <see cref="WS_WRITE_OPTION" /> for more information.</param>
    <param name="value">A pointer to the value to serialize.</param>
    <param name="valueSize">
      <para>The size of the value being serialized, in bytes.</para>
      <para>If the value is <b>NULL</b>, then the size should be 0.</para>
    </param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetFaultErrorProperty">
    <summary>Set a Fault property of a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object.</summary>
    <param name="error">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object in which to set the property. The pointer must reference a valid WS_ERROR object.</param>
    <param name="id">Identifier of the property to set.</param>
    <param name="value">The property value to set. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size in bytes of the property value.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.<para>The specified size was not appropriate for the property.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough space to set the property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetHeader">
    <summary>Adds or replaces the specified standard header in the message.</summary>
    <param name="message">
      <para>The message to set the header in.</para>
      <para>The message can be in any state but <see cref="WS_MESSAGE_STATE_EMPTY" />.</para>
    </param>
    <param name="headerType">The type of header to serialize.</param>
    <param name="valueType">The type of the value to serialize. See <see cref="WS_HEADER_TYPE" /> for the set of types supported for each type of header.</param>
    <param name="writeOption">Whether the header element is required, and how the value is allocated.<see cref="WS_WRITE_NILLABLE_VALUE" /> and <b>WS_WRITE_NILLABLE_POINTER</b>write options cannot be specified since the header types in <see cref="WS_HEADER_TYPE" />are not allowed to be nillable in the respective standards specifications. See <b>WS_WRITE_OPTION</b> for more information.</param>
    <param name="value">The header value to serialize. See <see cref="WS_WRITE_OPTION" /> for more information.</param>
    <param name="valueSize">The size of the value being serialized, in bytes.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There are multiple instances of the type of header present in the message.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough memory available to serialize the header.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the parameters are incorrect.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetInputToBuffer">
    <summary>
      <para>Sets Reader input to a specified XML buffer. Reader properties specified to <b>WsSetInputToBuffer</b> override properties set by <see cref="WsCreateReader" />.</para>
      <para>The reader does not modify <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a> input data.<div><b>Note</b>  It is permissible for more than one reader to read from the same <b>WS_XML_BUFFER</b>.</div></para>
    </summary>
    <param name="reader">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object for which the input will be set.</param>
    <param name="buffer">A pointer to the XML buffer to read.</param>
    <param name="properties">
      <para>A pointer that references an array of optional Reader properties. <div><b>Note</b>  For more information see <see cref="WS_XML_READER_PROPERTY" />.</div></para>.</param>
    <param name="propertyCount">The number of properties.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsSetListenerProperty">
    <summary>Sets a Listenerobject property.</summary>
    <param name="listener">A pointer to the <b>Listener</b> object with the property to set. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-listener">WS_LISTENER</a> and may not be <b>NULL</b>.</param>
    <param name="id">Identifier of the property to set.</param>
    <param name="value">A void pointer to the property value to set. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size in bytes of the property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.<para>The specified size was not appropriate for the property.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough space to set the property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetMessageProperty">
    <summary>This operation sets a Messageproperty.</summary>
    <param name="message">A pointer to the <b>Message</b> object with the property to set. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object and the referenced value may not be <b>NULL</b>.</param>
    <param name="id">The identifier of the property to set.</param>
    <param name="value">A pointer to the property value to set. The pointer must have an alignment compatible with the type of the property.</param>
    <param name="valueSize">The size in bytes of the property value.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The property id was not supported for this object.<para>The specified size was not appropriate for the property.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was not enough space to set the property value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetOutput">
    <summary>Sets the encoding and output callbacks for the writer. The callbacks are used to provides buffers to the writer and to perform asynchronous i/o.</summary>
    <param name="writer">The writer for which the output will be set.</param>
    <param name="encoding">The encoding describes the format of the input bytes. This should be one of <see cref="WS_XML_WRITER_TEXT_ENCODING" />,<see cref="WS_XML_WRITER_BINARY_ENCODING" /> or <see cref="WS_XML_WRITER_MTOM_ENCODING" />.</param>
    <param name="output">Specifies where the writer should place its data.</param>
    <param name="properties">An array of optional properties of the writer. See <see cref="WS_XML_WRITER_PROPERTY" />.</param>
    <param name="propertyCount">The number of properties.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetReaderPosition">
    <summary>
      <para>Sets the current position of the Reader. The position must have been obtained by a call to <see cref="WsGetReaderPosition" /> or <see cref="WsGetWriterPosition" />.</para>
      <para>This function can only be used on a reader that is set to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a>.</para>
    </summary>
    <param name="reader">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object for which the current position is set. The pointer must reference a valid <b>XML Reader</b> object.</param>
    <param name="nodePosition">A pointer to the position to set the Reader.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSetWriterPosition">
    <summary>Sets the current position of the writer. The position must have been obtained by a call to <see cref="WsGetReaderPosition" /> or <see cref="WsGetWriterPosition" />.</summary>
    <param name="writer">The writer for which the current position will be set.</param>
    <param name="nodePosition">The position to set the writer to.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsShutdownSessionChannel">
    <summary>Used to signal the end of messages for a session channel.</summary>
    <param name="channel">The session channel to shut down.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This is returned if the channel is not in the <see cref="WS_CHANNEL_STATE_OPEN" /> state.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsSkipNode">
    <summary>Advances the reader in the input stream. If the current node is an element, all of the children of that element are skipped, and the reader is positioned on the node following its end element. Otherwise, the reader is positioned on the next node in the same manner as <see cref="WsReadNode" />.</summary>
    <param name="reader">The reader which is to skip to the next node.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsStartReaderCanonicalization">
    <summary>
      <para>This operation begins the process of putting the specified XML Reader in a standard or "canonized" form.</para>
      <para>The usage pattern for canonicalization is:</para>
      <list type="bullet">
        <item>
          <description> Move the Reader to the element where canonicalization begins.</description>
        </item>
        <item>
          <description> Call <b>WsStartReaderCanonicalization</b>.</description>
        </item>
        <item>
          <description> Move the Reader forward to the end position.</description>
        </item>
        <item>
          <description> Call <see cref="WsEndReaderCanonicalization" />.</description>
        </item>
      </list>During this process the canonical bytes are written to the specified writeCallback.<div><b>Note</b> Nodes advanced over are canonicalized including nodes of child elements skipped using <see cref="WsSkipNode" />. This is beneficial because it means that canonicalization and parsing can be done in one pass over the XML content regardless of what functions are used to read the data.</div><para>In order to use the XML Reader solely for canonicalizing an XML element node the application can call <b>WsStartReaderCanonicalization</b>, <see cref="WsSkipNode" /> and <see cref="WsEndReaderCanonicalization" /> when the Reader is positioned on the element.</para><para><b>WsEndReaderCanonicalization</b> must be called in order to ensure that all canonicalized bytes are written to the specified callback.</para><div><b>Note</b>  <code>WsEndReaderCanonicalization</code> must be called at the same depth at which <b>WsStartReaderCanonicalization</b>. Other reader functions return an error if moved to a depth lower than where <b>WsStartReaderCanonicalization</b> was called. d</div><para>It is not valid to call <see cref="WsMoveReader" /> or <see cref="WsSetReaderPosition" /> on a Reader between calls to <b>WsStartReaderCanonicalization</b> and <see cref="WsEndReaderCanonicalization" />.</para></summary>
    <param name="reader">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-reader">WS_XML_READER</a> object on which canonicalization is started. The pointer must reference a valid <b>XML Reader</b> object.</param>
    <param name="writeCallback">
      <para>A callback function invoked to write the canonical bytes as they are generated.<div><b>Note</b>  This callback is invoked synchronously.</div></para>
    </param>
    <param name="writeCallbackState">A pointer to a caller-defined state that is passed when invoking the <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_write_callback">WS_WRITE_CALLBACK</a>.</param>
    <param name="properties">
      <para>An "array" reference of optional properties controlling how canonicalization is performed. <div><b>Note</b>  See <see cref="WS_XML_CANONICALIZATION_PROPERTY" /> for details.</div></para>
    </param>
    <param name="propertyCount">The number of properties.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsStartWriterCanonicalization">
    <summary>Starts canonicalization on the specified XML writer.</summary>
    <param name="writer">The XML writer on which canonicalization should be started.</param>
    <param name="writeCallback">The callback that to be invoked to write the canonical bytes as they are generated. This callback will always be invoked synchronously.</param>
    <param name="writeCallbackState">Caller-defined state that should be passed when invoking the <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_write_callback">WS_WRITE_CALLBACK</a>.</param>
    <param name="properties">An array of optional properties controlling how canonicalization is to be performed. See <see cref="WS_XML_CANONICALIZATION_PROPERTY" />.</param>
    <param name="propertyCount">The number of properties.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsTrimXmlWhitespace">
    <summary>Removes leading and trailing whitespace from a sequence of characters.</summary>
    <param name="chars">The string to be trimmed.</param>
    <param name="charCount">The length of the string to be trimmed.</param>
    <param name="trimmedChars">Returns a pointer into the original string starting at the first non-whitespace character.</param>
    <param name="trimmedCount">Returns the length of the trimmed string.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsVerifyXmlNCName">
    <summary>Verifies whether the input string is a valid XML NCName.</summary>
    <param name="ncNameChars">The string to be verified.</param>
    <param name="ncNameCharCount">The length of the <i>ncNameChars</i> string.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The string is not a valid NCName.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteArray">
    <summary>This operation sends a series of elements to an XML Writer.</summary>
    <param name="writer">A pointer to the Writer where the elements are written.</param>
    <param name="localName">A pointer to the localName of the repeating element.</param>
    <param name="ns">A pointer to the namespace of the repeating element.</param>
    <param name="valueType">The value type for the elements</param>
    <param name="array">
      <para>A void pointer to the values written to <i>writer</i>. The size of the items is determined by value type.<div><b>Note</b>  See <see cref="WS_VALUE_TYPE" /> for more information.</div></para>
    </param>
    <param name="arraySize">The total byte length of the array.</param>
    <param name="itemOffset">The item offset within the array to write.</param>
    <param name="itemCount">The total number of items to write from the array.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.WsWriteAttribute">
    <summary>Write a typed value as an XML attribute.</summary>
    <param name="writer">The writer to write the attribute to.</param>
    <param name="attributeDescription">A pointer to a description of how to serialize the attribute.</param>
    <param name="writeOption">Information about how the value is allocated. See <see cref="WS_WRITE_OPTION" /> for more information.</param>
    <param name="value">A pointer to the value to serialize.</param>
    <param name="valueSize">
      <para>The size of the value being serialized, in bytes.</para>
      <para>If the value is <b>NULL</b>, then the size should be 0.</para>
    </param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteBody">
    <summary>Writes a value in the body of a message. This is a helper function that serializes a value to the XML Writer of the message. The message state must be set to <b>WS_MESSAGE_STATE_WRITING</b>. This function does not cause any state transitions.</summary>
    <param name="message">A pointer to the <b>Message</b> object for writing to. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object.</param>
    <param name="bodyDescription">A pointer to information describing how to write the value.</param>
    <param name="writeOption">
      <para>Determines whether the value is required and how the value is allocated.<div><b>Note</b>  See <see cref="WS_WRITE_OPTION" /> for more information.</div></para>
    </param>
    <param name="value">A void pointer to the value to write.</param>
    <param name="valueSize">The size in bytes of the value to write. If the value is <b>NULL</b> the size should be 0.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteBytes">
    <summary>Writes bytes to the writer in a format optimized for the encoding. When writing in a text encoding, it will emit the bytes encoded in base64. When writing to a binary format, it will emit the bytes directly.</summary>
    <param name="writer">The writer to which the bytes will be written.</param>
    <param name="bytes">The bytes to write to the document.</param>
    <param name="byteCount">The number bytes to write to the document.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteChars">
    <summary>
      <para>Writes a series of characters to an element or attribute.</para>
      <para>To write characters to an attribute value, call <see cref="WsWriteStartAttribute" /> first. Only whitespace characters may be written at the root of an xml document unless the <b>WS_XML_WRITER_PROPERTY_ALLOW_FRAGMENT</b> has been set to <b>TRUE</b>.</para>
    </summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the characters are written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="chars">A pointer to the characters to write.</param>
    <param name="charCount">The number of characters to write.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteCharsUtf8">
    <summary>Writes a series of characters encoded as UTF-8 to an element or attribute. To write characters to an attribute value, call <see cref="WsWriteStartAttribute" /> first. Only whitespace characters may be written at the root of an xml document unless the<b>WS_XML_WRITER_PROPERTY_ALLOW_FRAGMENT</b> has been set to <b>TRUE</b>.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the characters are written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="bytes">A pointer to the encoded UTF-8 characters to write.</param>
    <param name="byteCount">The number of bytes to write.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteElement">
    <summary>Write a typed value as an XML element.</summary>
    <param name="writer">The writer to write the element to.</param>
    <param name="elementDescription">A pointer to a description of how to serialize the element.</param>
    <param name="writeOption">Information about how the value is allocated. See <see cref="WS_WRITE_OPTION" /> for more information.</param>
    <param name="value">A pointer to the value to serialize.</param>
    <param name="valueSize">
      <para>The size of the value being serialized, in bytes.</para>
      <para>If the value is <b>NULL</b>, then the size should be 0.</para>
    </param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEndAttribute">
    <summary>This operation finishes writing an attribute to the current element. If <see cref="WsWriteStartAttribute" /> is called the Writer does not permit another element or attribute to be written until <b>WsWriteEndAttribute</b> is called.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the attribute is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEndCData">
    <summary>Ends a CDATA section in the writer. If <b>WsWriteEndCData</b> is called without a prior call to <see cref="WsWriteStartCData" />, this function returns <b>WS_E_INVALID_OPERATION</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.)</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the end CDATA section is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEndElement">
    <summary>Writes an end element to a Writer. If the writer has no open elements, the function returns <b>WS_E_INVALID_FORMAT</b>. (See <a href="https://docs.microsoft.com//windows/desktop/wsw/windows-web-services-return-values">Windows Web Services Return Values</a>.) If the encoding supports empty elements, and no content was written between the start element and end element, an empty element will be written.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the end element is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEndStartElement">
    <summary>Forces the writer to commit the current element and prevent further attributes from being written to the element.</summary>
    <param name="writer">The writer for which the current element should be committed.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEnvelopeEnd">
    <summary>Writes the closing elements of a message. This function writes the end of the message including the element that closes the body tag and the envelope tag. Use this function when writing messages to destinations other than channels. With channels use <see cref="WsWriteMessageEnd" /></summary>
    <param name="message">A pointer to the <b>Message</b> object to write. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteEnvelopeStart">
    <summary>
      <para>Writes the start of the message including the current set of headers of the message and prepares to write the body elements.</para>
      <para>This function is designed for writing messages to destinations other than channels. To write a message to a channel use <see cref="WsWriteMessageStart" />.</para>
    </summary>
    <param name="message">A pointer to the <b>Message</b> object to write. The pointer must reference a valid <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-message">WS_MESSAGE</a> object.</param>
    <param name="writer">
      <para>A pointer to the <b>XML Writer</b> object to write the Message. The Message object uses the Writer in subsequent calls to write the message. The caller must keep the writer valid until <see cref="WsResetMessage" /> or <see cref="WsFreeMessage" /> is called.</para>
      <para>The <a href="https://docs.microsoft.com//windows/desktop/api/webservices/nc-webservices-ws_message_done_callback">WS_MESSAGE_DONE_CALLBACK</a> parameter can be used to determine that the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> is no longer in use.</para>
    </param>
    <param name="doneCallback">The callback function invoked when the Message is released or reset. This callback can be used to indicate that the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object is no longer in use by this message. If this function fails the callback is not called. If the function succeeds the callback is invoked one time only.</param>
    <param name="doneCallbackState">A void pointer to a user-defined state that will be passed to the specified callback. This parameter may be <b>NULL</b>.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteMessageEnd">
    <summary>Write the closing elements of the message to the channel.</summary>
    <param name="channel">The channel to write to.</param>
    <param name="message">The message to write.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteMessageStart">
    <summary>Write out all the headers of the message to the channel, and prepare to write the body elements.</summary>
    <param name="channel">The channel to use to write the message.</param>
    <param name="message">The message to write.</param>
    <param name="asyncContext">Information on how to invoke the function asynchronously, or <b>NULL</b> if invoking synchronously.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_S_ASYNC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The asynchronous operation is still pending.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_ABORTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation was aborted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint does not exist or could not be located.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the remote endpoint.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_DISCONNECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The connection with the remote endpoint was terminated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_NOT_AVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is not currently in service at this location.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_TOO_BUSY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint is unable to process the request due to being overloaded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_ENDPOINT_UNREACHABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint was not reachable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_ENDPOINT_URL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The endpoint address URL is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_OPERATION_TIMED_OUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation did not complete within the time allotted.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_ACCESS_DENIED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Access was denied by the HTTP proxy server.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server could not process the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_VERIFICATION_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Security verification was not successful for the received data.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_SYSTEM_FAILURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security operation failed in the Windows Web Services framework.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SECURITY_TOKEN_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A security token was rejected by the server because it has expired.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_PROXY_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP proxy server requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_BASIC_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'basic'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_DIGEST_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'digest'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'negotiate'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_SERVER_REQUIRES_NTLM_AUTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The remote endpoint requires HTTP authentication scheme 'NTLM'.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_EXPIRED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_CN_NO_MATCH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificates CN name does not match the passed value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_UNTRUSTEDROOT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CERT_E_WRONG_USAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The certificate is not valid for the requested usage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CRYPT_E_REVOCATION_OFFLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The revocation function was unable to check revocation because the revocation server was offline.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteNode">
    <summary>Writes the specified node to the XML Writer.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the node is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="node">A pointer to the Node object to write to the document.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteStartAttribute">
    <summary>This operation starts writing an attribute to the current element.<see cref="WsWriteStartElement" /> must be called before an attribute can be written. After the attribute has been started, the attribute value can be written using <see cref="WsWriteChars" />, <see cref="WsWriteBytes" />, or <see cref="WsWriteValue" />. The attribute must be completed using <see cref="WsWriteEndAttribute" />.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the attribute is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="prefix">A WS_XML_STRING pointer to the prefix to use for the attribute. If the value referenced by this parameter is <b>NULL</b> the Writer will choose a attribute.</param>
    <param name="localName">A WS_XML_STRING pointer to the local name used by the attribute. It must be at least one character long.</param>
    <param name="ns">
      <para>A WS_XML_STRING pointer to the namespace to be used for the attribute.</para>
      <para>If no prefix is specified the Writer may use a prefix in scope that is bound to the specified namespace or it may generate a prefix and include an XMLNS attribute.</para>
      <para>If a prefix is specified the Writer will use that prefix and may include an XMLNS attribute if needed to override an existing prefix in scope.</para>
    </param>
    <param name="singleQuote">
      <para>Determines whether to use a single or a double quote for the attribute value.</para>
      <div>
        <b>Note</b>  With <see cref="WS_XML_WRITER_BINARY_ENCODING" /> the quote character is not preserved and this parameter has no effect.</div>
    </param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteStartCData">
    <summary>
      <para>This operation starts a CDATA section in the writer. CDATA sections cannot be nested and cannot appear at the root of the document. <div><b>Note</b>  Some encodings do not support CDATA and will generate text instead.</div></para>The CDATA section is completed by calling <see cref="WsWriteEndCData" />.</summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the CDATA section is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteStartElement">
    <summary>
      <para>Writes a start element to the writer.</para>
      <para>After calling this function <see cref="WsWriteStartAttribute" /> or <see cref="WsWriteXmlnsAttribute" /> can be called to write additional attributes to the element. The element is not committed to the writer until <see cref="WsWriteEndElement" /> or some other function that writes content is called.</para>
    </summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the start element is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="prefix">A WS_XML_STRING pointer to the prefix to use for the start element. If the value referenced by this parameter is <b>NULL</b> the Writer will choose a attribute.</param>
    <param name="localName">A WS_XML_STRING pointer to the local name used by the start element. It must be at least one character long.</param>
    <param name="ns">
      <para>A WS_XML_STRING pointer to the namespace to be used for the start element.</para>
      <para>If no prefix is specified the Writer may use a prefix in scope that is bound to the specified namespace or it may generate a prefix and include an XMLNS attribute. If a prefix is specified the Writer will use that prefix and may include an XMLNS attribute if needed to override an existing prefix in scope.</para>
    </param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteType">
    <summary>Write a value of a given <see cref="WS_TYPE" /> to XML according to the <see cref="WS_TYPE_MAPPING" />.</summary>
    <param name="writer">The writer to write the value to.</param>
    <param name="typeMapping">Describes how the type maps to the XML that is being written.</param>
    <param name="type">The type of the value to serialize.</param>
    <param name="typeDescription">Additional information about the type. Each type has a different description structure. This may be <b>NULL</b>, depending on the <see cref="WS_TYPE" />.</param>
    <param name="writeOption">
      <para>Whether the value is required, and how the value is allocated. See <see cref="WS_WRITE_OPTION" /> for more information.</para>
      <para>This parameter must have one of the following values:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="WS_WRITE_REQUIRED_VALUE" />.</description>
        </item>
        <item>
          <description>
            <see cref="WS_WRITE_REQUIRED_POINTER" />.</description>
        </item>
      </list>
    </param>
    <param name="value">A pointer to the value to serialize.</param>
    <param name="valueSize">The size of the value being serialized.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_FORMAT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The input data was not in the expected format or did not have the expected value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Ran out of memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b> Other Errors</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>This function may return other errors not listed above.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteValue">
    <summary>
      <para>This operation derives the best representation for a primitive value from the underlying encoding and passes the derived value to a Writer object.<div><b>Note</b>  It is generally more efficient to use this function to write out primitive values rather than converting the value to text and subsequently using <see cref="WsWriteChars" />.</div></para>
    </summary>
    <param name="writer">A pointer to the <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-writer">WS_XML_WRITER</a> object to which the value is written. The pointer must reference a valid <b>XML Writer</b> object.</param>
    <param name="valueType">
      <para>Indicates the Type of primitive value referenced by the <i>value</i> parameter.</para>
      <para>I</para>
    </param>
    <param name="value">A void pointer to the primitive value.</param>
    <param name="valueSize">The size in bytes of the value being written.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteXmlBuffer">
    <summary>Writes a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a> to a writer.</summary>
    <param name="writer">The writer to which the XML buffer will be written.</param>
    <param name="xmlBuffer">The XML buffer to write.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsWriteXmlBufferToBytes">
    <summary>Uses a writer to convert a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-xml-buffer">WS_XML_BUFFER</a> to an encoded set of bytes.</summary>
    <param name="writer">The writer to use to generate the encoded bytes.</param>
    <param name="xmlBuffer">The XML buffer to write.</param>
    <param name="encoding">The encoding to use when generating the bytes. If <b>NULL</b>, the bytes will be encoded in utf8.</param>
    <param name="properties">An array of optional properties of the writer. See <see cref="WS_XML_WRITER_PROPERTY" />.</param>
    <param name="propertyCount">The number of properties.</param>
    <param name="heap">The heap from which to allocate the bytes.</param>
    <param name="bytes">The generated bytes are returned here.</param>
    <param name="byteCount">The number of generated bytes are returned here.</param>
    <param name="error">Specifies where additional error information should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_INVALID_OPERATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation is not allowed due to the current state of the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WS_E_QUOTA_EXCEEDED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A quota was exceeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WsXmlStringEquals">
    <summary>Compares two <see cref="WS_XML_STRING" /> objects for equality. The operation performs an ordinal comparison of the character values contained by the String objects.</summary>
    <param name="string1">A pointer to the first string to compare.</param>
    <param name="string2">A pointer to the second string to compare.</param>
    <param name="error">A pointer to a <a href="https://docs.microsoft.com//windows/desktop/wsw/ws-error">WS_ERROR</a> object where additional information about the error should be stored if the function fails.</param>
    <returns>
      <para>This function can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The strings are equal.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The strings are not equal.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more parameters are not correct.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.WS_STRING_VALUE">
    <summary>Initializes a <see cref="WS_STRING" /> structure given a constant string.</summary>
    <param name="S">The initializer string.</param>
  </member>
  <member name="Windows.WS_XML_STRING_DICTIONARY_VALUE">
    <summary>Provides an initializer for a <see cref="WS_XML_STRING" /> structure when there is an associated dictionary ID.</summary>
    <param name="S">A static constant string, encoded in UTF-8.</param>
    <param name="D">A string dictionary.</param>
    <param name="I">The ID.</param>
  </member>
  <member name="Windows.WS_XML_STRING_VALUE">
    <summary>Provides an initializer for a <see cref="WS_XML_STRING" /> structure when there is no associated dictionary ID.</summary>
    <param name="S">A static constant string, encoded in UTF-8.</param>
  </member>
</doc>