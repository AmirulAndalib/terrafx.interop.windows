<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAudioClock.GetCharacteristics">
    <summary>The <b>GetCharacteristics</b> method is reserved for future use.</summary>
    <param name="pdwCharacteristics">Pointer to a <b>DWORD</b> variable into which the method writes a value that indicates the characteristics of the audio clock.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pdwCharacteristics</i> is <b>NULL</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioClock.GetFrequency">
    <summary>The <b>GetFrequency</b> method gets the device frequency.</summary>
    <param name="pu64Frequency">Pointer to a <b>UINT64</b> variable into which the method writes the device frequency. For more information, see Remarks.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pu64Frequency</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioClock.GetPosition">
    <summary>The <b>GetPosition</b> method gets the current device position.</summary>
    <param name="pu64Position">Pointer to a <b>UINT64</b> variable into which the method writes the device position. The device position is the offset from the start of the stream to the current position in the stream. However, the units in which this offset is expressed are undefined—the device position value has meaning only in relation to the frequency reported by the <see cref="IAudioClock.GetFrequency" /> method. For more information, see Remarks.</param>
    <param name="pu64QPCPosition">Pointer to a <b>UINT64</b> variable into which the method writes the value of the performance counter at the time that the audio endpoint device read the device position (<i>*pu64Position</i>) in response to the <b>GetPosition</b> call. The method converts the counter value to 100-nanosecond time units before writing it to <i>*pu64QPCPosition</i>. This parameter can be <b>NULL</b> if the client does not require the performance counter value.</param>
    <returns>
      <para>If the method succeeds and obtains an accurate reading of the position, it returns S_OK. If the method succeeds but the duration of the call is long enough to detract from the accuracy of the position reading, the method returns S_FALSE. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pu64Position</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioClock">
    <summary>
      <para>The <b>IAudioClock</b> interface enables a client to monitor a stream's data rate and the current position in the stream. The client obtains a reference to the <b>IAudioClock</b> interface of a stream object by calling the <see cref="IAudioClient.GetService" /> method with parameter <i>riid</i> set to REFIID IID_IAudioClock.</para>
      <para>When releasing an <b>IAudioClock</b> interface instance, the client must call the interface's Release method from the same thread as the call to <b>IAudioClient.GetService</b> that created the object.</para>
    </summary>
  </member>
</doc>