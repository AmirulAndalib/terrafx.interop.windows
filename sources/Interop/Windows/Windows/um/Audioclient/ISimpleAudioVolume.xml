<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ISimpleAudioVolume.GetMasterVolume">
    <summary>The <b>GetMasterVolume</b> method retrieves the client volume level for the audio session.</summary>
    <param name="pfLevel">Pointer to a <b>float</b> variable into which the method writes the client volume level. The volume level is a value in the range 0.0 to 1.0.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pfLevel</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISimpleAudioVolume.GetMute">
    <summary>The <b>GetMute</b> method retrieves the current muting state for the audio session.</summary>
    <param name="pbMute">Pointer to a <b>BOOL</b> variable into which the method writes the muting state. <b>TRUE</b> indicates that muting is enabled. <b>FALSE</b> indicates that it is disabled.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>pbMute</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISimpleAudioVolume.SetMasterVolume">
    <summary>The <b>SetMasterVolume</b> method sets the master volume level for the audio session.</summary>
    <param name="fLevel">The new master volume level. Valid volume levels are in the range 0.0 to 1.0.</param>
    <param name="EventContext">Pointer to the event-context GUID. If a call to this method generates a volume-change event, the session manager sends notifications to all clients that have registered <see cref="IAudioSessionEvents" /> interfaces with the session manager. The session manager includes the <i>EventContext</i> pointer value with each notification. Upon receiving a notification, a client can determine whether it or another client is the source of the event by inspecting the <i>EventContext</i> value. This scheme depends on the client selecting a value for this parameter that is unique among all clients in the session. If the caller supplies a <b>NULL</b> pointer for this parameter, the client's notification method receives a <b>NULL</b> context pointer.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Parameter <i>fLevel</i> is not in the range 0.0 to 1.0.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISimpleAudioVolume.SetMute">
    <summary>The <b>SetMute</b> method sets the muting state for the audio session.</summary>
    <param name="bMute">The new muting state. <b>TRUE</b> enables muting. <b>FALSE</b> disables muting.</param>
    <param name="EventContext">Pointer to the event-context GUID. If a call to this method generates a volume-change event, the session manager sends notifications to all clients that have registered <see cref="IAudioSessionEvents" /> interfaces with the session manager. The session manager includes the <i>EventContext</i> pointer value with each notification. Upon receiving a notification, a client can determine whether it or another client is the source of the event by inspecting the <i>EventContext</i> value. This scheme depends on the client selecting a value for this parameter that is unique among all clients in the session. If the caller supplies a <b>NULL</b> pointer for this parameter, the client's notification method receives a <b>NULL</b> context pointer.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The Windows audio service is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ISimpleAudioVolume">
    <summary>
      <para>The <b>ISimpleAudioVolume</b> interface enables a client to control the master volume level of an <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-sessions">audio session</a>. The <see cref="IAudioClient.Initialize" /> method initializes a stream object and assigns the stream to an audio session. The client obtains a reference to the <b>ISimpleAudioVolume</b> interface on a stream object by calling the <see cref="IAudioClient.GetService" /> method with parameter <i>riid</i> set to <b>REFIID</b> IID_ISimpleAudioVolume.</para>
      <para>Alternatively, a client can obtain the <b>ISimpleAudioVolume</b> interface of an existing session without having to first create a stream object and add the stream to the session. Instead, the client calls the <see cref="IAudioSessionManager.GetSimpleAudioVolume" /> method with the session GUID.</para>
      <para>The effective volume level of any channel in the session submix, as heard at the speakers, is the product of the following four volume-level factors:</para>
      <list type="bullet">
        <item>
          <description>The per-channel volume levels of the streams in the session, which clients can control through the methods in the <see cref="IAudioStreamVolume" /> interface.</description>
        </item>
        <item>
          <description>The master volume level of the session, which clients can control through the methods in the <b>ISimpleAudioVolume</b> interface.</description>
        </item>
        <item>
          <description>The per-channel volume level of the session, which clients can control through the methods in the <see cref="IChannelAudioVolume" /> interface.</description>
        </item>
        <item>
          <description>The policy-based volume level of the session, which the system dynamically assigns to the session as the global mix changes.</description>
        </item>
      </list>Each of the four volume-level factors in the preceding list is a value in the range 0.0 to 1.0, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation). The effective volume level is also a value in the range 0.0 to 1.0.<para>Typical audio applications do not modify the volume levels of sessions. Instead, they rely on users to set these volume levels through the Sndvol program. Sndvol modifies only the master volume levels of sessions. By default, the session manager sets the master volume level to 1.0 at the initial activation of a session. Subsequent volume changes by Sndvol or other clients are persistent across computer restarts.</para><para>When releasing an <b>ISimpleAudioVolume</b> interface instance, the client must call the interface's <b>Release</b> method from the same thread as the call to <b>IAudioClient.GetService</b> that created the object.</para><para>The <b>ISimpleAudioVolume</b> interface controls the volume of an audio session. An audio session is a collection of shared-mode streams. This interface does not work with exclusive-mode streams. For information about volume controls for exclusive-mode streams, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/endpointvolume-api">EndpointVolume API</a>.</para></summary>
  </member>
</doc>