<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IChannelAudioVolume.GetAllVolumes">
    <summary>
      <para>The <b>GetAllVolumes</b> method retrieves the volume levels for all the channels in the audio session.</para>
    </summary>
    <param name="dwCount">
      <para>The number of elements in the <i>pfVolumes</i> array. The <i>dwCount</i> parameter must equal the number of channels in the stream format for the audio session. To get the number of channels, call the <see cref="IChannelAudioVolume.GetChannelCount" /> method.</para>
    </param>
    <param name="pfVolumes">
      <para>Pointer to an array of volume levels for the channels in the audio session. This parameter points to a caller-allocated <b>float</b> array into which the method writes the volume levels for the individual channels. Volume levels are in the range 0.0 to 1.0.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>dwCount</i> does not equal the number of channels in the stream format for the audio session.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>pfVolumes</i> is <b>NULL</b>.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
            </para>
          </description>
          <description>
            <para>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
            </para>
          </description>
          <description>
            <para>The Windows audio service is not running.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Clients can call the <see cref="IChannelAudioVolume.SetAllVolumes" /> or <see cref="IChannelAudioVolume.SetChannelVolume" /> method to set the per-channel volume levels in an audio session.</para>
    </remarks>
    <seealso cref="IChannelAudioVolume Interface" />
    <seealso cref="IChannelAudioVolume.GetChannelCount" />
    <seealso cref="IChannelAudioVolume.SetAllVolumes" />
    <seealso cref="IChannelAudioVolume.SetChannelVolume" />
  </member>
  <member name="IChannelAudioVolume.GetChannelCount">
    <summary>
      <para>The <b>GetChannelCount</b> method retrieves the number of channels in the stream format for the audio session.</para>
    </summary>
    <param name="pdwCount">
      <para>Pointer to a <b>UINT32</b> variable into which the method writes the channel count.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>pdwCount</i> is <b>NULL</b>.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
            </para>
          </description>
          <description>
            <para>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
            </para>
          </description>
          <description>
            <para>The Windows audio service is not running.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Call this method to get the number of channels in the audio session before calling any of the other methods in the <see cref="IChannelAudioVolume" /> interface.</para>
    </remarks>
    <seealso cref="IChannelAudioVolume Interface" />
  </member>
  <member name="IChannelAudioVolume.GetChannelVolume">
    <summary>
      <para>The <b>GetChannelVolume</b> method retrieves the volume level for the specified channel in the audio session.</para>
    </summary>
    <param name="dwIndex">
      <para>The channel number. If the stream format for the audio session has <i>N</i> channels, then the channels are numbered from 0 to <i>N</i>– 1. To get the number of channels, call the <see cref="IChannelAudioVolume.GetChannelCount" /> method.</para>
    </param>
    <param name="pfLevel">
      <para>Pointer to a <b>float</b> variable into which the method writes the volume level of the specified channel. The volume level is in the range 0.0 to 1.0.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>dwIndex</i> is set to an invalid channel number.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>pfLevel</i> is <b>NULL</b>.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
            </para>
          </description>
          <description>
            <para>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
            </para>
          </description>
          <description>
            <para>The Windows audio service is not running.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Clients can call the <see cref="IChannelAudioVolume.SetAllVolumes" /> or <see cref="IChannelAudioVolume.SetChannelVolume" /> method to set the per-channel volume levels in an audio session.</para>
    </remarks>
    <seealso cref="IChannelAudioVolume Interface" />
    <seealso cref="IChannelAudioVolume.GetChannelCount" />
    <seealso cref="IChannelAudioVolume.SetAllVolumes" />
    <seealso cref="IChannelAudioVolume.SetChannelVolume" />
  </member>
  <member name="IChannelAudioVolume.SetAllVolumes">
    <summary>
      <para>The <b>SetAllVolumes</b> method sets the individual volume levels for all the channels in the audio session.</para>
    </summary>
    <param name="dwCount">
      <para>The number of elements in the <i>pfVolumes</i> array. This parameter must equal the number of channels in the stream format for the audio session. To get the number of channels, call the <see cref="IChannelAudioVolume.GetChannelCount" /> method.</para>
    </param>
    <param name="pfVolumes">
      <para>Pointer to an array of volume levels for the channels in the audio session. The number of elements in the <i>pfVolumes</i> array is specified by the <i>dwCount</i> parameter. The caller writes the volume level for each channel to the array element whose index matches the channel number. If the stream format for the audio session has <i>N</i> channels, the channels are numbered from 0 to <i>N</i>– 1. Valid volume levels are in the range 0.0 to 1.0.</para>
    </param>
    <param name="EventContext">
      <para>Pointer to the event-context GUID. If a call to this method generates a channel-volume-change event, the session manager sends notifications to all clients that have registered <see cref="IAudioSessionEvents" /> interfaces with the session manager. The session manager includes the <i>EventContext</i> pointer value with each notification. Upon receiving a notification, a client can determine whether it or another client is the source of the event by inspecting the <i>EventContext</i> value. This scheme depends on the client selecting a value for this parameter that is unique among all clients in the session. If the caller supplies a <b>NULL</b> pointer for this parameter, the client's notification method receives a <b>NULL</b> context pointer.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>dwCount</i> does not equal the number of channels in the stream format for the audio session, or the value of a <i>pfVolumes</i> array element is not in the range 0.0 to 1.0.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>pfVolumes</i> is <b>NULL</b>.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
            </para>
          </description>
          <description>
            <para>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
            </para>
          </description>
          <description>
            <para>The Windows audio service is not running.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method, if it succeeds, generates a channel-volume-change event regardless of whether any of the new channel volume levels differ in value from the previous channel volume levels.</para>
    </remarks>
    <seealso cref="IAudioSessionEvents Interface" />
    <seealso cref="IChannelAudioVolume Interface" />
    <seealso cref="IChannelAudioVolume.GetChannelCount" />
  </member>
  <member name="IChannelAudioVolume.SetChannelVolume">
    <summary>
      <para>The <b>SetChannelVolume</b> method sets the volume level for the specified channel in the audio session.</para>
    </summary>
    <param name="dwIndex">
      <para>The channel number. If the stream format for the audio session has <i>N</i> channels, the channels are numbered from 0 to <i>N</i>– 1. To get the number of channels, call the <see cref="IChannelAudioVolume.GetChannelCount" /> method.</para>
    </param>
    <param name="fLevel">
      <para>The volume level for the channel. Valid volume levels are in the range 0.0 to 1.0.</para>
    </param>
    <param name="EventContext">
      <para>Pointer to the event-context GUID. If a call to this method generates a channel-volume-change event, the session manager sends notifications to all clients that have registered <see cref="IAudioSessionEvents" /> interfaces with the session manager. The session manager includes the <i>EventContext</i> pointer value with each notification. Upon receiving a notification, a client can determine whether it or another client is the source of the event by inspecting the <i>EventContext</i> value. This scheme depends on the client selecting a value for this parameter that is unique among all clients in the session. If the caller supplies a <b>NULL</b> pointer for this parameter, the client's notification method receives a <b>NULL</b> context pointer.</para>
    </param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>Parameter <i>dwIndex</i> is set to an invalid channel number, or parameter <i>fLevel</i> is not in the range 0.0 to 1.0.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_DEVICE_INVALIDATED</b>
            </para>
          </description>
          <description>
            <para>The audio endpoint device has been unplugged, or the audio hardware or associated hardware resources have been reconfigured, disabled, removed, or otherwise made unavailable for use.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>AUDCLNT_E_SERVICE_NOT_RUNNING</b>
            </para>
          </description>
          <description>
            <para>The Windows audio service is not running.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>This method, if it succeeds, generates a channel-volume-change event regardless of whether the new channel volume level differs in value from the previous channel volume level.</para>
    </remarks>
    <seealso cref="IAudioSessionEvents Interface" />
    <seealso cref="IChannelAudioVolume Interface" />
    <seealso cref="IChannelAudioVolume.GetChannelCount" />
  </member>
  <member name="IChannelAudioVolume">
    <summary>
      <para>The <b>IChannelAudioVolume</b> interface enables a client to control and monitor the volume levels for all of the channels in the <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-sessions">audio session</a> that the stream belongs to. This is the session that the client assigned the stream to during the call to the <see cref="IAudioClient.Initialize" /> method. The client obtains a reference to the <b>IChannelAudioVolume</b> interface on a stream object by calling the <see cref="IAudioClient.GetService" /> method with parameter <i>riid</i> set to REFIID IID_IChannelAudioVolume.</para>
      <para>The effective volume level of any channel in the session submix, as heard at the speakers, is the product of the following four volume-level factors:</para>
      <list type="bullet">
        <item>
          <description>The per-channel volume levels of the streams in the session, which clients can control through the methods in the <see cref="IAudioStreamVolume" /> interface.</description>
        </item>
        <item>
          <description>The per-channel volume level of the session, which clients can control through the methods in the <b>IChannelAudioVolume</b> interface.</description>
        </item>
        <item>
          <description>The master volume level of the session, which clients can control through the methods in the <see cref="ISimpleAudioVolume" /> interface.</description>
        </item>
        <item>
          <description>The policy-based volume level of the session, which the system dynamically assigns to the session as the global mix changes.</description>
        </item>
      </list>
      <para>Each of the four volume-level factors in the preceding list is a value in the range 0.0 to 1.0, where 0.0 indicates silence and 1.0 indicates full volume (no attenuation). The effective volume level is also a value in the range 0.0 to 1.0.</para>
      <para>Typical audio applications do not modify the volume levels of sessions. Instead, they rely on users to set these volume levels through the Sndvol program. Sndvol modifies only the master volume levels of sessions. By default, the session manager sets the per-channel volume levels to 1.0 at the initial activation of a session. Subsequent per-channel volume changes by clients are persistent across computer restarts.</para>
      <para>When releasing an <b>IChannelAudioVolume</b> interface instance, the client must call the interface's <b>Release</b> method from the same thread as the call to <b>IAudioClient.GetService</b> that created the object.</para>
      <para>The <b>IChannelAudioVolume</b> interface controls the channel volumes in an audio session. An audio session is a collection of shared-mode streams. This interface does not work with exclusive-mode streams. For information about volume controls for exclusive-mode streams, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/endpointvolume-api">EndpointVolume API</a>.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/CoreAudio/core-audio-interfaces">Core Audio Interfaces</seealso>
    <seealso cref="IAudioClient.GetService" />
    <seealso cref="IAudioClient.Initialize" />
    <seealso cref="IAudioStreamVolume Interface" />
    <seealso cref="ISimpleAudioVolume Interface" />
    <seealso href="https://docs.microsoft.com//windows/desktop/CoreAudio/wasapi">WASAPI</seealso>
  </member>
</doc>