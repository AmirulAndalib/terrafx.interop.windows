<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.CreatePropertySheetPage">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.CreatePropertySheetPageA">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.CreatePropertySheetPageW">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.CreatePropertySheetPage">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.CreatePropertySheetPageA">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.CreatePropertySheetPageW">
    <summary>
      <para>Creates a new page for a property sheet.</para>
    </summary>
    <param name="constPropSheetPagePointer">
      <para>Type: <b>LPCPROPSHEETPAGE</b></para>
      <para>Pointer to a <see cref="PROPSHEETPAGE" /> structure that defines a page to be included in a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Returns the handle to the new property page if successful, or <b>NULL</b> otherwise.</para>
    </returns>
    <remarks>
      <para>
        <b>Note</b>  Before common controls version 7.0, this function did not support visual styles.</para>
      <para>An application uses the <see cref="PropertySheet" /> function to create a property sheet that includes the new page. If you are not using the Aero wizard style (<see cref="PSH_AEROWIZARD" />), the application can use the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message to add the new page to an existing property sheet.</para>
      <para>Windows 95: The system can support a maximum of 16,364 window handles.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines CreatePropertySheetPage as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.DestroyPropertySheetPage">
    <summary>
      <para>Destroys a property sheet page. An application must call this function for pages that have not been passed to the <see cref="PropertySheet" /> function.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Handle to the property sheet page to delete.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a></b></para>
      <para>Returns nonzero if successful, or zero otherwise.</para>
    </returns>
  </member>
  <member name="Windows.PropertySheet">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropertySheetA">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropertySheetW">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropertySheet">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropertySheetA">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropertySheetW">
    <summary>
      <para>Creates a property sheet and adds the pages defined in the specified property sheet header structure.</para>
    </summary>
    <param name="unnamedParam1">
      <para>Type: <b>LPCPROPSHEETHEADER</b></para>
      <para>Pointer to a <see cref="PROPSHEETHEADER" /> structure that defines the frame and pages of a property sheet.</para>
    </param>
    <returns>
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">INT_PTR</a></b></para>
      <para>For modal property sheets, the return value is as follows:</para>
      <list type="table">
        <listheader>
          <description>&gt;=1</description>
          <description>Changes were saved by the user.</description>
        </listheader>
        <item>
          <description>0</description>
          <description>No changes were saved by the user.</description>
        </item>
        <item>
          <description>-1</description>
          <description>An error occurred.</description>
        </item>
      </list>
      <para>For modeless property sheets, the return value is  the property sheet's window handle.</para>
      <para>The following return values have a special meaning.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>ID_PSREBOOTSYSTEM</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message to the property sheet. The computer must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>ID_PSRESTARTWINDOWS</b>
            </para>
          </description>
          <description>
            <para>A page sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message to the property sheet. Windows must be restarted for the user's changes to take effect.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>If you attempt to add more than 99 pages to a property sheet, this function will fail, but with no indication of the cause of the error: <b>PropertySheet</b> returns a value of -1, but <see cref="GetLastError" /> returns 0.</para>
      <para>
        <b>Note</b>  The following remarks refer only to wizards that do not use the Aero wizard style (<see cref="PSH_AEROWIZARD" />) or non-wizard property sheets.</para>
      <para>By default, the <b>PropertySheet</b> function creates a modal dialog box. If the <b>dwFlags</b> member of the <see cref="PROPSHEETHEADER" /> structure specifies the PSH_MODELESS flag, <b>PropertySheet</b> creates a modeless dialog box and returns immediately after it is created. In this case, the <b>PropertySheet</b> return value is the window handle to the modeless dialog box.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box. Your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <b>PropertySheet</b> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets might need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned. A modeless property sheet can retrieve the value that a modal property sheet would have received from <b>PropertySheet</b> by waiting until <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> returns <b>NULL</b> and then sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <blockquote>
        <para>[!NOTE]
The prsht.h header defines PropertySheet as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
  </member>
  <member name="Windows.PropSheet_AddPage">
    <summary>
      <para>Adds a new page to the end of an existing property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-addpage">PSM_ADDPAGE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="hpage">
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Handle to the page to add. The page must have been created by a previous call to the <see cref="CreatePropertySheetPage" /> function.</para>
    </param>
    <remarks>
      <para>The new page should be no larger than the largest page currently in the property sheet because the property sheet is not resized to fit the new page.</para>
      <para>A number of messages and one function call occur while the property sheet is manipulating the list of pages. While this action is taking place, attempting to modify the list of pages will have unpredictable results. Accordingly, you should not use the <b>PropSheet_AddPage</b> macro in your implementation of <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> or while handling the following notifications and Microsoft Windows messages:</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-destroy">WM_DESTROY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/dlgbox/wm-initdialog">WM_INITDIALOG</a>
          </description>
        </item>
      </list>
      <para>If you need to modify a property sheet page while you are handling one of these messages or while <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> is in operation, post yourself a private Windows message. Your application will not receive that message until after the property sheet manager has finished its tasks. Then you can modify the list of pages.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_Apply">
    <summary>
      <para>Simulates the selection of the <b>Apply</b> button, indicating that one or more pages have changed and the changes need to be validated and recorded. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-apply">PSM_APPLY</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>The property sheet sends the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> notification code to the current page. If the current page returns <b>FALSE</b>, the property sheet sends the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> notification code to all active pages.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_CancelToClose">
    <summary>
      <para>Used when changes made since the most recent <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> notification cannot be canceled. You can also send a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-canceltoclose">PSM_CANCELTOCLOSE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-canceltoclose">PSM_CANCELTOCLOSE</a> disables the <b>Cancel</b> button and changes the text of the <b>OK</b> button to "Close". You can use this macro or send the <b>PSM_CANCELTOCLOSE</b> message explicitly.</para>
      <para>Most property sheets wait to perform irreversible changes until a <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> notification is received. However, in some circumstances, a property sheet may make irreversible changes outside the standard PSN_APPLY/<a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a> sequence. One example is a property sheet that contains an <b>Edit</b> button that is used to display a subdialog box for editing a property. When the user clicks <b>OK</b> to submit the change, the property sheet page has several options:</para>
      <list type="bullet">
        <item>
          <description>It can record the changes but wait until it receives a <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> notification to apply them. This is the preferred approach.</description>
        </item>
        <item>
          <description>It can apply the changes immediately after exiting the subdialog box, but remember the original settings. Those settings can be used to restore the original state if a <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a> notification is received.</description>
        </item>
        <item>
          <description>It can apply the changes immediately and not attempt to restore the original settings when it receives a <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a> notification. This approach is not recommended, but may be necessary if the changes are too far-reaching for the other two options to be practical.</description>
        </item>
      </list>
      <para>For the third option, applications should send a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-canceltoclose">PSM_CANCELTOCLOSE</a> message to the property sheet. It indicates to the user that the changes made with the subdialog box cannot be reversed by clicking the <b>Cancel</b> button.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_Changed">
    <summary>
      <para>Informs a property sheet that information in a page has changed. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-changed">PSM_CHANGED</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="hwnd">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the page that has changed.</para>
    </param>
    <remarks>
      <para>The property sheet enables the <b>Apply</b> button.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_EnableWizButtons">
    <summary>
      <para>Enables or disables buttons in an Aero wizard. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-enablewizbuttons">PSM_ENABLEWIZBUTTONS</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard.</para>
    </param>
    <param name="dwState">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>One or more of the following values that specify which property sheet buttons are to be enabled. If a button value is included in both this parameter and <i>dwMask</i>, it is enabled.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>PSWIZB_BACK</b>
          </description>
          <description>
            <para>0x0001. The <b>Back</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_NEXT</b>
          </description>
          <description>
            <para>0x0002. The <b>Next</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_FINISH</b>
          </description>
          <description>
            <para>0x0004. The <b>Finish</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_CANCEL</b>
          </description>
          <description>
            <para>0x0010. The <b>Cancel</b> button.</para>
          </description>
        </item>
      </list>
    </param>
    <param name="dwMask">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>One or more of the same values used in <i>dwState</i>, specifying which buttons are affected by this call. If a button value appears in this parameter but not in <i>dwState</i>, the button is disabled.</para>
    </param>
    <remarks>
      <para>The following example code enables the <b>Back</b> button and disables the <b>Next</b> button.</para>
      <code>PropSheet_EnableWizButtons(hwnd,
                         PSWIZB_NEXT,
                         PSWIZB_BACK | PSWIZB_NEXT);
</code>
    </remarks>
  </member>
  <member name="Windows.PropSheet_GetCurrentPageHwnd">
    <summary>
      <para>Retrieves a handle to the window of the current page of a property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>Use the <b>PropSheet_GetCurrentPageHwnd</b> macro with modeless property sheets to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PropSheet_GetCurrentPageHwnd</b> returns <b>NULL</b>, and you can then use the <see cref="DestroyWindow" /> function to destroy the dialog box.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
    <seealso cref="PropertySheet" />
  </member>
  <member name="Windows.PropSheet_GetResult">
    <summary>
      <para>Used by modeless property sheets to retrieve the information returned to modal property sheets by <see cref="PropertySheet" />. You can use this macro or sent the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet's dialog box.</para>
    </param>
    <remarks>
      <para>To retrieve extended error information, call <see cref="GetLastError" />.</para>
      <para>The return value is identical to what <see cref="PropertySheet" /> would have returned had this been a modal property sheet.</para>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">Version 5.80.</a> The <see cref="PropertySheet" /> return value carries different information for modal and modeless property sheets. In some cases, modeless property sheets may need the information they would have received from <b>PropertySheet</b> if they had been modal. In particular, they may need to know whether ID_PSREBOOTSYSTEM or ID_PSRESTARTWINDOWS would have been returned.</para>
      <para>For a modeless property sheet, your message loop should use <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> to pass messages to the property sheet dialog box, and <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getcurrentpagehwnd">PSM_GETCURRENTPAGEHWND</a> to determine when to destroy the dialog box. When the user clicks the <b>OK</b> or <b>Cancel</b> button, <b>PSM_GETCURRENTPAGEHWND</b> returns <b>NULL</b>. You can then retrieve the value that a modal property sheet would have received from <see cref="PropertySheet" /> by sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-getresult">PSM_GETRESULT</a> message.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_GetTabControl">
    <summary>
      <para>Retrieves the handle to the tab control of a property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-gettabcontrol">PSM_GETTABCONTROL</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_HwndToIndex">
    <summary>
      <para>Takes a window handle of the property sheet page and returns its zero-based index. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/controls/psm-hwndtoindex">PSM_HWNDTOINDEX</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet's window.</para>
    </param>
    <param name="hwnd">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the page's window.</para>
    </param>
    <seealso cref="GetParent" />
    <seealso cref="PropSheet_GetCurrentPageHwnd" />
  </member>
  <member name="Windows.PropSheet_IdToIndex">
    <summary>
      <para>Takes the resource identifier (ID) of a property sheet page and returns its zero-based index. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/controls/psm-idtoindex">PSM_IDTOINDEX</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet window.</para>
    </param>
    <param name="id">
      <para>Type: <b>int</b></para>
      <para>Resource ID of the page.</para>
    </param>
    <seealso cref="PropSheet_IndexToId" />
  </member>
  <member name="Windows.PropSheet_IndexToHwnd">
    <summary>
      <para>Takes the index of a property sheet page and returns its window handle. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-indextohwnd">PSM_INDEXTOHWND</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet page's window.</para>
    </param>
    <param name="i">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page.</para>
    </param>
    <seealso cref="PropSheet_HwndToIndex" />
  </member>
  <member name="Windows.PropSheet_IndexToId">
    <summary>
      <para>Takes the index of a property sheet page and returns its resource identifier (ID). You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-indextoid">PSM_INDEXTOID</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="i">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page.</para>
    </param>
    <seealso href="https://docs.microsoft.com//windows/desktop/Controls/psm-indextoid">PSM_INDEXTOID</seealso>
  </member>
  <member name="Windows.PropSheet_IndexToPage">
    <summary>
      <para>Takes the index of a property sheet page and returns its HPROPSHEETPAGE handle. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-indextopage">PSM_INDEXTOPAGE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet window.</para>
    </param>
    <param name="i">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page.</para>
    </param>
    <seealso cref="PropSheet_PageToIndex" />
  </member>
  <member name="Windows.PropSheet_InsertPage">
    <summary>
      <para>Inserts a new page into an existing property sheet. The page can be inserted either at a specified index or after a specified page. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-insertpage">PSM_INSERTPAGE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="index">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Where the page is to be inserted. Set <i>wParam</i> to <b>NULL</b> to make the new page the first page. To specify where the new page is to be inserted, you can either pass an index or an existing page's HPROPSHEETPAGE handle.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>index</b>
          </description>
          <description>
            <para>If <i>wParam</i> is less than MAXUSHORT (the largest unsigned short integer), it specifies the zero-based index for the new page. For example, to make the inserted page the third page on the property sheet, set <i>index</i> to 2. To make it the first page, set <i>index</i> to 0. If <i>index</i> has a value greater than the number of pages and less than MAXUSHORT, the page will be appended.</para>
          </description>
        </item>
        <item>
          <description>
            <b>hpageInsertAfter</b>
          </description>
          <description>
            <para>If you set <i>wParam</i> to an existing page's HPROPSHEETPAGE handle, the new page will be inserted after it.</para>
          </description>
        </item>
      </list>
    </param>
    <param name="hpage">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the page to be inserted. The page must first be created by a call to the <see cref="CreatePropertySheetPage" /> function.</para>
    </param>
    <remarks>
      <para>The pages after the insertion point are shifted to the right to accommodate the new page.</para>
      <para>The property sheet is not resized to fit the new page. Do not make the new page larger than the property sheet's largest page.</para>
      <para>A number of messages and one function call occur while the property sheet is manipulating the list of pages. While this action is taking place, attempting to modify the list of pages will have unpredictable results. Accordingly, you should not use the <b>PropSheet_InsertPage</b> macro in your implementation of <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> or while handling the following notifications and Windows messages.</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-destroy">WM_DESTROY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/dlgbox/wm-initdialog">WM_INITDIALOG</a>
          </description>
        </item>
      </list>
      <para>If you need to modify a property sheet page while you are handling one of these messages or while <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> is in operation, post yourself a private Windows message. Your application will not receive that message until after the property sheet manager has finished its tasks. Then you can modify the list of pages.</para>
      <para>The following notifications are also affected by property sheet modification.</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-wizback">PSN_WIZBACK</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-wiznext">PSN_WIZNEXT</a>
          </description>
        </item>
      </list>
      <para>You can add or remove pages in response to these notifications, provided that you return (via DWL_MSGRESULT) a nonzero value to specify the desired new page. Note, however, that if you insert a page that is located before the current page (that has a smaller index than the current page), <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> might be sent to the wrong page.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_IsDialogMessage">
    <summary>
      <para>Passes a message to a property sheet dialog box and indicates whether the dialog box processed the message. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-isdialogmessage">PSM_ISDIALOGMESSAGE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="pMsg">
      <para>Type: <b>LPMSG</b></para>
      <para>Pointer to an <see cref="MSG" /> structure that contains the message to be checked.</para>
    </param>
    <remarks>
      <para>Your message loop should use the <b>PropSheet_IsDialogMessage</b> macro with modeless property sheets to pass messages to the property sheet dialog box. On systems that support Unicode, use the Unicode versions of the <see cref="GetMessage" /> and <see cref="PeekMessage" /> functions (<b>GetMessageW</b> and <b>PeekMessageW</b>) to retrieve messages.</para>
      <para>If the return value indicates that the message was processed, it must not be passed to the <see cref="TranslateMessage" /> or <see cref="DispatchMessage" /> function.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
    <seealso cref="PropertySheet" />
  </member>
  <member name="Windows.PropSheet_PageToIndex">
    <summary>
      <para>Takes the HPROPSHEETPAGE handle of a property sheet page and returns its zero-based index. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/controls/psm-pagetoindex">PSM_PAGETOINDEX</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="hpage">
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>HPROPSHEETPAGE handle to the property sheet page.</para>
    </param>
    <seealso cref="CreatePropertySheetPage" />
    <seealso cref="PropSheet_IndexToPage" />
  </member>
  <member name="Windows.PropSheet_PressButton">
    <summary>
      <para>Simulates the selection of a property sheet button. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-pressbutton">PSM_PRESSBUTTON</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="iButton">
      <para>Type: <b>int</b></para>
      <para>Index of the button to select. This parameter can be one of the following values:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>PSBTN_APPLYNOW</b>
          </description>
          <description>
            <para>Selects the Apply button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_BACK</b>
          </description>
          <description>
            <para>Selects the Back button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_CANCEL</b>
          </description>
          <description>
            <para>Selects the Cancel button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_FINISH</b>
          </description>
          <description>
            <para>Selects the Finish button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_HELP</b>
          </description>
          <description>
            <para>Selects the Help button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_NEXT</b>
          </description>
          <description>
            <para>Selects the Next button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSBTN_OK</b>
          </description>
          <description>
            <para>Selects the OK button.</para>
          </description>
        </item>
      </list>
    </param>
  </member>
  <member name="Windows.PropSheet_QuerySiblings">
    <summary>
      <para>Causes a property sheet to send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-querysiblings">PSM_QUERYSIBLINGS</a> message to each of its pages. You can use this macro or send the <b>PSM_QUERYSIBLINGS</b> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="wParam">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">WPARAM</a></b></para>
      <para>First application-defined parameter.</para>
    </param>
    <param name="lParam">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPARAM</a></b></para>
      <para>Second application-defined parameter.</para>
    </param>
    <remarks>
      <para>If a page returns a nonzero value, the property sheet does not send the message to subsequent pages.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_RebootSystem">
    <summary>
      <para>Indicates the system needs to be restarted for the changes to take effect. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-rebootsystem">PSM_REBOOTSYSTEM</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>An application should send the PSM_REBOOTSYSTEM message only in response to the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> or <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> notification code.</para>
      <para>This macro causes the <see cref="PropertySheet" /> function to return the ID_PSREBOOTSYSTEM value, but only if the user clicks the <b>OK</b> button to close the property sheet. It is the application's responsibility to reboot the system, which can be done by using the <see cref="ExitWindowsEx" /> function.</para>
      <para>This macro supersedes all <b>PropSheet_RebootSystem</b> macros that precede or follow it.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</seealso>
  </member>
  <member name="Windows.PropSheet_RecalcPageSizes">
    <summary>
      <para>Recalculates the page size of a standard or wizard property sheet after pages have been added or removed. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-recalcpagesizes">PSM_RECALCPAGESIZES</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet's dialog box.</para>
    </param>
    <remarks>
      <para>When a property sheet is created, it is sized to fit its initial collection of pages. To maintain compatibility with previous versions of the common controls, property sheets and wizards do not automatically resize themselves when pages are subsequently added or removed. With common controls <a href="https://docs.microsoft.com//windows/desktop/Controls/common-control-versions">version 5.80</a> and later, applications should use the <b>PropSheet_RecalcPageSizes</b> macro after adding or removing pages with <see cref="PropSheet_AddPage" />, <see cref="PropSheet_InsertPage" />, <see cref="PropSheet_RemovePage" />, or their equivalent messages. It ensures that the property sheet is properly sized for its current collection of pages. If this macro or the equivalent message is not used, some property sheet pages may be truncated or too large.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_RemovePage">
    <summary>
      <para>Removes a page from a property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-removepage">PSM_REMOVEPAGE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="index">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page to be removed.</para>
    </param>
    <param name="hpage">
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Handle to the page to be removed.</para>
    </param>
    <remarks>
      <para>An application can specify the page to be removed by assigning a value to either <i>index</i> or <i>hpage</i>. If values are assigned to both <i>index</i> and <i>hpage</i>, <i>hpage</i> takes precedence.</para>
      <para>A number of messages and one function call occur while the property sheet is manipulating the list of pages. While this action is taking place, attempting to modify the list of pages will have unpredictable results. Accordingly, you should not use the <b>PropSheet_RemovePage</b> macro in your implementation of <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> or while handling the following notifications and Windows messages.</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-reset">PSN_RESET</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-destroy">WM_DESTROY</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/dlgbox/wm-initdialog">WM_INITDIALOG</a>
          </description>
        </item>
      </list>
      <para>If you need to modify a property sheet page while you are handling one of these messages or while <a href="https://docs.microsoft.com//windows/desktop/api/prsht/nc-prsht-lpfnpspcallbacka">PropSheetPageProc</a> is in operation, post yourself a private Windows message. Your application will not receive that message until after the property sheet manager has finished its tasks. Then you can modify the list of pages.</para>
      <para>The following notifications are also affected by property sheet modification.</para>
      <list type="bullet">
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-wizback">PSN_WIZBACK</a>
          </description>
        </item>
        <item>
          <description>
            <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-wiznext">PSN_WIZNEXT</a>
          </description>
        </item>
      </list>
      <para>You can add or remove pages in response to these notifications, provided that you return (via DWL_MSGRESULT) a nonzero value to specify the desired new page. Note, however, that if you remove a page that is located before the current page (that has a smaller index than the current page), <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> might be sent to the wrong page.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_RestartWindows">
    <summary>
      <para>Sends a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message indicating that Windows needs to be restarted for changes to take effect. You can use this macro or send the <b>PSM_RESTARTWINDOWS</b> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <remarks>
      <para>An application should send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message only in response to the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-apply">PSN_APPLY</a> or <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> notification code.</para>
      <para>The <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-restartwindows">PSM_RESTARTWINDOWS</a> message causes the <see cref="PropertySheet" /> function to return the ID_PSRESTARTWINDOWS value, but only if the user clicks the <b>OK</b> button to close the property sheet. It is the application's responsibility to restart Windows, which can be done by using the <see cref="ExitWindowsEx" /> function.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetButtonText">
    <summary>
      <para>Sets the text of a button in an Aero wizard. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setbuttontext">PSM_SETBUTTONTEXT</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard.</para>
    </param>
    <param name="dwButton">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>One of the following values specifying the button whose text is set.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>PSWIZB_BACK</b>
          </description>
          <description>
            <para>0x0001. The <b>Back</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_NEXT</b>
          </description>
          <description>
            <para>0x0002. The <b>Next</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_FINISH</b>
          </description>
          <description>
            <para>0x0004. The <b>Finish</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_CANCEL</b>
          </description>
          <description>
            <para>0x0010. The <b>Cancel</b> button.</para>
          </description>
        </item>
      </list>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCTSTR</a></b></para>
      <para>The text to set.</para>
    </param>
  </member>
  <member name="Windows.PropSheet_SetCurSel">
    <summary>
      <para>Activates the specified page in a property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setcursel">PSM_SETCURSEL</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="hpage">
      <para>Type: <b>HPROPSHEETPAGE</b></para>
      <para>Handle to the page to activate. An application can specify the index or the handle, or both. If both are specified, <i>hpage</i> takes precedence.</para>
    </param>
    <param name="index">
      <para>Type: <b>UINT</b></para>
      <para>Zero-based index of the page. An application can specify the index or the handle, or both. If both are specified, <i>hpage</i> takes precedence.</para>
    </param>
    <remarks>
      <para>The window that is losing the activation receives the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> notification code, and the window that is gaining the activation receives the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a> notification code.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetCurSelByID">
    <summary>
      <para>Activates the specified page in a property sheet based on the resource identifier of the page. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setcurselid">PSM_SETCURSELID</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="id">
      <para>Type: <b>int</b></para>
      <para>Resource identifier of the page to activate.</para>
    </param>
    <remarks>
      <para>The window that is losing the activation receives the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-killactive">PSN_KILLACTIVE</a> notification code, and the window that is gaining the activation receives the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a> notification code.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetFinishText">
    <summary>
      <para>Sets the text of the Finish button in a wizard, shows and enables the button, and hides the Next and Back buttons. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setfinishtext">PSM_SETFINISHTEXT</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Window handle (HWND) of the wizard property sheet.</para>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPTSTR</a></b></para>
      <para>Pointer to the new text for the Finish button.</para>
    </param>
    <remarks>
      <para>By default, the Finish button does not have a keyboard accelerator. You can create a keyboard accelerator with this macro by including an ampersand (&amp;) in the text string that you assign to <i>lpszText</i>. For example, "&amp;Finish" defines F as the accelerator key.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetHeaderSubTitle">
    <summary>
      <para>Sets the subtitle text for the header of a wizard's interior page. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setheadersubtitle">PSM_SETHEADERSUBTITLE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard's window.</para>
    </param>
    <param name="index">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page.</para>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCSTR</a></b></para>
      <para>New header subtitle.</para>
    </param>
    <remarks>
      <para>If you specify the current page, it will immediately be repainted to display the new subtitle.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
    <seealso cref="PropSheet_HwndToIndex" />
    <seealso cref="PropSheet_IdToIndex" />
    <seealso cref="PropSheet_PageToIndex" />
  </member>
  <member name="Windows.PropSheet_SetHeaderTitle">
    <summary>
      <para>Sets the title text for the header of a wizard's interior page. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setheadertitle">PSM_SETHEADERTITLE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard's window.</para>
    </param>
    <param name="index">
      <para>Type: <b>int</b></para>
      <para>Zero-based index of the page.</para>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPCTSTR</a></b></para>
      <para>New header title.</para>
    </param>
    <remarks>
      <para>If you specify the current page, it will immediately be repainted to display the new title.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetNextText">
    <summary>
      <para>Sets the text of the <b>Next</b> button in a wizard. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setnexttext">PSM_SETNEXTTEXT</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard.</para>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPTSTR</a></b></para>
      <para>Pointer to a buffer that contains the text.</para>
    </param>
  </member>
  <member name="Windows.PropSheet_SetTitle">
    <summary>
      <para>Sets the title of a property sheet. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-settitle">PSM_SETTITLE</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="wStyle">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>Flag that indicates whether to include the prefix "Properties for" with the specified title string. If <i>dwStyle</i> is the PSH_PROPTITLE value, the prefix is included. Otherwise, the prefix is not used.</para>
    </param>
    <param name="lpszText">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">LPTSTR</a></b></para>
      <para>Pointer to a buffer that contains the title string. If the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ms632657(v=vs.85)">HIWORD</a> of this parameter is <b>NULL</b>, the property sheet loads the string resource specified in the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/ms632659(v=vs.85)">LOWORD</a>.</para>
    </param>
    <remarks>
      <para>In an Aero Wizard, this macro can be used to change the title of an interior page dynamically; for example, when handling the <a href="https://docs.microsoft.com//windows/desktop/Controls/psn-setactive">PSN_SETACTIVE</a> notification.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_SetWizButtons">
    <summary>
      <para>Enables or disables the Back, Next, and Finish buttons in a wizard by posting a <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setwizbuttons">PSM_SETWIZBUTTONS</a> message. You can use this macro or send the <b>PSM_SETWIZBUTTONS</b> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="dwFlags">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>A value that specifies which wizard buttons are enabled. You can combine one or more of the following flags.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>PSWIZB_BACK</b>
          </description>
          <description>
            <para>Enable the Back button. If this flag is not set, the Back button is displayed as disabled.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_DISABLEDFINISH</b>
          </description>
          <description>
            <para>Display a disabled Finish button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_FINISH</b>
          </description>
          <description>
            <para>Display an enabled Finish button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_NEXT</b>
          </description>
          <description>
            <para>Enable the Next button. If this flag is not set, the Next button is displayed as disabled.</para>
          </description>
        </item>
      </list>
    </param>
    <remarks>
      <para>This macro uses <see cref="PostMessage" /> to send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-setwizbuttons">PSM_SETWIZBUTTONS</a> message. If your notification handler calls <b>PropSheet_SetWizButtons</b>, do nothing that will affect window focus until after the handler returns. For example, if you call <see cref="MessageBox" /> immediately after calling <b>PropSheet_SetWizButtons</b>, the message box will receive focus. Since messages sent with <b>PostMessage</b> are not delivered until they reach the head of the message queue, the <b>PSM_SETWIZBUTTONS</b> message will not be delivered until after the wizard has lost focus to the message box. As a result, the property sheet will not be able to properly set the focus for the buttons.</para>
      <para>Wizards display either three or four buttons below each page. This message is used to specify which buttons are enabled. Wizards normally display Back, Cancel, and either a Next or Finish button. You typically enable only the Next button for the welcome page, Next and Back for interior pages, and Back and Finish for the completion page. The Cancel button is always enabled. Normally, setting PSWIZB_FINISH or PSWIZB_DISABLEDFINISH replaces the Next button with a Finish button. To display Next and Finish buttons simultaneously, set the PSH_WIZARDHASFINISH FLAG in the <b>dwFlags</b> member of the wizard's <see cref="PROPSHEETHEADER" /> structure when you create the wizard. Every page will then display all four buttons.</para>
    </remarks>
  </member>
  <member name="Windows.PropSheet_ShowWizButtons">
    <summary>
      <para>Show or hide buttons in a wizard. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-showwizbuttons">PSM_SHOWWIZBUTTONS</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the wizard.</para>
    </param>
    <param name="dwFlag">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>One or more of the following values that specify which property sheet buttons are to be shown. If a button value is included in both this parameter and <i>dwButton</i> then it is shown.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <b>PSWIZB_BACK</b>
          </description>
          <description>
            <para>0x0001. The <b>Back</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_NEXT</b>
          </description>
          <description>
            <para>0x0002. The <b>Next</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_FINISH</b>
          </description>
          <description>
            <para>0x0004. The <b>Finish</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_CANCEL</b>
          </description>
          <description>
            <para>0x0010. The <b>Cancel</b> button.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_SHOW</b>
          </description>
          <description>
            <para>Set only this flag (defined as zero) to hide all buttons specified in <i>dwButton</i>.</para>
          </description>
        </item>
        <item>
          <description>
            <b>PSWIZB_RESTORE</b>
          </description>
          <description>
            <para>Not implemented.</para>
          </description>
        </item>
      </list>
    </param>
    <param name="dwButton">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">DWORD</a></b></para>
      <para>One or more of the same values used in <i>dwFlag</i>. Here, they specify which property sheet buttons are to be shown or hidden. If a button value appears in this parameter but not in <i>dwFlag</i>, it indicates that the button should be hidden.</para>
    </param>
    <remarks>
      <para>The following example code hides the <b>Back</b> button and shows the <b>Next</b> button.</para>
      <code>PropSheet_ShowWizButtons(hwnd,
                         PSWIZB_NEXT,
                         PSWIZB_BACK | PSWIZB_NEXT);
</code>
    </remarks>
  </member>
  <member name="Windows.PropSheet_UnChanged">
    <summary>
      <para>Informs a property sheet that information in a page has reverted to the previously saved state. You can use this macro or send the <a href="https://docs.microsoft.com//windows/desktop/Controls/psm-unchanged">PSM_UNCHANGED</a> message explicitly.</para>
    </summary>
    <param name="hDlg">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the property sheet.</para>
    </param>
    <param name="hwnd">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">HWND</a></b></para>
      <para>Handle to the page that has reverted to the previously saved state.</para>
    </param>
    <remarks>
      <para>The property sheet disables the <b>Apply Now</b> button if no other pages have registered changes with the property sheet.</para>
      <para>
        <b>Note</b>  This macro is not supported when using the Aero wizard style (<see cref="PSH_AEROWIZARD" />).</para>
    </remarks>
  </member>
</doc>