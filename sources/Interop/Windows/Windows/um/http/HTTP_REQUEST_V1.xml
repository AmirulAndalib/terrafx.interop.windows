<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="HTTP_REQUEST_V1">
    <summary>
      <para>Uses the<a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa364545(v=vs.85)">HTTP_REQUEST</a> structure to return data associated with a specific request.</para>
      <para>Do not use <b>HTTP_REQUEST_V1</b> directly in your code; using <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa364545(v=vs.85)">HTTP_REQUEST</a> instead ensures that the proper version, based on the operating system the code is compiled under, is used.</para>
    </summary>
  </member>
  <member name="HTTP_REQUEST_V1.Flags">
    <summary>
      <para>A combination of zero or more of the following flag values may be combined, with OR, as appropriate.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HTTP_REQUEST_FLAG_MORE_ENTITY_BODY_EXISTS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is more entity body to be read for this request. This applies only to incoming requests that span multiple reads. <para>If this value is not set, either the whole entity body was copied into the buffer specified by <b>pEntityChunks</b> or the request did not include an entity body.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HTTP_REQUEST_FLAG_IP_ROUTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request was routed based on host and IP binding. The application should reflect the local IP while flushing kernel cache entries for this request.<para><b>Windows Server 2003 with SP1 and Windows XP with SP2:  </b>This flag is not supported.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>HTTP_REQUEST_FLAG_HTTP2</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Indicates the request was received over HTTP/2.</description>
        </listheader>
      </list>
    </summary>
  </member>
  <member name="HTTP_REQUEST_V1.ConnectionId">
    <summary>An identifier for the connection on which the request was received. Use this value when calling<see cref="HttpWaitForDisconnect" /> or<see cref="HttpReceiveClientCertificate" />.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.RequestId">
    <summary>A value used to identify the request when calling<see cref="HttpReceiveRequestEntityBody" />,<see cref="HttpSendHttpResponse" />, and/or<see cref="HttpSendResponseEntityBody" />.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.UrlContext">
    <summary>
      <para>The context that is associated with the URL in the <i>pRawUrl</i> parameter.</para>
      <para>
        <b>Windows Server 2003 with SP1 and Windows XP with SP2:  </b>
      </para>
    </summary>
  </member>
  <member name="HTTP_REQUEST_V1.Version">
    <summary>An<see cref="HTTP_VERSION" /> structure that contains the version of HTTP specified by this request.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.Verb">
    <summary>An HTTP verb associated with this request. This member can be one of the values from the<br /><see cref="HTTP_VERB" /> enumeration.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.UnknownVerbLength">
    <summary>If the <b>Verb</b> member contains a value equal to <b>HttpVerbUnknown</b>, the <b>UnknownVerbLength</b> member contains the size, in bytes, of the string pointed to by the <b>pUnknownVerb</b> member, not including the terminating null character. If <b>Verb</b> is not equal to <b>HttpVerbUnknown</b>, <b>UnknownVerbLength</b> is equal to zero.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.RawUrlLength">
    <summary>The size, in bytes, of the unprocessed URL string pointed to by the <b>pRawUrl</b> member, not including the terminating null character.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.pUnknownVerb">
    <summary>If the <b>Verb</b> member is equal to <b>HttpVerbUnknown</b>, <b>pUnknownVerb</b>, points to a null-terminated string of octets that contains the HTTP verb for this request; otherwise, the application ignores this parameter.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.pRawUrl">
    <summary>A pointer to a string of octets that contains the original, unprocessed URL targeted by this request. Use this unprocessed URL only for tracking or statistical purposes; the <b>CookedUrl</b> member contains the canonical form of the URL for general use.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.CookedUrl">
    <summary>An<see cref="HTTP_COOKED_URL" /> structure that contains a parsed canonical wide-character version of the URL targeted by this request. This is the version of the URL HTTP Listeners should act upon, rather than the raw URL.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.Address">
    <summary>An<see cref="HTTP_TRANSPORT_ADDRESS" /> structure that contains the transport addresses for the connection for this request.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.Headers">
    <summary>An<see cref="HTTP_REQUEST_HEADERS" /> structure that contains the headers specified in this request.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.BytesReceived">
    <summary>The total number of bytes received from the network comprising this request.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.EntityChunkCount">
    <summary>The number of elements in the <b>pEntityChunks</b> array. If no entity body was copied, this value is zero.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.pEntityChunks">
    <summary>A pointer to an array of<see cref="HTTP_DATA_CHUNK" /> structures that contains the data blocks making up the entity body.<see cref="HttpReceiveHttpRequest" /> does not copy the entity body unless called with the HTTP_RECEIVE_REQUEST_FLAG_COPY_BODY flag set.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.RawConnectionId">
    <summary>Raw connection ID for an Secure Sockets Layer (SSL) request.</summary>
  </member>
  <member name="HTTP_REQUEST_V1.pSslInfo">
    <summary>A pointer to an<see cref="HTTP_SSL_INFO" /> structure that contains Secure Sockets Layer (SSL) information about the connection on which the request was received.</summary>
  </member>
</doc>