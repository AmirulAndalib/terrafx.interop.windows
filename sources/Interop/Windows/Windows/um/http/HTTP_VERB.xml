<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="HTTP_VERB">
    <summary>The<b>HTTP_VERB</b> enumeration type defines values that are used to specify known, standard HTTP verbs in the<a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa364545(v=vs.85)">HTTP_REQUEST</a> structure. The majority of these known verbs are documented in <a href="https://www.ietf.org/rfc/rfc2616.txt">RFC 2616</a> and<a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>, as indicated below.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbUnparsed">
    <summary>Not relevant for applications; used only in kernel mode.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbUnknown">
    <summary>Indicates that the application can examine the <b>UnknownVerbLength</b> and <b>pUnknownVerb</b> members of the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/legacy/aa364545(v=vs.85)">HTTP_REQUEST</a> structure to retrieve the HTTP verb for the request. This is the case in an HTTP/1.1 request when a browser client specifies a custom verb.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbInvalid">
    <summary>Not relevant for applications; used only in kernel mode.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbOPTIONS">
    <summary>
      <para>The OPTIONS method requests information about the communication options and requirements associated with a URI.</para>
      <code>				See page 52 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbGET">
    <summary>
      <para>The GET method retrieves the information or entity that is identified by the URI of the Request. If that URI refers to a script or other data-producing process, it is the data produced, not the text of the script, that is returned in the response.</para>
      <para>A GET method can be made conditional or partial by including a conditional or Range header field in the request. A conditional GET requests that the entity be sent only if all conditions specified in the header are met, and a partial GET requests only part of the entity, as specified in the Range header. Both of these forms of GET can help avoid unnecessary network traffic.</para>
      <code>				See page 53 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbHEAD">
    <summary>
      <para>The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body. The headers are the same as would be returned in response to a GET.</para>
      <code>				See page 54 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbPOST">
    <summary>
      <para>The POST method is used to post a new entity as an addition to a URI. The URI identifies an entity that consumes the posted data in some fashion.</para>
      <code>				See page 54 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbPUT">
    <summary>
      <para>The PUT method is used to replace an entity identified by a URI.</para>
      <code>				See page 55 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbDELETE">
    <summary>
      <para>The DELETE method requests that a specified URI be deleted.</para>
      <code>				See page 56 of &lt;a href="https://www.ietf.org/rfc/rfc2616.txt"&gt;RFC 2616&lt;/a&gt;.</code>
    </summary>
  </member>
  <member name="HTTP_VERB.HttpVerbTRACE">
    <summary>The TRACE method invokes a remote, application-layer loop-back of the request message. It allows the client to see what is being received at the other end of the request chain for diagnostic purposes. See page 56 of <a href="https://www.ietf.org/rfc/rfc2616.txt">RFC 2616</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbCONNECT">
    <summary>The CONNECT method can be used with a proxy that can dynamically switch to tunneling, as in the case of SSL tunneling. See page 57 of <a href="https://www.ietf.org/rfc/rfc2616.txt">RFC 2616</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbTRACK">
    <summary>The TRACK method is used by Microsoft Cluster Server to implement a non-logged trace.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbMOVE">
    <summary>The MOVE method requests a WebDAV operation equivalent to a copy (COPY), followed by consistency maintenance processing, followed by a delete of the source, where all three actions are performed atomically. When applied to a collection, "Depth" is assumed to be or must be specified as "infinity". See page 42 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbCOPY">
    <summary>The COPY method requests a WebDAV operation that creates a duplicate of the source resource, identified by the Request URI, in the destination resource, identified by a URI specified in the Destination header. See page 37 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbPROPFIND">
    <summary>The PROPFIND method requests a WebDAV operation that retrieves properties defined on the resource identified by the Request-URI. See page 24 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbPROPPATCH">
    <summary>The PROPPATCH method requests a WebDAV operation that sets and/or removes properties defined on the resource identified by the Request-URI. See page 31 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbMKCOL">
    <summary>The MKCOL method requests a WebDAV operation that creates a new collection resource at the location specified by the Request-URI. See page 33 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbLOCK">
    <summary>The LOCK method requests a WebDAV operation that creates a lock as specified by the lockinfo XML element on the Request-URI. See page 45 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbUNLOCK">
    <summary>The UNLOCK method requests a WebDAV operation that removes a lock, identified by a lock token in the Lock-Token request header, from the resource identified by the Request-URI, and from all other resources included in the lock. See page 51 of <a href="https://www.ietf.org/rfc/rfc2518.txt">RFC 2518</a>.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbSEARCH">
    <summary>The SEARCH method requests a WebDAV operation used by Microsoft Exchange to search folders. See the Internet Engineering Task Force (IETF) Internet Draft WebDAV SEARCH for more information, and the <a href="http://www.webdav.org/">WebDAV Web site</a> for possible updates.</summary>
  </member>
  <member name="HTTP_VERB.HttpVerbMaximum">
    <summary>Terminates the enumeration; is not used to define a verb.</summary>
  </member>
</doc>