<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="SAFEARRAY">
    <summary>
      <para>Represents a safe array.</para>
    </summary>
    <remarks>
      <para>The array <b>rgsabound</b> is stored with the left-most dimension in rgsabound[0] and the right-most dimension in <code>rgsabound[cDims - 1]</code>. If an array was specified in a C-like syntax as a [2][5], it would have two elements in the <b>rgsabound</b> vector. Element 0 has an <b>lLbound</b> of 0 and a <b>cElements</b> of 2. Element 1 has an <b>lLbound</b> of 0 and a <b>cElements</b> of 5.</para>
      <para>The <b>fFeatures</b> flags describe attributes of an array that can affect how the array is released. The <b>fFeatures</b> field describes what type of data is stored in the <b>SAFEARRAY</b> and how the array is allocated. This allows freeing the array without referencing its containing variant.</para>
      <h4>Thread Safety</h4>
      <para>All public static members of the <b>SAFEARRAY</b> data type are thread safe. Instance members are not guaranteed to be thread safe.</para>
      <para>For example, consider an application that uses the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-safearraylock">SafeArrayLock</a> and <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-safearrayunlock">SafeArrayUnlock</a> functions. If these functions are called concurrently from different threads on the same <b>SAFEARRAY</b> data type instance, an inconsistent lock count may be created. This will eventually cause the <b>SafeArrayUnlock</b> function to return E_UNEXPECTED. You can prevent this by providing your own synchronization code.</para>
    </remarks>
  </member>
  <member name="SAFEARRAY.cDims">
    <summary>
      <para>The number of dimensions.</para>
    </summary>
  </member>
  <member name="SAFEARRAY.fFeatures">
    <summary>
      <para>Flags.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_AUTO</b>
                </description>
              </item>
              <item>
                <description>0x0001</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that is allocated on the stack.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_STATIC</b>
                </description>
              </item>
              <item>
                <description>0x0002</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that is statically allocated.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_EMBEDDED</b>
                </description>
              </item>
              <item>
                <description>0x0004</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that is embedded in a structure.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_FIXEDSIZE</b>
                </description>
              </item>
              <item>
                <description>0x0010</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that may not be resized or reallocated.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_RECORD</b>
                </description>
              </item>
              <item>
                <description>0x0020</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that contains records. When set, there will be a pointer to the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</a> interface at negative offset 4 in the array descriptor.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_HAVEIID</b>
                </description>
              </item>
              <item>
                <description>0x0040</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that has an IID identifying interface. When set, there will be a GUID at negative offset 16 in the safe array descriptor. Flag is set only when FADF_DISPATCH or FADF_UNKNOWN is also set.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_HAVEVARTYPE</b>
                </description>
              </item>
              <item>
                <description>0x0080</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array that has a variant type. The variant type can be retrieved with <a href="https://docs.microsoft.com//previous-versions/windows/desktop/automat/vartype">SafeArrayGetVartype</a>.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_BSTR</b>
                </description>
              </item>
              <item>
                <description>0x0100</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array of BSTRs.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_UNKNOWN</b>
                </description>
              </item>
              <item>
                <description>0x0200</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array of IUnknown*.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_DISPATCH</b>
                </description>
              </item>
              <item>
                <description>0x0400</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array of IDispatch*.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_VARIANT</b>
                </description>
              </item>
              <item>
                <description>0x0800</description>
              </item>
            </list>
          </description>
          <description>
            <para>An array of VARIANTs.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>FADF_RESERVED</b>
                </description>
              </item>
              <item>
                <description>0xF008</description>
              </item>
            </list>
          </description>
          <description>
            <para>Bits reserved for future use.</para>
          </description>
        </item>
      </list>
    </summary>
  </member>
  <member name="SAFEARRAY.cbElements">
    <summary>
      <para>The size of an array element.</para>
    </summary>
  </member>
  <member name="SAFEARRAY.cLocks">
    <summary>
      <para>The number of times the array has been locked without a corresponding unlock.</para>
    </summary>
  </member>
  <member name="SAFEARRAY.pvData">
    <summary>
      <para>The data.</para>
    </summary>
  </member>
  <member name="SAFEARRAY.rgsabound">
    <summary>
      <para>One bound for each dimension.</para>
    </summary>
  </member>
</doc>