<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ITypeInfo.AddressOfMember">
    <summary>Retrieves the addresses of static functions or variables, such as those defined in a DLL.</summary>
    <param name="memid">The member ID of the static member whose address is to be retrieved. The member ID is defined by the DISPID.</param>
    <param name="invKind">Indicates whether the member is a property, and if so, what kind.</param>
    <param name="ppv">The static member.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.CreateInstance">
    <summary>Creates a new instance of a type that describes a component object class (coclass).</summary>
    <param name="pUnkOuter">The controlling <b>IUnknown</b>. If Null, then a stand-alone instance is created. If valid, then an aggregate object is created.</param>
    <param name="riid">An ID for the interface that the caller will use to communicate with the resulting object.</param>
    <param name="ppvObj">An instance of the created object.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>OLE could not find an implementation of one or more required interfaces.</description>
        </listheader>
      </list> <para>Additional errors may be returned from <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-getactiveobject">GetActiveObject</a> or <b>CoCreateInstance</b>.</para></returns>
  </member>
  <member name="ITypeInfo.GetContainingTypeLib">
    <summary>Retrieves the containing type library and the index of the type description within that type library.</summary>
    <param name="ppTLib">The containing type library.</param>
    <param name="pIndex">The index of the type description within the containing type library.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>OLE could not find an implementation of one or more required interfaces.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetDllEntry">
    <summary>Retrieves a description or specification of an entry point for a function in a DLL.</summary>
    <param name="memid">The ID of the member function whose DLL entry description is to be returned.</param>
    <param name="invKind">The kind of member identified by <i>memid</i>. This is important for properties, because one <i>memid</i> can identify up to three separate functions.</param>
    <param name="pBstrDllName">If not null, the function sets <i>pBstrDllName</i> to the name of the DLL.</param>
    <param name="pBstrName">If not null, the function sets <i>pBstrName</i> to the name of the entry point. If the entry point is specified by an ordinal, this argument is null.</param>
    <param name="pwOrdinal">If not null, and if the function is defined by an ordinal, the function sets <i>pwOrdinal</i> to the ordinal.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetDocumentation">
    <summary>Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.</summary>
    <param name="memid">The ID of the member whose documentation is to be returned.</param>
    <param name="pBstrName">The name of the specified item. If the caller does not need the item name, <i>pBstrName</i> can be null.</param>
    <param name="pBstrDocString">The documentation string for the specified item. If the caller does not need the documentation string, <i>pBstrDocString</i> can be null.</param>
    <param name="pdwHelpContext">The Help localization context. If the caller does not need the Help context, it can be null.</param>
    <param name="pBstrHelpFile">The fully qualified name of the file containing the DLL used for Help file. If the caller does not need the file name, it can be null.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetFuncDesc">
    <summary>Retrieves the <see cref="FUNCDESC" /> structure that contains information about a specified function.</summary>
    <param name="index">The index of the function whose description is to be returned. The <i>index</i> should be in the range of 0 to 1 less than the number of functions in this type.</param>
    <param name="ppFuncDesc">A FUNCDESC structure that describes the specified function.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetIDsOfNames">
    <summary>Maps between member names and member IDs, and parameter names and parameter IDs.</summary>
    <param name="rgszNames">An array of names to be mapped.</param>
    <param name="cNames">The count of the names to be mapped.</param>
    <param name="pMemId">Caller-allocated array in which name mappings are placed.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetImplTypeFlags">
    <summary>Retrieves the IMPLTYPEFLAGS enumeration for one implemented interface or base interface in a type description.</summary>
    <param name="index">The index of the implemented interface or base interface for which to get the flags.</param>
    <param name="pImplTypeFlags">The IMPLTYPEFLAGS enumeration value.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetMops">
    <summary>Retrieves marshaling information.</summary>
    <param name="memid">The member ID that indicates which marshaling information is needed.</param>
    <param name="pBstrMops">The opcode string used in marshaling the fields of the structure described by the referenced type description, or null if there is no information to return.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetNames">
    <summary>Retrieves the variable with the specified member ID or the name of the property or method and the parameters that correspond to the specified function ID.</summary>
    <param name="memid">The ID of the member whose name (or names) is to be returned.</param>
    <param name="rgBstrNames">The caller-allocated array. On return, each of the elements contains the name (or names) associated with the member.</param>
    <param name="cMaxNames">The length of the passed-in <i>rgBstrNames</i> array.</param>
    <param name="pcNames">The number of names in the <i>rgBstrNames</i> array.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetRefTypeInfo">
    <summary>If a type description references other type descriptions, it retrieves the referenced type descriptions.</summary>
    <param name="hRefType">A handle to the referenced type description to return.</param>
    <param name="ppTInfo">The referenced type description.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetRefTypeOfImplType">
    <summary>If a type description describes a COM class, it retrieves the type description of the implemented interface types. For an interface, <b>GetRefTypeOfImplType</b> returns the type information for inherited interfaces, if any exist.</summary>
    <param name="index">The index of the implemented type whose handle is returned. The valid range is 0 to the <b>cImplTypes</b> field in the TYPEATTR structure.</param>
    <param name="pRefType">A handle for the implemented interface (if any). This handle can be passed to <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getreftypeinfo">ITypeInfo.GetRefTypeInfo</a> to get the type description.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TYPE_E_ELEMENTNOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Passed index is outside the range 0 to 1 less than the number of implemented interfaces.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetTypeAttr">
    <summary>Retrieves a TYPEATTR structure that contains the attributes of the type description.</summary>
    <param name="ppTypeAttr">The attributes of this type description.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetTypeComp">
    <summary>Retrieves the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> interface for the type description, which enables a client compiler to bind to the type description's members.</summary>
    <param name="ppTComp">The <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypecomp">ITypeComp</a> of the containing type library.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.GetVarDesc">
    <summary>Retrieves a VARDESC structure that describes the specified variable.</summary>
    <param name="index">The index of the variable whose description is to be returned. The index should be in the range of 0 to 1 less than the number of variables in this type.</param>
    <param name="ppVarDesc">A VARDESC that describes the specified variable.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="ITypeInfo.Invoke">
    <summary>Invokes a method, or accesses a property of an object, that implements the interface described by the type description.</summary>
    <param name="pvInstance">An instance of the interface described by this type description.</param>
    <param name="memid">The interface member.</param>
    <param name="wFlags">
      <para>Flags describing the context of the invoke call.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DISPATCH_METHOD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The member is accessed as a method. If there is ambiguity, both this and the DISPATCH_PROPERTYGET flag can be set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DISPATCH_PROPERTYGET</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The member is retrieved as a property or data member.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DISPATCH_PROPERTYPUT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The member is changed as a property or data member.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DISPATCH_PROPERTYPUTREF</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The member is changed by using a reference assignment, rather than a value assignment. This flag is valid only when the property accepts a reference to an object.</description>
        </listheader>
      </list>
    </param>
    <param name="pDispParams">An array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.</param>
    <param name="pVarResult">The result. Should be null if the caller does not expect any result. If <i>wFlags</i> specifies DISPATCH_PROPERTYPUT or DISPATCH_PROPERTYPUTREF, <i>pVarResultis</i> is ignored.</param>
    <param name="pExcepInfo">An exception information structure, which is filled in only if DISP_E_EXCEPTION is returned. If <i>pExcepInfo</i> is null on input, only an HRESULT error will be returned.</param>
    <param name="puArgErr">If Invoke returns DISP_E_TYPEMISMATCH, <i>puArgErr</i> indicates the index (within <i>rgvarg</i>) of the argument with incorrect type. If more than one argument returns an error, <i>puArgErr</i> indicates only the first argument with an error. Arguments in pDispParams-&gt;rgvarg appear in reverse order, so the first argument is the one having the highest index in the array. This parameter cannot be null.</param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DISP_E_EXCEPTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The member being invoked has returned an error HRESULT. If the member implements <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-ierrorinfo">IErrorInfo</a>, details are available in the error object. Otherwise, the <i>pExcepInfo</i> parameter contains details.</description>
        </listheader>
      </list> <para>Any of the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-idispatch-invoke">IDispatch.Invoke</a> errors may also be returned.</para></returns>
  </member>
  <member name="ITypeInfo.ReleaseFuncDesc">
    <summary>Releases a FUNCDESC previously returned by <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getfuncdesc">ITypeInfo.GetFuncDesc</a>.</summary>
    <param name="pFuncDesc">The FUNCDESC to be freed.</param>
  </member>
  <member name="ITypeInfo.ReleaseTypeAttr">
    <summary>Releases a TYPEATTR previously returned by <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-gettypeattr">ITypeInfo.GetTypeAttr</a>.</summary>
    <param name="pTypeAttr">The TYPEATTR to be freed.</param>
  </member>
  <member name="ITypeInfo.ReleaseVarDesc">
    <summary>Releases a VARDESC previously returned by <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-itypeinfo-getvardesc">ITypeInfo.GetVarDesc</a>.</summary>
    <param name="pVarDesc">The VARDESC to be freed.</param>
  </member>
  <member name="ITypeInfo">
    <summary>This section describes <b>ITypeInfo</b>, an interface typically used for reading information about objects. For example, an object browser tool can use <b>ITypeInfo</b> to extract information about the characteristics and capabilities of objects from type libraries.</summary>
  </member>
</doc>