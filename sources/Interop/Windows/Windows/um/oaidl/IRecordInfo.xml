<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IRecordInfo.GetField">
    <summary>
      <para>Returns a pointer to the VARIANT containing the value of a given field name.</para>
    </summary>
    <param name="pvData">
      <para>The instance of a record.</para>
    </param>
    <param name="szFieldName">
      <para>The field name.</para>
    </param>
    <param name="pvarField">
      <para>The VARIANT that you want to hold the value of the field name, <i>szFieldName</i>. On return, places a copy of the field's value in the variant.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The VARIANT that you pass in contains a copy of the field's value upon return. If you modify the VARIANT then the underlying record field does not change.</para>
      <para>The caller allocates memory of the VARIANT.</para>
      <para>The method <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> is called for <i>pvarField</i> before copying.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</seealso>
  </member>
  <member name="IRecordInfo.GetFieldNames">
    <summary>
      <para>Gets the names of the fields of the record.</para>
    </summary>
    <param name="pcNames">
      <para>The number of names to return.</para>
    </param>
    <param name="rgBstrNames">
      <para>The name of the array of type BSTR.</para>
      <para>If the <i>rgBstrNames</i> parameter is NULL, then <i>pcNames</i> is returned with the number of field names.</para>
      <para>It the <i>rgBstrNames</i> parameter is not NULL, then the string names contained in <i>rgBstrNames</i> are returned. If the number of names in <i>pcNames</i> and <i>rgBstrNames</i> are not equal then the lesser number of the two is the number of returned field names. The caller needs to free the BSTRs inside the array returned in <i>rgBstrNames</i>.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUT_OFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Out of memory.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The caller should allocate memory for the array of BSTRs. If the array is larger than needed, set the unused portion to 0.</para>
      <para>On return, the caller will need to free each contained BSTR using <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a>.</para>
      <para>In case of out of memory, <i>pcNames</i> points to error code.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</seealso>
  </member>
  <member name="IRecordInfo.GetFieldNoCopy">
    <summary>
      <para>Returns a pointer to the value of a given field name without copying the value and allocating resources.</para>
    </summary>
    <param name="pvData">
      <para>The instance of a record.</para>
    </param>
    <param name="szFieldName">
      <para>The name of the field.</para>
    </param>
    <param name="pvarField">
      <para>The VARIANT that will contain the UDT upon return.</para>
    </param>
    <param name="ppvDataCArray">
      <para>Receives the value of the field upon return.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Upon return, the VARIANT you pass contains a direct pointer to the record's field, <i>ppvDataCArray</i>. If you modify the VARIANT, then the underlying record field will change.</para>
      <para>The caller allocates memory of the VARIANT, but does not own the memory so cannot free <i>pvarField</i>. This method calls <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</a> for <i>pvarField</i> before filling in the requested field.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-variantclear">VariantClear</seealso>
  </member>
  <member name="IRecordInfo.GetGuid">
    <summary>
      <para>Gets the GUID of the record type.</para>
    </summary>
    <param name="pguid">
      <para>The class GUID of the TypeInfo that describes the UDT.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>TYPE_E_INVALIDSTATE</b>
            </para>
          </description>
          <description>
            <para>The state of the type library is not valid for this operation.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.GetName">
    <summary>
      <para>Gets the name of the record type. This is useful if you want to print out the type of the record, because each UDT has its own <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</a>.</para>
    </summary>
    <param name="pbstrName">
      <para>The name.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUT_OFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Out of memory.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>TYPE_E_INVALIDSTATE</b>
            </para>
          </description>
          <description>
            <para>The state of the type library is not valid for this operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The caller must free the BSTR by calling <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oleauto/nf-oleauto-sysfreestring">SysFreeString</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.GetSize">
    <summary>
      <para>Gets the number of bytes of memory necessary to hold the record instance. This allows you to allocate memory for a record instance rather than calling <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreate">RecordCreate</a>.</para>
    </summary>
    <param name="pcbSize">
      <para>The size of a record instance, in bytes.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.GetTypeInfo">
    <summary>
      <para>Retrieves the type information that describes a UDT or safearray of UDTs.</para>
    </summary>
    <param name="ppTypeInfo">
      <para>The information type of the record.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>TYPE_E_INVALIDSTATE</b>
            </para>
          </description>
          <description>
            <para>The state of the type library is not valid for this operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>
        <b>AddRef</b> is called on the pointer <i>ppTypeInfo</i>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-itypeinfo">ITypeInfo</seealso>
  </member>
  <member name="IRecordInfo.IsMatchingType">
    <summary>
      <para>Determines whether the record that is passed in matches that of the current record information.</para>
    </summary>
    <param name="pRecordInfo">
      <para>The information of the record.</para>
    </param>
    <returns>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>TRUE</b>
            </para>
          </description>
          <description>
            <para>The record that is passed in matches the current record information.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>FALSE</b>
            </para>
          </description>
          <description>
            <para>The record that is passed in does not match the current record information.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.PutField">
    <summary>
      <para>Puts a variant into a field.</para>
    </summary>
    <param name="wFlags">
      <para>The only legal values for the wFlags parameter is INVOKE_PROPERTYPUT or INVOKE_PROPERTYPUTREF.</para>
      <para>If INVOKE_PROPERTYPUTREF is passed in then <b>PutField</b> just assigns the value of the variant that is passed in to the field using normal coercion rules.</para>
      <para>If INVOKE_PROPERTYPUT is passed in then specific rules apply. If the field is declared as a class that derives from <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> and the field's value is NULL then an error will be returned. If the field's value is not NULL then the variant will be passed to the default property supported by the object referenced by the field. If the field is not declared as a class derived from <b>IDispatch</b> then an error will be returned. If the field is declared as a variant of type VT_Dispatch then the default value of the object is assigned to the field. Otherwise, the variant's value is assigned to the field.</para>
    </param>
    <param name="pvData">
      <para>The pointer to an instance of the record.</para>
    </param>
    <param name="szFieldName">
      <para>The name of the field of the record.</para>
    </param>
    <param name="pvarField">
      <para>The pointer to the variant.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.PutFieldNoCopy">
    <summary>
      <para>Passes ownership of the data to the assigned field by placing the actual data into the field.<b>PutFieldNoCopy</b> is useful for saving resources because it allows you to place your data directly into a record field. <b>PutFieldNoCopy</b> differs from <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-putfield">PutField</a> because it does not copy the data referenced by the variant.</para>
    </summary>
    <param name="wFlags">
      <para>The only legal values for the wFlags parameter is INVOKE_PROPERTYPUT or INVOKE_PROPERTYPUTREF.</para>
    </param>
    <param name="pvData">
      <para>An instance of the record described by <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</a>.</para>
    </param>
    <param name="szFieldName">
      <para>The name of the field of the record.</para>
    </param>
    <param name="pvarField">
      <para>The variant to be put into the field.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordClear">
    <summary>
      <para>Releases object references and other values of a record without deallocating the record.</para>
    </summary>
    <param name="pvExisting">
      <para>The record to be cleared.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>
        <b>RecordClear</b> releases memory blocks held by VT_PTR or VT_SAFEARRAY instance fields. The caller needs to free the instance fields memory, <b>RecordClear</b> will do nothing if there are no resources held.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordCopy">
    <summary>
      <para>Copies an existing record into the passed in buffer.</para>
    </summary>
    <param name="pvExisting">
      <para>The current record instance.</para>
    </param>
    <param name="pvNew">
      <para>The destination where the record will be copied.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>
        <b>RecordCopy</b> will release the resources in the destination first. The caller is responsible for allocating sufficient memory in the destination by calling <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-getsize">GetSize</a> or  <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreate">RecordCreate</a>. If <b>RecordCopy</b> fails to copy any of the fields then all fields will be cleared, as though <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordclear">RecordClear</a> had been called.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordCreate">
    <summary>
      <para>Allocates memory for a new record, initializes the instance and returns a pointer to the record.</para>
    </summary>
    <returns>
      <para>This method returns a pointer to the created record.</para>
    </returns>
    <remarks>
      <para>The memory is set to zeros before it is returned.</para>
      <para>The records created must be freed by calling <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recorddestroy">RecordDestroy</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordCreateCopy">
    <summary>
      <para>Creates a copy of an instance of a record to the specified location.</para>
    </summary>
    <param name="pvSource">
      <para>An instance of the record to be copied.</para>
    </param>
    <param name="ppvDest">
      <para>The new record with data copied from <i>pvSource</i>.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUT_OFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Out of memory.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The records created must be freed by calling <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recorddestroy">RecordDestroy</a>.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordDestroy">
    <summary>
      <para>Releases the resources and deallocates the memory of the record.</para>
    </summary>
    <param name="pvRecord">
      <para>An instance of the record to be destroyed.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>
        <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordclear">RecordClear</a> is called to release the resources held by the instance of a record without deallocating memory.</para>
      <para>
        <b>Note</b>  This method can only be called on records allocated through <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreate">RecordCreate</a> and <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-recordcreatecopy">RecordCreateCopy</a>. If you allocate the record yourself, you cannot call this method.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo.RecordInit">
    <summary>
      <para>Initializes a new instance of a record.</para>
    </summary>
    <param name="pvNew">
      <para>An instance of a record.</para>
    </param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success.</para>
          </description>
        </item>
        <item>
          <description>
            <list type="bullet">
              <item>
                <description>
                  <b>E_INVALIDARG
</b>
                </description>
              </item>
            </list>
          </description>
          <description>
            <para>One or more of the arguments is not valid.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The caller must allocate the memory of the record by its appropriate size using the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nf-oaidl-irecordinfo-getsize">GetSize</a> method.</para>
      <para>
        <b>RecordInit</b> sets all contents of the record to 0 and the record should hold no resources.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-irecordinfo">IRecordInfo</seealso>
  </member>
  <member name="IRecordInfo">
    <summary>
      <para>Describes the structure of a particular UDT. You can use <b>IRecordInfo</b> any time you need to access the description of UDTs contained in type libraries. <b>IRecordInfo</b> can be reused as needed; there can be many instances of the UDT for a single <b>IRecordInfo</b> pointer.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/automat/udt-functions-and-interfaces">UDT Functions and Interfaces</seealso>
    <seealso href="https://docs.microsoft.com//previous-versions/windows/desktop/automat/user-defined-data-types">User-Defined Data Types </seealso>
  </member>
</doc>