<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IShellWindows.FindWindowSW">
    <summary>Finds a window in the Shell windows collection and returns the window's handle and <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface.</summary>
    <param name="pvarLoc">A <see cref="VARIANT" /> of type VT_VARIANT | VT_BYREF. Set the value of <i>pvarLoc</i> to an absolute <see cref="PIDL" /> (PIDLIST_ABSOLUTE) that specifies the window to find. (See remarks.)</param>
    <param name="pvarLocRoot">Must be <b>NULL</b> or of type VT_EMPTY.</param>
    <param name="swClass">One or more <see cref="ShellWindowTypeConstants" /> flags that specify window types to include in the search.</param>
    <param name="phwnd">A handle for the window matching the specified search criteria, or <b>NULL</b> if no such window was found.</param>
    <param name="swfwOptions">One or more <see cref="ShellWindowFindWindowOptions" /> flags that specify search options.</param>
    <param name="ppdispOut">A reference to the window's <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface, or <b>NULL</b> if no such window was found.</param>
    <returns>
      <para>One of the following values, or a standard result code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A window matching the specified search criteria was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A window matching the specified search criteria was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A window was found, but a reference to the window's <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface could not be obtained. Only occurs if the <see cref="SWFO_NEEDDISPATCH" /> flag is set.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_PENDING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A window was found, but the window is pending open. Only occurs if the <see cref="SWFO_INCLUDEPENDING" /> flag is set.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IShellWindows.get_Count">
    <summary>Gets the number of windows in the Shell windows collection.</summary>
    <param name="Count">The number of windows in the Shell windows collection.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.Item">
    <summary>Returns the registered Shell window for a specified index.</summary>
    <param name="index">A <see cref="VARIANT" /> of type VT_UI4, VT_I2, or VT_I4. If the type is VT_UI4, the value of <i>index</i> is interpreted as a member of <see cref="ShellWindowTypeConstants" />; in this case, <b>Item</b> returns the window that is closest to the foreground window and has a matching type. If the type is VT_I, or VT_I4, <i>index</i> is treated as an index into the Shell windows collection.</param>
    <param name="Folder">A reference to the window's <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface, or <b>NULL</b> if the specified window was not found.</param>
    <returns>
      <para>One of the following values, or a standard result code.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified window was found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified window was not found.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IShellWindows.OnActivated">
    <summary>Occurs when a Shell window's activation state changes.</summary>
    <param name="lCookie">The cookie that identifies the window.</param>
    <param name="fActive">
      <b>TRUE</b> if the window is being activated; <b>FALSE</b> if the window is being deactivated.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.OnCreated">
    <summary>Occurs when a new Shell window is created for a frame.</summary>
    <param name="lCookie">The cookie that identifies the window.</param>
    <param name="punk">The address of the new window's <see cref="IUnknown" /> interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.OnNavigate">
    <summary>Occurs when a Shell window is navigated to a new location.</summary>
    <param name="lCookie">The cookie that identifies the window.</param>
    <param name="pvarLoc">A <see cref="VARIANT" /> of type VT_VARIANT | VT_BYREF. Set the value of <i>pvarLoc</i> to an absolute <see cref="PIDL" /> (PIDLIST_ABSOLUTE) that specifies the new location.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.ProcessAttachDetach">
    <summary>Deprecated. Always returns S_OK.</summary>
    <param name="fAttach">Not used.</param>
    <returns>Always returns S_OK.</returns>
  </member>
  <member name="IShellWindows.Register">
    <summary>Registers an open window as a Shell window; the window is specified by handle.</summary>
    <param name="pid">The window's <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-idispatch">IDispatch</a> interface.</param>
    <param name="hwnd">A handle that specifies the window to register.</param>
    <param name="swClass">A member of <see cref="ShellWindowTypeConstants" /> that specifies the type of window.</param>
    <param name="plCookie">The window's cookie.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.RegisterPending">
    <summary>Registers a pending window as a Shell window; the window is specified by an absolute PIDL.</summary>
    <param name="lThreadId">A thread ID.</param>
    <param name="pvarloc">A <see cref="VARIANT" /> of type VT_VARIANT | VT_BYREF. Set the value of <i>pvarloc</i> to an absolute <see cref="PIDL" /> (PIDLIST_ABSOLUTE) that specifies the window to register.</param>
    <param name="pvarlocRoot">Must be <b>NULL</b> or of type VT_EMPTY.</param>
    <param name="swClass">A member of <see cref="ShellWindowTypeConstants" /> that specifies the type of window.</param>
    <param name="plCookie">The window's cookie.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows.Revoke">
    <summary>Revokes a Shell window's registration and removes the window from the Shell windows collection.</summary>
    <param name="lCookie">The cookie that identifies the window to un-register.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows._NewEnum">
    <summary>Retrieves an enumerator for the collection of Shell windows.</summary>
    <param name="ppunk">When this method returns, contains an interface pointer to an object that implements the <a href="https://docs.microsoft.com//previous-versions/windows/desktop/api/oaidl/nn-oaidl-ienumvariant">IEnumVARIANT</a> interface.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IShellWindows">
    <summary>Provides access to the collection of open Shell windows.</summary>
  </member>
</doc>