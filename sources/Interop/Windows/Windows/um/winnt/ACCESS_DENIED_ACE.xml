<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ACCESS_DENIED_ACE">
    <summary>
      <para>The <b>ACCESS_DENIED_ACE</b> structure defines an  <a href="https://docs.microsoft.com//windows/desktop/SecGloss/a-gly">access control entry</a> (ACE) for the  <a href="https://docs.microsoft.com//windows/desktop/SecGloss/d-gly">discretionary access control list</a> (DACL) that controls access to an object. An access-denied  ACE denies access to an object for a specific <a href="https://docs.microsoft.com//windows/desktop/SecGloss/t-gly">trustee</a> identified by a  <a href="https://docs.microsoft.com//windows/desktop/SecGloss/s-gly">security identifier</a> (SID).</para>
    </summary>
    <remarks>
      <para>
        <a href="https://docs.microsoft.com//windows/desktop/SecAuthZ/ace">ACE structures</a> must be aligned on <b>DWORD</b> boundaries. All Windows memory-management functions return <b>DWORD</b>-aligned handles to memory.</para>
      <para>The access rights specified by the <b>Mask</b> member are denied to any <a href="https://docs.microsoft.com//windows/desktop/SecGloss/t-gly">trustee</a> that possesses an enabled SID that matches the SID stored in the <b>SidStart</b> member.</para>
      <para>An <b>ACCESS_DENIED_ACE</b> structure can be created in an <a href="https://docs.microsoft.com//windows/desktop/SecGloss/a-gly">access control list</a> (ACL) by a call to the <see cref="AddAccessDeniedAce" /> or <see cref="AddAccessDeniedAceEx" /> function. When these functions are used, the correct amount of memory needed to accommodate the trustee's SID is allocated and the values of the <b>Header.AceType</b> and <b>Header.AceSize</b> members are set automatically. If the <b>AddAccessDeniedAceEx</b> function is used, the <b>Header.AceFlags</b> member is also set. When an <b>ACCESS_DENIED_ACE</b> structure is created outside an ACL, sufficient memory must be allocated to accommodate the complete SID of the trustee in the <b>SidStart</b> member and the contiguous memory following it, and the values of the <b>Header.AceType</b>, <b>Header.AceFlags</b>, and <b>Header.AceSize</b> members must be set explicitly by the application.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/SecAuthZ/ace">ACE</seealso>
    <seealso cref="ACL" />
    <seealso cref="AddAccessDeniedAce" />
    <seealso cref="SID" />
  </member>
  <member name="ACCESS_DENIED_ACE.Header">
    <summary>
      <para>An <see cref="ACE_HEADER" /> structure that specifies the size and type of ACE. It also contains flags that control inheritance of the ACE by child objects. The <b>AceType</b> member of the <b>ACE_HEADER</b> structure should be set to ACCESS_DENIED_ACE_TYPE, and the <b>AceSize</b> member should be set to the total number of bytes allocated for the <b>ACCESS_DENIED_ACE</b> structure.</para>
    </summary>
  </member>
  <member name="ACCESS_DENIED_ACE.Mask">
    <summary>
      <para>An
<a href="https://docs.microsoft.com//windows/desktop/SecAuthZ/access-mask">ACCESS_MASK</a> structure that specifies the access rights explicitly denied by this ACE.</para>
    </summary>
  </member>
  <member name="ACCESS_DENIED_ACE.SidStart">
    <summary>
      <para>The first <b>DWORD</b> of a trustee's SID. The remaining bytes of the SID  are stored in contiguous memory after the <b>SidStart</b> member. This SID can be appended with application data.</para>
    </summary>
  </member>
</doc>