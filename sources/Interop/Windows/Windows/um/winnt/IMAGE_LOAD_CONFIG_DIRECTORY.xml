<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY">
    <summary>Contains the load configuration data of an image.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Size">
    <summary>The size of the structure. For Windows XP, the size must be specified as 64 for x86 images.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.TimeDateStamp">
    <summary>The date and time stamp value. The value is represented in the number of seconds elapsed since midnight (00:00:00), January 1, 1970, Universal Coordinated Time, according to the system clock. The time stamp can be printed using the C run-time (CRT) function <b>ctime</b>.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MajorVersion">
    <summary>The major version number.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MinorVersion">
    <summary>The minor version number.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GlobalFlagsClear">
    <summary>The global flags that control system behavior. For more information, see Gflags.exe.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GlobalFlagsSet">
    <summary>The global flags that control system behavior. For more information, see Gflags.exe.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CriticalSectionDefaultTimeout">
    <summary>The critical section default time-out value.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DeCommitFreeBlockThreshold">
    <summary>The size of the minimum block that must be freed before it is freed (de-committed), in bytes. This value is advisory.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DeCommitTotalFreeThreshold">
    <summary>The size of the minimum total memory that must be freed in the process heap before it is freed (de-committed), in bytes. This value is advisory.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.LockPrefixTable">
    <summary>The VA of a list of addresses where the LOCK prefix is used. These will be replaced by NOP on single-processor systems. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MaximumAllocationSize">
    <summary>The maximum allocation size, in bytes. This member is obsolete and is used only for debugging purposes.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.VirtualMemoryThreshold">
    <summary>The maximum block size that can be allocated from heap segments, in bytes.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.ProcessHeapFlags">
    <summary>The process heap flags. For more information, see <see cref="HeapCreate" />.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.ProcessAffinityMask">
    <summary>The process affinity mask. For more information, see<see cref="GetProcessAffinityMask" />. This member is available only for .exe files.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CSDVersion">
    <summary>The service pack version.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DependentLoadFlags"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.EditList">
    <summary>Reserved for use by the system.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SecurityCookie">
    <summary>A pointer to a cookie that is used by Visual C++ or GS implementation.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SEHandlerTable">
    <summary>The VA of the sorted table of RVAs of each valid, unique handler in the image. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SEHandlerCount">
    <summary>The count of unique handlers in the table. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFCheckFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFDispatchFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFFunctionTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFFunctionCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardFlags"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CodeIntegrity"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardAddressTakenIatEntryTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardAddressTakenIatEntryCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardLongJumpTargetTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardLongJumpTargetCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CHPEMetadataPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFFailureRoutine"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFFailureRoutineFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTableOffset"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTableSection"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Reserved2"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFVerifyStackPointerFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.HotPatchTableOffset"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Reserved3"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.EnclaveConfigurationPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.VolatileMetadataPointer">
    <summary>
      <h4>- Reserved1</h4>
      <para>Reserved for use by the operating system.</para>
    </summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY">
    <summary>Contains the load configuration data of an image.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Size">
    <summary>The size of the structure. For Windows XP, the size must be specified as 64 for x86 images.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.TimeDateStamp">
    <summary>The date and time stamp value. The value is represented in the number of seconds elapsed since midnight (00:00:00), January 1, 1970, Universal Coordinated Time, according to the system clock. The time stamp can be printed using the C run-time (CRT) function <b>ctime</b>.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MajorVersion">
    <summary>The major version number.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MinorVersion">
    <summary>The minor version number.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GlobalFlagsClear">
    <summary>The global flags that control system behavior. For more information, see Gflags.exe.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GlobalFlagsSet">
    <summary>The global flags that control system behavior. For more information, see Gflags.exe.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CriticalSectionDefaultTimeout">
    <summary>The critical section default time-out value.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DeCommitFreeBlockThreshold">
    <summary>The size of the minimum block that must be freed before it is freed (de-committed), in bytes. This value is advisory.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DeCommitTotalFreeThreshold">
    <summary>The size of the minimum total memory that must be freed in the process heap before it is freed (de-committed), in bytes. This value is advisory.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.LockPrefixTable">
    <summary>The VA of a list of addresses where the LOCK prefix is used. These will be replaced by NOP on single-processor systems. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.MaximumAllocationSize">
    <summary>The maximum allocation size, in bytes. This member is obsolete and is used only for debugging purposes.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.VirtualMemoryThreshold">
    <summary>The maximum block size that can be allocated from heap segments, in bytes.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.ProcessAffinityMask">
    <summary>The process affinity mask. For more information, see<see cref="GetProcessAffinityMask" />. This member is available only for .exe files.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.ProcessHeapFlags">
    <summary>The process heap flags. For more information, see <see cref="HeapCreate" />.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CSDVersion">
    <summary>The service pack version.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DependentLoadFlags">
    <summary>The default load flags used when the operating system resolves the statically linked imports of a module. For more information, see <see cref="LoadLibraryEx" />.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.EditList">
    <summary>Reserved for use by the system.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SecurityCookie">
    <summary>A pointer to a cookie that is used by Visual C++ or GS implementation.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SEHandlerTable">
    <summary>The VA of the sorted table of RVAs of each valid, unique handler in the image. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.SEHandlerCount">
    <summary>The count of unique handlers in the table. This member is available only for x86.</summary>
  </member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFCheckFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFDispatchFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFFunctionTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardCFFunctionCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardFlags"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CodeIntegrity"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardAddressTakenIatEntryTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardAddressTakenIatEntryCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardLongJumpTargetTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardLongJumpTargetCount"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTable"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.CHPEMetadataPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFFailureRoutine"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFFailureRoutineFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTableOffset"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.DynamicValueRelocTableSection"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Reserved2"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.GuardRFVerifyStackPointerFunctionPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.HotPatchTableOffset"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.Reserved3"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.EnclaveConfigurationPointer"></member>
  <member name="IMAGE_LOAD_CONFIG_DIRECTORY.VolatileMetadataPointer"></member>
</doc>