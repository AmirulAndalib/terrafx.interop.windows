<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFAttributes.Compare">
    <summary>Compares the attributes on this object with the attributes on another object.</summary>
    <param name="pTheirs">Pointer to the <see cref="IMFAttributes" /> interface of the object to compare with this object.</param>
    <param name="MatchType">Member of the <see cref="MF_ATTRIBUTES_MATCH_TYPE" /> enumeration, specifying the type of comparison to make.</param>
    <param name="pbResult">Receives a Boolean value. The value is <b>TRUE</b> if the two sets of attributes match in the way specified by the <i>MatchType</i> parameter. Otherwise, the value is <b>FALSE</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.CompareItem">
    <summary>Queries whether a stored attribute value equals to a specified <b>PROPVARIANT</b>.</summary>
    <param name="guidKey">GUID that identifies which value to query.</param>
    <param name="Value">
      <b>PROPVARIANT</b> that contains the value to compare.</param>
    <param name="pbResult">Receives a Boolean value indicating whether the attribute matches the value given in <i>Value</i>. See Remarks. This parameter must not be <b>NULL</b>. If this parameter is <b>NULL</b>, an access violation occurs.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.DeleteAllItems">
    <summary>Removes all key/value pairs from the object's attribute list.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.DeleteItem">
    <summary>Removes a key/value pair from the object's attribute list.</summary>
    <param name="guidKey">GUID that identifies the value to delete.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetAllocatedBlob">
    <summary>Retrieves a byte array associated with a key. This method allocates the memory for the array.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
    <param name="ppBuf">If the key is found and the value is a byte array, this parameter receives a copy of the array. The caller must free the memory for the array by calling <see cref="CoTaskMemFree" />.</param>
    <param name="pcbSize">Receives the size of the array, in bytes.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a byte array.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetAllocatedString">
    <summary>Gets a wide-character string associated with a key. This method allocates the memory for the string.</summary>
    <param name="guidKey">A GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
    <param name="ppwszValue">If the key is found and the value is a string type, this parameter receives a copy of the string. The caller must free the memory for the string by calling <see cref="CoTaskMemFree" />.</param>
    <param name="pcchLength">Receives the number of characters in the string, excluding the terminating <b>NULL</b> character. This parameter must not be <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a string.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetBlob">
    <summary>Retrieves a byte array associated with a key. This method copies the array into a caller-allocated buffer.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
    <param name="pBuf">Pointer to a buffer allocated by the caller. If the key is found and the value is a byte array, the method copies the array into this buffer. To find the required size of the buffer, call <see cref="IMFAttributes.GetBlobSize" />.</param>
    <param name="cbBufSize">The size of the <i>pBuf</i> buffer, in bytes.</param>
    <param name="pcbBlobSize">Receives the size of the byte array. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>E_NOT_SUFFICIENT_BUFFER</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer is not large enough to the array.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_ATTRIBUTENOTFOUND</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>MF_E_INVALIDTYPE</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a byte array.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetBlobSize">
    <summary>Retrieves the length of a byte array associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_BLOB</b>.</param>
    <param name="pcbBlobSize">If the key is found and the value is a byte array, this parameter receives the size of the array, in bytes.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a byte array.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetCount">
    <summary>Retrieves the number of attributes that are set on this object.</summary>
    <param name="pcItems">Receives the number of attributes. This parameter must not be <b>NULL</b>. If this parameter is <b>NULL</b>, an access violation occurs.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetDouble">
    <summary>Retrieves a <b>double</b> value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_DOUBLE</b>.</param>
    <param name="pfValue">Receives a <b>double</b> value. If the key is found and the data type is <b>double</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a <b>double</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetGUID">
    <summary>Retrieves a GUID value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_GUID</b>.</param>
    <param name="pguidValue">Receives a GUID value. If the key is found and the data type is GUID, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a GUID.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetItem">
    <summary>Retrieves the value associated with a key.</summary>
    <param name="guidKey">A GUID that identifies which value to retrieve.</param>
    <param name="pValue">A pointer to a <b>PROPVARIANT</b> that receives the value. The method fills the <b>PROPVARIANT</b> with a copy of the stored value, if the value is found. Call <b>PropVariantClear</b> to free the memory allocated by this method. This parameter can be <b>NULL</b>. If this parameter is <b>NULL</b>, the method searches for the key and returns S_OK if the key is found, but does not copy the value.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetItemByIndex">
    <summary>Retrieves an attribute at the specified index.</summary>
    <param name="unIndex">Index of the attribute to retrieve. To get the number of attributes, call <see cref="IMFAttributes.GetCount" />.</param>
    <param name="pguidKey">Receives the GUID that identifies this attribute.</param>
    <param name="pValue">Pointer to a <b>PROPVARIANT</b> that receives the value. This parameter can be <b>NULL</b>. If it is not <b>NULL</b>, the method fills the <b>PROPVARIANT</b> with a copy of the attribute value. Call <b>PropVariantClear</b> to free the memory allocated by this method.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid index.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetItemType">
    <summary>Retrieves the data type of the value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to query.</param>
    <param name="pType">Receives a member of the <see cref="MF_ATTRIBUTE_TYPE" /> enumeration.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key is not stored in this object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetString">
    <summary>Retrieves a wide-character string associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
    <param name="pwszValue">Pointer to a wide-character array allocated by the caller. The array must be large enough to hold the string, including the terminating <b>NULL</b> character. If the key is found and the value is a string type, the method copies the string into this buffer. To find the length of the string, call <see cref="IMFAttributes.GetStringLength" />.</param>
    <param name="cchBufSize">The size of the <i>pwszValue</i> array, in characters. This value includes the terminating NULL character.</param>
    <param name="pcchLength">Receives the number of characters in the string, excluding the terminating <b>NULL</b> character. This parameter can be <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The length of the string is too large to fit in a <b>UINT32</b> value.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOT_SUFFICIENT_BUFFER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The buffer is not large enough to hold the string.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a string.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetStringLength">
    <summary>Retrieves the length of a string value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_STRING</b>.</param>
    <param name="pcchLength">If the key is found and the value is a string type, this parameter receives the number of characters in the string, not including the terminating <b>NULL</b> character. To get the string value, call <see cref="IMFAttributes.GetString" />.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a string.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetUINT32">
    <summary>Retrieves a <b>UINT32</b> value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_UINT32</b>.</param>
    <param name="punValue">Receives a <b>UINT32</b> value. If the key is found and the data type is <b>UINT32</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a <b>UINT32</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetUINT64">
    <summary>Retrieves a <b>UINT64</b> value associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_UINT64</b>.</param>
    <param name="punValue">Receives a <b>UINT64</b> value. If the key is found and the data type is <b>UINT64</b>, the method copies the value into this parameter. Otherwise, the original value of this parameter is not changed.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not a <b>UINT64</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.GetUnknown">
    <summary>Retrieves an interface pointer associated with a key.</summary>
    <param name="guidKey">GUID that identifies which value to retrieve. The attribute type must be <b>MF_ATTRIBUTE_IUNKNOWN</b>.</param>
    <param name="riid">Interface identifier (IID) of the interface to retrieve.</param>
    <param name="ppv">Receives a pointer to the requested interface. The caller must release the interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is an <b>IUnknown</b> pointer but does not support requested interface.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_ATTRIBUTENOTFOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified key was not found.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The attribute value is not an <b>IUnknown</b> pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.LockStore">
    <summary>Locks the attribute store so that no other thread can access it. If the attribute store is already locked by another thread, this method blocks until the other thread unlocks the object. After calling this method, call <see cref="IMFAttributes.UnlockStore" /> to unlock the object.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetBlob">
    <summary>Associates a byte array with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="pBuf">Pointer to a byte array to associate with this key. The method stores a copy of the array.</param>
    <param name="cbBufSize">Size of the array, in bytes.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetDouble">
    <summary>Associates a <b>double</b> value with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="fValue">New value for this key.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetGUID">
    <summary>Associates a GUID value with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="guidValue">New value for this key.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetItem">
    <summary>Adds an attribute value with a specified key.</summary>
    <param name="guidKey">A GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="Value">A <b>PROPVARIANT</b> that contains the attribute value. The method copies the value. The <b>PROPVARIANT</b> type must be one of the types listed in the <see cref="MF_ATTRIBUTE_TYPE" /> enumeration.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDTYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid attribute type.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetString">
    <summary>Associates a wide-character string with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="wszValue">Null-terminated wide-character string to associate with this key. The method stores a copy of the string.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetUINT32">
    <summary>Associates a <b>UINT32</b> value with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="unValue">New value for this key.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetUINT64">
    <summary>Associates a <b>UINT64</b> value with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="unValue">New value for this key.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.SetUnknown">
    <summary>Associates an <b>IUnknown</b> pointer with a key.</summary>
    <param name="guidKey">GUID that identifies the value to set. If this key already exists, the method overwrites the old value.</param>
    <param name="pUnknown">
      <b>IUnknown</b> pointer to be associated with this key.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes.UnlockStore">
    <summary>Unlocks the attribute store after a call to the <see cref="IMFAttributes.LockStore" /> method. While the object is unlocked, multiple threads can access the object's attributes.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFAttributes">
    <summary>
      <para>Provides a generic way to store key/value pairs on an object. The keys are <b>GUID</b>s, and the values can be any of the following data types: <b>UINT32</b>, <b>UINT64</b>, <b>double</b>, <b>GUID</b>, wide-character string, byte array, or <b>IUnknown</b> pointer. The standard implementation of this interface holds a thread lock while values are added, deleted, or retrieved.</para>
      <para>For a list of predefined attribute <b>GUID</b>s, see <a href="https://docs.microsoft.com//windows/desktop/medfound/media-foundation-attributes">Media Foundation Attributes</a>. Each attribute <b>GUID</b> has an expected data type. The various "set" methods in <b>IMFAttributes</b> do not validate the type against the attribute <b>GUID</b>. It is the application's responsibility to set the correct type for the attribute.</para>
      <para>To create an empty attribute store, call <see cref="MFCreateAttributes" />.</para>
    </summary>
  </member>
</doc>