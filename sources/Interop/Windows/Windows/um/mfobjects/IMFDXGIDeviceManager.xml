<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFDXGIDeviceManager.CloseDeviceHandle">
    <summary>Closes a Microsoft Direct3D device handle.</summary>
    <param name="hDevice">A handle to the Direct3D device.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is not a Direct3D device handle.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFDXGIDeviceManager.GetVideoService">
    <summary>Queries the Microsoft Direct3D device for an interface.</summary>
    <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <see cref="IMFDXGIDeviceManager.OpenDeviceHandle" />.</param>
    <param name="riid">
      <para>The interface identifier (IID) of the requested interface. The Direct3D device supports the following interfaces:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="ID3D11Device" />. To get a pointer to the Direct3D11 device, use <b>IID_ID3D11Device</b> as the <i>riid</i>.</description>
        </item>
        <item>
          <description>
            <see cref="ID3D11VideoDevice" />. To get a pointer to the Direct3D11 video device, use <b>IID_ID3D11VideoDevice</b> as the <i>riid</i>.</description>
        </item>
      </list>
    </param>
    <param name="ppService">Receives a pointer to the requested interface. The caller must release the interface.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is not a Direct3D device handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_DEVICE_NOT_INITIALIZED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DXGI Device Manager was not initialized. The owner of the device must call <see cref="IMFDXGIDeviceManager.ResetDevice" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If a <see cref="ID3D11VideoDevice" /> is specified and the D3D device created is using the reference rasterizer or WARP. Or it is a hardware device and you are using the Microsoft Basic Display Adapter.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFDXGIDeviceManager.LockDevice">
    <summary>Gives the caller exclusive access to the Microsoft Direct3D device.</summary>
    <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <see cref="IMFDXGIDeviceManager.OpenDeviceHandle" />.</param>
    <param name="riid">
      <para>The interface identifier (IID) of the requested interface. The Direct3D device will support the following interfaces:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="ID3D11Device" />
          </description>
        </item>
        <item>
          <description>
            <see cref="ID3D11VideoContext" />
          </description>
        </item>
        <item>
          <description>
            <see cref="ID3D11VideoDevice" />
          </description>
        </item>
      </list>
    </param>
    <param name="ppUnkDevice">Receives a pointer to the requested interface. The caller must release the interface.</param>
    <param name="fBlock">Specifies whether to wait for the device lock. If the device is already locked and this parameter is <b>TRUE</b>, the method blocks until the device is unlocked. Otherwise, if the device is locked and this parameter is <b>FALSE</b>, the method returns immediately with the error code <b>DXVA2_E_VIDEO_DEVICE_LOCKED</b>.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is not a Direct3D device handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_DEVICE_NOT_INITIALIZED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DXGI Device Manager was not initialized. The owner of the device must call <see cref="IMFDXGIDeviceManager.ResetDevice" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device handle is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_VIDEO_DEVICE_LOCKED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device is locked and <i>fBlock</i> is <b>FALSE</b>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFDXGIDeviceManager.OpenDeviceHandle">
    <summary>Gets a handle to the Microsoft Direct3D device.</summary>
    <param name="phDevice">Receives the device handle.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_DEVICE_NOT_INITIALIZED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The DXGI Device Manager was not initialized. The owner of the device must call <see cref="IMFDXGIDeviceManager.ResetDevice" />.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFDXGIDeviceManager.ResetDevice">
    <summary>Sets the Microsoft Direct3D device or notifies the device manager that the Direct3D device was reset.</summary>
    <param name="pUnkDevice">A pointer to the <see cref="IUnknown" /> interface of the DXGI device.</param>
    <param name="resetToken">The token that was received in the <i>pResetToken</i> parameter of the <see cref="MFCreateDXGIDeviceManager" /> function.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFDXGIDeviceManager.TestDevice">
    <summary>Tests whether a Microsoft Direct3D device handle is valid.</summary>
    <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <see cref="IMFDXGIDeviceManager.OpenDeviceHandle" />.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_HANDLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified handle is not a Direct3D device handle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_DXGI_NEW_VIDEO_DEVICE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The device handle is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFDXGIDeviceManager.UnlockDevice">
    <summary>Unlocks the Microsoft Direct3D device.</summary>
    <param name="hDevice">A handle to the Direct3D device. To get the device handle, call <see cref="IMFDXGIDeviceManager.OpenDeviceHandle" />.</param>
    <param name="fSaveState">Reserved.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFDXGIDeviceManager">
    <summary>Enables two threads to share the same Microsoft Direct3D 11 device.</summary>
  </member>
</doc>