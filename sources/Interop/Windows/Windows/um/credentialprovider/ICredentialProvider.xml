<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICredentialProvider.Advise">
    <summary>Allows a credential provider to initiate events in the Logon UI or Credential UI through a callback interface.</summary>
    <param name="pcpe">A pointer to an <see cref="ICredentialProviderEvents" /> callback interface to be used as the notification mechanism.</param>
    <param name="upAdviseContext">A pointer to an integer that uniquely identifies which credential provider has requested re-enumeration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.GetCredentialAt">
    <summary>Gets a specific credential.</summary>
    <param name="dwIndex">The zero-based index of the credential within the set of credentials enumerated for this credential provider.</param>
    <param name="ppcpc">The address of a pointer to a <see cref="ICredentialProviderCredential" /> instance representing the credential.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.GetCredentialCount">
    <summary>Gets the number of available credentials under this credential provider.</summary>
    <param name="pdwCount">A pointer to a <b>DWORD</b> value that receives the count of credentials.</param>
    <param name="pdwDefault">A pointer to a <b>DWORD</b> value that receives the index of the credential to be used as the default. If no default value has been set, this value should be set to <b>CREDENTIAL_PROVIDER_NO_DEFAULT</b>.</param>
    <param name="pbAutoLogonWithDefault">A pointer to a <b>BOOL</b> value indicating if the default credential identified by <i>pdwDefault</i> should be used for an auto logon attempt. An auto logon attempt means the Logon UI or Credential UI will immediately call <see cref="GetSerialization" /> on the provider's default tile.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.GetFieldDescriptorAt">
    <summary>Gets metadata that describes a specified field.</summary>
    <param name="dwIndex">The zero-based index of the field for which the information should be retrieved.</param>
    <param name="ppcpfd">The address of a pointer to a <see cref="CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR" /> structure which receives the information about the field.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.GetFieldDescriptorCount">
    <summary>Retrieves the count of fields in the needed to display this provider's credentials.</summary>
    <param name="pdwCount">Pointer to the field count.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.SetSerialization">
    <summary>Sets the serialization characteristics of the credential provider.</summary>
    <param name="pcpcs">A pointer to a <see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" /> structure that stores the serialization characteristics of the credential provider.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider.SetUsageScenario">
    <summary>Defines the scenarios for which the credential provider is valid. Called whenever the credential provider is initialized.</summary>
    <param name="cpus">The scenario the credential provider has been created in. This is the usage scenario that needs to be supported. See the Remarks for more information.</param>
    <param name="dwFlags">
      <para>A value that affects the behavior of the credential provider. This value can be a bitwise-OR combination of one or more of the following values defined in Wincred.h. See <see cref="CredUIPromptForWindowsCredentials" /> for more information.</para>
      <h4>CREDUIWIN_GENERIC (0x00000001)</h4>
      <para>0x00000001. The caller is requesting that the credential provider return the user name and password in plain text. This value cannot be combined with <b>CREDUIWIN_SECURE_PROMPT</b>.</para>
      <h4>CREDUIWIN_CHECKBOX (0x00000002)</h4>
      <para>0x00000002. The <b>Save</b> check box is displayed in the dialog box.</para>
      <h4>CREDUIWIN_AUTHPACKAGE_ONLY (0x00000010)</h4>
      <para>0x00000010. Only credential providers that support the input authentication package should be enumerated. If credential providers do not support the input authentication package, they should enumerate zero user tiles. This value cannot be combined with <b>CREDUIWIN_IN_CRED_ONLY</b>.</para>
      <h4>CREDUIWIN_IN_CRED_ONLY (0x00000020)</h4>
      <para>0x00000020. If the provider can serialize the credentials, then it should enumerate a tile for that credential. No other tiles should be enumerated. Credential providers should use the input <see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" /> in <see cref="ICredentialProvider.SetSerialization" /> and <i>dwFlags</i> in <b>ICredentialProvider.SetUsageScenario</b> in order to determine how many credential tiles to enumerate. This value cannot be combined with <b>CREDUIWIN_AUTHPACKAGE_ONLY</b>.</para>
      <h4>CREDUIWIN_ENUMERATE_ADMINS (0x00000100)</h4>
      <para>0x00000100. Credential providers should enumerate only administrators. This value is intended for UAC purposes only. We recommend that external callers not set this flag.</para>
      <h4>CREDUIWIN_ENUMERATE_CURRENT_USER (0x00000200)</h4>
      <para>0x00000200. Credential providers should enumerate a tile for the currently logged on user.</para>
      <h4>CREDUIWIN_SECURE_PROMPT (0x00001000)</h4>
      <para>0x00001000. The credential dialog box should be displayed on the secure desktop. This value cannot be combined with <b>CREDUIWIN_GENERIC</b>. Credential provider implementers can safely ignore this flag.</para>
      <h4>CREDUIWIN_PACK_32_WOW (0x10000000)</h4>
      <para>0x10000000. Buffers passed to the provider are 32-bit. Buffers returned from the provider must also be 32-bit. This is necessary for WOW64.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProvider">
    <summary>Exposes methods used in the setup and manipulation of a credential provider. All credential providers must implement this interface.</summary>
  </member>
</doc>