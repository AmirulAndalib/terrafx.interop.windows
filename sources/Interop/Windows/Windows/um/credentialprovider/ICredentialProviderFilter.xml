<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICredentialProviderFilter.Filter">
    <summary>
      <para>Evaluates whether a list of credential providers should be allowed to provide credential tiles.</para>
    </summary>
    <param name="cpus">
      <para>Type: <b><see cref="CREDENTIAL_PROVIDER_USAGE_SCENARIO" /></b></para>
      <para>A pointer to a <see cref="CREDENTIAL_PROVIDER_USAGE_SCENARIO" /> value that declares the scenarios in which a credential provider is supported.</para>
    </param>
    <param name="dwFlags">
      <para>Type: <b>DWORD</b></para>
      <para>Usage scenario flags. This parameter is valid only if <i>cpus</i> is CPUS_CREDUI. They are defined in Wincred.h.</para>
      <h4>CREDUIWIN_GENERIC</h4>
      <para>Plain text username/password is being requested.</para>
      <h4>CREDUIWIN_CHECKBOX</h4>
      <para>Show the <b>Save Credential</b> checkbox.</para>
      <h4>CREDUIWIN_AUTHPACKAGE_ONLY</h4>
      <para>Only credential providers that support the input authentication package should enumerate.</para>
      <h4>CREDUIWIN_IN_CRED_ONLY</h4>
      <para>Only the incoming credential for the specific authentication package should be enumerated.</para>
      <h4>CREDUIWIN_ENUMERATE_ADMINS</h4>
      <para>Credential providers should enumerate administrators.</para>
      <h4>CREDUIWIN_ENUMERATE_CURRENT_USER</h4>
      <para>Only the incoming credential</para>
      <h4>CREDUIWIN_PACK_32_WOW</h4>
    </param>
    <param name="rgclsidProviders">
      <para>Type: <b>GUID*</b></para>
      <para>A pointer to an array of credential provider CLSIDs.</para>
    </param>
    <param name="rgbAllow">
      <para>Type: <b>BOOL*</b></para>
      <para>On entry, a pointer to an array of <b>BOOL</b> values, one for each corresponding member of the <i>rgclsidProviders</i> array, all initialized to <b>TRUE</b>.</para>
      <para>On exit, contains <b>TRUE</b> if the corresponding credential provider in <i>rgclsidProviders</i> is allowed to provide a credential tile; otherwise, <b>FALSE</b>.</para>
    </param>
    <param name="cProviders">
      <para>Type: <b>DWORD</b></para>
      <para>The number of members in <i>rgbAllow</i> or <i>rgclsidProviders</i> (they should be the same).</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>Always returns S_OK.</para>
    </returns>
    <remarks>
      <para>On entry, this method receives two parallel arrays; <i>rgclsidProviders</i>, which contains the credential provider CLSIDs and <i>rgbAllow</i>, which contains <b>BOOL</b> values for the corresponding CLSIDs. <b>ICredentialProviderFilter.Filter</b> looks at each credential provider in <i>rgclsidProviders</i> and decides whether the credential provider should be allowed to enumerate credential tiles for the scenario specified by <i>dwFlags</i>. If this is acceptable, the corresponding entry in <i>rgbAllow</i> is set to <b>TRUE</b>. If this is unacceptable, it is set to <b>FALSE</b>.</para>
      <para>Never filter out a CLSID for a credential provider that you do not know about.</para>
      <para>Do not filter if <i>cpus</i> is CPUS_CREDUI and a <i>dwFlags</i> value of CREDUIWIN_GENERIC is passed in.</para>
      <para>It is legitimate to return success from the method and not modify <i>rgbAllow</i>.</para>
    </remarks>
  </member>
  <member name="ICredentialProviderFilter.UpdateRemoteCredential">
    <summary>
      <para>Updates a credential from a remote session.</para>
    </summary>
    <param name="pcpcsIn">
      <para>Type: <b>const <see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" />*</b></para>
      <para>A constant pointer to a <see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" /> structure.</para>
    </param>
    <param name="pcpcsOut">
      <para>Type: <b><see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" />*</b></para>
      <para>A pointer to a <see cref="CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION" /> structure.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
  </member>
  <member name="ICredentialProviderFilter">
    <summary>
      <para>Used to dynamically filter credential providers based on information available at runtime.</para>
    </summary>
    <remarks>
      <para>It is recommended that third party credential providers do not use this interface to filter or disable system credential providers on a desktop. If an enterprise deploys a third party credential provider and wants to disable system credential providers currently available, that is a decision that should be made by a domain administrator after careful consideration. System policies exist that enable administrators to filter out credential providers and those should be used instead of building filters directly into a third party credential provider.</para>
    </remarks>
  </member>
</doc>