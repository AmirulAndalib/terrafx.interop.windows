<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICredentialProviderCredential.Advise">
    <summary>Enables a credential to initiate events in the Logon UI or Credential UI through a callback interface. This method should be called before other methods in <see cref="ICredentialProviderCredential" /> interface.</summary>
    <param name="pcpce">A pointer to an <see cref="ICredentialProviderCredentialEvents" /> callback interface to be used as the notification mechanism.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.CommandLinkClicked">
    <summary>Enables the Logon UI and Credential UI to indicate that a link was clicked.</summary>
    <param name="dwFieldID">The identifier for the field clicked on.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetBitmapValue">
    <summary>Enables retrieval of bitmap data from a credential with a bitmap field.</summary>
    <param name="dwFieldID">The identifier for the field.</param>
    <param name="phbmp">Contains a pointer to the handle of the bitmap.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetCheckboxValue">
    <summary>Retrieves the checkbox value.</summary>
    <param name="dwFieldID">The identifier for the field.</param>
    <param name="pbChecked">Indicates the state of the checkbox. <b>TRUE</b> indicates the checkbox is checked, otherwise <b>FALSE</b>.</param>
    <param name="ppszLabel">Points to the label on the checkbox.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetComboBoxValueAt">
    <summary>Gets the string label for a combo box entry at the given index.</summary>
    <param name="dwFieldID">The identifier for the combo box to query.</param>
    <param name="dwItem">The index of the desired item.</param>
    <param name="ppszItem">A pointer to the string value that receives the combo box label.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetComboBoxValueCount">
    <summary>Gets a count of the items in the specified combo box and designates which item should have initial selection.</summary>
    <param name="dwFieldID">The identifier for the combo box to gather information about.</param>
    <param name="pcItems">A pointer to the number of items in the given combo box.</param>
    <param name="pdwSelectedItem">Contains a pointer to the item that receives initial selection.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetFieldState">
    <summary>Retrieves the field state. The Logon UI and Credential UI use this to gain information about a field of a credential to display this information in the user tile.</summary>
    <param name="dwFieldID">The identifier for the field.</param>
    <param name="pcpfs">A pointer to the credential provider field state. This indicates when the field should be displayed on the user tile.</param>
    <param name="pcpfis">A pointer to the credential provider field interactive state. This indicates when the user can interact with the field.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetSerialization">
    <summary>Called in response to an attempt to submit this credential to the underlying authentication engine.</summary>
    <param name="pcpgsr">Indicates the success or failure of the attempt to serialize credentials.</param>
    <param name="pcpcs">A pointer to the credential. Depending on the result, there may be no valid credential.</param>
    <param name="ppszOptionalStatusText">A pointer to a Unicode string value that will be displayed by the Logon UI after serialization. May be <b>NULL</b>.</param>
    <param name="pcpsiOptionalStatusIcon">A pointer to an icon that will be displayed by the credential after the call to <b>GetSerialization</b> returns. This value can be <b>NULL</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetStringValue">
    <summary>Enables retrieval of text from a credential with a text field.</summary>
    <param name="dwFieldID">The identifier for the field.</param>
    <param name="ppsz">A pointer to the memory containing a null-terminated Unicode string to return to the Logon UI or Credential UI.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.GetSubmitButtonValue">
    <summary>Retrieves the identifier of a field that the submit button should be placed next to in the Logon UI. The Credential UI does not call this method.</summary>
    <param name="dwFieldID">The identifier for the field a submit button value is needed for.</param>
    <param name="pdwAdjacentTo">
      <para>A pointer to a value that receives the field ID of the field that the submit button should be placed next to.</para>
      <para>
        <b>Note to implementers:</b> Do not return the field ID of a bitmap in this parameter. It is not good UI design to place the submit button next to a bitmap, and doing so can cause a failure in the Logon UI.</para>
    </param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.ReportResult">
    <summary>Translates a received error status code into the appropriate user-readable message. The Credential UI does not call this method.</summary>
    <param name="ntsStatus">The <a href="https://docs.microsoft.com//windows-hardware/drivers/kernel/ntstatus-values">NTSTATUS</a> value that reflects the return value of the <a href="https://docs.microsoft.com//windows/desktop/SecAuthN/winlogon">Winlogon</a> call to <see cref="LsaLogonUser" />.</param>
    <param name="ntsSubstatus">The <a href="https://docs.microsoft.com//windows-hardware/drivers/kernel/ntstatus-values">NTSTATUS</a> value that reflects the value pointed to by the <i>SubStatus</i> parameter of <see cref="LsaLogonUser" /> when that function returns after being called by <a href="https://docs.microsoft.com//windows/desktop/SecAuthN/winlogon">Winlogon</a>.</param>
    <param name="ppszOptionalStatusText">A pointer to the error message that will be displayed to the user. May be <b>NULL</b>.</param>
    <param name="pcpsiOptionalStatusIcon">A pointer to an icon that will shown on the credential. May be <b>NULL</b>.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.SetCheckboxValue">
    <summary>Enables a Logon UI and Credential UI to indicate that a checkbox value has changed.</summary>
    <param name="dwFieldID">The identifier for the field to update.</param>
    <param name="bChecked">Indicates the new value for the checkbox. <b>TRUE</b> means the checkbox should be checked, <b>FALSE</b> means unchecked.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.SetComboBoxSelectedValue">
    <summary>Enables a Logon UI and Credential UI to indicate that a combo box value has been selected.</summary>
    <param name="dwFieldID">The identifier for the combo box that is affected.</param>
    <param name="dwSelectedItem">The specific item selected.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.SetDeselected">
    <summary>Called when a credential loses selection.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.SetSelected">
    <summary>Called when a credential is selected. Enables the implementer to set logon characteristics.</summary>
    <param name="pbAutoLogon">When this method returns, contains <b>TRUE</b> if selection of the credential indicates that it should attempt to logon immediately and automatically, otherwise <b>FALSE</b>. For example, a credential provider that enumerates an account without a password may want to return this as true.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.SetStringValue">
    <summary>Enables a Logon UI or Credential UI to update the text for a <b>CPFT_EDIT_TEXT</b> fields as the user types in them.</summary>
    <param name="dwFieldID">The identifier for the field that needs to be updated.</param>
    <param name="psz">A pointer to a buffer containing the new text.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential.UnAdvise">
    <summary>Used by the Logon UI or Credential UI to advise the credential that event callbacks are no longer accepted.</summary>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="ICredentialProviderCredential">
    <summary>Exposes methods that enable the handling of a credential.</summary>
  </member>
</doc>