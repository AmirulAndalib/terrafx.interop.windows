<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICredentialProviderUserArray.GetAccountOptions">
    <summary>
      <para>Retrieves a value that indicates whether the "Other user" tile for local or Microsoft accounts is shown in the logon or credential UI. This information can be used by a credential provider to show the same behavior as the password or Microsoft account provider.</para>
    </summary>
    <param name="credentialProviderAccountOptions">
      <para>A pointer to a value that, when this method returns successfully, receives one or more flags that specify which empty tiles are shown by the logon or credential UI.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="ICredentialProviderUserArray" />
  </member>
  <member name="ICredentialProviderUserArray.GetAt">
    <summary>
      <para>Retrieves a specified user from the array.</para>
    </summary>
    <param name="userIndex">
      <para>The 0-based array index of the user. The size of the array can be obtained through the <see cref="GetCount" /> method.</para>
    </param>
    <param name="user">
      <para>The address of a pointer to an object that, when this method returns successfully, represents the specified user. It is the responsibility of the caller to free this object when it is no longer needed by calling its <see cref="Release" /> method.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code, including the following:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>The index specified in <i>userIndex</i> is out of range.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="ICredentialProviderUserArray" />
  </member>
  <member name="ICredentialProviderUserArray.GetCount">
    <summary>
      <para>Retrieves the number of <see cref="ICredentialProviderUser" /> objects in the user array.</para>
    </summary>
    <param name="userCount">
      <para>A pointer to a value that, when this method returns successfully, receives the number of users in the array.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="ICredentialProviderUserArray" />
  </member>
  <member name="ICredentialProviderUserArray.SetProviderFilter">
    <summary>
      <para>Limits the set of users in the array to either local accounts or Microsoft accounts.</para>
    </summary>
    <param name="guidProviderToFilterTo">
      <para>Set this parameter to Identity_LocalUserProvider for the local accounts credential provider; otherwise set it to the GUID of the Microsoft account provider.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>The <see cref="ICredentialProviderUserArray" /> object contains all of the available users in the current <see cref="scenario" />. This method enables your credential provider to specify a particular subset of those users. For example, if your credential provider handles only Microsoft account users from a specific connected provider, it can call this method with the Microsoft account provider's ID to filter out users that belong to other providers.</para>
      <para>This method can only be called once, to filter for a single account provider. If the method is called again, the call will fail with a return value of E_UNEXPECTED.</para>
    </remarks>
    <seealso cref="ICredentialProviderUser.GetProviderID" />
    <seealso cref="ICredentialProviderUserArray" />
  </member>
  <member name="ICredentialProviderUserArray">
    <summary>
      <para>Represents the set of users that will appear in the logon or credential UI. This information enables the credential provider to enumerate the set to retrieve property information about each user to populate fields or filter the set.</para>
    </summary>
    <remarks>
      <para>This object is provided by the Windows credential provider framework to your credential provider through the <see cref="ICredentialProviderSetUserArray.SetUserArray" /> method. Ownership of this object remains with the credential provider framework.</para>
      <h3>When to implement</h3>
      <para>Third-parties do not implement this interface. An implementation is included with Windows.</para>
      <h4>Examples</h4>
      <para>The following example demonstrates a scenario that uses some of the methods of this interface. The <code>pcpua</code> variable represents a previously declared <b>ICredentialProviderUserArray</b> object.</para>
      <code>
DWORD dwCount = 0;

HRESULT hr = pcpua-&gt;GetCount(&amp;amp;amp;amp;amp;amp;dwCount);

if (SUCCEEDED(hr))
{
    for (DWORD i = 0; i &lt; dwCount; i++)
    {
        ICredentialProviderUser *pcpu = NULL;
        hr = pcpua-&gt;GetAt(i, &amp;amp;amp;amp;amp;amp;pcpu);

        if (SUCCEEDED(hr))
        {
            PWSTR pszName = NULL;
            hr = pcpu-&gt;GetStringValue(PKEY_Identity_UserName, &amp;amp;amp;amp;amp;amp;pszName);

            if (SUCCEEDED(hr))
            {
                // Do something with the string
                CoTaskMemFree(pszName);
            }
            pcpu-&gt;Release();
        }
    }
}
</code>
    </remarks>
    <seealso cref="ICredentialProviderSetUserArray" />
    <seealso cref="ICredentialProviderUser" />
    <seealso cref="IUnknown" />
  </member>
</doc>