<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="ICredentialProviderCredential2.GetUserSid">
    <summary>
      <para>Retrieves the security identifier (SID) of the user that is associated with this credential.</para>
    </summary>
    <param name="sid">
      <para>The address of a pointer to a buffer that, when this method returns successfully, receives the user's SID.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>The Logon UI will use the returned SID from this method to associate the credential tile with a user tile. To associate the credential with the "Other user" user tile in the Logon UI, this method should return <b>S_FALSE</b> and a null SID. The "Other user" tile is normally only valid when the PC is joined to a domain.</para>
      <h4>Examples</h4>
      <para>The following example shows a sample implementation of this method. It retrieves the user's SID that corresponds to the credential.</para>
      <para>The <i>_pszUserSid</i> variable used here is assumed to be a private member of the class, defined outside of this method and set to the user's SID.</para>
      <para>The resource pointed to by <i>ppszSid</i> will be freed by the logon UI, so it does not need to be freed here.</para>
      <para>If the user's SID is not available, the method returns <b>S_FALSE</b> with a null SID, which associates the credential with an anonymous user tile. This will cause the tile to appear when the "Other user" tile is selected on a domain-joined PC.</para>
      <code>
// Gets the SID of the user corresponding to the credential.
HRESULT CSampleCredential.GetUserSid(__deref_out PWSTR *ppszSid)
{
    *ppszSid = nullptr;
    HRESULT hr = E_UNEXPECTED;

    // _pszUserSid is a private member of CSampleCredential
    if (_pszUserSid != nullptr)
    {
        // ppszSid will be freed by Logon UI
        hr = SHStrDupW(_pszUserSid, ppszSid);
    }
    // Return S_FALSE with a null SID in ppszSid for the
    // credential to be associated with an anonymous user tile.
    else if (_fIsOtherUserTile)
    {
        hr = S_FALSE;
    }

    return hr;
}

</code>
    </remarks>
    <seealso cref="ICredentialProviderCredential2" />
    <seealso cref="ICredentialProviderUser.GetSid" />
  </member>
  <member name="ICredentialProviderCredential2">
    <summary>
      <para>Extends the <see cref="ICredentialProviderCredential" /> interface by adding a method that retrieves the security identifier (SID) of a user. The credential is associated with that user and can be grouped under the user's tile.</para>
    </summary>
    <remarks>
      <para>This class is required for creating a V2 credential provider. V2 credential providers provide a personalized log on experience for the user. This occurs by the credential provider telling the Logon UI what sign in options are available for a user. It is recommended that new credential providers should be V2 credential providers.</para>
      <para>In order to create an <b>ICredentialProviderCredential2</b> instance, a valid SID needs to be returned by the <see cref="GetUserSid" /> function. Valid is defined by the returned SID being for one of the users currently enumerated by the Logon UI.</para>
      <para>A useful tool for getting the available users and determining which ones you want to associate with is the <see cref="ICredentialProviderUserArray" /> object. This object contains a list of <see cref="ICredentialProviderUser" /> objects that can be queried to gain information about the users that will be enumerated. For example you could gain the user's SID or username using <see cref="GetStringValue" /> with a passed in parameter of <b>PKEY_Identity_PrimarySid</b> or <b>PKEY_Identity_USerName</b> respectively. You can even filter the results using <see cref="SetProviderFilter" /> to only display a subset of available users.</para>
      <para>Using the <see cref="ICredentialProviderUserArray" /> is optional, but it is a convenient way to get the necessary information to make valid SID values. In order to get a list of users that will be enumerated by the Logon UI, implement the <see cref="ICredentialProviderSetUserArray" /> interface to get the <b>ICredentialProviderUserArray</b> object from <see cref="SetUserArray" />. Logon UI calls <b>SetUserArray</b> before <see cref="GetCredentialCount" />, so the <b>ICredentialProviderUserArray</b> object is ready when a credential provider is about to return credentials.</para>
      <para>A V2 credential provider  is represented by an icon displayed underneath the "Sign-in options" link. In order to provide an icon for your credential provider, define a <see cref="CREDENTIAL_PROVIDER_FIELD_TYPE" /> of  <b>CPFT_TILE_IMAGE</b> in the credential itself. Then make sure the <i>guidFieldType</i> of the  <see cref="CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR" /> is set to <b>CPFG_CREDENTIAL_PROVIDER_LOGO</b>. The recommended size for an icon is 72 by 72 pixels.</para>
      <para>Similar to specifying an icon for your credential provider, you can also specify a text string to identify your credential provider. This string appears in a pop-up window when a user hovers over the icon. To do this, define a <see cref="CREDENTIAL_PROVIDER_FIELD_TYPE" /> of  <b>CPFT_SMALL_TEXT</b> in the credential itself. Then make sure the <i>guidFieldType</i> of the  <see cref="CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR" /> is set to <b>CPFG_CREDENTIAL_PROVIDER_LABEL</b>. This string should supplement the credential provider icon described above and be descriptive enough that users understand what it is. For example, the picture password provider's description is "Picture Password".</para>
      <h3>When to implement</h3>
      <para>Implement this interface to associate credential tiles with specific user tiles in the Logon UI.</para>
    </remarks>
    <seealso href="https://docs.microsoft.com//windows/desktop/SecAuthN/credential-providers-in-windows">Credential Providers in Windows 10</seealso>
    <seealso cref="ICredentialProviderCredential" />
    <seealso cref="ICredentialProviderCredentialEvents2" />
  </member>
</doc>