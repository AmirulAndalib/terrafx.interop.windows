<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.CreateToolhelp32Snapshot">
    <summary>Takes a snapshot of the specified processes, as well as the heaps, modules, and threads used by these processes.</summary>
    <param name="dwFlags">
      <para>The portions of the system to be included in the snapshot. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_INHERIT</b>
                </term>
              </listheader>
              <listheader>
                <term>0x80000000</term>
              </listheader>
            </list>
          </description>
          <description>Indicates that the snapshot handle is to be inheritable.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPALL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Includes all processes and threads in the system, plus the heaps and modules of the process specified in <i>th32ProcessID</i>. Equivalent to specifying the <b>TH32CS_SNAPHEAPLIST</b>, <b>TH32CS_SNAPMODULE</b>, <b>TH32CS_SNAPPROCESS</b>, and <b>TH32CS_SNAPTHREAD</b> values combined using an OR operation ('|').</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPHEAPLIST</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000001</term>
              </listheader>
            </list>
          </description>
          <description>Includes all heaps of the process specified in <i>th32ProcessID</i> in the snapshot. To enumerate the heaps, see <see cref="Heap32ListFirst" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPMODULE</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000008</term>
              </listheader>
            </list>
          </description>
          <description>Includes all modules of the process specified in <i>th32ProcessID</i> in the snapshot. To enumerate the modules, see <see cref="Module32First" />. If the function fails with <b>ERROR_BAD_LENGTH</b>, retry the function until it succeeds.<para><b>64-bit Windows:  </b>Using this flag in a 32-bit process includes the 32-bit modules of the process specified in <i>th32ProcessID</i>, while using it in a 64-bit process includes the 64-bit modules. To include the 32-bit modules of the process specified in <i>th32ProcessID</i> from a 64-bit process, use the <b>TH32CS_SNAPMODULE32</b> flag.</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPMODULE32</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000010</term>
              </listheader>
            </list>
          </description>
          <description>Includes all 32-bit modules of the process specified in <i>th32ProcessID</i> in the snapshot when called from a 64-bit process. This flag can be combined with <b>TH32CS_SNAPMODULE</b> or <b>TH32CS_SNAPALL</b>. If the function fails with <b>ERROR_BAD_LENGTH</b>, retry the function until it succeeds.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPPROCESS</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000002</term>
              </listheader>
            </list>
          </description>
          <description>Includes all processes in the system in the snapshot. To enumerate the processes, see <see cref="Process32First" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TH32CS_SNAPTHREAD</b>
                </term>
              </listheader>
              <listheader>
                <term>0x00000004</term>
              </listheader>
            </list>
          </description>
          <description>Includes all threads in the system in the snapshot. To enumerate the threads, see <see cref="Thread32First" />.<para>To identify the threads that belong to a specific process, compare its process identifier to the <b>th32OwnerProcessID</b> member of the<see cref="THREADENTRY32" /> structure when enumerating the threads.</para></description>
        </listheader>
      </list>
    </param>
    <param name="th32ProcessID">
      <para>The process identifier of the process to be included in the snapshot. This parameter can be zero to indicate the current process. This parameter is used when the <b>TH32CS_SNAPHEAPLIST</b>, <b>TH32CS_SNAPMODULE</b>, <b>TH32CS_SNAPMODULE32</b>, or <b>TH32CS_SNAPALL</b> value is specified. Otherwise, it is ignored and all processes are included in the snapshot.</para>
      <para>If the specified process is the Idle process or one of the CSRSS processes, this function fails and the last error code is <b>ERROR_ACCESS_DENIED</b> because their access restrictions prevent user-level code from opening them.</para>
      <para>If the specified process is a 64-bit process and the caller is a 32-bit process, this function fails and the last error code is <b>ERROR_PARTIAL_COPY</b> (299).</para>
    </param>
    <returns>
      <para>If the function succeeds, it returns an open handle to the specified snapshot.</para>
      <para>If the function fails, it returns <b>INVALID_HANDLE_VALUE</b>. To get extended error information, call<see cref="GetLastError" />. Possible error codes include <b>ERROR_BAD_LENGTH</b>.</para>
    </returns>
  </member>
  <member name="Windows.Heap32First">
    <summary>Retrieves information about the first block of a heap that has been allocated by a process.</summary>
    <param name="lphe">A pointer to a<see cref="HEAPENTRY32" /> structure.</param>
    <param name="th32ProcessID">The identifier of the process context that owns the heap.</param>
    <param name="th32HeapID">The identifier of the heap to be enumerated.</param>
    <returns>Returns <b>TRUE</b> if information for the first heap block has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if the heap is invalid or empty.</returns>
  </member>
  <member name="Windows.Heap32ListFirst">
    <summary>Retrieves information about the first heap that has been allocated by a specified process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lphl">A pointer to a<see cref="HEAPLIST32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the heap list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function when no heap list exists or the snapshot does not contain heap list information.</returns>
  </member>
  <member name="Windows.Heap32ListNext">
    <summary>Retrieves information about the next heap that has been allocated by a process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lphl">A pointer to a<see cref="HEAPLIST32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the heap list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function when no more entries in the heap list exist.</returns>
  </member>
  <member name="Windows.Heap32Next">
    <summary>Retrieves information about the next block of a heap that has been allocated by a process.</summary>
    <param name="lphe">A pointer to a<see cref="HEAPENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if information about the next block in the heap has been copied to the buffer or <b>FALSE</b> otherwise. The<see cref="GetLastError" /> function returns <b>ERROR_NO_MORE_FILES</b> when no more objects in the heap exist and <b>ERROR_INVALID_DATA</b> if the heap appears to be corrupt or is modified during the walk in such a way that<b>Heap32Next</b> cannot continue.</returns>
  </member>
  <member name="Windows.Module32First">
    <summary>Retrieves information about the first module associated with a process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no modules exist or the snapshot does not contain module information.</returns>
  </member>
  <member name="Windows.Module32FirstW">
    <summary>Retrieves information about the first module associated with a process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no modules exist or the snapshot does not contain module information.</returns>
  </member>
  <member name="Windows.Module32First">
    <summary>Retrieves information about the first module associated with a process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no modules exist or the snapshot does not contain module information.</returns>
  </member>
  <member name="Windows.Module32FirstW">
    <summary>Retrieves information about the first module associated with a process.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no modules exist or the snapshot does not contain module information.</returns>
  </member>
  <member name="Windows.Module32Next">
    <summary>Retrieves information about the next module associated with a process or thread.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no more modules exist.</returns>
  </member>
  <member name="Windows.Module32NextW">
    <summary>Retrieves information about the next module associated with a process or thread.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no more modules exist.</returns>
  </member>
  <member name="Windows.Module32Next">
    <summary>Retrieves information about the next module associated with a process or thread.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no more modules exist.</returns>
  </member>
  <member name="Windows.Module32NextW">
    <summary>Retrieves information about the next module associated with a process or thread.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpme">A pointer to a<see cref="MODULEENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the module list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no more modules exist.</returns>
  </member>
  <member name="Windows.Process32First">
    <summary>Retrieves information about the first process encountered in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32" /> structure. It contains process information such as the name of the executable file, the process identifier, and the process identifier of the parent process.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32FirstW">
    <summary>Retrieves information about the first process encountered in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32" /> structure. It contains process information such as the name of the executable file, the process identifier, and the process identifier of the parent process.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32First">
    <summary>Retrieves information about the first process encountered in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32W" /> structure. It contains process information such as the name of the executable file, the process identifier, and the process identifier of the parent process.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32FirstW">
    <summary>Retrieves information about the first process encountered in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32W" /> structure. It contains process information such as the name of the executable file, the process identifier, and the process identifier of the parent process.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32Next">
    <summary>Retrieves information about the next process recorded in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32NextW">
    <summary>Retrieves information about the next process recorded in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32Next">
    <summary>Retrieves information about the next process recorded in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Process32NextW">
    <summary>Retrieves information about the next process recorded in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lppe">A pointer to a<see cref="PROCESSENTRY32W" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the process list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no processes exist or the snapshot does not contain process information.</returns>
  </member>
  <member name="Windows.Thread32First">
    <summary>Retrieves information about the first thread of any process encountered in a system snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpte">A pointer to a<see cref="THREADENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the first entry of the thread list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no threads exist or the snapshot does not contain thread information.</returns>
  </member>
  <member name="Windows.Thread32Next">
    <summary>Retrieves information about the next thread of any process encountered in the system memory snapshot.</summary>
    <param name="hSnapshot">A handle to the snapshot returned from a previous call to the<see cref="CreateToolhelp32Snapshot" /> function.</param>
    <param name="lpte">A pointer to a<see cref="THREADENTRY32" /> structure.</param>
    <returns>Returns <b>TRUE</b> if the next entry of the thread list has been copied to the buffer or <b>FALSE</b> otherwise. The <b>ERROR_NO_MORE_FILES</b> error value is returned by the<see cref="GetLastError" /> function if no threads exist or the snapshot does not contain thread information.</returns>
  </member>
  <member name="Windows.Toolhelp32ReadProcessMemory">
    <summary>Copies memory allocated to another process into an application-supplied buffer.</summary>
    <param name="th32ProcessID">The identifier of the process whose memory is being copied. This parameter can be zero to copy the memory of the current process.</param>
    <param name="lpBaseAddress">The base address in the specified process to read. Before transferring any data, the system verifies that all data in the base address and memory of the specified size is accessible for read access. If this is the case, the function proceeds. Otherwise, the function fails.</param>
    <param name="lpBuffer">A pointer to a buffer that receives the contents of the address space of the specified process.</param>
    <param name="cbRead">The number of bytes to read from the specified process.</param>
    <param name="lpNumberOfBytesRead">The number of bytes copied to the specified buffer. If this parameter is <b>NULL</b>, it is ignored.</param>
    <returns>Returns <b>TRUE</b> if successful.</returns>
  </member>
</doc>