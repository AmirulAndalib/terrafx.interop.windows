<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="MODULEENTRY32">
    <summary>
      <para>Describes an entry from a list of the modules belonging to the specified process.</para>
    </summary>
    <remarks>
      <para>The <b>modBaseAddr</b> and <b>hModule</b> members are valid only in the context of the process specified by <i>th32ProcessID</i>.</para>
      <h4>Examples</h4>
      <para>For an example that uses <b>MODULEENTRY32</b>, see <a href="https://docs.microsoft.com//windows/desktop/ToolHelp/traversing-the-module-list">Traversing the Module List</a>.</para>
    </remarks>
    <seealso cref="Module32First" />
    <seealso cref="Module32Next" />
  </member>
  <member name="MODULEENTRY32.dwSize">
    <summary>
      <para>The size of the structure, in bytes. Before calling the
<see cref="Module32First" /> function, set this member to <code>sizeof(MODULEENTRY32)</code>. If you do not initialize <b>dwSize</b>,
<b>Module32First</b> fails.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.th32ModuleID">
    <summary>
      <para>This member is no longer used, and is always set to one.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.th32ProcessID">
    <summary>
      <para>The identifier of the process whose modules are to be examined.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.GlblcntUsage">
    <summary>
      <para>The load count of the module, which is not generally meaningful, and usually equal to 0xFFFF.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.ProccntUsage">
    <summary>
      <para>The load count of the module (same as <i>GlblcntUsage</i>), which is not generally meaningful, and usually equal to 0xFFFF.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.modBaseAddr">
    <summary>
      <para>The base address of the module in the context of the owning process.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.modBaseSize">
    <summary>
      <para>The size of the module, in bytes.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.hModule">
    <summary>
      <para>A handle to the module in the context of the owning process.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.szModule">
    <summary>
      <para>The module name.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.szExePath">
    <summary>
      <para>The module path.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32">
    <summary>
      <para>Describes an entry from a list of the modules belonging to the specified process.</para>
    </summary>
    <remarks>
      <para>The <b>modBaseAddr</b> and <b>hModule</b> members are valid only in the context of the process specified by <i>th32ProcessID</i>.</para>
      <h4>Examples</h4>
      <para>For an example that uses <b>MODULEENTRY32</b>, see <a href="https://docs.microsoft.com//windows/desktop/ToolHelp/traversing-the-module-list">Traversing the Module List</a>.</para>
      <blockquote>
        <para>[!NOTE]
The tlhelp32.h header defines MODULEENTRY32 as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see <a href="https://docs.microsoft.com//windows/win32/intl/conventions-for-function-prototypes">Conventions for Function Prototypes</a>.</para>
      </blockquote>
    </remarks>
    <seealso cref="Module32First" />
    <seealso cref="Module32Next" />
  </member>
  <member name="MODULEENTRY32.dwSize">
    <summary>
      <para>The size of the structure, in bytes. Before calling the
<see cref="Module32First" /> function, set this member to <code>sizeof(MODULEENTRY32)</code>. If you do not initialize <b>dwSize</b>,
<b>Module32First</b> fails.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.th32ModuleID">
    <summary>
      <para>This member is no longer used, and is always set to one.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.th32ProcessID">
    <summary>
      <para>The identifier of the process whose modules are to be examined.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.GlblcntUsage">
    <summary>
      <para>The load count of the module, which is not generally meaningful, and usually equal to 0xFFFF.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.ProccntUsage">
    <summary>
      <para>The load count of the module (same as <i>GlblcntUsage</i>), which is not generally meaningful, and usually equal to 0xFFFF.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.modBaseAddr">
    <summary>
      <para>The base address of the module in the context of the owning process.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.modBaseSize">
    <summary>
      <para>The size of the module, in bytes.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.hModule">
    <summary>
      <para>A handle to the module in the context of the owning process.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.szModule">
    <summary>
      <para>The module name.</para>
    </summary>
  </member>
  <member name="MODULEENTRY32.szExePath">
    <summary>
      <para>The module path.</para>
    </summary>
  </member>
</doc>