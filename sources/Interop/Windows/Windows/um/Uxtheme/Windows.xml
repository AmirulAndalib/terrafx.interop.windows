<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.BeginBufferedAnimation">
    <summary>Begins a buffered animation operation. The animation consists of a cross-fade between the contents of two buffers over a specified period of time.</summary>
    <param name="hwnd">A handle to the window in which the animations play.</param>
    <param name="hdcTarget">A handle of the target DC on which the buffer is animated.</param>
    <param name="prcTarget">A pointer to a structure that specifies the area of the target DC in which to draw.</param>
    <param name="dwFormat">The format of the buffer.</param>
    <param name="pPaintParams">A pointer to a structure that defines the paint operation parameters. This value can be <b>NULL</b>.</param>
    <param name="pAnimationParams">A pointer to a structure that defines the animation operation parameters.</param>
    <param name="phdcFrom">When this function returns, this value points to the handle of the DC where the application should paint the initial state of the animation, if not <b>NULL</b>.</param>
    <param name="phdcTo">When this function returns, this value points to the handle of the DC where the application should paint the final state of the animation, if not <b>NULL</b>.</param>
    <returns>A handle to the buffered paint animation.</returns>
  </member>
  <member name="Windows.BeginBufferedPaint">
    <summary>Begins a buffered paint operation.</summary>
    <param name="hdcTarget">The handle of the target DC on which the buffer will be painted.</param>
    <param name="prcTarget">A pointer to a <see cref="RECT" /> structure that specifies the area of the target DC in which to paint.</param>
    <param name="dwFormat">A member of the <see cref="BP_BUFFERFORMAT" /> enumeration that specifies the format of the buffer.</param>
    <param name="pPaintParams">A pointer to a <see cref="BP_PAINTPARAMS" /> structure that defines the paint operation parameters. This value can be <b>NULL</b>.</param>
    <param name="phdc">When this function returns, points to the handle of the new device context.</param>
    <returns>
      <para>A handle to the buffered paint context. If this function fails, the return value is <b>NULL</b>, and <i>phdc</i> is <b>NULL</b>. To get extended error information, call <see cref="GetLastError" />.</para>
      <para>The returned handle is freed when <see cref="EndBufferedPaint" /> is called.</para>
      <para>An application should call <see cref="BufferedPaintInit" /> on the calling thread before calling <b>BeginBufferedPaint</b>, and <see cref="BufferedPaintUnInit" /> before the thread is terminated. Failure to call <b>BufferedPaintInit</b> may result in degraded performance due to internal data being initialized and destroyed for each buffered paint operation.</para>
    </returns>
  </member>
  <member name="Windows.BeginPanningFeedback">
    <summary>Notifies the system to send feedback about a target window affected by panning gestures.</summary>
    <param name="hwnd">The handle to the target window that will receive feedback.</param>
    <returns>TRUE, if successful.</returns>
  </member>
  <member name="Windows.BufferedPaintClear">
    <summary>Clears a specified rectangle in the buffer to ARGB = {0,0,0,0}.</summary>
    <param name="hBufferedPaint">The handle of the buffered paint context, obtained through <see cref="BeginBufferedPaint" />.</param>
    <param name="prc">A pointer to a <see cref="RECT" /> structure that specifies the rectangle to clear. Set this parameter to <b>NULL</b> to specify the entire buffer.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.BufferedPaintInit">
    <summary>Initialize buffered painting for the current thread.</summary>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.BufferedPaintRenderAnimation">
    <summary>Paints the next frame of a buffered paint animation.</summary>
    <param name="hwnd">Handle to the window in which the animations play.</param>
    <param name="hdcTarget">Handle of the target DC on which the buffer is animated.</param>
    <returns>Returns <b>TRUE</b> if the frame has been painted, or <b>FALSE</b> otherwise.</returns>
  </member>
  <member name="Windows.BufferedPaintSetAlpha">
    <summary>Sets the alpha to a specified value in a given rectangle. The alpha controls the amount of transparency applied when blending with the buffer onto the destination target device context (DC).</summary>
    <param name="hBufferedPaint">The handle of the buffered paint context, obtained through <see cref="BeginBufferedPaint" />.</param>
    <param name="prc">A pointer to a <see cref="RECT" /> structure that specifies the rectangle in which to set the alpha. Set this parameter to <b>NULL</b> to specify the entire buffer.</param>
    <param name="alpha">The alpha value to set. The alpha value can range from zero (fully transparent) to 255 (fully opaque).</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.BufferedPaintStopAllAnimations">
    <summary>Stops all buffered animations for the given window.</summary>
    <param name="hwnd">The handle of the window in which to stop all animations.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.BufferedPaintUnInit">
    <summary>Closes down buffered painting for the current thread. Called once for each call to <see cref="BufferedPaintInit" /> after calls to <see cref="BeginBufferedPaint" /> are no longer needed.</summary>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.CloseThemeData">
    <summary>Closes the theme data handle.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an <b>HTHEME</b>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeBackground">
    <summary>Draws the border and fill defined by the visual style for the specified control part.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC used for drawing the theme-defined background image.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part to draw. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part to draw. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains the rectangle, in logical coordinates, in which the background image is drawn.</param>
    <param name="pClipRect">Pointer to a <see cref="RECT" /> structure that contains a clipping rectangle. This parameter may be set to <b>NULL</b>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeEdge">
    <summary>Draws one or more edges defined by the visual style of a rectangle.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the rectangle. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pDestRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the rectangle.</param>
    <param name="uEdge">
      <para>
        <b>UINT</b> that specifies the type of inner and outer edges to draw. This parameter must be a combination of one inner-border flag and one outer-border flag, or one of the combination flags. The border flags are:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BDR_RAISEDINNER</term>
              </listheader>
            </list>
          </description>
          <description>Raised inner edge</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BDR_SUNKENINNER</term>
              </listheader>
            </list>
          </description>
          <description>Sunken inner edge</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BDR_RAISEDOUTER</term>
              </listheader>
            </list>
          </description>
          <description>Raised outer edge</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BDR_SUNKENOUTER</term>
              </listheader>
            </list>
          </description>
          <description>Sunken outer edge</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>EDGE_BUMP</term>
              </listheader>
            </list>
          </description>
          <description>Combination of BDR_RAISEDOUTER and BDR_SUNKENINNER</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>EDGE_ETCHED</term>
              </listheader>
            </list>
          </description>
          <description>Combination of BDR_SUNKENOUTER and BDR_RAISEDINNER</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>EDGE_RAISED</term>
              </listheader>
            </list>
          </description>
          <description>Combination of BDR_RAISEDOUTER and BDR_RAISEDINNER</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>EDGE_SUNKEN</term>
              </listheader>
            </list>
          </description>
          <description>Combination of BDR_SUNKENOUTER and BDR_SUNKENINNER</description>
        </listheader>
      </list>
    </param>
    <param name="uFlags">
      <para>
        <b>UINT</b> that specifies the type of border to draw. This parameter can be a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_ADJUST</term>
              </listheader>
            </list>
          </description>
          <description>The rectangle pointed to by the <i>pDestRect</i> parameter is shrunk to exclude the edges that were drawn; otherwise the rectangle does not change.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_BOTTOM</term>
              </listheader>
            </list>
          </description>
          <description>Bottom of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_BOTTOMLEFT</term>
              </listheader>
            </list>
          </description>
          <description>Bottom and left side of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_BOTTOMRIGHT</term>
              </listheader>
            </list>
          </description>
          <description>Bottom and right side of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_DIAGONAL</term>
              </listheader>
            </list>
          </description>
          <description>Diagonal border.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_DIAGONAL_ENDBOTTOMLEFT</term>
              </listheader>
            </list>
          </description>
          <description>Diagonal border. The end point is the lower-left corner of the rectangle; the origin is the upper-right corner.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_DIAGONAL_ENDBOTTOMRIGHT</term>
              </listheader>
            </list>
          </description>
          <description>Diagonal border. The end point is the lower-right corner of the rectangle; the origin is the upper-left corner.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_DIAGONAL_ENDTOPLEFT</term>
              </listheader>
            </list>
          </description>
          <description>Diagonal border. The end point is the upper-left corner of the rectangle; the origin is the lower-right corner.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_DIAGONAL_ENDTOPRIGHT</term>
              </listheader>
            </list>
          </description>
          <description>Diagonal border. The end point is the upper-right corner of the rectangle; the origin is the lower-left corner.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_FLAT</term>
              </listheader>
            </list>
          </description>
          <description>Flat border.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_LEFT</term>
              </listheader>
            </list>
          </description>
          <description>Left side of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_MIDDLE</term>
              </listheader>
            </list>
          </description>
          <description>Interior of the rectangle is to be filled.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_MONO</term>
              </listheader>
            </list>
          </description>
          <description>One-dimensional border.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_RECT</term>
              </listheader>
            </list>
          </description>
          <description>Entire border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_RIGHT</term>
              </listheader>
            </list>
          </description>
          <description>Right side of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_SOFT</term>
              </listheader>
            </list>
          </description>
          <description>Soft buttons instead of tiles.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_TOP</term>
              </listheader>
            </list>
          </description>
          <description>Top of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_TOPLEFT</term>
              </listheader>
            </list>
          </description>
          <description>Top and left side of border rectangle.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>BF_TOPRIGHT</term>
              </listheader>
            </list>
          </description>
          <description>Top and right side of border rectangle.</description>
        </listheader>
      </list>
    </param>
    <param name="pContentRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the rectangle that receives the interior rectangle, if <i>uFlags</i> is set to BF_ADJUST. This parameter may be set to <b>NULL</b>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeIcon">
    <summary>Draws an image from an image list with the icon effect defined by the visual style.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part in which the image is drawn. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the rectangle in which the image is drawn.</param>
    <param name="himl">Handle to an <see cref="image list" /> that contains the image to draw.</param>
    <param name="iImageIndex">Value of type <b>int</b> that specifies the index of the image to draw.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeParentBackground">
    <summary>Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control.</summary>
    <param name="hwnd">The child control.</param>
    <param name="hdc">The child control's DC.</param>
    <param name="prc">The area to be drawn. The rectangle is in the child window's coordinates. If this parameter is NULL, the area to be drawn includes the entire area occupied by the child control.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeParentBackgroundEx">
    <summary>Used by partially-transparent or alpha-blended child controls to draw the part of their parent in front of which they appear. Sends a <a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-erasebkgnd">WM_ERASEBKGND</a> message followed by a <a href="https://docs.microsoft.com//windows/desktop/gdi/wm-printclient">WM_PRINTCLIENT</a>.</summary>
    <param name="hwnd">Handle of the child control.</param>
    <param name="hdc">HDC of the child control.</param>
    <param name="dwFlags">
      <para>Zero or more of the following values. If this value is zero, this function returns S_OK only if the parent handled <a href="https://docs.microsoft.com//windows/desktop/gdi/wm-printclient">WM_PRINTCLIENT</a>.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DTPB_WINDOWDC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If set, <i>hdc</i> is assumed to be a window DC, not a client DC.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DTPB_USECTLCOLORSTATIC</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If set, this function sends a <a href="https://docs.microsoft.com//windows/desktop/Controls/wm-ctlcolorstatic">WM_CTLCOLORSTATIC</a> message to the parent and uses the brush if one is provided. Otherwise, it uses COLOR_BTNFACE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DTPB_USEERASEBKGND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If set, this function returns S_OK without sending a <a href="https://docs.microsoft.com//windows/desktop/Controls/wm-ctlcolorstatic">WM_CTLCOLORSTATIC</a> message if the parent actually painted on <a href="https://docs.microsoft.com//windows/desktop/winmsg/wm-erasebkgnd">WM_ERASEBKGND</a>.</description>
        </listheader>
      </list>
    </param>
    <param name="prc">Optional. The area to be drawn, in child coordinates. If this parameter is NULL, the area to be drawn includes the entire area occupied by the child control.</param>
    <returns>S_OK if successful; otherwise, S_FALSE.</returns>
  </member>
  <member name="Windows.DrawThemeText">
    <summary>Draws text using the color and font defined by the visual style.</summary>
    <param name="hTheme">Handle to a window's theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use for drawing.</param>
    <param name="iPartId">The control part that has the desired text appearance. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>. If this value is 0, the text is drawn in the default font, or a font selected into the device context.</param>
    <param name="iStateId">The control state that has the desired text appearance. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pszText">Pointer to a string that contains the text to draw.</param>
    <param name="cchText">Value of type <b>int</b> that contains the number of characters to draw. If the parameter is set to -1, all the characters in the string are drawn.</param>
    <param name="dwTextFlags">
      <para>
        <b>DWORD</b> that contains one or more values that specify the string's formatting. See <a href="https://docs.microsoft.com//windows/desktop/Controls/theme-format-values">Format Values</a> for possible parameter values.</para>
      <div>
        <b>Note</b>  DrawThemeText does not support DT_CALCRECT. However, <see cref="DrawThemeTextEx" /> does support DT_CALCRECT.</div>
    </param>
    <param name="dwTextFlags2">Not used. Set to zero.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains the rectangle, in logical coordinates, in which the text is to be drawn. It is recommended to use <b>pExtentRect</b> from <see cref="GetThemeTextExtent" /> to retrieve the correct coordinates.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DrawThemeTextEx">
    <summary>Draws text using the color and font defined by the visual style. Extends <see cref="DrawThemeText" /> by allowing additional text format options.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use for drawing.</param>
    <param name="iPartId">The control part that has the desired text appearance. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>. If this value is 0, the text is drawn in the default font, or a font selected into the device context.</param>
    <param name="iStateId">The control state that has the desired text appearance. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pszText">Pointer to a string that contains the text to draw.</param>
    <param name="cchText">Value of type <b>int</b> that contains the number of characters to draw. If the parameter is set to -1, all the characters in the string are drawn.</param>
    <param name="dwTextFlags">
      <b>DWORD</b> that contains one or more values that specify the string's formatting. See <a href="https://docs.microsoft.com//windows/desktop/Controls/theme-format-values">Format Values</a> for possible parameter values.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains the rectangle, in logical coordinates, in which the text is to be drawn.</param>
    <param name="pOptions">A <see cref="DTTOPTS" /> structure that defines additional formatting options that will be applied to the text being drawn.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.EnableThemeDialogTexture">
    <summary>Enables or disables the visual style of the background of a dialog window.</summary>
    <param name="hwnd">Window handle of the target dialog box.</param>
    <param name="dwFlags">
      <para>One of the following option flag values:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_DISABLE</term>
              </listheader>
            </list>
          </description>
          <description>Disables background texturing.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_ENABLE</term>
              </listheader>
            </list>
          </description>
          <description>Enables dialog window background texturing. The texturing is defined by a visual style.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_USETABTEXTURE</term>
              </listheader>
            </list>
          </description>
          <description>Uses the Tab control texture for the background texture of a dialog window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_USEAEROWIZARDTABTEXTURE</term>
              </listheader>
            </list>
          </description>
          <description>Uses the Aero wizard texture for the background texture of a dialog window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_ENABLETAB</term>
              </listheader>
            </list>
          </description>
          <description>Enables dialog window background texturing. The texture is the Tab control texture defined by the visual style. This flag is equivalent to (ETDT_ENABLE | ETDT_USETABTEXTURE).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_ENABLEAEROWIZARDTAB</term>
              </listheader>
            </list>
          </description>
          <description>ETDT_ENABLE | ETDT_USEAEROWIZARDTABTEXTURE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>ETDT_VALIDBITS</term>
              </listheader>
            </list>
          </description>
          <description>ETDT_DISABLE | ETDT_ENABLE | ETDT_USETABTEXTURE | ETDT_USEAEROWIZARDTABTEXTURE.</description>
        </listheader>
      </list>
    </param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.EnableTheming">
    <summary>
      <para>
        <b>Windows Vista through Windows 7</b>: Enables or disables visual styles for the current user in the current and later sessions.</para>
      <para>
        <b>Windows 8 and later</b>: This function does nothing. Visual styles are always enabled in Windows 8 and later.</para>
    </summary>
    <param name="fEnable">
      <para>Receives one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>TRUE</term>
              </listheader>
            </list>
          </description>
          <description>Enables visual styles. If the user previously had an active visual style, it becomes active again.<div><b>Note</b>  Only clients with trusted computing base (TCB) privileges, where the client acts as part of the operating system, can load or change a global theme.</div></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>FALSE</term>
              </listheader>
            </list>
          </description>
          <description>Disables visual styles and turns visual styles off.</description>
        </listheader>
      </list>
    </param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.EndBufferedAnimation">
    <summary>Renders the first frame of a buffered animation operation and starts the animation timer.</summary>
    <param name="hbpAnimation">The handle to the buffered animation context that was returned by <see cref="BeginBufferedAnimation" />.</param>
    <param name="fUpdateTarget">If <b>TRUE</b>, updates the target DC with the animation. If <b>FALSE</b>, the animation is not started, the target DC is not updated, and the <i>hbpAnimation</i> parameter is freed.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.EndBufferedPaint">
    <summary>Completes a buffered paint operation and frees the associated buffered paint handle.</summary>
    <param name="hBufferedPaint">The handle of the buffered paint context, obtained through <see cref="BeginBufferedPaint" />.</param>
    <param name="fUpdateTarget">
      <b>TRUE</b> to copy the buffer to the target DC.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.EndPanningFeedback">
    <summary>Terminates any existing animation that was in process or set up by <see cref="BeginPanningFeedback" /> and <see cref="UpdatePanningFeedback" />.</summary>
    <param name="hwnd">The handle to the target window that will receive feedback.</param>
    <param name="fAnimateBack">Flag that indicates whether the displaced window should return to the original position using animation. If <b>FALSE</b>, the method restore the moved window using a direct jump.</param>
    <returns>
      <b>TRUE</b> if successful.</returns>
  </member>
  <member name="Windows.GetBufferedPaintBits">
    <summary>Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap (DIB).</summary>
    <param name="hBufferedPaint">The handle of the buffered paint context, obtained through <see cref="BeginBufferedPaint" />.</param>
    <param name="ppbBuffer">When this function returns, contains a pointer to the address of the buffer bitmap pixels.</param>
    <param name="pcxRow">When this function returns, contains a pointer to the width, in pixels, of the buffer bitmap. This value is not necessarily equal to the buffer width. It may be larger.</param>
    <returns>Returns S_OK if successful, or an error value otherwise. If an error occurs, <i>ppbBuffer</i> is set to <b>NULL</b> and <i>pcxRow</i> is set to zero.</returns>
  </member>
  <member name="Windows.GetBufferedPaintDC">
    <summary>Gets the paint device context (DC). This is the same value retrieved by <see cref="BeginBufferedPaint" />.</summary>
    <param name="hBufferedPaint">Handle of the buffered paint context, obtained through <see cref="BeginBufferedPaint" />.</param>
    <returns>Handle of the requested DC. This is the same DC that is returned by <see cref="BeginBufferedPaint" />. Returns <b>NULL</b> upon failure.</returns>
  </member>
  <member name="Windows.GetBufferedPaintTargetDC">
    <summary>Retrieves the target device context (DC).</summary>
    <param name="hBufferedPaint">A handle to the buffered paint context obtained through <see cref="BeginBufferedPaint" />.</param>
    <returns>A handle to the requested DC, or <b>NULL</b> otherwise.</returns>
  </member>
  <member name="Windows.GetBufferedPaintTargetRect">
    <summary>Retrieves the target rectangle specified by BeginBufferedPaint.</summary>
    <param name="hBufferedPaint">Handle to the buffered paint context obtained through <see cref="BeginBufferedPaint" />.</param>
    <param name="prc">When this function returns, contains the requested rectangle.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetCurrentThemeName">
    <summary>Retrieves the name of the current visual style, and optionally retrieves the color scheme name and size name.</summary>
    <param name="pszThemeFileName">Pointer to a string that receives the theme path and file name.</param>
    <param name="cchMaxNameChars">Value of type <b>int</b> that contains the maximum number of characters allowed in the theme file name.</param>
    <param name="pszColorBuff">Pointer to a string that receives the color scheme name. This parameter may be set to <b>NULL</b>.</param>
    <param name="cchMaxColorChars">Value of type <b>int</b> that contains the maximum number of characters allowed in the color scheme name.</param>
    <param name="pszSizeBuff">Pointer to a string that receives the size name. This parameter may be set to <b>NULL</b>.</param>
    <param name="cchMaxSizeChars">Value of type <b>int</b> that contains the maximum number of characters allowed in the size name.</param>
    <returns>Returns S_OK if successful, otherwise an error code.</returns>
  </member>
  <member name="Windows.GetThemeAnimationProperty">
    <summary>Gets a theme animation property based on the storyboard id and the target id.</summary>
    <param name="hTheme">An opened theme handle.</param>
    <param name="iStoryboardId">A predefined storyboard identifier.</param>
    <param name="iTargetId">A predefined target identifier.</param>
    <param name="eProperty">The property that is associated with the animation storyboard and target.</param>
    <param name="pvProperty">The buffer to receive the returned property value.</param>
    <param name="cbSize">The byte size of a buffer that is pointed by <i>pvProperty</i>.</param>
    <param name="pcbSizeOut">The byte size of the returned property.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeAnimationTransform">
    <summary>Gets an animation transform operation based on storyboard id, target id and transform index.</summary>
    <param name="hTheme">An opened theme handle.</param>
    <param name="iStoryboardId">A predefined storyboard identifier.</param>
    <param name="iTargetId">A predefined target identifier.</param>
    <param name="dwTransformIndex">The zero-based index of a transform operation.</param>
    <param name="pTransform">A pointer to a buffer to receive a transform structure.</param>
    <param name="cbSize">The byte size of the buffer pointed by <i>pTransform</i>.</param>
    <param name="pcbSizeOut">The byte size of a transform operation structure.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeAppProperties">
    <summary>Retrieves the property flags that control how visual styles are applied in the current application.</summary>
    <returns>
      <para>The following return values are bit flags combined with a logical OR operator.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STAP_ALLOW_NONCLIENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies that the nonclient areas of application windows have visual styles applied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STAP_ALLOW_CONTROLS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies that controls in application windows have visual styles applied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STAP_ALLOW_WEBCONTENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies that all web content displayed in an application is rendered using visual styles.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.GetThemeBackgroundContentRect">
    <summary>Retrieves the size of the content area for the background defined by the visual style.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use when drawing. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the content area. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part that contains the content area. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pBoundingRect">Pointer to a <see cref="RECT" /> structure that contains the total background rectangle, in logical coordinates. This is the area inside the borders or margins.</param>
    <param name="pContentRect">Pointer to a <see cref="RECT" /> structure that receives the content area background rectangle, in logical coordinates. This rectangle is calculated to fit the content area.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeBackgroundExtent">
    <summary>Calculates the size and location of the background, defined by the visual style, given the content area.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use when drawing. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the content. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part that contains the content. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pContentRect">Pointer to a <see cref="RECT" /> structure that contains the content background rectangle, in logical coordinates. This rectangle is returned from <see cref="GetThemeBackgroundContentRect" />.</param>
    <param name="pExtentRect">Pointer to a <see cref="RECT" /> structure that receives the background rectangle, in logical coordinates. This rectangle is based on the <i>pContentRect</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeBackgroundRegion">
    <summary>Computes the region for a regular or partially transparent background that is bounded by a specified rectangle.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to draw into. The DC uses dots per inch (DPI) scaling. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the region. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the specified rectangle used to compute the region.</param>
    <param name="pRegion">Pointer to the handle to the computed <a href="https://docs.microsoft.com//windows/desktop/gdi/regions">region</a>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeBitmap">
    <summary>Retrieves the bitmap associated with a particular theme, part, state, and property.</summary>
    <param name="hTheme">A handle to theme data.</param>
    <param name="iPartId">The part that contains the bitmap. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">The state of the part.</param>
    <param name="iPropId">
      <para>The property to retrieve. Pass zero to automatically select the first available bitmap for this part and state, or use one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_DIBDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The background image.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GLYPHDIBDATA</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The glyph image drawn on top of the background, if present.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_HBITMAP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Not currently supported.</description>
        </listheader>
      </list>
    </param>
    <param name="dwFlags">
      <para>The flags that specify how the bitmap is to be retrieved. Can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GBF_DIRECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves a handle to the existing bitmap.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GBF_COPY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves a copy of the bitmap.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>GBF_VALIDBITS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>GBF_DIRECT</b> | <b>GBF_COPY</b></description>
        </listheader>
      </list>
    </param>
    <param name="phBitmap">A pointer that receives a handle to the requested bitmap.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeBool">
    <summary>Retrieves the value of a <b>BOOL</b> property from the SysMetrics section of theme data.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part containing the BOOL property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">
      <para>Value of type <b>int</b> that specifies the property to retrieve. May be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_TRANSPARENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with the part and state have transparent areas. See <see cref="GetThemeColor" /> for the definition of the TMT_TRANSPARENTCOLOR value that defines the transparent color.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_AUTOSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the nonclient caption area associated with the part and state vary with text width.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BORDERONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with the part and state should only have its border drawn.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_COMPOSITED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the control associated with the part and state will handle its own compositing of images.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BGFILL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if true-sized images associated with this part and state are to be drawn on the background fill.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GLYPHTRANSPARENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the glyph associated with this part and state have transparent areas. See <see cref="GetThemeColor" /> for the definition of the TMT_GLYPHCOLOR value that defines the transparent color.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GLYPHONLY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the glyph associated with this part and state should be drawn without a background.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ALWAYSSHOWSIZINGBAR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the sizing bar associated with this part and state should always be shown.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MIRRORIMAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with this part and state should be flipped if the window is being viewed in right-to-left reading mode.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_UNIFORMSIZING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with this part and state must have equal height and width.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INTEGRALSIZING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the truesize image or border associated with this part and state must be sized to a factor of 2.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_SOURCEGROW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with this part and state will scale larger in size if necessary.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_SOURCESHRINK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with this part and state will scale smaller in size if necessary.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_USERPICTURE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <b>TRUE</b> if the image associated with this part and state is based on the current user.</description>
        </listheader>
      </list>
    </param>
    <param name="pfVal">Pointer to a <b>BOOL</b> that receives the retrieved property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeColor">
    <summary>Retrieves the value of a color property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the color property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pColor">Pointer to a <a href="https://docs.microsoft.com//windows/desktop/gdi/colorref">COLORREF</a> structure that receives the color value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeDocumentationProperty">
    <summary>Retrieves the value for a theme property from the documentation section of the specified theme file.</summary>
    <param name="pszThemeName">Pointer to a string that contains the name of the theme file that will be opened to query for the property.</param>
    <param name="pszPropertyName">
      <para>Pointer to a string that contains the name of the theme property to query. Can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SZ_THDOCPROP_DISPLAYNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the display name of the theme.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SZ_THDOCPROP_TOOLTIP</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the tooltip associated with this theme.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SZ_THDOCPROP_AUTHOR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the name of the author of the theme.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SZ_THDOCPROP_CANONICALNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Retrieves the name of the theme.</description>
        </listheader>
      </list>
    </param>
    <param name="pszValueBuff">Pointer to a string buffer that receives the property string value.</param>
    <param name="cchMaxValChars">Value of type <b>int</b> that specifies the maximum number of characters that <i>pszValueBuff</i> can contain.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeEnumValue">
    <summary>Retrieves the value of an enumerated type property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the enumerated type property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="piVal">Pointer to an <b>int</b> that receives the enumerated type value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeFilename">
    <summary>Retrieves the value of a filename property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the filename property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pszThemeFileName">Pointer to a buffer that receives the retrieved file name.</param>
    <param name="cchMaxBuffChars">Value of type <b>int</b> that receives the maximum number of characters in the file name</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeFont">
    <summary>Retrieves the value of a font property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the font property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pFont">Pointer to a <see cref="LOGFONT" /> structure that receives the font property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeInt">
    <summary>Retrieves the value of an <b>int</b> property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the <b>int</b> property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="piVal">Pointer to an <b>int</b> that receives the retrieved value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeIntList">
    <summary>Retrieves a list of <b>int</b> data from a visual style.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the list of data to return. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. See <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pIntList">Pointer to an <see cref="INTLIST" /> structure that receives the <b>int</b> data.</param>
    <returns>Returns S_OK if successful, otherwise an error code.</returns>
  </member>
  <member name="Windows.GetThemeMargins">
    <summary>Retrieves the value of a <see cref="MARGINS" /> property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to select fonts into. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the <see cref="MARGINS" /> property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="prc">Pointer to a <see cref="RECT" /> structure that contains the rectangle that specifies the area to be drawn into. This parameter may be set to <b>NULL</b>.</param>
    <param name="pMargins">Pointer to a <see cref="MARGINS" /> structure that receives the retrieved value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeMetric">
    <summary>Retrieves the value of a metric property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the metric property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">
      <para>Value of type <b>int</b> that specifies the property to retrieve. Can be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ALPHALEVEL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The alpha value (0-255) used for <see cref="DrawThemeIcon" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ALPHATHRESHOLD</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum alpha value (0-255) that a pixel must be to be considered opaque.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BORDERSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The thickness of the border drawn if this part uses a border fill.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GLYPHINDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The character index into the selected font that will be used for the glyph, if the part uses a font-based glyph.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTRATIO1</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of the first gradient color to use in drawing the part. This value can be from 0 to 255, but this value plus the values of each of the GRADIENTRATIO values must add up to 255. See the TMT_GRADIENTCOLOR1 value of <see cref="GetThemeColor" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTRATIO2</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of the second gradient color to use in drawing the part.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTRATIO3</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of the third gradient color to use in drawing the part.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTRATIO4</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of the fourth gradient color to use in drawing the part.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTRATIO5</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of the fifth gradient color to use in drawing the part.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_HEIGHT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The height of the part.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_IMAGECOUNT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The number of state images present in an image file.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINDPI1</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum dpi that the first image file was designed for. See <see cref="GetThemeFilename" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINDPI2</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum dpi that the second image file was designed for.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINDPI3</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum dpi that the third image file was designed for.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINDPI4</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum dpi that the fourth image file was designed for.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINDPI5</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum dpi that the fifth image file was designed for.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_PROGRESSCHUNKSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The size of the progress control "chunk" shapes that define how far an operation has progressed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_PROGRESSSPACESIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The total size of all of the progress control "chunks".</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ROUNDCORNERWIDTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The roundness (0-100%) of the part's corners.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ROUNDCORNERHEIGHT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The roundness (0-100%) of the part's corners.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_SATURATION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The amount of saturation (0-255) to apply to an icon drawn using <see cref="DrawThemeIcon" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_TEXTBORDERSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The thickness of the border drawn around text characters.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_TRUESIZESTRETCHMARK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The percentage of a true-size image's original size at which the image will be stretched.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_WIDTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The width of the part.</description>
        </listheader>
      </list>
    </param>
    <param name="piVal">Pointer to an <b>int</b> that receives the metric property value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemePartSize">
    <summary>Calculates the original size of the part defined by a visual style.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to select fonts into.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part to calculate the size of. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="prc">Pointer to a <see cref="RECT" /> structure that contains the rectangle used for the part drawing destination. This parameter may be set to <b>NULL</b>.</param>
    <param name="unnamedParam6">Enumerated type that specifies the type of size to retrieve. See <see cref="THEMESIZE" /> for a list of type values.</param>
    <param name="psz">Pointer to a <see cref="SIZE" /> structure that receives the dimensions of the specified part.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemePosition">
    <summary>Retrieves the value of a position property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the position property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pPoint">Pointer to a <see cref="POINT" /> structure that receives the position value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemePropertyOrigin">
    <summary>Retrieves the location of the theme property definition for a property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part that contains the theme. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. You may use any of the property values from Vssym32.h. These values are described in the reference pages for the functions that use them. For instance, the <see cref="GetThemeInt" /> function uses the TMT_BORDERSIZE value. See the <a href="https://docs.microsoft.com//windows/desktop/Controls/uxctl-ref">Visual Styles Reference</a> for a list of functions.</param>
    <param name="unnamedParam5">Pointer to a <see cref="PROPERTYORIGIN" /> enumerated type that indicates where the property was or was not found.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeRect">
    <summary>Retrieves the value of a <see cref="RECT" /> property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part containing the <see cref="RECT" /> property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that receives a rectangle.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeStream">
    <summary>Retrieves a data stream corresponding to a specified theme, starting from a specified part, state, and property.</summary>
    <param name="hTheme">Handle to the theme from which the stream will be retrieved.</param>
    <param name="iPartId">Specifies the part to retrieve a stream from. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Specifies the state of the part.</param>
    <param name="iPropId">Specifies the property to retrieve.</param>
    <param name="ppvStream">Address of a pointer that receives the stream.</param>
    <param name="pcbStream">Pointer that receives the length, in bytes, of the stream received by <i>ppvStream</i>.</param>
    <param name="hInst">If <i>iPropId</i> is TMT_STREAM, this value is <b>NULL</b>. If <i>iPropId</i> is TMT_DISKSTREAM, this value is the HINSTANCE of a loaded styles file.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeString">
    <summary>Retrieves the value of a string property.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part containing the string property. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iPropId">Value of type <b>int</b> that specifies the property to retrieve. For a list of possible values, see <a href="https://docs.microsoft.com//windows/desktop/Controls/property-typedefs">Property Identifiers</a>.</param>
    <param name="pszBuff">Pointer to a buffer that receives the string value.</param>
    <param name="cchMaxBuffChars">Value of type <b>int</b> that specifies the maximum number of characters <i>pszBuff</i> can contain.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeSysBool">
    <summary>Retrieves the Boolean value of a system metric.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iBoolId">
      <para>Value of type <b>int</b> that specifies the system Boolean metric desired. May be the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_FLATMENUS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Describes how menus are drawn. If <b>TRUE</b>, menus are drawn without shadows. If <b>FALSE</b>, menus have shadows underneath them.</description>
        </listheader>
      </list>
    </param>
    <returns>Value of desired system metric.</returns>
  </member>
  <member name="Windows.GetThemeSysColor">
    <summary>Retrieves the value of a system color.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iColorId">Value of type <b>int</b> that specifies the color number. May be one of the values listed in <see cref="GetSysColor" /> for the <i>nIndex</i> parameter.</param>
    <returns>The value of the specified system color.</returns>
  </member>
  <member name="Windows.GetThemeSysColorBrush">
    <summary>Retrieves a system color brush.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iColorId">
      <para>Value of type <b>int</b> that specifies the number of the desired system color. May be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_SCROLLBAR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of scroll bars.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BACKGROUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the background.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ACTIVECAPTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the caption area on an active window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INACTIVECAPTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the caption area on an inactive window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_WINDOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of a window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_WINDOWFRAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the frame around a window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MENUTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of text drawn on a menu.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_WINDOWTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of text drawn in a window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_CAPTIONTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of text drawn in the caption area of an active window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ACTIVEBORDER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the border around an active window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INACTIVEBORDER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the border around an inactive window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_APPWORKSPACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the application workspace.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_HIGHLIGHT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of a highlight.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_HIGHLIGHTTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of highlighted text.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BTNFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of a button face.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BTNSHADOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the shadow underneath a button.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRAYTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of dimmed text.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BTNTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of text contained within a button.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INACTIVECAPTIONTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the text in the caption area of an inactive window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BTNHIGHLIGHT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the highlight around a button.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_DKSHADOW3D</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of three-dimensional dark shadows.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_LIGHT3D</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of three-dimensional light areas.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INFOTEXT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of informational text.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_INFOBK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the background behind informational text.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_BUTTONALTERNATEFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the alternate face of a button.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_HOTTRACKING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of highlight applied when a user moves the mouse over a control.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTACTIVECAPTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The gradient color applied to the caption area of an active window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_GRADIENTINACTIVECAPTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The gradient color applied to the caption area of an inactive window.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MENUHILIGHT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of highlight drawn on a menu item when the user moves the mouse over it.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MENUBAR</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The color of the menu bar.</description>
        </listheader>
      </list>
    </param>
    <returns>Handle to brush data.</returns>
  </member>
  <member name="Windows.GetThemeSysFont">
    <summary>Retrieves the <see cref="LOGFONT" /> of a system font.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iFontId">
      <para>Value of type <b>int</b> that specifies a system font. May be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_CAPTIONFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used by window captions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_SMALLCAPTIONFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used by window small captions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MENUFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used by menus.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_STATUSFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used in status messages.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MSGBOXFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used to display messages in a message box.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_ICONTITLEFONT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The font used for icons.</description>
        </listheader>
      </list>
    </param>
    <param name="plf">Pointer to a <see cref="LOGFONT" /> structure that receives the font information from this function.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeSysInt">
    <summary>Retrieves the value of a system <b>int</b>.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iIntId">
      <para>Value of type <b>int</b> that specifies the desired system <b>int</b>. May be the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_MINCOLORDEPTH</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The minimum color depth, in bits, required to properly view this style.</description>
        </listheader>
      </list>
    </param>
    <param name="piValue">Pointer to an <b>int</b> that receives the system integer value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeSysSize">
    <summary>Retrieves the value of a system size metric from theme data.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iSizeId">
      <para>Value of type <b>int</b> that specifies the system size metric desired. The following values are valid:</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXBORDER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the width of a border.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXVSCROLL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the width of a scroll bar.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXHSCROLL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the height of a scroll bar.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the width of a caption.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CYSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the height of a caption.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXSMSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the width of a small caption.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CYSMSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the height of a small caption.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXMENUSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the width of a menu bar.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CYMENUSIZE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the height of a menu bar.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>SM_CXPADDEDBORDER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies the amount of border padding for captioned windows.</description>
        </listheader>
      </list>
    </param>
    <returns>Returns the size in pixels.</returns>
  </member>
  <member name="Windows.GetThemeSysString">
    <summary>Retrieves the value of a system string.</summary>
    <param name="hTheme">Handle to theme data.</param>
    <param name="iStringId">
      <para>Value of type <b>int</b> that specifies a system string. May be one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_CSSNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the CSS file associated with the theme specified by <i>hTheme</i>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TMT_XMLNAME</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The name of the XML file associated with the theme specified by <i>hTheme</i>.</description>
        </listheader>
      </list>
    </param>
    <param name="pszStringBuff">Pointer to the buffer that receives the string value from this function.</param>
    <param name="cchMaxStringChars">Value of type <b>int</b> that specifies the maximum number of characters the string buffer can hold.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeTextExtent">
    <summary>Calculates the size and location of the specified text when rendered in the visual style font.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to select the font into.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part in which the text will be drawn. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="pszText">Pointer to a string that contains the text to draw.</param>
    <param name="cchCharCount">Value of type <b>int</b> that contains the number of characters to draw. If the parameter is set to -1, all the characters in the string are drawn.</param>
    <param name="dwTextFlags">
      <b>DWORD</b> that contains one or more values that specify the string's formatting. See <a href="https://docs.microsoft.com//windows/desktop/Controls/theme-format-values">Format Values</a> for possible parameter values.</param>
    <param name="pBoundingRect">Pointer to a <see cref="RECT" /> structure that contains the rectangle used to control layout of the text. This parameter may be set to <b>NULL</b>.</param>
    <param name="pExtentRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the rectangle required to fit the rendered text.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeTextMetrics">
    <summary>Retrieves information about the font specified by a visual style for a particular part.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use for screen context. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part to retrieve font information about. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="ptm">Receives the font information.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeTimingFunction">
    <summary>Gets a predefined timing function based on a timing function identifier.</summary>
    <param name="hTheme">An opened theme handle.</param>
    <param name="iTimingFunctionId">A timing function identifier.</param>
    <param name="pTimingFunction">A buffer to receive a predefined timing function pointer.</param>
    <param name="cbSize">The byte size of the buffer pointed by <i>pTimingFunction</i>.</param>
    <param name="pcbSizeOut">The byte size of the timing function structure.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetThemeTransitionDuration">
    <summary>Gets the duration for the specified transition.</summary>
    <param name="hTheme">Handle of the theme data.</param>
    <param name="iPartId">ID of the part.</param>
    <param name="iStateIdFrom">State ID of the part before the transition.</param>
    <param name="iStateIdTo">State ID of the part after the transition.</param>
    <param name="iPropId">Property ID.</param>
    <param name="pdwDuration">Address of a variable that receives the transition duration, in milliseconds.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.GetWindowTheme">
    <summary>Retrieves a theme handle to a window that has visual styles applied.</summary>
    <param name="hwnd">Handle of the window.</param>
    <returns>The most recent theme handle from <see cref="OpenThemeData" />.</returns>
  </member>
  <member name="Windows.HitTestThemeBackground">
    <summary>Retrieves a hit test code for a point in the background specified by a visual style.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="hdc">HDC to use when drawing. This parameter may be set to <b>NULL</b>.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="dwOptions">
      <b>DWORD</b> that specifies the hit test options. See <a href="https://docs.microsoft.com//windows/desktop/Controls/theme-hit-test-options">Hit Test Options</a> for a list of options.</param>
    <param name="pRect">Pointer to a <see cref="RECT" /> structure that contains, in logical coordinates, the rectangle that bounds the background.</param>
    <param name="hrgn">Handle to a region that can be used to specify the bounds of a hit test area. This parameter may be set to <b>NULL</b>.</param>
    <param name="ptTest">
      <see cref="POINT" /> structure that contains the coordinates of the point.</param>
    <param name="pwHitTestCode">
      <b>WORD</b> that receives the hit test code that indicates whether the point in <i>ptTest</i> is in the background area bounded by <i>pRect</i> or <i>hrgn</i>. See <a href="https://docs.microsoft.com//windows/desktop/Controls/theme-hit-test-retval">Hit Test Return Values</a> for a list of values returned.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IsAppThemed">
    <summary>Reports whether the current application's user interface displays using visual styles.</summary>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application has a visual style applied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The application does not have a visual style applied.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.IsCompositionActive">
    <summary>Determines whether Desktop Window Manager (DWM) composition effects are available to the theme.</summary>
    <returns>
      <b>TRUE</b> if composition effects are available; otherwise, <b>FALSE</b>.</returns>
  </member>
  <member name="Windows.IsThemeActive">
    <summary>Tests if a visual style for the current application is active.</summary>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A visual style is enabled, and windows with visual styles applied should call <see cref="OpenThemeData" /> to start using theme drawing services.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>A visual style is not enabled, and the window message handler does not need to make another call to <see cref="IsThemeActive" /> until it receives a WM_THEMECHANGED message.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.IsThemeBackgroundPartiallyTransparent">
    <summary>Retrieves whether the background specified by the visual style has transparent pieces or alpha-blended pieces.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Value of type <b>int</b> that specifies the state of the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The theme-specified background for a particular <i>iPartId</i> and <i>iStateId</i> has transparent pieces or alpha-blended pieces.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The theme-specified background for a particular <i>iPartId</i> and <i>iStateId</i> does not have transparent pieces or alpha-blended pieces.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.IsThemeDialogTextureEnabled">
    <summary>Reports whether a specified dialog window supports background texturing.</summary>
    <param name="hwnd">
      <b>HWND</b> value that specifies a dialog window.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Background texturing is supported on the dialog window specified by the <i>hwnd</i> parameter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Background texturing is not supported on the dialog window specified by the <i>hwnd</i> parameter.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.IsThemePartDefined">
    <summary>Retrieves whether a visual style has defined parameters for the specified part and state.</summary>
    <param name="hTheme">Handle to a window's specified theme data. Use <see cref="OpenThemeData" /> to create an HTHEME.</param>
    <param name="iPartId">Value of type <b>int</b> that specifies the part. See <a href="https://docs.microsoft.com//windows/desktop/Controls/parts-and-states">Parts and States</a>.</param>
    <param name="iStateId">Currently unused. The value should be 0.</param>
    <returns>
      <para>Returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>TRUE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The theme has defined parameters for the specified <i>iPartId</i> and <i>iStateId</i></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The theme does not have defined parameters for the specified <i>iPartId</i> and <i>iStateId</i></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.OpenThemeData">
    <summary>Opens the theme data for a window and its associated class.</summary>
    <param name="hwnd">Handle of the window for which theme data is required.</param>
    <param name="pszClassList">Pointer to a string that contains a semicolon-separated list of classes.</param>
    <returns>
      <b>OpenThemeData</b> tries to match each class, one at a time, to a class data section in the active theme. If a match is found, an associated HTHEME handle is returned. If no match is found <b>NULL</b> is returned.</returns>
  </member>
  <member name="Windows.OpenThemeDataEx">
    <summary>Opens the theme data associated with a window for specified theme classes.</summary>
    <param name="hwnd">A handle to a window or control that the theme is to be retrieved from.</param>
    <param name="pszClassList">A semicolon-separated list of class names to match.</param>
    <param name="dwFlags">
      <para>Optional flags that control how to return the theme data. May be set to a combination of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OTD_FORCE_RECT_SIZING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Forces drawn images from this theme to stretch to fit the rectangles specified by drawing functions.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OTD_NONCLIENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Allows theme elements to be drawn in the non-client area of the window.</description>
        </listheader>
      </list>
    </param>
    <returns>If a match is found, a valid handle to a theme is returned. Otherwise, a <b>NULL</b> value will be returned.</returns>
  </member>
  <member name="Windows.OpenThemeDataForDpi">
    <summary>A variant of <see cref="OpenThemeData" /> that opens a theme handle associated with a specific DPI.</summary>
    <param name="hwnd">The handle of the window for which theme data is required.</param>
    <param name="pszClassList">A pointer to a string that contains a semicolon-separated list of classes.</param>
    <param name="dpi">The specified DPI value with which to associate the theme handle. The function will return an error if this value is outside of those that correspond to the set of connected monitors.</param>
    <returns>See <see cref="OpenThemeData" />.</returns>
  </member>
  <member name="Windows.SetThemeAppProperties">
    <summary>Sets the flags that determine how visual styles are implemented in the calling application.</summary>
    <param name="dwFlags">
      <para>
        <b>DWORD</b> that specifies one or more of the following bit flags, which can be combined with a logical OR.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>STAP_ALLOW_NONCLIENT</term>
              </listheader>
            </list>
          </description>
          <description>Specifies that the nonclient areas of application windows will have visual styles applied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>STAP_ALLOW_CONTROLS</term>
              </listheader>
            </list>
          </description>
          <description>Specifies that the common controls used in an application will have visual styles applied.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader></listheader>
              <listheader>
                <term>STAP_ALLOW_WEBCONTENT</term>
              </listheader>
            </list>
          </description>
          <description>Specifies that web content displayed in an application will have visual styles applied.</description>
        </listheader>
      </list>
    </param>
  </member>
  <member name="Windows.SetWindowTheme">
    <summary>Causes a window to use a different set of visual style information than its class normally uses.</summary>
    <param name="hwnd">Handle to the window whose visual style information is to be changed.</param>
    <param name="pszSubAppName">Pointer to a string that contains the application name to use in place of the calling application's name. If this parameter is <b>NULL</b>, the calling application's name is used.</param>
    <param name="pszSubIdList">Pointer to a string that contains a semicolon-separated list of CLSID names to use in place of the actual list passed by the window's class. If this parameter is <b>NULL</b>, the ID list from the calling class is used.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SetWindowThemeAttribute">
    <summary>Sets attributes to control how visual styles are applied to a specified window.</summary>
    <param name="hwnd">Handle to a window to apply changes to.</param>
    <param name="unnamedParam2">
      <para>Value of type <see cref="WINDOWTHEMEATTRIBUTETYPE" /> that specifies the type of attribute to set. The value of this parameter determines the type of data that should be passed in the <i>pvAttribute</i> parameter. Can be the following value.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>WTA_NONCLIENT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Specifies non-client related attributes. <i>pvAttribute</i> must be a pointer of type <see cref="WTA_OPTIONS" />.</description>
        </listheader>
      </list>
    </param>
    <param name="pvAttribute">A pointer that specifies attributes to set. Type is determined by the value of the <i>eAttribute</i> value.</param>
    <param name="cbAttribute">Specifies the size, in bytes, of the data pointed to by <i>pvAttribute</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SetWindowThemeNonClientAttributes">
    <summary>Sets non-client attributes to control how visual styles are applied to a specified window.</summary>
    <param name="hwnd">A handle to the window in which to apply changes.</param>
    <param name="dwMask">A bitmask that describes which values are to be modified. Can be a combination of the <a href="https://docs.microsoft.com//windows/desktop/Controls/wtnca">WTNCA</a> constants.</param>
    <param name="dwAttributes">A combination of flags that modify window visual style attributes based on <i>dwMask</i>. Can be a combination of the <a href="https://docs.microsoft.com//windows/desktop/Controls/wtnca">WTNCA</a> constants.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UpdatePanningFeedback">
    <summary>Updates clients about state of a window resulting from a panning gesture. This function can only be called after a <see cref="BeginPanningFeedback" /> call.</summary>
    <param name="hwnd">The handle to the target window that will receive feedback. For the method to succeed, this must be the same HWND as provided in <see cref="BeginPanningFeedback" />.</param>
    <param name="lTotalOverpanOffsetX">The total displacement that the window has moved in the horizontal direction since the end of scrollable region was reached. A maximum displacement of 30 pixels is allowed.</param>
    <param name="lTotalOverpanOffsetY">The total displacement that the window has moved in the vertical direction since the end of scrollable region was reached. A maximum displacement of 30 pixels is allowed.</param>
    <param name="fInInertia">Flag indicating whether the application is handling a WM_GESTURE message with the GF_INERTIA FLAG set.</param>
    <returns>
      <b>TRUE</b> if successful.</returns>
  </member>
</doc>