<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.InetIsOffline">
    <summary>Determines whether the system is connected to the Internet.</summary>
    <param name="dwFlags">The input flags for the function. This must be set to zero.</param>
    <returns>Returns <b>TRUE</b> if the local system is not currently connected to the Internet. Returns <b>FALSE</b> if the local system is connected to the Internet or if no attempt has yet been made to connect to the Internet.</returns>
  </member>
  <member name="Windows.MIMEAssociationDialog">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.MIMEAssociationDialogA">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.MIMEAssociationDialogW">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.MIMEAssociationDialog">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.MIMEAssociationDialogA">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.MIMEAssociationDialogW">
    <summary>
      <para>Runs the unregistered MIME content type dialog box.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window of any posted child windows.</param>
    <param name="dwInFlags">
      <para>A bit flag value that specifies if an association is to be registered. The bit flag is the value MIMEASSOCDLG_FL_REGISTER_ASSOC (0x0001). If this bit is set, the selected application is registered as the handler for the given MIME type. If this bit is clear, no association is registered.</para>
      <para>An application is registered only if this flag is set and the user indicates that a persistent association is to be made.</para>
      <para>Registration is impossible if the string at <i>pcszFile</i> does not contain an extension.</para>
    </param>
    <param name="pcszFile">The address of a null-terminated string that contains the name of the target file. This file must conform to the content type described by the <i>pcszMIMEContentType</i> parameter.</param>
    <param name="pcszMIMEContentType">The address of a null-terminated string that contains the unregistered content type.</param>
    <param name="pszAppBuf">A pointer to a buffer that, when this function returns successfully, receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">Size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function is not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the content type was successfully associated with the extension. In this case, the extension is associated as the default for the content type, and <i>pszAppBuf</i> points to the string that contains the path of the specified application. The function returns S_FALSE if nothing was registered. Otherwise, the return value will be one of the following:<list type="table"><listheader><description>Return code</description><description>Description</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_ABORT</b></term></listheader></list></description><description>The user canceled the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_FLAGS</b></term></listheader></list></description><description>The flag combination passed in <i>dwInFlags</i> is invalid.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_OUTOFMEMORY</b></term></listheader></list></description><description>There was insufficient memory available to complete the operation.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>E_POINTER</b></term></listheader></list></description><description>One of the input pointers is invalid.</description></listheader></list></returns>
  </member>
  <member name="Windows.TranslateURL">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.TranslateURLA">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.TranslateURLW">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.TranslateURL">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">
      <para>A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_GUESS_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.TranslateURLA">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">
      <para>A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_GUESS_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.TranslateURLW">
    <summary>Applies common translations to a given URL string, creating a new URL string.</summary>
    <param name="pcszURL">The address of the URL string to be translated.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify how the URL string is to be translated. This value can be a combination of the following:</para>
      <h4>TRANSLATEURL_FL_GUESS_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h4>TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h4>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <param name="ppszTranslatedURL">
      <para>A pointer variable that receives the pointer to the newly created, translated URL string, if any. The <i>ppszTranslatedURL</i> parameter is valid only if the function returns S_OK.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_GUESS_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to <b>TranslateURL</b>, the system automatically chooses a scheme and adds it to the URL.</para>
      <h5>- dwInFlags.TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL</h5>
      <para>If the protocol scheme is not specified in the <i>pcszURL</i> parameter to<b>TranslateURL</b>, the system adds the default protocol to the URL.</para>
    </param>
    <returns>
      <para>Returns S_OK upon success, or S_FALSE if the URL did not require translation. If an error occurs, the function returns one of the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FLAGS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The flag combination passed in <i>dwInFlags</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There was insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the input pointers is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="Windows.URLAssociationDialog">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">The size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
  <member name="Windows.URLAssociationDialogA">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">The size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
  <member name="Windows.URLAssociationDialogW">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">The size of <i>pszAppBuf</i>, in characters.</param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
  <member name="Windows.URLAssociationDialog">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">
      <para>The size of <i>pszAppBuf</i>, in characters.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_REGISTER_ASSOC</h5>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_USE_DEFAULT_NAME</h5>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
    </param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
  <member name="Windows.URLAssociationDialogA">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">
      <para>The size of <i>pszAppBuf</i>, in characters.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_REGISTER_ASSOC</h5>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_USE_DEFAULT_NAME</h5>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
    </param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
  <member name="Windows.URLAssociationDialogW">
    <summary>
      <para>Invokes the unregistered URL protocol dialog box. This dialog box allows the user to select an application to associate with a previously unknown protocol.</para>
      <div>
        <b>Note</b>  Windows XP Service Pack 2 (SP2) or later: This function is no longer supported.</div>
    </summary>
    <param name="hwndParent">A handle to the parent window.</param>
    <param name="dwInFlags">
      <para>The bit flags that specify the behavior of the function. This value can be a combination of the following:</para>
      <h4>URLASSOCDLG_FL_USE_DEFAULT_NAME</h4>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
      <h4>URLASSOCDLG_FL_REGISTER_ASSOC</h4>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
    </param>
    <param name="pcszFile">The address of a constant zero-terminated string that contains the file name to associate with the URLs protocol.</param>
    <param name="pcszURL">The address of a constant zero-terminated string that contains the URL with an unknown protocol.</param>
    <param name="pszAppBuf">The address of a buffer that receives the path of the application specified by the user.</param>
    <param name="ucAppBufLen">
      <para>The size of <i>pszAppBuf</i>, in characters.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_REGISTER_ASSOC</h5>
      <para>Register the selected application as the handler for the protocol specified in <i>pcszURL</i>. The application is registered only if this flag is set and the user indicates that a persistent association is desired.</para>
      <h5>- dwInFlags.URLASSOCDLG_FL_USE_DEFAULT_NAME</h5>
      <para>Use the default file name (that is, "Internet Shortcut").</para>
    </param>
    <returns>
      <div>
        <b>Note</b>  As of Windows XP SP2, this function not supported and returns E_NOTIMPL in all situations.</div>In supported systems, returns S_OK if the application is registered with the URL protocol, or S_FALSE if nothing is registered. For example, the function returns S_FALSE when the user elects to perform a one-time execution via the selected application.</returns>
  </member>
</doc>