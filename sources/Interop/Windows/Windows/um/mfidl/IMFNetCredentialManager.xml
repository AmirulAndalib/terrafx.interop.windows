<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFNetCredentialManager.BeginGetCredentials">
    <summary>
      <para>Begins an asynchronous request to retrieve the user's credentials.</para>
    </summary>
    <param name="pParam">
      <para>Pointer to an <see cref="MFNetCredentialManagerGetParam" /> structure.</para>
    </param>
    <param name="pCallback">
      <para>Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object. The caller must implement this interface.</para>
    </param>
    <param name="pState">
      <para>Pointer to the <b>IUnknown</b> interface of a state object, defined by the caller. This parameter can be <b>NULL</b>. The object is returned to the caller when the callback is invoked.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFNetCredentialManager" />
  </member>
  <member name="IMFNetCredentialManager.EndGetCredentials">
    <summary>
      <para>Completes an asynchronous request to retrieve the user's credentials.</para>
    </summary>
    <param name="pResult">
      <para>Pointer to an <see cref="IMFAsyncResult" /> interface that contains the asynchronous result.</para>
    </param>
    <param name="ppCred">
      <para>Receives a pointer to the <see cref="IMFNetCredential" /> interface, which is used to retrieve the credentials. The caller must release the interface.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFNetCredentialManager" />
  </member>
  <member name="IMFNetCredentialManager.SetGood">
    <summary>
      <para>Specifies whether the user's credentials succeeded in the authentication challenge. The network source calls this method to informs the application whether the user's credentials were authenticated.</para>
    </summary>
    <param name="pCred">
      <para>Pointer to the <see cref="IMFNetCredential" /> interface.</para>
    </param>
    <param name="fGood">
      <para>Boolean value. The value is <b>TRUE</b> if the credentials succeeded in the authentication challenge. Otherwise, the value is <b>FALSE</b>.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFNetCredentialManager" />
  </member>
  <member name="IMFNetCredentialManager">
    <summary>
      <para>Implemented by applications to provide user credentials for a network source.</para>
      <para>To use this interface, implement it in your application. Then create a property store object and set the <a href="https://docs.microsoft.com//windows/desktop/medfound/mfnetsource-credential-manager-property">MFNETSOURCE_CREDENTIAL_MANAGER</a> property. The value of the property is a pointer to your application's <b>IMFNetCredentialManager</b> interface. Then pass the property store to one of the source resolver's creation functions, such as <see cref="IMFSourceResolver.CreateObjectFromURL" />, in the <i>pProps</i> parameter.</para>
      <para>Media Foundation does not provide a default implementation of this interface. Applications that support authentication must implement this interface.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/medfound/media-foundation-interfaces">Media Foundation Interfaces</seealso>
    <seealso href="https://docs.microsoft.com//windows/desktop/medfound/network-source-authentication">Network Source Authentication</seealso>
  </member>
</doc>