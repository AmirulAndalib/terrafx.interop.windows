<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFContentProtectionManager.BeginEnableContent">
    <summary>
      <para>Begins an asynchronous request to perform a content enabling action.</para>
      <para>This method requests the application to perform a specific step needed to acquire rights to the content, using a content enabler object.</para>
    </summary>
    <param name="pEnablerActivate">Pointer to the <see cref="IMFActivate" /> interface of a content enabler object. To create the content enabler, call <see cref="IMFActivate.ActivateObject" /> and request the <see cref="IMFContentEnabler" /> interface. The application should use the methods in <b>IMFContentEnabler</b> to complete the content enabling action.</param>
    <param name="pTopo">Pointer to the <see cref="IMFTopology" /> interface of the pending topology.</param>
    <param name="pCallback">Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object. When the operation is complete, the application should call <see cref="IMFAsyncCallback.Invoke" /> on the callback.</param>
    <param name="punkState">Reserved. Currently this parameter is always <b>NULL</b>.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>
                    <b>S_OK</b>
                  </b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFContentProtectionManager.EndEnableContent">
    <summary>Ends an asynchronous request to perform a content enabling action. This method is called by the protected media path (PMP) to complete an asynchronous call to <see cref="IMFContentProtectionManager.BeginEnableContent" />.</summary>
    <param name="pResult">Pointer to the <see cref="IMFAsyncResult" /> interface. This pointer is the same value that the application passed to the caller's <see cref="IMFAsyncCallback.Invoke" /> method.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFContentProtectionManager">
    <summary>
      <para>Enables playback of protected content by providing the application with a pointer to a content enabler object.</para>
      <para>Applications that play protected content should implement this interface.</para>
    </summary>
  </member>
</doc>