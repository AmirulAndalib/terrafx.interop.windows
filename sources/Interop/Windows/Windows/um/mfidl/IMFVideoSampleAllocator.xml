<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFVideoSampleAllocator.AllocateSample">
    <summary>Gets a video sample from the allocator.</summary>
    <param name="ppSample">Receives a pointer to the <see cref="IMFSample" /> interface. The caller must release the interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_NOT_INITIALIZED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The allocator was not initialized. Call <see cref="IMFVideoSampleAllocator.InitializeSampleAllocator" /> or <see cref="InitializeSampleAllocatorEx.InitializeSampleAllocatorEx" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_SAMPLEALLOCATOR_EMPTY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No samples are available.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFVideoSampleAllocator.InitializeSampleAllocator">
    <summary>Specifies the number of samples to allocate and the media type for the samples.</summary>
    <param name="cRequestedFrames">Number of samples to allocate.</param>
    <param name="pMediaType">Pointer to the <see cref="IMFMediaType" /> interface of a media type that describes the video format.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDMEDIATYPE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid media type.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFVideoSampleAllocator.SetDirectXManager">
    <summary>Specifies the Direct3D device manager for the video media sink to use.</summary>
    <param name="pManager">Pointer to the <b>IUnknown</b> interface of the Direct3D device manager. The media sink queries this pointer for the <see cref="IDirect3DDeviceManager9" /> interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFVideoSampleAllocator.UninitializeSampleAllocator">
    <summary>Releases all of the video samples that have been allocated.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFVideoSampleAllocator">
    <summary>
      <para>Allocates video samples for a video media sink.</para>
      <para>The stream sinks on the enhanced video renderer (EVR) expose this interface as a service. To obtain a pointer to the interface, call <see cref="IMFGetService.GetService" /> using the service identifier MR_VIDEO_ACCELERATION_SERVICE. Custom media sinks can also implement this interface. The Media Session uses this interface to allocate samples for the EVR, unless the upstream decoder supports DirectX Video Acceleration (DXVA).</para>
    </summary>
  </member>
</doc>