<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFTopology.AddNode">
    <summary>Adds a node to the topology.</summary>
    <param name="pNode">Pointer to the node's <see cref="IMFTopologyNode" /> interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <i>pNode</i> is invalid, possibly because the node already exists in the topology.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFTopology.Clear">
    <summary>Removes all nodes from the topology.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFTopology.CloneFrom">
    <summary>Converts this topology into a copy of another topology.</summary>
    <param name="pTopology">A pointer to the <see cref="IMFTopology" /> interface of the topology to clone.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFTopology.GetNode">
    <summary>Gets a node in the topology, specified by index.</summary>
    <param name="wIndex">The zero-based index of the node. To get the number of nodes in the topology, call <see cref="IMFTopology.GetNodeCount" />.</param>
    <param name="ppNode">Receives a pointer to the node's <see cref="IMFTopologyNode" /> interface. The caller must release the pointer.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The index is less than zero.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_INVALIDINDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No node can be found at the index <i>wIndex</i>.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFTopology.GetNodeByID">
    <summary>Gets a node in the topology, specified by node identifier.</summary>
    <param name="qwTopoNodeID">The identifier of the node to retrieve. To get a node's identifier, call <see cref="IMFTopologyNode.GetTopoNodeID" />.</param>
    <param name="ppNode">Receives a pointer to the node's <see cref="IMFTopologyNode" /> interface. The caller must release the interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_NOT_FOUND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The topology does not contain a node with this identifier.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFTopology.GetNodeCount">
    <summary>Gets the number of nodes in the topology.</summary>
    <param name="pwNodes">Receives the number of nodes.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFTopology.GetOutputNodeCollection">
    <summary>Gets the output nodes in the topology.</summary>
    <param name="ppCollection">Receives a pointer to the <see cref="IMFCollection" /> interface. The caller must release the pointer. The collection contains <b>IUnknown</b> pointers to all of the output nodes in the topology. Each pointer can be queried for the <see cref="IMFTopologyNode" /> interface. The collection might be empty.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFTopology.GetSourceNodeCollection">
    <summary>Gets the source nodes in the topology.</summary>
    <param name="ppCollection">Receives a pointer to the <see cref="IMFCollection" /> interface. The caller must release the pointer. The collection contains <b>IUnknown</b> pointers to all of the source nodes in the topology. Each pointer can be queried for the <see cref="IMFTopologyNode" /> interface. The collection might be empty.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFTopology.GetTopologyID">
    <summary>Gets the identifier of the topology.</summary>
    <param name="pID">Receives the identifier, as a <a href="https://docs.microsoft.com//windows/desktop/medfound/topoid">TOPOID</a> value.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IMFTopology.RemoveNode">
    <summary>Removes a node from the topology.</summary>
    <param name="pNode">Pointer to the node's <see cref="IMFTopologyNode" /> interface.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method succeeded.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified node is not a member of this topology.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFTopology">
    <summary>
      <para>Represents a topology. A <i>topology</i> describes a collection of media sources, sinks, and transforms that are connected in a certain order. These objects are represented within the topology by <i>topology nodes</i>, which expose the <see cref="IMFTopologyNode" /> interface. A topology describes the path of multimedia data through these nodes.</para>
      <para>To create a topology, call <see cref="MFCreateTopology" />.</para>
    </summary>
  </member>
</doc>