<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFTranscodeSinkInfoProvider.GetSinkInfo">
    <summary>
      <para>Gets the media types for the audio and video streams specified in the transcode profile.</para>
    </summary>
    <param name="pSinkInfo">
      <para>A pointer to an <see cref="MF_TRANSCODE_SINK_INFO" /> structure.</para>
      <para>If the method succeeds, the method assigns <see cref="IMFMediaType" /> pointers to the <b>pAudioMediaType</b> and <b>pVideoMediaType</b> members of this structure. The method might set either member to <b>NULL</b>. If either member is non-NULL after the method returns, the caller must release the <b>IMFMediaType</b> pointers.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Before calling this method, call <see cref="IMFTranscodeSinkInfoProvider.SetProfile" /> to set the transcode profile. The <b>GetSinkInfo</b> method  uses the profile to create media types for the audio and video streams.</para>
    </remarks>
    <seealso cref="IMFTranscodeProfile Interface" />
    <seealso cref="IMFTranscodeSinkInfoProvider" />
  </member>
  <member name="IMFTranscodeSinkInfoProvider.SetOutputByteStream">
    <summary>
      <para>Sets an output byte stream for the transcode media sink.</para>
    </summary>
    <param name="pByteStreamActivate">
      <para>A pointer to the <see cref="IMFActivate" /> interface of a byte-stream activation object.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Call this method to provide a writable byte stream
that will receive the transcoded data.</para>
      <para>Alternatively, you can provide the name of an  output file, by calling <see cref="IMFTranscodeSinkInfoProvider.SetOutputFile" />. These two methods are mutually exclusive.</para>
      <para>The <i>pByteStreamActivate</i> parameter must specify an activation object that creates a writable byte stream. Internally, the transcode media sink calls <see cref="IMFActivate.ActivateObject" /> to create the byte stream, as follows:</para>
      <code>IMFByteStream *pByteStream = NULL;

HRESULT hr = pByteStreamActivate-&gt;ActivateObject(IID_IMFByteStream, (void**)&amp;amp;amp;amp;amp;amp;amp;pByteStream);
</code>
      <para>Currently, Microsoft Media Foundation does not provide any byte-stream activation objects. To use this method, an application must provide a custom implementation of <see cref="IMFActivate" />.</para>
    </remarks>
    <seealso cref="IMFTranscodeSinkInfoProvider" />
  </member>
  <member name="IMFTranscodeSinkInfoProvider.SetOutputFile">
    <summary>
      <para>Sets the name of the encoded output file.</para>
    </summary>
    <param name="pwszFileName">
      <para>Pointer to a null-terminated string that contains the name of the output file.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>The media sink will create a local file with the specified file name.</para>
      <para>Alternately, you can call <see cref="IMFTranscodeSinkInfoProvider.SetOutputByteStream" /> to specify a byte stream  that will receive the transcoded data. These two methods are mutually exclusive.</para>
    </remarks>
    <seealso cref="IMFTranscodeSinkInfoProvider" />
  </member>
  <member name="IMFTranscodeSinkInfoProvider.SetProfile">
    <summary>
      <para>Sets the transcoding profile on the transcode sink activation object.</para>
    </summary>
    <param name="pProfile">
      <para>A pointer to the <see cref="IMFTranscodeProfile" /> interface. To get a pointer to this interface, call <see cref="MFCreateTranscodeProfile" />.</para>
    </param>
    <returns>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <remarks>
      <para>Before calling this method, initialize the profile object as follows:</para>
      <list type="bullet">
        <item>
          <description>Set the <a href="https://docs.microsoft.com//windows/desktop/medfound/mf-transcode-containertype">MF_TRANSCODE_CONTAINERTYPE</a> attribute to specify the container type of the output file.</description>
        </item>
        <item>
          <description>If the output file will have a video stream, set video attributes by calling the <see cref="IMFTranscodeProfile.SetVideoAttributes" /> method.</description>
        </item>
        <item>
          <description>If the output file will have an audio stream, set audio attributes by calling the <see cref="IMFTranscodeProfile.SetAudioAttributes" /> method.</description>
        </item>
      </list>
    </remarks>
    <seealso cref="IMFTranscodeSinkInfoProvider" />
  </member>
  <member name="IMFTranscodeSinkInfoProvider">
    <summary>
      <para>Implemented by the transcode sink activation object.</para>
      <para>The transcode sink activation object can be used to create any of the following file sinks:</para>
      <list type="bullet">
        <item>
          <description>3GP file sink</description>
        </item>
        <item>
          <description>MP3 file sink</description>
        </item>
        <item>
          <description>MP4 file sink</description>
        </item>
      </list>
    </summary>
    <remarks>
      <para>To use this interface, perform the following steps:</para>
      <list type="number">
        <item>
          <description>Call <see cref="MFCreateTranscodeSinkActivate" /> to create the transcode sink activation object.</description>
        </item>
        <item>
          <description>Query the activation object for the <b>IMFTranscodeSinkInfoProvider</b> interface.</description>
        </item>
        <item>
          <description>Call <see cref="MFCreateTranscodeProfile" /> to create a transcode profile.</description>
        </item>
        <item>
          <description>Set the <a href="https://docs.microsoft.com//windows/desktop/medfound/mf-transcode-containertype">MF_TRANSCODE_CONTAINERTYPE</a> attribute on the transcode profile. The attribute must have one of the following values:<list type="bullet"><item><description><b>MFTranscodeContainerType_3GP</b></description></item><item><description><b>MFTranscodeContainerType_MP3</b></description></item><item><description><b>MFTranscodeContainerType_MPEG4</b></description></item></list></description>
        </item>
        <item>
          <description>Call <see cref="IMFTranscodeProfile.SetVideoAttributes" /> and <see cref="IMFTranscodeProfile.SetAudioAttributes" /> to specify the video and audio formats.</description>
        </item>
        <item>
          <description>Call <see cref="IMFTranscodeSinkInfoProvider.SetProfile" /> to set the transcode profile.</description>
        </item>
        <item>
          <description>Call one of the following methods (but not both) to specify the output file:<list type="bullet"><item><description><see cref="IMFTranscodeSinkInfoProvider.SetOutputByteStream" /></description></item><item><description><see cref="IMFTranscodeSinkInfoProvider.SetOutputFile" /></description></item></list></description>
        </item>
        <item>
          <description>Call <see cref="IMFActivate.ActivateObject" /> on the activation object to create the media sink.</description>
        </item>
      </list>
      <h4>Examples</h4>
      <code>// Creates an activation object for the generic transcode sink.

HRESULT CreateTranscodeSinkActivate(
    REFGUID         guidContainerType,
    IMFAttributes   *pVideoAttributes,
    IMFAttributes   *pAudioAttributes,
    IMFActivate     *pByteStreamActivate,
    IMFActivate     **ppSinkActivate
    )
{
    IMFActivate* pSinkActivate = NULL;
    IMFTranscodeSinkInfoProvider* pSinkInfoProvider = NULL;
    IMFTranscodeProfile* pProfile = NULL;
    IMFAttributes* pContainerAttributes = NULL;

    HRESULT hr = MFCreateAttributes(&amp;amp;amp;amp;amp;amp;pContainerAttributes, 1);
    if (FAILED(hr))
    {
        goto done;
    }

    // Create the transcode profile.
    hr = MFCreateTranscodeProfile(&amp;amp;amp;amp;amp;amp;pProfile);
    if (FAILED(hr))
    {
        goto done;
    }

    // Set the profile attributes.

    hr = pContainerAttributes-&gt;SetGUID(MF_TRANSCODE_CONTAINERTYPE, guidContainerType);
    if (FAILED(hr))
    {
        goto done;
    }

    hr = pProfile-&gt;SetContainerAttributes(pContainerAttributes);
    if (FAILED(hr))
    {
        goto done;
    }

    if (pVideoAttributes)
    {
        hr = pProfile-&gt;SetVideoAttributes(pVideoAttributes);
        if (FAILED(hr))
        {
            goto done;
        }
    }

    if (pAudioAttributes)
    {
        hr = pProfile-&gt;SetAudioAttributes(pAudioAttributes);
        if (FAILED(hr))
        {
            goto done;
        }
    }

    // Create the transcode sink activation object.
    hr = MFCreateTranscodeSinkActivate(&amp;amp;amp;amp;amp;amp;pSinkActivate);
    if (FAILED(hr))
    {
        goto done;
    }

    hr = pSinkActivate-&gt;QueryInterface(IID_PPV_ARGS(&amp;amp;amp;amp;amp;amp;pSinkInfoProvider));
    if (FAILED(hr))
    {
        goto done;
    }

    // Set the output byte stream.
    hr = pSinkInfoProvider-&gt;SetOutputByteStream(pByteStreamActivate);
    if (FAILED(hr))
    {
        goto done;
    }

    // Set the transcode profile.
    hr = pSinkInfoProvider-&gt;SetProfile(pProfile);
    if (FAILED(hr))
    {
        goto done;
    }

    // Return the activation object to the caller.
    *ppSinkActivate = pSinkActivate;
    (*ppSinkActivate)-&gt;AddRef();

done:
    SafeRelease(&amp;amp;amp;amp;amp;amp;pProfile);
    SafeRelease(&amp;amp;amp;amp;amp;amp;pSinkInfoProvider);
    SafeRelease(&amp;amp;amp;amp;amp;amp;pSinkActivate);
    SafeRelease(&amp;amp;amp;amp;amp;amp;pContainerAttributes);
    return hr;
}

</code>
    </remarks>
    <seealso cref="MFCreateTranscodeSinkActivate" />
    <seealso href="https://docs.microsoft.com//windows/desktop/medfound/media-foundation-interfaces">Media Foundation Interfaces</seealso>
  </member>
</doc>