<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFQualityAdvise.DropTime">
    <summary>
      <para>Drops samples over a specified interval of time.</para>
    </summary>
    <param name="hnsAmountToDrop">
      <para>Amount of time to drop, in 100-nanosecond units. This value is always absolute. If the method is called multiple times, do not add the times from previous calls.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>MF_E_DROPTIME_NOT_SUPPORTED</b>
            </para>
          </description>
          <description>
            <para>The object does not support this method.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Ideally the quality manager can prevent a renderer from falling behind. But if this does occur, then simply lowering quality does not guarantee the renderer will ever catch up. As a result, audio and video might fall out of sync. To correct this problem, the quality manager can call <b>DropTime</b> to request that the renderer drop samples quickly over a specified time interval. After that period, the renderer stops dropping samples.</para>
      <para>This method is primarily intended for the video renderer. Dropped audio samples cause audio glitching, which is not desirable.</para>
      <para>If a component does not support this method, it should return MF_E_DROPTIME_NOT_SUPPORTED.</para>
    </remarks>
    <seealso cref="IMFQualityAdvise" />
  </member>
  <member name="IMFQualityAdvise.GetDropMode">
    <summary>
      <para>Retrieves the current drop mode.</para>
    </summary>
    <param name="peDropMode">
      <para>Receives the drop mode, specified as a member of the <see cref="MF_QUALITY_DROP_MODE" /> enumeration.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFQualityAdvise" />
  </member>
  <member name="IMFQualityAdvise.GetQualityLevel">
    <summary>
      <para>Retrieves the current quality level.</para>
    </summary>
    <param name="peQualityLevel">
      <para>Receives the quality level, specified as a member of the <see cref="MF_QUALITY_LEVEL" /> enumeration.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFQualityAdvise" />
  </member>
  <member name="IMFQualityAdvise.SetDropMode">
    <summary>
      <para>Sets the drop mode. In drop mode, a component drops samples, more or less aggressively depending on the level of the drop mode.</para>
    </summary>
    <param name="eDropMode">
      <para>Requested drop mode, specified as a member of the <see cref="MF_QUALITY_DROP_MODE" /> enumeration.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>MF_E_NO_MORE_DROP_MODES</b>
            </para>
          </description>
          <description>
            <para>The component does not support the specified mode or any higher modes.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If this method is called on a media source, the media source might switch between thinned and non-thinned output. If that occurs, the affected streams will send an <a href="https://docs.microsoft.com//windows/desktop/medfound/mestreamthinmode">MEStreamThinMode</a> event to indicate the transition. The operation is asynchronous; after <b>SetDropMode</b> returns, you might receive samples that were queued before the transition. The MEStreamThinMode event marks the exact point in the stream where the transition occurs.</para>
    </remarks>
    <seealso cref="IMFQualityAdvise" />
  </member>
  <member name="IMFQualityAdvise.SetQualityLevel">
    <summary>
      <para>Sets the quality level. The quality level determines how the component consumes or produces samples.</para>
    </summary>
    <param name="eQualityLevel">
      <para>Requested quality level, specified as a member of the <see cref="MF_QUALITY_LEVEL" /> enumeration.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The method succeeded.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>MF_E_NO_MORE_QUALITY_LEVELS</b>
            </para>
          </description>
          <description>
            <para>The component does not support the specified quality level or any levels below it.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFQualityAdvise" />
  </member>
  <member name="IMFQualityAdvise">
    <summary>
      <para>Enables the quality manager to adjust the audio or video quality of a component in the pipeline.</para>
      <para>This interface is exposed by pipeline components that can adjust their quality. Typically it is exposed by decoders and stream sinks. For example, the enhanced video renderer (EVR) implements this interface. However, media sources can also implement this interface.</para>
      <para>To get a pointer to this interface from a media source, call <see cref="IMFGetService.GetService" /> with the service identifier MF_QUALITY_SERVICES. For all other pipeline objects (transforms and media sinks), call <b>QueryInterface</b>.</para>
    </summary>
    <remarks>
      <para>The quality manager typically obtains this interface when the quality manager's <see cref="IMFQualityManager.NotifyTopology" /> method is called.</para>
    </remarks>
    <seealso cref="IMFQualityManager" />
    <seealso href="https://docs.microsoft.com//windows/desktop/medfound/media-foundation-interfaces">Media Foundation Interfaces</seealso>
  </member>
</doc>