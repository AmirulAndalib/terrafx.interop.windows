<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFHttpDownloadRequest.AddHeader">
    <summary>
      <para>Invoked by Microsoft Media Foundation to add a single HTTP header to a HTTP request.  Microsoft Media Foundation will invoke this method once for each header that shall be included in the HTTP request, before it invokes the <see cref="BeginSendRequest" /> method.</para>
    </summary>
    <param name="szHeader">
      <para>Contains a single HTTP request header, for example, “Accept: <i>/</i>”. The string does not include the carriage return or line feed characters.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully added the header to the list of headers to be sent with the request.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>There is insufficient memory to complete the operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.BeginReadPayload">
    <summary>
      <para>Invoked by Microsoft Media Foundation to receive the message body of the response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndReceiveResponse" /> method. Since the size of the message body may be large, or unknown, Media Foundation may invoke this method multiple times to retrieve the message body in piecemeal fashion.</para>
    </summary>
    <param name="pb">
      <para>Pointer to a buffer that receives the data.</para>
    </param>
    <param name="cb">
      <para>Specifies the size of the <i>pb</i> buffer, in bytes.</para>
    </param>
    <param name="pCallback">
      <para>Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</para>
    </param>
    <param name="punkState">
      <para>Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully started the asynchronous operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Microsoft Media Foundation never invokes <b>BeginReadPayload</b> while a previous call to <b>BeginReadPayload</b> has not yet completed.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.BeginReceiveResponse">
    <summary>
      <para>Invoked by Microsoft Media Foundation to receive the response, provided by the server, in response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndSendRequest" /> method.</para>
    </summary>
    <param name="pCallback">
      <para>Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</para>
    </param>
    <param name="punkState">
      <para>Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully started the asynchronous operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.BeginSendRequest">
    <summary>
      <para>Invoked by Microsoft Media Foundation to send a HTTP or HTTPS request</para>
    </summary>
    <param name="pbPayload">
      <para>Pointer to a buffer that contains the message payload to send in the request. This parameter is used for POST requests. GET requests do not carry a message payload and therefore <i>pbPayload</i> is NULL.</para>
    </param>
    <param name="cbPayload">
      <para>The size of the <i>pbPayload</i> buffer, in bytes.</para>
    </param>
    <param name="pCallback">
      <para>Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</para>
    </param>
    <param name="punkState">
      <para>Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully started the asynchronous operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>There is insufficient memory to complete the operation.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The implementation of <b>BeginWrite</b> does not need to make a private copy of the memory pointed to by <i>pbPayload</i>, as Microsoft Media Foundation will not reallocate, free, or write to the buffer while an asynchronous write is still pending.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.Close">
    <summary>
      <para>Invoked by Microsoft Media Foundation to allow <see cref="IMFHttpDownloadRequest" /> to free any internal resources. It will also cancel the current request if it is still in progress.</para>
    </summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully closed the request object.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Microsoft Media Foundation will not invoke any other methods on the <see cref="IMFHttpDownloadRequest" /> interface after having invoked <b>Close</b>.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.EndReadPayload">
    <summary>
      <para>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginReadPayload" />. When this method completes successfully, the payload data will have been written to the buffer that Media Foundation provided when invoking <b>BeginReadPayload</b>.</para>
    </summary>
    <param name="pResult">
      <para>Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</para>
    </param>
    <param name="pqwOffset">
      <para>The offset of the first byte written to the buffer, relative to the complete message body of the current HTTP request. For example, when Media Foundation invokes <see cref="BeginReadPayload" /> for the first time on a given <see cref="IMFHttpDownloadRequest" />, and specifies a buffer size of 100, the <i>pqwOffset</i> parameter will be set to 0. Then, when Media Foundation invokes <b>BeginReadPayload</b> for the second time on the same <b>IMNFHttpDownloadRequest</b>, the <i>pqwOffset</i> parameter will be set to 100.</para>
    </param>
    <param name="pcbRead">
      <para>Specifies the number of bytes written to the buffer that Media Foundation provided when invoking <see cref="BeginReadPayload" />. Note that this value must always be equal to the size of the buffer specified in <b>BeginReadPayload</b>, unless the request failed, or unless the end of the message body has been reached.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully wrote data to the buffer provided in <see cref="BeginReadPayload" />.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.EndReceiveResponse">
    <summary>
      <para>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginReceiveResponse" />.</para>
    </summary>
    <param name="pResult">
      <para>Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully received the HTTP response and associated headers.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If the server failed the request but responded with a specific HTTP status code, the <b>EndReceiveResponse</b> should still return S_OK. Media Foundation will invoke the <see cref="GetHttpStatus" /> method to retrieve the HTTP status code.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.EndSendRequest">
    <summary>
      <para>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginSendRequest" />.</para>
    </summary>
    <param name="pResult">
      <para>Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The request was successfully sent to the server.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetAtEndOfPayload">
    <summary>
      <para>Invoked by Microsoft Media Foundation to check if it should invoke <see cref="BeginReadPayload" /> to read data from the message body of the response. During the processing of a typical HTTP response, Media Foundation will invoke <b>BeginReadPayload</b> multiple times, but once <b>GetAtEndOfPayload</b> sets its output parameter to TRUE, Media Foundation will not invoke <b>BeginReadPayload</b> again.</para>
    </summary>
    <param name="pfAtEndOfPayload">
      <para>Set to FALSE if a call to <see cref="BeginReadPayload" /> can return one or more bytes of data to Media Foundation. Set to TRUE when there is no more data to return.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully completed the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>pfAtEndOfPayload</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Microsoft Media Foundation invokes <b>GetAtEndOfPayload</b> only after having successfully invoked <see cref="EndReceiveResponse" />.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetHttpStatus">
    <summary>
      <para>Invoked by Microsoft Media Foundation to retrieve the HTTP status code that the server specified in its response. Media Foundation invokes this method after a successful call to <see cref="EndReceiveResponse" />.</para>
    </summary>
    <param name="pdwHttpStatus">
      <para>The HTTP status code of the response. For example, the value is  200 for a typical successful response.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully returned the HTTP status code.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_FAIL</b>
            </para>
          </description>
          <description>
            <para>The HTTP response has not yet been received.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>pdwHttpStatus</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetRangeEndOffset">
    <summary>
      <para>Invoked by Microsoft Media Foundation to retrieve the offset of the last byte in the current response, counted from the start of the resource. This is useful when a request uses the HTTP “Range” header to download only a portion of a resource.</para>
    </summary>
    <param name="pqwRangeEnd">
      <para>The offset of the last byte in the current response, counted from the start of the resource, if known. For example, if the request specified the HTTP header, “Range: bytes=1000-“ and the size of the message body in the response is 200 bytes, then <i>pwqRangeEnd</i> becomes 1199. If the value is not known, for example, because the server did not specify the size of its response, <i>pwqRangeEnd</i> is set to MAX_ULONG (0xFFFFFFFFFFFFFFFF).</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully completed the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>qwpRangeEnd</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Microsoft Media Foundation invokes <b>GetRangeEndOffset</b> only after having successfully invoked <see cref="EndReceiveResponse" />.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetTimeSeekResult">
    <summary>
      <para>Invoked by Microsoft Media Foundation to retrieve the values of the TimeSeekRange.DLNA.ORG HTTP header, if any, that the server specified in its response.</para>
    </summary>
    <param name="pqwStartTime">
      <para>The starting time offset, specified in units of one-hundred nanoseconds.</para>
    </param>
    <param name="pqwStopTime">
      <para>The end time offset, specified in units of one-hundred nanoseconds</para>
    </param>
    <param name="pqwDuration">
      <para>The time duration of data contained in the response, specified in units of one-hundred nanoseconds. Set this parameter to 0 if the server did not specify a duration (i.e., specified “*” as the duration.)</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>The TimeSeekRange.DLNA.ORG HTTP header was present in the response, and could be successfully parsed.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>S_FALSE</b>
            </para>
          </description>
          <description>
            <para>The TimeSeekRange.DLNA.ORG HTTP header was not present in the response, or had a syntax error.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>pfNullSOurceOrigin</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The values of all the parameters should be set to 0 if <b>GetTimeSeekResult</b> is invoked before <see cref="EndReceiveResponse" /> has been invoked. For information about the syntax for the TimeSeekRange.DLNA.ORG header, please refer to the <a href="http://www.dlna.org/guidelines/">DLNA web site</a>.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetTotalLength">
    <summary>
      <para>Invoked by Microsoft Media Foundation to retrieve the total length of the resource that is being downloaded, if known.</para>
    </summary>
    <param name="pqwTotalLength">
      <para>The total length, in bytes, of the resource being downloaded, if known. If not known, set to <b>MAX_ULONG</b> (0xFFFFFFFFFFFFFFFF).</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully completed the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>pqwTotalLength</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Microsoft Media Foundation invokes <b>GetTotalLength</b> only after having successfully invoked <see cref="EndReceiveResponse" />. The total length of the resource may be larger than the amount of data returned by the server in the current response. For example, if the request included the HTTP “Range” header, the data returned in the response may be less than total length of the resource. The <see cref="GetRangeEndOffset" /> method can be used to calculate how much data is returned in the current response.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.GetURL">
    <summary>
      <para>Returns the URL that is used for sending the request.</para>
    </summary>
    <param name="ppszURL">
      <para>The URL that is used for sending the request to the server. Note that this URL may be different if the server has issued a HTTP protocol “redirect”. The memory for <i>pszURL</i> must be allocated with <see cref="CoTaskMemAlloc" />, and will be freed by Media Foundation with <see cref="CoTaskMemFree" />.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully returned the URL.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>There is insufficient memory to complete the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>ppszURL</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>By default, <b>GetURL</b> returns an URL which is synthesized from the parameters provided by Media Foundation in the <see cref="IMFHttpDownloadSession.SetServer" /> and <see cref="IMFHttpDownloadSession.CreateRequest" /> methods. However, if the HTTP server has redirected the <see cref="IMFHttpDownloadRequest" /> to a different server (i.e., through a “302 See Other” HTTP response) then the <b>GetURL</b> method returns the URL that the HTTP server specified.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.HasNullSourceOrigin">
    <summary>
      <para>Invoked by Microsoft Media Foundation to detect the case when a HTTP or HTTPS request has been redirected to a different server of different "origin".</para>
    </summary>
    <param name="pfNullSourceOrigin">
      <para>Set to TRUE if the current request has a “null” source origin. The source origin would become “null” if the HTTP request was redirected from one server to another, and the two servers have different origins.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully completed the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>pfNullSOurceOrigin</i> parameter is an invalid pointer.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The <i>pfNullSourceOrigin</i> parameter should be set to TRUE if <b>HasNullSourceOrigin</b> is invoked before <see cref="EndReceiveResponse" /> has been invoked. For more information about the concept of origin in HTTP, see <a href="https://tools.ietf.org/html/rfc6454">RFC-6454</a>.</para>
    </remarks>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest.QueryHeader">
    <summary>
      <para>Invoked by Microsoft Media Foundation to retrieve the values of specified HTTP headers from the response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndReceiveResponse" /> method.</para>
    </summary>
    <param name="szHeaderName">
      <para>The name of the HTTP header for which the value is being queried.</para>
    </param>
    <param name="dwIndex">
      <para>The index number of the specified header, for the case where the response contains multiple headers with the same name. A value of 0 indicates that the value of the first header with the specified name is requested, 1 indicates that the second header is requested, and so on.</para>
    </param>
    <param name="ppszHeaderValue">
      <para>Set to the value of the requested header, not including the carriage return or line feed characters. The memory for <i>ppszHeaderValue</i> must be allocated with <see cref="CoTaskMemAlloc" /> and will be freed by Media Foundation with <see cref="CoTaskMemFree" />.</para>
    </param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Successfully returned the value of the specified header with the specified index.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>There is insufficient memory to complete the operation.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>The <i>ppszHeaderValue</i> parameter is an invalid pointer.</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>MF_E_OUT_OF_RANGE</b>
            </para>
          </description>
          <description>
            <para>The <i>dwIndex</i> parameter value is out of range.</para>
          </description>
        </item>
      </list>
    </returns>
    <seealso cref="IMFHttpDownloadRequest" />
  </member>
  <member name="IMFHttpDownloadRequest">
    <summary>
      <para>Applications implement this interface to override the default implementation of the HTTP and HTTPS protocols used by Microsoft Media Foundation. Applications provide the <b>IMFHttpDownloadRequest</b> interface to Media Foundation through the <see cref="CreateRequest" /> method on the <see cref="IMFHttpDownloadSession" /> interface.</para>
    </summary>
  </member>
</doc>