<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMFHttpDownloadRequest.AddHeader">
    <summary>Invoked by Microsoft Media Foundation to add a single HTTP header to a HTTP request. Microsoft Media Foundation will invoke this method once for each header that shall be included in the HTTP request, before it invokes the <see cref="BeginSendRequest" /> method.</summary>
    <param name="szHeader">Contains a single HTTP request header, for example, “Accept: <i>/</i>”. The string does not include the carriage return or line feed characters.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully added the header to the list of headers to be sent with the request.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.BeginReadPayload">
    <summary>Invoked by Microsoft Media Foundation to receive the message body of the response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndReceiveResponse" /> method. Since the size of the message body may be large, or unknown, Media Foundation may invoke this method multiple times to retrieve the message body in piecemeal fashion.</summary>
    <param name="pb">Pointer to a buffer that receives the data.</param>
    <param name="cb">Specifies the size of the <i>pb</i> buffer, in bytes.</param>
    <param name="pCallback">Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</param>
    <param name="punkState">Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully started the asynchronous operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.BeginReceiveResponse">
    <summary>Invoked by Microsoft Media Foundation to receive the response, provided by the server, in response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndSendRequest" /> method.</summary>
    <param name="pCallback">Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</param>
    <param name="punkState">Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully started the asynchronous operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.BeginSendRequest">
    <summary>Invoked by Microsoft Media Foundation to send a HTTP or HTTPS request</summary>
    <param name="pbPayload">Pointer to a buffer that contains the message payload to send in the request. This parameter is used for POST requests. GET requests do not carry a message payload and therefore <i>pbPayload</i> is NULL.</param>
    <param name="cbPayload">The size of the <i>pbPayload</i> buffer, in bytes.</param>
    <param name="pCallback">Pointer to the <see cref="IMFAsyncCallback" /> interface of a callback object that is implemented by Microsoft Media Foundation.</param>
    <param name="punkState">Pointer to the <see cref="IUnknown" /> interface of a state object, defined by Microsoft Media Foundation. This parameter can be NULL.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully started the asynchronous operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is insufficient memory to complete the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.Close">
    <summary>Invoked by Microsoft Media Foundation to allow <see cref="IMFHttpDownloadRequest" /> to free any internal resources. It will also cancel the current request if it is still in progress.</summary>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully closed the request object.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.EndReadPayload">
    <summary>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginReadPayload" />. When this method completes successfully, the payload data will have been written to the buffer that Media Foundation provided when invoking <b>BeginReadPayload</b>.</summary>
    <param name="pResult">Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</param>
    <param name="pqwOffset">The offset of the first byte written to the buffer, relative to the complete message body of the current HTTP request. For example, when Media Foundation invokes <see cref="BeginReadPayload" /> for the first time on a given <see cref="IMFHttpDownloadRequest" />, and specifies a buffer size of 100, the <i>pqwOffset</i> parameter will be set to 0. Then, when Media Foundation invokes <b>BeginReadPayload</b> for the second time on the same <b>IMNFHttpDownloadRequest</b>, the <i>pqwOffset</i> parameter will be set to 100.</param>
    <param name="pcbRead">Specifies the number of bytes written to the buffer that Media Foundation provided when invoking <see cref="BeginReadPayload" />. Note that this value must always be equal to the size of the buffer specified in <b>BeginReadPayload</b>, unless the request failed, or unless the end of the message body has been reached.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully wrote data to the buffer provided in <see cref="BeginReadPayload" />.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.EndReceiveResponse">
    <summary>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginReceiveResponse" />.</summary>
    <param name="pResult">Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully received the HTTP response and associated headers.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.EndSendRequest">
    <summary>Invoked by Microsoft Media Foundation to complete the asynchronous operation started by <see cref="BeginSendRequest" />.</summary>
    <param name="pResult">Pointer to the <see cref="IMFAsyncResult" /> interface. Microsoft Media Foundation will pass in the same pointer that its callback object received in the <see cref="IMFAsyncCallback.Invoke" /> method.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The request was successfully sent to the server.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetAtEndOfPayload">
    <summary>Invoked by Microsoft Media Foundation to check if it should invoke <see cref="BeginReadPayload" /> to read data from the message body of the response. During the processing of a typical HTTP response, Media Foundation will invoke <b>BeginReadPayload</b> multiple times, but once <b>GetAtEndOfPayload</b> sets its output parameter to TRUE, Media Foundation will not invoke <b>BeginReadPayload</b> again.</summary>
    <param name="pfAtEndOfPayload">Set to FALSE if a call to <see cref="BeginReadPayload" /> can return one or more bytes of data to Media Foundation. Set to TRUE when there is no more data to return.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully completed the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pfAtEndOfPayload</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetHttpStatus">
    <summary>Invoked by Microsoft Media Foundation to retrieve the HTTP status code that the server specified in its response. Media Foundation invokes this method after a successful call to <see cref="EndReceiveResponse" />.</summary>
    <param name="pdwHttpStatus">The HTTP status code of the response. For example, the value is 200 for a typical successful response.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully returned the HTTP status code.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The HTTP response has not yet been received.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pdwHttpStatus</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetRangeEndOffset">
    <summary>Invoked by Microsoft Media Foundation to retrieve the offset of the last byte in the current response, counted from the start of the resource. This is useful when a request uses the HTTP “Range” header to download only a portion of a resource.</summary>
    <param name="pqwRangeEnd">The offset of the last byte in the current response, counted from the start of the resource, if known. For example, if the request specified the HTTP header, “Range: bytes=1000-“ and the size of the message body in the response is 200 bytes, then <i>pwqRangeEnd</i> becomes 1199. If the value is not known, for example, because the server did not specify the size of its response, <i>pwqRangeEnd</i> is set to MAX_ULONG (0xFFFFFFFFFFFFFFFF).</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully completed the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>qwpRangeEnd</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetTimeSeekResult">
    <summary>Invoked by Microsoft Media Foundation to retrieve the values of the TimeSeekRange.DLNA.ORG HTTP header, if any, that the server specified in its response.</summary>
    <param name="pqwStartTime">The starting time offset, specified in units of one-hundred nanoseconds.</param>
    <param name="pqwStopTime">The end time offset, specified in units of one-hundred nanoseconds</param>
    <param name="pqwDuration">The time duration of data contained in the response, specified in units of one-hundred nanoseconds. Set this parameter to 0 if the server did not specify a duration (i.e., specified “*” as the duration.)</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The TimeSeekRange.DLNA.ORG HTTP header was present in the response, and could be successfully parsed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The TimeSeekRange.DLNA.ORG HTTP header was not present in the response, or had a syntax error.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pfNullSOurceOrigin</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetTotalLength">
    <summary>Invoked by Microsoft Media Foundation to retrieve the total length of the resource that is being downloaded, if known.</summary>
    <param name="pqwTotalLength">The total length, in bytes, of the resource being downloaded, if known. If not known, set to <b>MAX_ULONG</b> (0xFFFFFFFFFFFFFFFF).</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully completed the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pqwTotalLength</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.GetURL">
    <summary>Returns the URL that is used for sending the request.</summary>
    <param name="ppszURL">The URL that is used for sending the request to the server. Note that this URL may be different if the server has issued a HTTP protocol “redirect”. The memory for <i>pszURL</i> must be allocated with <see cref="CoTaskMemAlloc" />, and will be freed by Media Foundation with <see cref="CoTaskMemFree" />.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully returned the URL.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppszURL</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.HasNullSourceOrigin">
    <summary>Invoked by Microsoft Media Foundation to detect the case when a HTTP or HTTPS request has been redirected to a different server of different "origin".</summary>
    <param name="pfNullSourceOrigin">Set to TRUE if the current request has a “null” source origin. The source origin would become “null” if the HTTP request was redirected from one server to another, and the two servers have different origins.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully completed the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>pfNullSOurceOrigin</i> parameter is an invalid pointer.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest.QueryHeader">
    <summary>Invoked by Microsoft Media Foundation to retrieve the values of specified HTTP headers from the response to a previously sent HTTP or HTTPS request. Media Foundation invokes this method only after having successfully invoked the <see cref="EndReceiveResponse" /> method.</summary>
    <param name="szHeaderName">The name of the HTTP header for which the value is being queried.</param>
    <param name="dwIndex">The index number of the specified header, for the case where the response contains multiple headers with the same name. A value of 0 indicates that the value of the first header with the specified name is requested, 1 indicates that the second header is requested, and so on.</param>
    <param name="ppszHeaderValue">Set to the value of the requested header, not including the carriage return or line feed characters. The memory for <i>ppszHeaderValue</i> must be allocated with <see cref="CoTaskMemAlloc" /> and will be freed by Media Foundation with <see cref="CoTaskMemFree" />.</param>
    <returns>
      <para>The method returns an <b>HRESULT</b>. Possible values include, but are not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Successfully returned the value of the specified header with the specified index.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is insufficient memory to complete the operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>ppszHeaderValue</i> parameter is an invalid pointer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MF_E_OUT_OF_RANGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The <i>dwIndex</i> parameter value is out of range.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMFHttpDownloadRequest">
    <summary>Applications implement this interface to override the default implementation of the HTTP and HTTPS protocols used by Microsoft Media Foundation. Applications provide the <b>IMFHttpDownloadRequest</b> interface to Media Foundation through the <see cref="CreateRequest" /> method on the <see cref="IMFHttpDownloadSession" /> interface.</summary>
  </member>
</doc>