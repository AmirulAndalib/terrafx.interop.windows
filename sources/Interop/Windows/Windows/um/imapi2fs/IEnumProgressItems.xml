<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IEnumProgressItems.Clone">
    <summary>Creates another enumerator that contains the same enumeration state as the current one.</summary>
    <param name="ppEnum">Receives the interface pointer to the enumeration object. If the method is unsuccessful, the value of this output variable is undefined. You must release <i>ppEnum</i> when done.</param>
    <returns>
      <para>S_OK is returned on success, but other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Pointer is not valid.<para>Value: 0x80004003</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failed to allocate the required memory.<para>Value: 0x8007000E</para></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IEnumProgressItems.Next">
    <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
    <param name="celt">Number of items to retrieve.</param>
    <param name="rgelt">Array of <see cref="IProgressItem" /> interfaces. You must release each interface in rgelt when done.</param>
    <param name="pceltFetched">Number of elements returned in rgelt. You can set <i>pceltFetched</i> to <b>NULL</b> if <i>celt</i> is one. Otherwise, initialize the value of <i>pceltFetched</i> to 0 before calling this method.</param>
    <returns>
      <para>S_OK is returned when the number of requested elements (<i>celt</i>) are returned successfully or the number of returned items (<i>pceltFetched</i>) is less than the number of requested elements.</para>
      <para>Other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_POINTER</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Pointer is not valid.<para>Value: 0x80004003</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failed to allocate the required memory.<para>Value: 0x8007000E</para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One or more arguments are not valid.<para>Value: 0x80070057</para></description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IEnumProgressItems.Reset">
    <summary>Resets the enumeration sequence to the beginning.</summary>
    <returns>S_OK is returned on success, but other success codes may be returned as a result of implementation.</returns>
  </member>
  <member name="IEnumProgressItems.Skip">
    <summary>Skips a specified number of items in the enumeration sequence.</summary>
    <param name="celt">Number of items to skip.</param>
    <returns>
      <para>S_OK is returned on success, but other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Skipped less than the number of requested elements.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IEnumProgressItems">
    <summary>
      <para>Use this interface to enumerate a collection of progress items.</para>
      <para>To get this interface, call the <see cref="IProgressItems.get_EnumProgressItems" /> method.</para>
    </summary>
  </member>
</doc>