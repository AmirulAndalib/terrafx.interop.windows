<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IEnumFsiItems.Clone">
    <summary>
      <para>Creates another enumerator that contains the same enumeration state as the current one.</para>
    </summary>
    <param name="ppEnum">
      <para>Receives the interface pointer to the enumeration object. If the method is unsuccessful, the value of this output variable is undefined. You must release <i>ppEnum</i> when done.</para>
    </param>
    <returns>
      <para>S_OK is returned on success, but other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Pointer is not valid.</para>
            <para>Value: 0x80004003</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Failed to allocate the required memory.</para>
            <para>Value: 0x8007000E</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Using this method, a client can record a particular point in the enumeration sequence, and then return to that point at a later time. The new enumerator supports the same interface as the original one.</para>
    </remarks>
    <seealso cref="IEnumFsiItems" />
  </member>
  <member name="IEnumFsiItems.Next">
    <summary>
      <para>Retrieves a specified number of items in the enumeration sequence.</para>
    </summary>
    <param name="celt">
      <para>Number of items to retrieve.</para>
    </param>
    <param name="rgelt">
      <para>Array of <see cref="IFsiItem" /> interfaces. You must release each interface in rgelt when done.</para>
    </param>
    <param name="pceltFetched">
      <para>Number of elements returned in rgelt. You can set <i>pceltFetched</i> to <b>NULL</b> if <i>celt</i> is one. Otherwise, initialize the value of <i>pceltFetched</i> to 0 before calling this method.</para>
    </param>
    <returns>
      <para>S_OK is returned when the number of requested elements (<i>celt</i>) are returned successfully or the number of returned items (<i>pceltFetched</i>) is less than the number of requested elements.</para>
      <para>Other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <para>Pointer is not valid.</para>
            <para>Value: 0x80004003</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_OUTOFMEMORY</b>
            </para>
          </description>
          <description>
            <para>Failed to allocate the required memory.</para>
            <para>Value: 0x8007000E</para>
          </description>
        </item>
        <item>
          <description>
            <para>
              <b>E_INVALIDARG</b>
            </para>
          </description>
          <description>
            <para>One or more arguments are not valid.</para>
            <para>Value: 0x80070057</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If there are fewer than the requested number of elements left in the sequence, it retrieves the remaining elements.</para>
    </remarks>
    <seealso cref="IEnumFsiItems" />
  </member>
  <member name="IEnumFsiItems.Reset">
    <summary>
      <para>Resets the enumeration sequence to the beginning.</para>
    </summary>
    <returns>
      <para>S_OK is returned on success, but other success codes may be returned as a result of implementation.</para>
    </returns>
    <seealso cref="IEnumFsiItems" />
  </member>
  <member name="IEnumFsiItems.Skip">
    <summary>
      <para>Skips a specified number of items in the enumeration sequence.</para>
    </summary>
    <param name="celt">
      <para>Number of items to skip.</para>
    </param>
    <returns>
      <para>S_OK is returned on success, but other success codes may be returned as a result of implementation. The following error codes are commonly returned on operation failure, but do not represent the only possible error values:</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>S_FALSE</b>
            </para>
          </description>
          <description>
            <para>Skipped less than the number of requested elements.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>If there are fewer elements left in the sequence than the requested number of elements to skip, it skips past the last element in the sequence.</para>
    </remarks>
    <seealso cref="IEnumFsiItems" />
  </member>
  <member name="IEnumFsiItems">
    <summary>
      <para>Use this interface to enumerate the child directory and file items for a FsiDirectoryItem object.</para>
      <para>To get this interface, call the <see cref="IFsiDirectoryItem.get_EnumFsiItems" /> method.</para>
    </summary>
    <remarks>
      <para>This is a <b>EnumFsiItems</b> object in script.</para>
    </remarks>
    <seealso cref="IFileSystemImage" />
    <seealso cref="IFsiDirectoryItem" />
  </member>
</doc>