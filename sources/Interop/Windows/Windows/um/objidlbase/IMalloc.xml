<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMalloc.DidAlloc">
    <summary>Determines whether this allocator was used to allocate the specified block of memory.</summary>
    <param name="pv">A pointer to the block of memory. If this parameter is a <b>NULL</b> pointer, -1 is returned.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>1</term>
              </listheader>
            </list>
          </description>
          <description>The block of memory was allocated by this allocator.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>0</term>
              </listheader>
            </list>
          </description>
          <description>The block of memory was not allocated by this allocator.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>-1</term>
              </listheader>
            </list>
          </description>
          <description>This method cannot determine whether this allocator allocated the block of memory.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMalloc.Free">
    <summary>Frees a previously allocated block of memory.</summary>
    <param name="pv">A pointer to the memory block to be freed. If this parameter is <b>NULL</b>, this method has no effect.</param>
  </member>
  <member name="IMalloc.GetSize">
    <summary>Retrieves the size of a previously allocated block of memory.</summary>
    <param name="pv">A pointer to the block of memory.</param>
    <returns>The size of the allocated memory block in bytes or, if <i>pv</i> is a <b>NULL</b> pointer, -1.</returns>
  </member>
  <member name="IMalloc.HeapMinimize">
    <summary>Minimizes the heap as much as possible by releasing unused memory to the operating system, coalescing adjacent free blocks, and committing free pages.</summary>
  </member>
  <member name="IMalloc.Realloc">
    <summary>Changes the size of a previously allocated block of memory.</summary>
    <param name="pv">A pointer to the block of memory to be reallocated. This parameter can be <b>NULL</b>, as discussed in the Remarks section below.</param>
    <param name="cb">The size of the memory block to be reallocated, in bytes. This parameter can be 0, as discussed in the Remarks section below.</param>
    <returns>If the method succeeds, the return value is a pointer to the reallocated block of memory. Otherwise, it is <b>NULL</b>.</returns>
  </member>
  <member name="IMalloc">
    <summary>Allocates, frees, and manages memory.</summary>
  </member>
</doc>