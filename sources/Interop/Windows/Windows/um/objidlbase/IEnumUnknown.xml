<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IEnumUnknown.Clone">
    <summary>
      <para>Creates a new enumerator that contains the same enumeration state as the current one.</para>
      <para>This method makes it possible to record a point in the enumeration sequence in order to return to that point at a later time. The caller must release this new enumerator separately from the first enumerator.</para>
    </summary>
    <param name="ppenum">A pointer to the cloned enumerator object.</param>
    <returns>This method can return the standard return values E_INVALIDARG, E_OUTOFMEMORY, E_UNEXPECTED, and S_OK.</returns>
  </member>
  <member name="IEnumUnknown.Next">
    <summary>Retrieves the specified number of items in the enumeration sequence.</summary>
    <param name="celt">The number of items to be retrieved. If there are fewer than the requested number of items left in the sequence, this method retrieves the remaining elements.</param>
    <param name="rgelt">
      <para>An array of enumerated items.</para>
      <para>The enumerator is responsible for calling <see cref="AddRef" />, and the caller is responsible for calling <see cref="Release" /> through each pointer enumerated. If <i>celt</i> is greater than 1, the caller must also pass a non-NULL pointer passed to <i>pceltFetched</i> to know how many pointers to release.</para>
    </param>
    <param name="pceltFetched">The number of items that were retrieved. This parameter is always less than or equal to the number of items requested.</param>
    <returns>If the method retrieves the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
  </member>
  <member name="IEnumUnknown.Reset">
    <summary>Resets the enumeration sequence to the beginning.</summary>
    <returns>The return value is S_OK.</returns>
  </member>
  <member name="IEnumUnknown.Skip">
    <summary>Skips over the specified number of items in the enumeration sequence.</summary>
    <param name="celt">The number of items to be skipped.</param>
    <returns>If the method skips the number of items requested, the return value is S_OK. Otherwise, it is S_FALSE.</returns>
  </member>
  <member name="IEnumUnknown">
    <summary>Enumerates objects with the <see cref="IUnknown" /> interface. It can be used to enumerate through the objects in a component containing multiple objects.</summary>
  </member>
</doc>