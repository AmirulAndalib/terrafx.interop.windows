<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAudioSessionEvents.OnChannelVolumeChanged">
    <summary>The <b>OnChannelVolumeChanged</b> method notifies the client that the volume level of an audio channel in the session submix has changed.</summary>
    <param name="ChannelCount">The channel count. This parameter specifies the number of audio channels in the session submix.</param>
    <param name="NewChannelVolumeArray">Pointer to an array of volume levels. Each element is a value of type <b>float</b> that specifies the volume level for a particular channel. Each volume level is a value in the range 0.0 to 1.0, where 0.0 is silence and 1.0 is full volume (no attenuation). The number of elements in the array is specified by the <i>ChannelCount</i> parameter. If an audio stream contains <i>n</i> channels, the channels are numbered from 0 to <i>n</i>– 1. The array element whose index matches the channel number, contains the volume level for that channel. Assume that the array remains valid only for the duration of the call.</param>
    <param name="ChangedChannel">The number of the channel whose volume level changed. Use this value as an index into the <i>NewChannelVolumeArray</i> array. If the session submix contains <i>n</i> channels, the channels are numbered from 0 to <i>n</i>– 1. If more than one channel might have changed (for example, as a result of a call to the <see cref="IChannelAudioVolume.SetAllVolumes" /> method), the value of <i>ChangedChannel</i> is (<b>DWORD</b>)(–1).</param>
    <param name="EventContext">The event context value. This is the same value that the caller passed to the <see cref="IChannelAudioVolume.SetChannelVolume" /> or <b>IChannelAudioVolume.SetAllVolumes</b> method in the call that initiated the change in volume level of the channel. For more information, see Remarks.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnDisplayNameChanged">
    <summary>The <b>OnDisplayNameChanged</b> method notifies the client that the display name for the session has changed.</summary>
    <param name="NewDisplayName">The new display name for the session. This parameter points to a null-terminated, wide-character string containing the new display name. The string remains valid for the duration of the call.</param>
    <param name="EventContext">The event context value. This is the same value that the caller passed to <see cref="IAudioSessionControl.SetDisplayName" /> in the call that changed the display name for the session. For more information, see Remarks.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnGroupingParamChanged">
    <summary>The <b>OnGroupingParamChanged</b> method notifies the client that the grouping parameter for the session has changed.</summary>
    <param name="NewGroupingParam">The new grouping parameter for the session. This parameter points to a grouping-parameter GUID.</param>
    <param name="EventContext">The event context value. This is the same value that the caller passed to <see cref="IAudioSessionControl.SetGroupingParam" /> in the call that changed the grouping parameter for the session. For more information, see Remarks.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnIconPathChanged">
    <summary>The <b>OnIconPathChanged</b> method notifies the client that the display icon for the session has changed.</summary>
    <param name="NewIconPath">The path for the new display icon for the session. This parameter points to a string that contains the path for the new icon. The string pointer remains valid only for the duration of the call.</param>
    <param name="EventContext">The event context value. This is the same value that the caller passed to <see cref="IAudioSessionControl.SetIconPath" /> in the call that changed the display icon for the session. For more information, see Remarks.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnSessionDisconnected">
    <summary>The <b>OnSessionDisconnected</b> method notifies the client that the audio session has been disconnected.</summary>
    <param name="DisconnectReason">
      <para>The reason that the audio session was disconnected. The caller sets this parameter to one of the <b>AudioSessionDisconnectReason</b> enumeration values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonDeviceRemoval</description>
          <description>The user removed the audio endpoint device.</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonServerShutdown</description>
          <description>The Windows audio service has stopped.</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonFormatChanged</description>
          <description>The stream format changed for the device that the audio session is connected to.</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonSessionLogoff</description>
          <description>The user logged off the Windows Terminal Services (WTS) session that the audio session was running in.</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonSessionDisconnected</description>
          <description>The WTS session that the audio session was running in was disconnected.</description>
        </listheader>
        <listheader>
          <description>DisconnectReasonExclusiveModeOverride</description>
          <description>The (shared-mode) audio session was disconnected to make the audio endpoint device available for an exclusive-mode connection.</description>
        </listheader>
      </list> <para>For more information about WTS sessions, see the Windows SDK documentation.</para></param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnSimpleVolumeChanged">
    <summary>The <b>OnSimpleVolumeChanged</b> method notifies the client that the volume level or muting state of the audio session has changed.</summary>
    <param name="NewVolume">The new volume level for the audio session. This parameter is a value in the range 0.0 to 1.0, where 0.0 is silence and 1.0 is full volume (no attenuation).</param>
    <param name="NewMute">The new muting state. If <b>TRUE</b>, muting is enabled. If <b>FALSE</b>, muting is disabled.</param>
    <param name="EventContext">The event context value. This is the same value that the caller passed to <see cref="ISimpleAudioVolume.SetMasterVolume" /> or <see cref="ISimpleAudioVolume.SetMute" /> in the call that changed the volume level or muting state of the session. For more information, see Remarks.</param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents.OnStateChanged">
    <summary>The <b>OnStateChanged</b> method notifies the client that the stream-activity state of the session has changed.</summary>
    <param name="NewState">
      <para>The new session state. The value of this parameter is one of the following <see cref="AudioSessionState" /> enumeration values:</para>
      <para>AudioSessionStateActive</para>
      <para>AudioSessionStateInactive</para>
      <para>AudioSessionStateExpired</para>
    </param>
    <returns>If the method succeeds, it returns S_OK. If it fails, it returns an error code.</returns>
  </member>
  <member name="IAudioSessionEvents">
    <summary>
      <para>The <b>IAudioSessionEvents</b> interface provides notifications of session-related events such as changes in the volume level, display name, and session state. Unlike the other interfaces in this section, which are implemented by the WASAPI system component, a WASAPI client implements the <b>IAudioSessionEvents</b> interface. To receive event notifications, the client passes a pointer to its <b>IAudioSessionEvents</b> interface to the <see cref="IAudioSessionControl.RegisterAudioSessionNotification" /> method.</para>
      <para>After registering its <b>IAudioClientSessionEvents</b> interface, the client receives event notifications in the form of callbacks through the methods in the interface.</para>
      <para>In implementing the <b>IAudioSessionEvents</b> interface, the client should observe these rules to avoid deadlocks and undefined behavior:</para>
      <list type="bullet">
        <item>
          <description>The methods in the interface must be nonblocking. The client should never wait on a synchronization object during an event callback.</description>
        </item>
        <item>
          <description>The client should never call the <see cref="IAudioSessionControl.UnregisterAudioSessionNotification" /> method during an event callback.</description>
        </item>
        <item>
          <description>The client should never release the final reference on a WASAPI object during an event callback.</description>
        </item>
      </list>For a code example that implements an <b>IAudioSessionEvents</b> interface, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-session-events">Audio Session Events</a>. For a code example that registers a client's <b>IAudioSessionEvents</b> interface to receive notifications, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/audio-events-for-legacy-audio-applications">Audio Events for Legacy Audio Applications</a>.</summary>
  </member>
</doc>