<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAudioVolumeDuckNotification.OnVolumeDuckNotification">
    <summary>The <b>OnVolumeDuckNotification</b> method sends a notification about a pending system ducking event. For more information, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/handling-audio-ducking-events-from-communication-devices">Implementation considerations for ducking notifications</a>.</summary>
    <param name="sessionID">A string containing the session instance identifier of the communications session that raises the the auto-ducking event. To get the session instance identifier, call <see cref="IAudioSessionControl2.GetSessionInstanceIdentifier" />.</param>
    <param name="countCommunicationSessions">The number of active communications sessions. If there are n sessions, the sessions are numbered from 0 to –1.</param>
    <returns>If the method succeeds, it returns S_OK.</returns>
  </member>
  <member name="IAudioVolumeDuckNotification.OnVolumeUnduckNotification">
    <summary>The <b>OnVolumeUnduckNotification</b> method sends a notification about a pending system unducking event. For more information, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/handling-audio-ducking-events-from-communication-devices">Implementation Considerations for Ducking Notifications</a>.</summary>
    <param name="sessionID">A string containing the session instance identifier of the terminating communications session that initiated the ducking. To get the session instance identifier, call <see cref="IAudioSessionControl2.GetSessionInstanceIdentifier" />.</param>
    <returns>If the method succeeds, it returns S_OK.</returns>
  </member>
  <member name="IAudioVolumeDuckNotification">
    <summary>The <b>IAudioVolumeDuckNotification</b> interface is used to by the system to send notifications about stream attenuation changes.Stream Attenuation, or ducking, is a feature introduced in Windows 7, where the system adjusts the volume of a non-communication stream when a new communication stream is opened. For more information about this feature, see <a href="https://docs.microsoft.com//windows/desktop/CoreAudio/stream-attenuation">Default Ducking Experience</a>.</summary>
  </member>
</doc>