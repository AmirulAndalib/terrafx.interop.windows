<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAudioSessionControl2.GetProcessId">
    <summary>The <b>GetProcessId</b> method retrieves the process identifier of the audio session.</summary>
    <param name="pRetVal">Pointer to a <b>DWORD</b> variable that receives the process identifier of the audio session.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>E_POINTER</term>
              </listheader>
            </list>
          </description>
          <description>
            <i>pRetVal</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>AUDCLNT_S_NO_SINGLE_PROCESS</term>
              </listheader>
            </list>
          </description>
          <description> The session spans more than one process. In this case, <i>pRetVal</i> receives the initial identifier of the process that created the session. To use this value , include the following definition:<para><code>#define AUDCLNT_S_NO_SINGLE_PROCESS AUDCLNT_SUCCESS (0x00d)</code></para></description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>AUDCLNT_E_DEVICE_INVALIDATED</term>
              </listheader>
            </list>
          </description>
          <description>The audio session is disconnected on the default audio device.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioSessionControl2.GetSessionIdentifier">
    <summary>The <b>GetSessionIdentifier</b> method retrieves the audio session identifier.</summary>
    <param name="pRetVal">Pointer to the address of a null-terminated, wide-character string that receives the audio session identifier. The string is allocated by this method and must be released by the caller by calling <b>CoTaskMemFree</b>. For information about <b>CoTaskMemFree</b>, see the Windows SDK documentation.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>E_POINTER</term>
              </listheader>
            </list>
          </description>
          <description>
            <i>pRetVal</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>AUDCLNT_E_DEVICE_INVALIDATED</term>
              </listheader>
            </list>
          </description>
          <description>The audio session is disconnected on the default audio device.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioSessionControl2.GetSessionInstanceIdentifier">
    <summary>The <b>GetSessionInstanceIdentifier</b> method retrieves the identifier of the audio session instance.</summary>
    <param name="pRetVal">Pointer to the address of a null-terminated, wide-character string that receives the identifier of a particular instance of the audio session. The string is allocated by this method and must be released by the caller by calling <b>CoTaskMemFree</b>. For information about <b>CoTaskMemFree</b>, see the Windows SDK documentation.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>E_POINTER</term>
              </listheader>
            </list>
          </description>
          <description>
            <i>pRetVal</i> is <b>NULL</b>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>AUDCLNT_E_DEVICE_INVALIDATED</term>
              </listheader>
            </list>
          </description>
          <description>The audio session is disconnected on the default audio device.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioSessionControl2.IsSystemSoundsSession">
    <summary>The <b>IsSystemSoundsSession</b> method indicates whether the session is a system sounds session.</summary>
    <returns>
      <para>The possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The session is a system sounds session.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The session is not a system sounds session.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioSessionControl2.SetDuckingPreference">
    <summary>The <b>SetDuckingPreference</b> method enables or disables the default stream attenuation experience (auto-ducking) provided by the system.</summary>
    <param name="optOut">A <b>BOOL</b> variable that enables or disables system auto-ducking.</param>
    <returns>
      <para>If the method succeeds, it returns S_OK. If it fails, possible return codes include, but are not limited to, the values shown in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return value</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>AUDCLNT_E_DEVICE_INVALIDATED</term>
              </listheader>
            </list>
          </description>
          <description>The audio session is disconnected on the default audio device.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAudioSessionControl2">
    <summary>
      <para>The <b>IAudioSessionControl2</b> interface can be used by a client to get information about the audio session.</para>
      <para>To get a reference to the <b>IAudioSessionControl2</b> interface, the application must call <b>IAudioSessionControl.QueryInterface</b> to request the interface pointer from the stream object's <see cref="IAudioSessionControl" /> interface. There are two ways an application can get a pointer to the <b>IAudioSessionControl</b> interface:</para>
      <list type="bullet">
        <item>
          <description>By calling <see cref="IAudioClient.GetService" /> on the audio client after opening a stream on the device. The audio client opens a stream for rendering or capturing, and associates it with an audio session by calling <see cref="IAudioClient.Initialize" />.</description>
        </item>
        <item>
          <description>By calling <see cref="IAudioSessionManager.GetAudioSessionControl" /> for an existing audio session without opening the stream.</description>
        </item>
      </list>When the application wants to release the <b>IAudioSessionControl2</b> interface instance, the application must call the interface's <b>Release</b> method from the same thread as the call to <see cref="IAudioClient.GetService" /> that created the object.<para>The application thread that uses this interface must be initialized for COM. For more information about COM initialization, see the description of the <b>CoInitializeEx</b> function in the Windows SDK documentation.</para></summary>
  </member>
</doc>