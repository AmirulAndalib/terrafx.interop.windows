<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="OVERLAPPED">
    <summary>Contains information used in asynchronous (or <i>overlapped</i>) input and output (I/O).</summary>
  </member>
  <member name="OVERLAPPED.Internal">
    <summary>
      <para>The status code for the I/O request. When the request is issued, the system sets this member to <b>STATUS_PENDING</b> to indicate that the operation has not yet started. When the request is completed, the system sets this member to the status code for the completed request.</para>
      <para>The <b>Internal</b> member was originally reserved for system use and its behavior may change.</para>
    </summary>
  </member>
  <member name="OVERLAPPED.InternalHigh">
    <summary>
      <para>The number of bytes transferred for the I/O request. The system sets this member if the request is completed without errors.</para>
      <para>The <b>InternalHigh</b> member was originally reserved for system use and its behavior may change.</para>
    </summary>
  </member>
  <member name="OVERLAPPED.DUMMYUNIONNAME"></member>
  <member name="OVERLAPPED.DUMMYUNIONNAME.DUMMYSTRUCTNAME"></member>
  <member name="OVERLAPPED.DUMMYUNIONNAME.DUMMYSTRUCTNAME.Offset">
    <summary>
      <para>The low-order portion of the file position at which to start the I/O request, as specified by the user.</para>
      <para>This member is nonzero only when performing I/O requests on a seeking device that supports the concept of an offset (also referred to as a file pointer mechanism), such as a file. Otherwise, this member must be zero.</para>
      <para>For additional information, see Remarks.</para>
    </summary>
  </member>
  <member name="OVERLAPPED.DUMMYUNIONNAME.DUMMYSTRUCTNAME.OffsetHigh">
    <summary>
      <para>The high-order portion of the file position at which to start the I/O request, as specified by the user.</para>
      <para>This member is nonzero only when performing I/O requests on a seeking device that supports the concept of an offset (also referred to as a file pointer mechanism), such as a file. Otherwise, this member must be zero.</para>
      <para>For additional information, see Remarks.</para>
    </summary>
  </member>
  <member name="OVERLAPPED.DUMMYUNIONNAME.Pointer">
    <summary>Reserved for system use; do not use after initialization to zero.</summary>
  </member>
  <member name="OVERLAPPED.hEvent">
    <summary>
      <para>A handle to the event that will be set to a signaled state by the system when the operation has completed. The user must initialize this member either to zero or a valid event handle using the <see cref="CreateEvent" /> function before passing this structure to any overlapped functions. This event can then be used to synchronize simultaneous I/O requests for a device. For additional information, see Remarks.</para>
      <para>Functions such as <see cref="ReadFile" /> and <see cref="WriteFile" /> set this handle to the nonsignaled state before they begin an I/O operation. When the operation has completed, the handle is set to the signaled state.</para>
      <para>Functions such as <see cref="GetOverlappedResult" /> and the synchronization <a href="https://docs.microsoft.com//windows/desktop/Sync/wait-functions">wait functions</a> reset auto-reset events to the nonsignaled state. Therefore, you should use a manual reset event; if you use an auto-reset event, your application can stop responding if you wait for the operation to complete and then call <b>GetOverlappedResult</b> with the <i>bWait</i> parameter set to <b>TRUE</b>.</para>
    </summary>
  </member>
</doc>