<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="PRJ_CALLBACK_DATA">
    <summary>Defines the standard information passed to a provider for every operation callback.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.Size">
    <summary>Size in bytes of this structure. The provider must not attempt to access any field of this structure that is located beyond this value.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.Flags">
    <summary>Callback-specific flags.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.NamespaceVirtualizationContext">
    <summary>Opaque handle to the virtualization instance that is sending the callback.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.CommandId">
    <summary>
      <para>A value that uniquely identifies a particular invocation of a callback. The provider uses this value:</para>
      <list type="bullet">
        <item>
          <description>In calls to <see cref="PrjCompleteCommand" /> to signal completion of a callback from which it earlier returned HRESULT_FROM_WIN32(ERROR_IO_PENDING).</description>
        </item>
        <item>
          <description>When ProjFS sends a <a href="https://docs.microsoft.com//windows/desktop/api/projectedfslib/nc-projectedfslib-prj_cancel_command_cb">PRJ_CANCEL_COMMAND_CB</a> callback. The commandId in the <i>PRJ_CANCEL_COMMAND_CB</i> call identifies an earlier invocation of a callback that the provider should cancel.</description>
        </item>
      </list>
    </summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.FileId">
    <summary>A value that uniquely identifies the file handle for the callback.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.DataStreamId">
    <summary>A value that uniquely identifies an open data stream for the callback.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.FilePathName">
    <summary>The path to the target file. This is a null-terminated string of Unicode characters. This path is always specified relative to the virtualization root.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.VersionInfo">
    <summary>Version information if the target of the callback is a placeholder or partial file.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.TriggeringProcessId">
    <summary>The process identifier for the process that triggered this callback. If this information is not available, this will be 0. Callbacks that supply this information include: <a href="https://docs.microsoft.com//windows/desktop/api/projectedfslib/nc-projectedfslib-prj_get_placeholder_info_cb">PRJ_GET_PLACEHOLDER_INFO_CB</a>,<a href="https://docs.microsoft.com//windows/desktop/api/projectedfslib/nc-projectedfslib-prj_get_file_data_cb">PRJ_GET_FILE_DATA_CB</a>, and<a href="https://docs.microsoft.com//windows/desktop/api/projectedfslib/nc-projectedfslib-prj_notification_cb">PRJ_NOTIFICATION_CB</a>.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.TriggeringProcessImageFileName">
    <summary>A null-terminated Unicode string specifying the image file name corresponding to TriggeringProcessId. If TriggeringProcessId is 0 this will be NULL.</summary>
  </member>
  <member name="PRJ_CALLBACK_DATA.InstanceContext">
    <summary>
      <para>A pointer to context information defined by the provider. The provider passes this context in the instanceContext parameter of <see cref="PrjStartVirtualizing" />.</para>
      <para>If the provider did not specify such a context, this value will be NULL.</para>
    </summary>
  </member>
</doc>