<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleObject.Advise">
    <summary>Establishes an advisory connection between a compound document object and the calling object's advise sink, through which the calling object receives notification when the compound document object is renamed, saved, or closed.</summary>
    <param name="pAdvSink">Pointer to the <see cref="IAdviseSink" /> interface on the advise sink of the calling object.</param>
    <param name="pdwConnection">Pointer to a token that can be passed to <see cref="IOleObject.Unadvise" /> to delete the advisory connection.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory available for this operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.Close">
    <summary>Changes an embedded object from the running to the loaded state. Disconnects a linked object from its link source.</summary>
    <param name="dwSaveOption">
      <para>Indicates whether the object is to be saved as part of the transition to the loaded state. Valid values are taken from the enumeration <see cref="OLECLOSE" />.</para>
      <div>
        <b>Note</b>  The OLE 2 user model recommends that object applications do not prompt users before saving linked or embedded objects, including those activated in place. This policy represents a change from the OLE 1 user model, in which object applications always prompt the user to decide whether to save changes.</div>
    </param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_PROMPTSAVECANCELLED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The user was prompted to save but chose the <b>Cancel</b> button from the prompt message box.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.DoVerb">
    <summary>Requests that an object perform an action in response to an end-user's action. The possible actions are enumerated for the object in <see cref="IOleObject.EnumVerbs" />.</summary>
    <param name="iVerb">Number assigned to the verb in the <see cref="OLEVERB" /> structure returned by <see cref="IOleObject.EnumVerbs" />.</param>
    <param name="lpmsg">Pointer to the <see cref="MSG" /> structure describing the event (such as a double-click) that invoked the verb. The caller should pass the <b>MSG</b> structure unmodified, without attempting to interpret or alter the values of any of the structure members.</param>
    <param name="pActiveSite">Pointer to the <see cref="IOleClientSite" /> interface on the object's active client site, where the event occurred that invoked the verb.</param>
    <param name="lindex">This parameter is reserved and must be zero.</param>
    <param name="hwndParent">Handle of the document window containing the object. This and <i>lprcPosRect</i> together make it possible to open a temporary window for an object, where <i>hwndParent</i> is the parent window in which the object's window is to be displayed, and <i>lprcPosRect</i> defines the area available for displaying the object window within that parent. A temporary window is useful, for example, to a multimedia object that opens itself for playback but not for editing.</param>
    <param name="lprcPosRect">Pointer to the <see cref="RECT" /> structure containing the coordinates, in pixels, that define an object's bounding rectangle in <i>hwndParent</i>. This and <i>hwndParent</i> together enable opening multimedia objects for playback but not for editing.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOT_INPLACEACTIVE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>iVerb set to OLEIVERB_UIACTIVATE or OLEIVERB_INPLACEACTIVATE and object is not already visible.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_CANT_BINDTOSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object handler or link object cannot connect to the link source.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>DV_E_LINDEX</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid lindex.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLEOBJ_S_CANNOT_DOVERB_NOW</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The verb is valid, but in the object's current state it cannot carry out the corresponding action.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLEOBJ_S_INVALIDHWND</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>DoVerb was successful but <i>hwndParent</i> is invalid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLEOBJ_E_NOVERBS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not support any verbs.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLEOBJ_S_INVALIDVERB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Link source is across a network that is not connected to a drive on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_CONNECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Link source is across a network that is not connected to a drive on this computer.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_CLASSDIFF</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Class for source of link has undergone a conversion.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Object does not support in-place activation or does not recognize a negative verb number.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.EnumAdvise">
    <summary>Retrieves a pointer to an enumerator that can be used to enumerate the advisory connections registered for an object, so a container can know what to release prior to closing down.</summary>
    <param name="ppenumAdvise">Address of <see cref="IEnumSTATDATA" /> pointer variable that receives the interface pointer to the enumerator object. If the object does not have any advisory connections or if an error occurs, the implementation must set <i>ppenumAdvise</i> to <b>NULL</b>. Each time an object receives a successful call to <b>IOleObject.EnumAdvise</b>, it must increase the reference count on <i>ppenumAdvise</i>. It is the caller's responsibility to call Release when it is done with the <i>ppenumAdvise</i>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="IOleObject.EnumAdvise" /> is not implemented.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.EnumVerbs">
    <summary>Exposes a pull-down menu listing the verbs available for an object in ascending order by verb number.</summary>
    <param name="ppEnumOleVerb">Address of <see cref="IEnumOLEVERB" /> pointer variable that receives the interface pointer to the new enumerator object. Each time an object receives a call to <b>IOleObject.EnumVerbs</b>, it must increase the reference count on <i>ppEnumOleVerb</i>. It is the caller's responsibility to call <see cref="IUnknown.Release" /> when it is done with <i>ppEnumOleVerb</i>. If an error occurs, <i>ppEnumOleVerb</i> must be set to <b>NULL</b>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_S_USEREG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Delegate to the default handler to use the entries in the registry to provide the enumeration.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLEOBJ_E_NOVERBS</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Object does not support any verbs.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.GetClientSite">
    <summary>Retrieves a pointer to an embedded object's client site.</summary>
    <param name="ppClientSite">Address of <see cref="IOleClientSite" /> pointer variable that receives the interface pointer to the object's client site. If an object does not yet know its client site, or if an error has occurred, <i>ppClientSite</i> must be set to <b>NULL</b>. Each time an object receives a call to <b>IOleObject.GetClientSite</b>, it must increase the reference count on <i>ppClientSite</i>. It is the caller's responsibility to call <see cref="Release" /> when it is done with <i>ppClientSite</i>.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleObject.GetClipboardData">
    <summary>Retrieves a data object containing the current contents of the embedded object on which this method is called. Using the pointer to this data object, it is possible to create a new embedded object with the same data as the original.</summary>
    <param name="dwReserved">This parameter is reserved and must be zero.</param>
    <param name="ppDataObject">Address of <see cref="IDataObject" /> pointer variable that receives the interface pointer to the data object. If an error occurs, <i>ppDataObject</i> must be set to <b>NULL</b>. Each time an object receives a call to <b>IOleObject.GetClipboardData</b>, it must increase the reference count on <i>ppDataObject</i>. It is the caller's responsibility to call <see cref="Release" /> when it is done with <i>ppDataObject</i>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>
            <see cref="GetClipboardData" /> is not supported.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOTRUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.GetExtent">
    <summary>Retrieves a running object's current display size.</summary>
    <param name="dwDrawAspect">The aspect of the object whose limit is to be retrieved; the value is obtained from the enumerations <see cref="DVASPECT" /> and from <see cref="DVASPECT2" />. Note that newer objects and containers that support optimized drawing interfaces support the <b>DVASPECT2</b> enumeration values. Older objects and containers that do not support optimized drawing interfaces may not support <b>DVASPECT2</b>. The most common value for this method is DVASPECT_CONTENT, which specifies a full rendering of the object within its container.</param>
    <param name="psizel">Pointer to where the object's size is to be returned.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The supplied <i>dwDrawAspect</i> value is invalid.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.GetMiscStatus">
    <summary>Retrieves the status of an object at creation and loading.</summary>
    <param name="dwAspect">The aspect of an object about which status information is being requested. The value is obtained from the enumeration <see cref="DVASPECT" />.</param>
    <param name="pdwStatus">Pointer to where the status information is returned. This parameter cannot be <b>NULL</b>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_S_USEREG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Delegate the retrieval of miscellaneous status information to the default handler's implementation of this method.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CO_E_CLASSNOTREG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is no CLSID registered for the object.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CO_E_READREGDB</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Error accessing the registry.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.GetMoniker">
    <summary>Retrieves an embedded object's moniker, which the caller can use to link to the object.</summary>
    <param name="dwAssign">
      <para>Determines how the moniker is assigned to the object. Depending on the value of <i>dwAssign</i>, <b>IOleObject.GetMoniker</b> does one of the following:</para>
      <list type="bullet">
        <item>
          <description>Obtains a moniker only if one has already been assigned.</description>
        </item>
        <item>
          <description>Forces assignment of a moniker, if necessary, in order to satisfy the call.</description>
        </item>
        <item>
          <description>Obtains a temporary moniker.</description>
        </item>
      </list>Values for <i>dwAssign</i> are specified in the enumeration <see cref="OLEGETMONIKER" />.<div><b>Note</b>   You cannot pass <see cref="OLEGETMONIKER" />_UNASSIGN when calling <b>IOleObject.GetMoniker</b>. This value is valid only when calling <b>IOleObject.GetMoniker</b>.</div></param>
    <param name="dwWhichMoniker">Specifies the form of the moniker being requested. Possible values are taken from the enumeration <see cref="OLEWHICHMK" />.</param>
    <param name="ppmk">Address of <see cref="IMoniker" /> pointer variable that receives the interface pointer to the object's moniker. If an error occurs, <i>ppmk</i> must be set to <b>NULL</b>. Each time an object receives a call to <b>IOleObject.GetMoniker</b>, it must increase the reference count on <i>ppmk</i>. It is the caller's responsibility to call Release when it is done with <i>ppmk</i>.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleObject.GetUserClassID">
    <summary>Retrieves an object's class identifier, the CLSID corresponding to the string identifying the object to an end user.</summary>
    <param name="pClsid">Pointer to the class identifier (CLSID) to be returned. An object's CLSID is the binary equivalent of the user-type name returned by <see cref="IOleObject.GetUserType" />.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.GetUserType">
    <summary>Retrieves the user-type name of an object for display in user-interface elements such as menus, list boxes, and dialog boxes.</summary>
    <param name="dwFormOfType">The form of the user-type name to be presented to users. Possible values are obtained from the <see cref="USERCLASSTYPE" /> enumeration.</param>
    <param name="pszUserType">Address of <see cref="LPOLESTR" /> pointer variable that receives a pointer to the user type string. The caller must free <i>pszUserType</i> using the current <see cref="IMalloc" /> instance. If an error occurs, the implementation must set <i>pszUserType</i> to <b>NULL</b>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_S_USEREG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Delegate to the default handler's implementation using the registry to provide the requested information.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.InitFromData">
    <summary>Initializes a newly created object with data from a specified data object, which can reside either in the same container or on the Clipboard.</summary>
    <param name="pDataObject">Pointer to the <see cref="IDataObject" /> interface on the data object from which the initialization data is to be obtained. This parameter can be <b>NULL</b>, which indicates that the caller wants to know if it is worthwhile trying to send data; that is, whether the container is capable of initializing an object from data passed to it. The data object to be passed can be based on either the current selection within the container document or on data transferred to the container from an external source.</param>
    <param name="fCreation">
      <b>TRUE</b> indicates the container is inserting a new object inside itself and initializing that object with data from the current selection; <b>FALSE</b> indicates a more general programmatic data transfer, most likely from a source other than the current selection.</param>
    <param name="dwReserved">This parameter is reserved and must be zero.</param>
    <returns>
      <para>This method returns S_OK if <i>pDataObject</i> is not <b>NULL</b>, the object successfully attempted to initialize itself from the provided data; if <i>pDataObject</i> is <b>NULL</b>, the object is able to attempt a successful initialization.. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>If pDataObject is not <b>NULL</b>, the object made no attempt to initialize itself; if <i>pDataObject</i> is <b>NULL</b>, the object cannot attempt to initialize itself from the data provided.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not support <i>InitFromData</i>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOTRUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object is not running and therefore cannot perform the operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.IsUpToDate">
    <summary>Checks whether an object is up to date.</summary>
    <returns>
      <para>This method returns S_OK if the object is up to date; otherwise, S_FALSE. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_UNAVAILABLE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The status of object cannot be determined in a timely manner.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.SetClientSite">
    <summary>Informs an embedded object of its display location, called a "client site," within its container.</summary>
    <param name="pClientSite">Pointer to the <see cref="IOleClientSite" /> interface on the container application's client-site.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected error occurred.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.SetColorScheme">
    <summary>Specifies the color palette that the object application should use when it edits the specified object.</summary>
    <param name="pLogpal">Pointer to a <see cref="LOGPALETTE" /> structure that specifies the recommended palette.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOTIMPL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Object does not support setting palettes.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_PALETTE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Invalid LOGPALETTE structure pointed to by <i>pLogPal</i>.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOTRUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Object must be running to perform this operation.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.SetExtent">
    <summary>Informs an object of how much display space its container has assigned it.</summary>
    <param name="dwDrawAspect">DWORD that describes which form, or "aspect," of an object is to be displayed. The object's container obtains this value from the enumeration <see cref="DVASPECT" /> (refer to the <see cref="FORMATETC" /> enumeration). The most common aspect is DVASPECT_CONTENT, which specifies a full rendering of the object within its container. An object can also be rendered as an icon, a thumbnail version for display in a browsing tool, or a print version, which displays the object as it would be rendered using the <b>File Print</b> command.</param>
    <param name="psizel">Pointer to the size limit for the object.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOTRUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object is not running.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.SetHostNames">
    <summary>Provides an object with the names of its container application and the compound document in which it is embedded.</summary>
    <param name="szContainerApp">Pointer to the name of the container application in which the object is running.</param>
    <param name="szContainerObj">Pointer to the name of the compound document that contains the object. If you do not wish to display the name of the compound document, you can set this parameter to <b>NULL</b>.</param>
    <returns>This method returns S_OK on success.</returns>
  </member>
  <member name="IOleObject.SetMoniker">
    <summary>Notifies an object of its container's moniker, the object's own moniker relative to the container, or the object's full moniker.</summary>
    <param name="dwWhichMoniker">The moniker is passed in <i>pmk</i>. Possible values are from the enumeration <see cref="OLEWHICHMK" />.</param>
    <param name="pmk">Pointer to where to return the moniker.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.Unadvise">
    <summary>Deletes a previously established advisory connection.</summary>
    <param name="dwConnection">Contains a token of nonzero value, which was previously returned from <see cref="IOleObject.Advise" /> through its <i>pdwConnection</i> parameter.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOCONNECTION</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>dwConnection does not represent a valid advisory connection.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject.Update">
    <summary>Updates an object handler's or link object's data or view caches.</summary>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The operation failed.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_CANT_BINDTOSOURCE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Cannot run object to get updated data. The object is for some reason unavailable to the caller.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CACHE_E_NOCACHE_UPDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>No caches were updated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CACHE_S_SOMECACHES_NOTUPDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some caches were not updated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleObject">
    <summary>Serves as the principal means by which an embedded object provides basic functionality to, and communicates with, its container.</summary>
  </member>
</doc>