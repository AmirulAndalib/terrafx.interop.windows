<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleCache2.DiscardCache">
    <summary>Discards the caches found in memory.</summary>
    <param name="dwDiscardOptions">
      <para>A value from the <see cref="DISCARDCACHE" /> enumeration that indicates whether data is to be saved prior to being discarded. Containers that have drawn a large object and need to free up memory can specify DISCARDCACHE_SAVEIFDIRTY so that the newest presentation is saved for the next time the object must be drawn.</para>
      <para>Containers that have activated an embedded object, made some changes, and then called <see cref="IOleObject.Close" /> with OLECLOSE_NOSAVE to roll back the changes can specify DISCARDCACHE_NOSAVE to ensure that the native and presentation data are not out of synchronization.</para>
    </param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOSTORAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>There is no storage available for saving the data in the cache.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>STG_E_MEDIUMFULL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The storage medium is full.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleCache2.UpdateCache">
    <summary>Updates the specified caches. This method is used when the application needs precise control over caching.</summary>
    <param name="pDataObject">A pointer to the <see cref="IDataObject" /> interface on the data object from which the cache is updated. Object handlers and in-process servers typically pass a non-<b>NULL</b> value. A container application usually passes <b>NULL</b>, and the source is obtained from the currently running object.</param>
    <param name="grfUpdf">
      <para>The type of cache to be updated. This parameter can be one or more of the following values.</para>
      <list type="table">
        <listheader>
          <description>Value</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_NODATACACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates caches created by using ADVF_NODATA in the call to <see cref="IOleCache.Cache" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ONSAVECACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates caches created by using ADVFCACHE_ONSAVE in the call to <see cref="IOleCache.Cache" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ONSTOPCACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates caches created by using ADVFCACHE_ONSTOP in the call to <see cref="IOleCache.Cache" />.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_NORMALCACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Dynamically updates the caches (as is normally done when the object sends out <see cref="OnDataChange" /> notices).</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_IFBLANK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates the cache if blank, regardless of any other flag specified.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ONLYIFBLANK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates only caches that are blank.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ IFBLANKORONSAVECACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The equivalent of using an OR operation to combine UPDFCACHE_IFBLANK and UPDFCACHE_ONSAVECACHE.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ALL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates all caches.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>UPDFCACHE_ ALLBUTNODATACACHE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Updates all caches except those created with ADVF_NODATA in the call to <see cref="IOleCache.Cache" />. Thus, you can control updates to the caches created with the ADVF_NODATA flag and only update these caches explicitly.</description>
        </listheader>
      </list>
    </param>
    <param name="pReserved">This parameter is reserved and must be <b>NULL</b>.</param>
    <returns>
      <para>This method returns S_OK on success. Other possible return values include the following.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>One of the arguments is not valid.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_UNEXPECTED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>An unexpected error has occurred.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_OUTOFMEMORY</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Insufficient memory is available for this operation.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>OLE_E_NOTRUNNING</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The specified <i>pDataObject</i> is not running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CACHE_E_NOCACHE_UPDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>None of the caches were updated.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>CACHE_S_SOMECACHES_NOTUPDATED</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Some of the caches were updated.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleCache2">
    <summary>Enables object clients to selectively update each cache that was created with <see cref="IOleCache.Cache" />.</summary>
  </member>
</doc>