<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IOleItemContainer.GetObject">
    <summary>Retrieves a pointer to the specified object.</summary>
    <param name="pszItem">The container's name for the requested object.</param>
    <param name="dwSpeedNeeded">Indicates approximately how long the caller will wait to get the object. Possible values are taken from the enumeration <see cref="BINDSPEED" />.</param>
    <param name="pbc">A pointer to the <see cref="IBindCtx" /> interface on the bind context object to be used in this binding operation. The bind context caches objects bound during the binding process, contains parameters that apply to all operations using the bind context, and provides the means by which the binding implementation should retrieve information about its environment.</param>
    <param name="riid">A reference to the identifier of the interface pointer requested.</param>
    <param name="ppvObject">Address of the pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObject</i> contains the requested interface pointer to the object named by <i>pszItem</i>. When successful, the implementation must call <see cref="AddRef" /> on the *<i>ppvObject</i>; it is the caller's responsibility to call <see cref="Release" />. If an error occurs, the implementation sets *<i>ppvObject</i> to <b>NULL</b>.</param>
    <returns>
      <para>This method can return the standard return value E_OUTOFMEMORY, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completed successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_EXCEEDEDDEADLINE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The binding operation could not be completed within the time limit specified by the bind context's <see cref="BIND_OPTS" /> structure, or with the speed indicated by the <i>dwSpeedNeeded</i> parameter.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_NOOBJECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter <i>pszItem</i> does not identify an object in this container.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The requested interface was not available.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleItemContainer.GetObjectStorage">
    <summary>Retrieves a pointer to the storage for the specified object.</summary>
    <param name="pszItem">The compound document's name for the object whose storage is requested.</param>
    <param name="pbc">A pointer to the <see cref="IBindCtx" /> interface on the bind context to be used in this binding operation. The bind context caches objects bound during the binding process, contains parameters that apply to all operations using the bind context, and provides the means by which the binding implementation should retrieve information about its environment.</param>
    <param name="riid">A reference to the identifier of the interface to be used to communicate with the object, usually <see cref="IStorage" />.</param>
    <param name="ppvStorage">Address of a pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvStorage</i> contains the requested interface pointer to the storage for the object named by <i>pszItem</i>. When successful, the implementation must call <see cref="AddRef" /> on *<i>ppvStorage</i>; it is the caller's responsibility to call <see cref="Release" />. If an error occurs, *<i>ppvStorage</i> is set to <b>NULL</b>.</param>
    <returns>
      <para>This method can return the standard return value E_OUTOFMEMORY, as well as the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The method completely successfully.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_OBJECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter <i>pszItem</i> does not identify a object in this container.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_NOSTORAGE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object does not have its own independent storage.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_NOINTERFACE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The requested interface is not available.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleItemContainer.IsRunning">
    <summary>Determines whether the specified object is running.</summary>
    <param name="pszItem">The container's name for the object.</param>
    <returns>
      <para>This method can return the following values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object is running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The object is not running.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MK_E_NOOBJECT</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The parameter does not identify an object in this container.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IOleItemContainer">
    <summary>
      <para>Used by item monikers when they are bound to the objects they identify.</para>
      <para>When any container of objects uses item monikers to identify its objects, it must define a naming scheme for those objects. The container's <b>IOleItemContainer</b> implementation uses knowledge of that naming scheme to retrieve an object given a particular name. Item monikers use the container's <b>IOleItemContainer</b> implementation during binding.</para>
      <para>This interface is not supported for use across machine boundaries.</para>
    </summary>
  </member>
</doc>