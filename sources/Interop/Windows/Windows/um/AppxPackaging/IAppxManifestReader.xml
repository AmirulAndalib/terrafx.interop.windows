<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAppxManifestReader.GetApplications">
    <summary>Gets an enumerator that iterates through the applications defined in the manifest.</summary>
    <param name="applications">The enumerator that iterates through the applications.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader.GetCapabilities">
    <summary>Gets the list of capabilities requested by the package.</summary>
    <param name="capabilities">The list of capabilities requested by the package. This is a bitwise combination of the values of the enumeration.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader.GetDeviceCapabilities">
    <summary>Gets an enumerator that iterates through the device capabilities defined in the manifest.</summary>
    <param name="deviceCapabilities">The enumerator that iterates through the device capabilities.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader.GetPackageDependencies">
    <summary>Gets an enumerator that iterates through dependencies defined in the manifest.</summary>
    <param name="dependencies">The enumerator that iterates through the dependencies.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader.GetPackageId">
    <summary>Gets the package identifier defined in the manifest.</summary>
    <param name="packageId">The package identifier.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader.GetPrerequisite">
    <summary>Gets the specified prerequisite as defined in the package manifest.</summary>
    <param name="name">The name of the prerequisite, either "OSMinVersion" or "OSMaxVersionTested".</param>
    <param name="value">The specified prerequisite. In the manifest the dot-trio representation is Major.Minor.AppPlatform. This is converted to the 64-bit value as the follows: The highest order word contains the Major version. The next word contains the Minor version.	The next word contains the optional AppPlatform version, if specified.</param>
    <returns>
      <para>This method can return one of these values.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_INVALIDARG</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>The prerequisite defined in <i>name</i> is not defined in the manifest.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IAppxManifestReader.GetProperties">
    <summary>Gets the properties of the package as defined in the manifest.</summary>
    <param name="packageProperties">Properties of the package as described by the manifest.</param>
    <returns>If the method succeeds, it returns <b>S_OK</b>.</returns>
  </member>
  <member name="IAppxManifestReader.GetResources">
    <summary>Gets an enumerator that iterates through the resources defined in the manifest.</summary>
    <param name="resources">The enumerator that iterates through the resources.</param>
    <returns>If the method succeeds, it returns <b>S_OK</b>.</returns>
  </member>
  <member name="IAppxManifestReader.GetStream">
    <summary>Gets the raw XML parsed and read by the manifest reader.</summary>
    <param name="manifestStream">The read-only stream that represents the XML content of the manifest.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppxManifestReader">
    <summary>Represents an object model of the package manifest that provides methods to access manifest elements and attributes.</summary>
  </member>
</doc>