<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAppxBundleManifestPackageInfoEnumerator.GetCurrent">
    <summary>
      <para>Gets the &lt;Package&gt; element at the current position of the enumerator.</para>
    </summary>
    <param name="packageInfo">
      <para>Type: <b><see cref="IAppxBundleManifestPackageInfo" />**</b></para>
      <para>The current &lt;Package&gt; element.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If the method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an error code that includes, but is not limited to, those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_BOUNDS</b>
            </para>
          </description>
          <description>
            <para>The enumerator has passed the last item in the collection.</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>The enumerator’s position points to the first element by default. So, with a newly constructed enumerator that contains at least one element, <see cref="IAppxBundleManifestPackageInfoEnumerator.GetHasCurrent" /> returns <b>TRUE</b> and <b>GetCurrent</b> returns the first element.</para>
    </remarks>
    <seealso cref="IAppxBundleManifestPackageInfoEnumerator" />
  </member>
  <member name="IAppxBundleManifestPackageInfoEnumerator.GetHasCurrent">
    <summary>
      <para>Determines whether there are more elements in the enumerator.</para>
    </summary>
    <param name="hasCurrent">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
      <para>
        <b>TRUE</b> if the enumerator's current position references an item; <b>FALSE</b> if the enumerator has passed the last item in the collection.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
    </returns>
    <seealso cref="IAppxBundleManifestPackageInfoEnumerator" />
  </member>
  <member name="IAppxBundleManifestPackageInfoEnumerator.MoveNext">
    <summary>
      <para>Advances the position of the enumerator to the next &lt;Package&gt; element.</para>
    </summary>
    <param name="hasNext">
      <para>Type: <b><a href="https://docs.microsoft.com//windows/desktop/WinProg/windows-data-types">BOOL</a>*</b></para>
      <para>
        <b>TRUE</b> if the enumerator successfully advances</para>
      <para>
        <b>FALSE</b> if the enumerator has passed the end of the collection.</para>
    </param>
    <returns>
      <para>Type: <b>HRESULT</b></para>
      <para>If the method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an error code.</para>
      <para>
        <b>Note</b>  When the enumerator passes the end of the collection for the first time, <i>hasNext</i> = <b>FALSE</b>,  but the method succeeds and returns <b>S_OK</b>. However, the method returns <b>E_BOUNDS</b> if you subsequently call another <see cref="MoveNext" /> after you have already passed the end of the collection, and you have previously received  <i>hasNext</i> = <b>FALSE</b>.</para>
    </returns>
    <seealso cref="IAppxBundleManifestPackageInfoEnumerator" />
  </member>
  <member name="IAppxBundleManifestPackageInfoEnumerator">
    <summary>
      <para>Provides a read-only object model for the list of payload packages that are described in a bundle package manifest.</para>
    </summary>
  </member>
</doc>