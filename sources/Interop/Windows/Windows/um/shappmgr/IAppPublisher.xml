<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IAppPublisher.EnumApps">
    <summary>Creates an enumerator for enumerating all applications published by an application publisher for a given category.</summary>
    <param name="pAppCategoryId">A pointer to a GUID that specifies the application category to be enumerated. This must be one of the categories provided through <see cref="IAppPublisher.GetCategories" />. If <i>pAppCategoryID</i> identifies a category not provided through <b>IAppPublisher.GetCategories</b>, creation of the enumerator succeeds with the enumerator returning zero items. If this parameter value is <b>NULL</b>, the enumerator returns applications published for all categories.</param>
    <param name="ppepa">The address of a pointer to an <see cref="IEnumPublishedApps" /> reference variable that points to a <b>IEnumPublishedApps</b> interface. Application publishers must create an enumeration object that supports the <b>IEnumPublishedApps</b> interface, and return its pointer value through this parameter.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppPublisher.GetCategories">
    <summary>Retrieves a structure listing the categories provided by an application publisher.</summary>
    <param name="pAppCategoryList">A pointer to an <see cref="APPCATEGORYINFOLIST" /> structure. This structure's <b>cCategory</b> member returns the count of supported categories. The <b>pCategoryInfo</b> member returns a pointer to an array of <see cref="APPCATEGORYINFO" /> structures. This array contains all the categories an application publisher supports and must be allocated using <see cref="CoTaskMemAlloc" /> and freed using <see cref="CoTaskMemFree" />.</param>
    <returns>If this method succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="IAppPublisher.GetNumberOfApps">
    <summary>Obsolete. Clients of Add/Remove Programs Control Panel Application can return E_NOTIMPL.</summary>
    <param name="pdwApps">This parameter is unused.</param>
    <returns>This method does not return a value.</returns>
  </member>
  <member name="IAppPublisher.GetNumberOfCategories">
    <summary>Obsolete. Clients of the Add/Remove Programs Control Panel Application may return E_NOTIMPL.</summary>
    <param name="pdwCat">This parameter is unused.</param>
    <returns>This method does not return a value.</returns>
  </member>
  <member name="IAppPublisher">
    <summary>Exposes methods for publishing applications through <b>Add/Remove Programs</b> in Control Panel. This is the principal interface implemented for this purpose.</summary>
  </member>
</doc>