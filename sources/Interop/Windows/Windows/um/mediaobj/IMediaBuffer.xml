<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMediaBuffer.GetBufferAndLength">
    <summary>
      <para>The <code>GetBufferAndLength</code> method retrieves the buffer and the size of the valid data in the buffer.</para>
    </summary>
    <param name="ppBuffer">
      <para>Address of a pointer that receives the buffer array. Can be <b>NULL</b> if <i>pcbLength</i> is not <b>NULL</b>.</para>
    </param>
    <param name="pcbLength">
      <para>Pointer to a variable that receives the size of the valid data, in bytes. Can be <b>NULL</b> if <i>ppBuffer</i> is not <b>NULL</b>.</para>
    </param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <item>
          <description>
            <para>
              <b>E_POINTER</b>
            </para>
          </description>
          <description>
            <b>NULL</b> pointer argument
</description>
        </item>
        <item>
          <description>
            <para>
              <b>S_OK</b>
            </para>
          </description>
          <description>
            <para>Success</para>
          </description>
        </item>
      </list>
    </returns>
    <remarks>
      <para>Either parameter can be <b>NULL</b>, in which case it does not receive a value. At least one parameter must be non-<b>NULL</b>. If both parameters are <b>NULL</b>, the method returns E_POINTER.</para>
      <para>The value returned in the <i>pcbLength</i> parameter is the size of the valid data in the buffer, not the buffer's allocated size. To obtain the buffer's allocated size, call the <see cref="IMediaBuffer.GetMaxLength" /> method.</para>
    </remarks>
    <seealso cref="IMediaBuffer Interface" />
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/implementing-imediabuffer">Implementing IMediaBuffer</seealso>
  </member>
  <member name="IMediaBuffer.GetMaxLength">
    <summary>
      <para>The <code>GetMaxLength</code> method retrieves the maximum number of bytes this buffer can hold.</para>
    </summary>
    <param name="pcbMaxLength">
      <para>Pointer to a variable that receives the buffer's maximum size, in bytes.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful. Otherwise, returns an <b>HRESULT</b> value indicating the cause of the error.</para>
    </returns>
    <seealso cref="IMediaBuffer Interface" />
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/implementing-imediabuffer">Implementing IMediaBuffer</seealso>
  </member>
  <member name="IMediaBuffer.SetLength">
    <summary>
      <para>The <code>SetLength</code> method specifies the length of the data currently in the buffer.</para>
    </summary>
    <param name="cbLength">
      <para>Size of the data, in bytes. The value must not exceed the buffer's maximum size. Call the <see cref="IMediaBuffer.GetMaxLength" /> method to obtain the maximum size.</para>
    </param>
    <returns>
      <para>Returns S_OK if successful. Otherwise, returns an <b>HRESULT</b> value indicating the cause of the error.</para>
    </returns>
    <remarks>
      <para>This method sets the size of the valid data currently in the buffer, not the buffer's allocated size.</para>
    </remarks>
    <seealso cref="IMediaBuffer Interface" />
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/implementing-imediabuffer">Implementing IMediaBuffer</seealso>
  </member>
  <member name="IMediaBuffer">
    <summary>
      <para>The <code>IMediaBuffer</code> interface provides methods for manipulating a data buffer. Buffers passed to the <b>IMediaObject.ProcessInput</b> and <b>ProcessOutput</b> methods must implement this interface.</para>
    </summary>
    <seealso href="https://docs.microsoft.com//windows/desktop/DirectShow/implementing-imediabuffer">Implementing IMediaBuffer</seealso>
  </member>
</doc>