<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IMediaObjectInPlace.Clone">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>Clone</code> method creates a copy of the DMO in its current state.</para>
    </summary>
    <param name="ppMediaObject">Address of a pointer to receive the new DMO's <see cref="IMediaObjectInPlace" /> interface.</param>
    <returns>Returns S_OK if successful. Otherwise, returns an <b>HRESULT</b> value indicating the cause of the error.</returns>
  </member>
  <member name="IMediaObjectInPlace.GetLatency">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>GetLatency</code> method retrieves the latency introduced by this DMO.</para>
    </summary>
    <param name="pLatencyTime">Pointer to a variable that receives the latency, in 100-nanosecond units.</param>
    <returns>Returns S_OK if successful. Otherwise, returns an <b>HRESULT</b> value indicating the cause of the error.</returns>
  </member>
  <member name="IMediaObjectInPlace.Process">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>Process</code> method processes a block of data. The application supplies a pointer to a block of input data. The DMO processes the data in place.</para>
    </summary>
    <param name="ulSize">Size of the data, in bytes.</param>
    <param name="pData">Pointer to a buffer of size <i>ulSize</i>. On input, the buffer holds the input data. If the method returns successfully, the buffer contains the output data.</param>
    <param name="refTimeStart">Start time of the data.</param>
    <param name="dwFlags">Either DMO_INPLACE_NORMAL or DMO_INPLACE_ZERO. See Remarks for more information.</param>
    <returns>
      <para>Returns an <b>HRESULT</b> value. Possible values include those in the following table.</para>
      <list type="table">
        <listheader>
          <description>Return code</description>
          <description>Description</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>E_FAIL</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Failure</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_FALSE</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success. There is still data to process.</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>S_OK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Success. There is no remaining data to process.</description>
        </listheader>
      </list>
    </returns>
  </member>
  <member name="IMediaObjectInPlace">
    <summary>
      <para>[The feature associated with this page, <a href="https://docs.microsoft.com//windows/win32/directshow/directshow">DirectShow</a>, is a legacy feature. It has been superseded by <a href="https://docs.microsoft.com//uwp/api/Windows.Media.Playback.MediaPlayer">MediaPlayer</a> and <see cref="IMFMediaEngine" />. <b>MediaPlayer</b> and <b>IMFMediaEngine</b> have been optimized for Windows 10 and Windows 11. Microsoft strongly recommends that new code use <b>MediaPlayer</b> and <b>IMFMediaEngine</b> instead of <b>DirectShow</b>, when possible. Microsoft suggests that existing code that uses the legacy APIs be rewritten to use the new APIs if possible.]</para>
      <para>The <code>IMediaObjectInPlace</code> interface provides methods for processing data in place. A Microsoft DirectX Media Object (DMO) can expose this interface if it meets the following conditions:</para>
      <list type="bullet">
        <item>
          <description>It has one input stream and one output stream.</description>
        </item>
        <item>
          <description>Both streams use the same media type.</description>
        </item>
        <item>
          <description>The output is produced in place on the buffer; that is, without copying data.</description>
        </item>
      </list>This interface provides an optimized way to process data. The application calls a single <see cref="IMediaObjectInPlace.Process" /> method instead of the <see cref="IMediaObject.ProcessInput" /> and <see cref="IMediaObject.ProcessOutput" /> methods. However, any DMO that implements this interface must also implement the <see cref="IMediaObject" /> interface. Therefore, an application is never obligated to use this interface, and a DMO is never guaranteed to implement it.</summary>
  </member>
</doc>