// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

// Ported from um/WinTrust.h in the Windows SDK for Windows 10.0.20348.0
// Original source is Copyright © Microsoft. All rights reserved.

using System;

namespace TerraFX.Interop.Windows;

public static partial class szOID
{
    [NativeTypeName("#define szOID_TRUSTED_CODESIGNING_CA_LIST \"1.3.6.1.4.1.311.2.2.1\"")]
    public static ReadOnlySpan<byte> szOID_TRUSTED_CODESIGNING_CA_LIST => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x32, 0x2E, 0x31, 0x00 };

    [NativeTypeName("#define szOID_TRUSTED_CLIENT_AUTH_CA_LIST \"1.3.6.1.4.1.311.2.2.2\"")]
    public static ReadOnlySpan<byte> szOID_TRUSTED_CLIENT_AUTH_CA_LIST => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x32, 0x2E, 0x32, 0x00 };

    [NativeTypeName("#define szOID_TRUSTED_SERVER_AUTH_CA_LIST \"1.3.6.1.4.1.311.2.2.3\"")]
    public static ReadOnlySpan<byte> szOID_TRUSTED_SERVER_AUTH_CA_LIST => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x32, 0x2E, 0x33, 0x00 };

    [NativeTypeName("#define szOID_NESTED_SIGNATURE \"1.3.6.1.4.1.311.2.4.1\"")]
    public static ReadOnlySpan<byte> szOID_NESTED_SIGNATURE => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x34, 0x2E, 0x31, 0x00 };

    [NativeTypeName("#define szOID_INTENT_TO_SEAL \"1.3.6.1.4.1.311.2.4.2\"")]
    public static ReadOnlySpan<byte> szOID_INTENT_TO_SEAL => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x34, 0x2E, 0x32, 0x00 };

    [NativeTypeName("#define szOID_SEALING_SIGNATURE \"1.3.6.1.4.1.311.2.4.3\"")]
    public static ReadOnlySpan<byte> szOID_SEALING_SIGNATURE => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x34, 0x2E, 0x33, 0x00 };

    [NativeTypeName("#define szOID_SEALING_TIMESTAMP \"1.3.6.1.4.1.311.2.4.4\"")]
    public static ReadOnlySpan<byte> szOID_SEALING_TIMESTAMP => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x34, 0x2E, 0x34, 0x00 };

    [NativeTypeName("#define szOID_ENHANCED_HASH \"1.3.6.1.4.1.311.2.5.1\"")]
    public static ReadOnlySpan<byte> szOID_ENHANCED_HASH => new byte[] { 0x31, 0x2E, 0x33, 0x2E, 0x36, 0x2E, 0x31, 0x2E, 0x34, 0x2E, 0x31, 0x2E, 0x33, 0x31, 0x31, 0x2E, 0x32, 0x2E, 0x35, 0x2E, 0x31, 0x00 };

    [NativeTypeName("#define szOID_PKCS_9_SEQUENCE_NUMBER \"1.2.840.113549.1.9.25.4\"")]
    public static ReadOnlySpan<byte> szOID_PKCS_9_SEQUENCE_NUMBER => new byte[] { 0x31, 0x2E, 0x32, 0x2E, 0x38, 0x34, 0x30, 0x2E, 0x31, 0x31, 0x33, 0x35, 0x34, 0x39, 0x2E, 0x31, 0x2E, 0x39, 0x2E, 0x32, 0x35, 0x2E, 0x34, 0x00 };
}
