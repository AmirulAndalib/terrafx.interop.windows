<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="IServiceProvider.QueryService">
    <summary>
      <para>Acts as the factory method for any services exposed through an implementation of <see cref="IServiceProvider" />.</para>
    </summary>
    <param name="guidService">
      <para>The unique identifier of the service (an SID).</para>
    </param>
    <param name="pp">
      <para>The address of the caller-allocated variable to receive the interface pointer of the service on successful return from this function. The caller becomes responsible for calling <see cref="Release" /> through this interface pointer when the service is no longer required.</para>
    </param>
    <returns>
      <para>S_OK on success.</para>
    </returns>
    <remarks>
      <para>
        <b>QueryService</b> creates or accesses the implementation of the service identified with guidService. In ppv, it returns the address of the interface that is specified by riid.</para>
    </remarks>
  </member>
  <member name="IServiceProvider.QueryService">
    <param name="guidService">
      <para>The unique identifier of the service (an SID).</para>
    </param>
    <param name="riid">
      <para>The unique identifier of the interface that the caller wants to receive for the service.</para>
    </param>
    <param name="ppvObject">
      <para>The address of the caller-allocated variable to receive the interface pointer of the service on successful return from this function. The caller becomes responsible for calling <see cref="Release" /> through this interface pointer when the service is no longer required.</para>
    </param>
    <returns>
      <para>S_OK on success.</para>
    </returns>
    <remarks>
      <para>
        <b>QueryService</b> creates or accesses the implementation of the service identified with guidService. In ppv, it returns the address of the interface that is specified by riid.</para>
    </remarks>
  </member>
  <member name="IServiceProvider">
    <summary>
      <para>Provides a generic access mechanism to locate a GUID-identified service.</para>
    </summary>
    <remarks>
      <para>The <b>IServiceProvider</b> interface is a generic access mechanism to locate a GUID-identified service that is provided through a control or any other object that the service can communicate with. For example, an embedded object (such as an OLE control) typically communicates only with its associated client site object in the container through the <see cref="IOleClientSite" /> interface that is supplied by using <see cref="IOleObject.SetClientSite" />. The embedded object must ask the client site for some other service that the container supports when that service might not be implemented in the client site.</para>
      <para>The client site must provide a means by which the control that is managed by the site can access the service when necessary. For example, the <a href="https://docs.microsoft.com//oleidl/nf-oleidl-ioleinplacesite-getwindowcontext">IOleInPlaceSite.GetWindowContext</a> function can be used by an in-place object or control to access interface pointers for the document object that contains the site and the frame object that contains the document. Because these interface pointers exist on separate objects, the control cannot call the site's <see cref="QueryInterface" /> to obtain those pointers. Instead, use the IServiceProvider interface.</para>
      <para>The <b>IServiceProvider</b> interface has to overloads of a single method, <see cref="QueryService" />, through which a caller specifies the service ID (SID, a GUID), the IID of the interface to return, and the address of the caller's interface pointer variable. The second overload infers the IID from the output pointer passed into the method.</para>
      <para>The IID for this interface is IID_IServiceProvider.</para>
    </remarks>
  </member>
</doc>