<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="WSAMSG">
    <summary>The<b>WSAMSG</b> structure is used with the<a href="https://docs.microsoft.com//windows/win32/api/mswsock/nc-mswsock-lpfn_wsarecvmsg">LPFN_WSARECVMSG (WSARecvMsg)</a> and <see cref="WSASendMsg" /> functions to store address and optional control information about connected and unconnected sockets as well as an array of buffers used to store message data.</summary>
  </member>
  <member name="WSAMSG.name">
    <summary>A pointer to a<see cref="SOCKET_ADDRESS" /> structure that stores information about the remote address. Used only with unconnected sockets.</summary>
  </member>
  <member name="WSAMSG.namelen">
    <summary>The length, in bytes, of the<see cref="SOCKET_ADDRESS" /> structure pointed to in the <b>pAddr</b> member. Used only with unconnected sockets.</summary>
  </member>
  <member name="WSAMSG.lpBuffers">
    <summary>An array of<see cref="WSABUF" /> structures used to receive the message data. The capability of the <b>lpBuffers</b> member to contain multiple buffers enables the use of scatter/gather I/O.</summary>
  </member>
  <member name="WSAMSG.dwBufferCount">
    <summary>The number of buffers pointed to in the <b>lpBuffers</b> member.</summary>
  </member>
  <member name="WSAMSG.Control">
    <summary>A structure of<see cref="WSABUF" /> type used to specify optional control data. See Remarks.</summary>
  </member>
  <member name="WSAMSG.dwFlags">
    <summary>
      <para>One or more control flags, specified as the logical <b>OR</b> of values. The possible values for <b>dwFlags</b> member on input are defined in the Winsock2.h header file. The possible values for <b>dwFlags</b> member on output are defined in the Ws2def.h header file which is automatically included by the Winsock2.h header file.</para>
      <list type="table">
        <listheader>
          <description>Flags on input</description>
          <description>Meaning</description>
        </listheader>
        <listheader>
          <description>
            <list type="bullet">
              <listheader>
                <term>
                  <b>MSG_PEEK</b>
                </term>
              </listheader>
            </list>
          </description>
          <description>Peek at the incoming data. The data is copied into the buffer, but is not removed from the input queue. This flag is valid only for non-overlapped sockets.</description>
        </listheader>
      </list> <list type="table"><listheader><description>Flag returned</description><description>Meaning</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSG_BCAST</b></term></listheader></list></description><description>The datagram was received as a link-layer broadcast or with a destination IP address that is a broadcast address.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSG_MCAST</b></term></listheader></list></description><description>The datagram was received with a destination IP address that is a multicast address.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSG_TRUNC</b></term></listheader></list></description><description>The datagram was truncated. More data was present than the process allocated room for.</description></listheader><listheader><description><list type="bullet"><listheader><term><b>MSG_CTRUNC</b></term></listheader></list></description><description>The control (ancillary) data was truncated. More control data was present than the process allocated room for.</description></listheader></list></summary>
  </member>
</doc>