<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="Windows.ByteToChar">
    <summary>Converts a value of type <b>BYTE</b> to a value of type <b>CHAR</b>.</summary>
    <param name="bOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ByteToInt8">
    <summary>Converts a value of type <b>BYTE</b> to a value of type <b>INT8</b>.</summary>
    <param name="bOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DWordPtrAdd">
    <summary>Adds two values of type <b>DWORD_PTR</b>.</summary>
    <param name="dwAugend">The first value in the equation.</param>
    <param name="dwAddend">The value to add to <i>dwAugend</i>.</param>
    <param name="pdwResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DWordPtrMult">
    <summary>Multiplies one value of type <b>DWORD_PTR</b> by another.</summary>
    <param name="dwMultiplicand">The value to be multiplied by <i>dwMultiplier</i>.</param>
    <param name="dwMultiplier">The value by which to multiply <i>dwMultiplicand</i>.</param>
    <param name="pdwResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.DWordPtrSub">
    <summary>Subtracts one value of type <b>DWORD_PTR</b> from another.</summary>
    <param name="dwMinuend">The value from which <i>dwSubtrahend</i> is subtracted.</param>
    <param name="dwSubtrahend">The value to subtract from <i>dwMinuend</i>.</param>
    <param name="pdwResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8Add">
    <summary>Adds two values of type <b>INT8</b>.</summary>
    <param name="i8Augend">The first value.</param>
    <param name="i8Addend">The second value.</param>
    <param name="pi8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8Mult">
    <summary>Multiplies two values of type <b>INT8</b>.</summary>
    <param name="i8Multiplicand">The first value.</param>
    <param name="i8Multiplier">The second value.</param>
    <param name="pi8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8Sub">
    <summary>Subtracts one value of type <b>INT8</b> from another.</summary>
    <param name="i8Minuend">The first value.</param>
    <param name="i8Subtrahend">The value to subtract.</param>
    <param name="pi8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToUChar">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToUInt">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>UINT</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="puResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToUInt8">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>UINT8</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pu8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToUIntPtr">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="puResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToULong">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>ULONG</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pulResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToULongLong">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pullResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToULongPtr">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pulResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.Int8ToUShort">
    <summary>Converts a value of type <b>INT8</b> to a value of type <b>USHORT</b>.</summary>
    <param name="i8Operand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntAdd">
    <summary>Adds two values of type <b>INT</b>.</summary>
    <param name="iAugend">The first value.</param>
    <param name="iAddend">The second value.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntMult">
    <summary>Multiplies two values of type <b>INT</b>.</summary>
    <param name="iMultiplicand">The first value.</param>
    <param name="iMultiplier">The second value.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrAdd">
    <summary>Adds two values of type <b>INT_PTR</b>.</summary>
    <param name="iAugend">The first value.</param>
    <param name="iAddend">The second value.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrMult">
    <summary>Multiplies two values of type <b>INT_PTR</b>.</summary>
    <param name="iMultiplicand">The first value.</param>
    <param name="iMultiplier">The second value.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrSub">
    <summary>Subtracts one value of type <b>INT_PTR</b> from another.</summary>
    <param name="iMinuend">The first value.</param>
    <param name="iSubtrahend">The value to subtract.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToChar">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>CHAR</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToInt">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>INT</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="piResult">The converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToInt8">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>INT8</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToLong">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>LONG</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToLongPtr">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="plResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToShort">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>SHORT</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToUChar">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToUInt">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>UINT</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToUInt8">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>UINT8</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToUIntPtr">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="iOperand">A pointer to the value to be converted.</param>
    <param name="puResult">The address of the pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToULong">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>ULONG</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToULongLong">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pullResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToULongPtr">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntPtrToUShort">
    <summary>Converts a value of type <b>INT_PTR</b> to a value of type <b>USHORT</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntSub">
    <summary>Subtracts one value of type <b>INT</b> from another.</summary>
    <param name="iMinuend">The first value.</param>
    <param name="iSubtrahend">The value to subtract.</param>
    <param name="piResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToChar">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>CHAR</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToInt8">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>INT8</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToShort">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>SHORT</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="psResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToUChar">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToUInt">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>UINT</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToUInt8">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>UINT8</b>.</summary>
    <param name="iOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToULong">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>ULONG</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToUIntPtr">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pullResult">A pointer to the address of the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.IntToUShort">
    <summary>Converts a value of type <b>INT</b> to a value of type <b>USHORT</b>.</summary>
    <param name="iOperand">The value to be converted.</param>
    <param name="pusResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongAdd">
    <summary>Adds two values of type <b>LONG</b>.</summary>
    <param name="lAugend">The first value.</param>
    <param name="lAddend">The second value.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongAdd">
    <summary>Adds two values of type <b>LONGLONG</b>.</summary>
    <param name="llAugend">The first value.</param>
    <param name="llAddend">The second value.</param>
    <param name="pllResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongMult">
    <summary>Multiplies two values of type <b>LONGLONG</b>.</summary>
    <param name="llMultiplicand">The first value.</param>
    <param name="llMultiplier">The second value.</param>
    <param name="pllResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongSub">
    <summary>Subtracts one value of type <b>LONGLONG</b> from another.</summary>
    <param name="llMinuend">The first value.</param>
    <param name="llSubtrahend">The value to subtract.</param>
    <param name="pllResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToChar">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>CHAR</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToInt">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>INT</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="piResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToInt8">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>INT8</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToIntPtr">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="piResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToLong">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>LONG</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="plResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToLongPtr">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="plResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToShort">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>SHORT</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToUChar">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToUInt">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>UINT</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="puResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToUInt8">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>UINT8</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pu8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToULong">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>ULONG</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pulResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToULongLong">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pullResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongLongToUShort">
    <summary>Converts a value of type <b>LONGLONG</b> to a value of type <b>USHORT</b>.</summary>
    <param name="llOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongMult">
    <summary>Multiplies two values of type <b>LONG</b>.</summary>
    <param name="lMultiplicand">The first value.</param>
    <param name="lMultiplier">The second value.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrAdd">
    <summary>Adds two values of type <b>LONG_PTR</b>.</summary>
    <param name="lAugend">The first value.</param>
    <param name="lAddend">The second value.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrMult">
    <summary>Multiplies two values of type <b>LONG_PTR</b>.</summary>
    <param name="lMultiplicand">The first value.</param>
    <param name="lMultiplier">The second value.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrSub">
    <summary>Subtracts one value of type <b>LONG_PTR</b> from another.</summary>
    <param name="lMinuend">The first value.</param>
    <param name="lSubtrahend">The value to subtract.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToChar">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>CHAR</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToInt">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>INT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToInt8">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>INT8</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToIntPtr">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToLong">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>LONG</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToShort">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>SHORT</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToUChar">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToUInt">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>UINT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToUInt8">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>UINT8</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToUIntPtr">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToULong">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>ULONG</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToULongLong">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pullResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToULongPtr">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongPtrToUShort">
    <summary>Converts a value of type <b>LONG_PTR</b> to a value of type <b>USHORT</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongSub">
    <summary>Subtracts one value of type <b>LONG</b> from another.</summary>
    <param name="lMinuend">The first value.</param>
    <param name="lSubtrahend">The value to subtract.</param>
    <param name="plResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToChar">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>CHAR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToInt">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>INT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToInt8">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>INT8</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToIntPtr">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToShort">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>SHORT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="psResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToUChar">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToUInt">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>UINT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToUInt8">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>UINT8</b>.</summary>
    <param name="lOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToUIntPtr">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToULong">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>ULONG</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToULongLong">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pullResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToULongPtr">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.LongToUShort">
    <summary>Converts a value of type <b>LONG</b> to a value of type <b>USHORT</b>.</summary>
    <param name="lOperand">The value to be converted.</param>
    <param name="pusResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PtrdiffTAdd">
    <summary>Adds two values of type <b>ptrdiff_t</b>.</summary>
    <param name="Augend">The first value.</param>
    <param name="Addend">The second value.</param>
    <param name="pResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PtrdiffTMult">
    <summary>Multiplies two values of type <b>ptrdiff_t</b>.</summary>
    <param name="Multiplicand">The first value.</param>
    <param name="Multiplier">The second value.</param>
    <param name="pResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.PtrdiffTSub">
    <summary>Subtracts one value of type <b>ptrdiff_t</b> from another.</summary>
    <param name="Minuend">The first value.</param>
    <param name="Subtrahend">The value to subtract.</param>
    <param name="pResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortAdd">
    <summary>Adds two values of type <b>SHORT</b>.</summary>
    <param name="sAugend">The first value.</param>
    <param name="sAddend">The second value.</param>
    <param name="psResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortMult">
    <summary>Multiplies two values of type <b>SHORT</b>.</summary>
    <param name="sMultiplicand">The first value.</param>
    <param name="sMultiplier">The second value.</param>
    <param name="psResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortSub">
    <summary>Subtracts one value of type <b>SHORT</b> from another.</summary>
    <param name="sMinuend">The first value.</param>
    <param name="sSubtrahend">The value to subtract.</param>
    <param name="psResult">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToChar">
    <summary>Converts a value of type <b>SHORT</b> to a value of <b>CHAR</b>.</summary>
    <param name="sOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToDWordPtr">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>DWORD_PTR</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pdwResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToInt8">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>INT8</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToUChar">
    <summary>Converts a value of type <b>SHORT</b> to a value of <b>UCHAR</b>.</summary>
    <param name="sOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToUInt">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>UINT</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="puResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToUInt8">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>UINT8</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToUIntPtr">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="puResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToULong">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>ULONG</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pulResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToULongLong">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>ULONGLONG</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pullResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToULongPtr">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="sOperand">The value to convert.</param>
    <param name="pulResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ShortToUShort">
    <summary>Converts a value of type <b>SHORT</b> to a value of type <b>USHORT</b>.</summary>
    <param name="sOperand">The value to be converted.</param>
    <param name="pusResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTAdd">
    <summary>Adds two values of type <b>size_t</b>.</summary>
    <param name="Augend">The first value in the equation.</param>
    <param name="Addend">The value to add to <i>cbAugend</i>.</param>
    <param name="pResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTMult">
    <summary>Multiplies one value of type <b>size_t</b> by another.</summary>
    <param name="Multiplicand">The value to be multiplied by <i>cbMultiplier</i>.</param>
    <param name="Multiplier">The value by which to multiply <i>cbMultiplicand</i>.</param>
    <param name="pResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTSub">
    <summary>Subtracts one value of type <b>size_t</b> from another.</summary>
    <param name="Minuend">The value from which <i>cbSubtrahend</i> is subtracted.</param>
    <param name="Subtrahend">The value to subtract from <i>cbMinuend</i>.</param>
    <param name="pResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SSIZETAdd">
    <summary>Adds two SSIZE_T values together.</summary>
    <param name="Augend">The value to add to <i>Addend</i>.</param>
    <param name="Addend">The value to be added to <i>Augend</i>.</param>
    <param name="pResult">When this function returns successfully, points to the sum of <i>Augend</i> plus <i>Addend</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SSIZETMult">
    <summary>Multiplies one SSIZE_T value by another.</summary>
    <param name="Multiplicand">The number to be multiplied.</param>
    <param name="Multiplier">The number by which to multiply <i>Multiplicand</i>.</param>
    <param name="pResult">When this function returns successfully, points to the product of <i>Multiplicand</i> times <i>Multiplier</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SSIZETSub">
    <summary>Subtracts one SSIZE_T value from another.</summary>
    <param name="Minuend">The value from which <i>Subtrahend</i> will be subtracted.</param>
    <param name="Subtrahend">The value to subtract from <i>Minuend</i>.</param>
    <param name="pResult">When this function returns successfully, points to the difference between <i>Minuend</i> and <i>Subtrahend</i>.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UInt8Add">
    <summary>Adds two values of type <b>UINT8</b>.</summary>
    <param name="u8Augend">The first value.</param>
    <param name="u8Addend">The second value.</param>
    <param name="pu8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UInt8Mult">
    <summary>Multiplies two values of type <b>UINT8</b>.</summary>
    <param name="u8Multiplicand">The first value.</param>
    <param name="u8Multiplier">The second value.</param>
    <param name="pu8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UInt8Sub">
    <summary>Subtracts one value of type <b>UINT8</b> from another.</summary>
    <param name="u8Minuend">The first value.</param>
    <param name="u8Subtrahend">The value to subtract.</param>
    <param name="pu8Result">The result.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UInt8ToChar">
    <summary>Converts a value of type <b>UINT8</b> to a value of type <b>CHAR</b>.</summary>
    <param name="u8Operand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UInt8ToInt8">
    <summary>Converts a value of type <b>UINT8</b> to a value of type <b>INT8</b>.</summary>
    <param name="u8Operand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntAdd">
    <summary>Adds two values of type <b>UINT</b>.</summary>
    <param name="uAugend">The first value in the equation.</param>
    <param name="uAddend">The value to add to <i>uAugend</i>.</param>
    <param name="puResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntMult">
    <summary>Multiplies one value of type <b>UINT</b> by another.</summary>
    <param name="uMultiplicand">The value to be multiplied by <i>uMultiplier</i>.</param>
    <param name="uMultiplier">The value by which to multiply <i>uMultiplicand</i>.</param>
    <param name="puResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrAdd">
    <summary>Adds two values of type <b>UINT_PTR</b>.</summary>
    <param name="uAugend">The first value in the equation.</param>
    <param name="uAddend">The value to add to <i>uAugend</i>.</param>
    <param name="puResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrMult">
    <summary>Multiplies one value of type <b>UINT_PTR</b> by another.</summary>
    <param name="uMultiplicand">The value to be multiplied by <i>uMultiplier</i>.</param>
    <param name="uMultiplier">The value by which to multiply <i>uMultiplicand</i>.</param>
    <param name="puResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrSub">
    <summary>Subtracts one value of type <b>UINT_PTR</b> from another.</summary>
    <param name="uMinuend">The value from which <i>uSubtrahend</i> is subtracted.</param>
    <param name="uSubtrahend">The value to subtract from <i>uMinuend</i>.</param>
    <param name="puResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToChar">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>CHAR</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SIZETToInt">
    <summary>Converts a value of type <b>SIZE_T</b> to a value of type <b>INT</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToInt16">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>INT16</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pi16Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToInt8">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>INT8</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToIntPtr">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTToLong">
    <summary>Converts a value of type <b>size_t</b> to a value of type <b>LONG</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToLongLong">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>LONGLONG</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pllResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToLongPtr">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToShort">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>SHORT</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToUChar">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToUInt">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>UINT</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToUInt16">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>UINT16</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pu16Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToUInt8">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>UINT8</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pu8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToULong">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>ULONG</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntPtrToUShort">
    <summary>Converts a value of type <b>UINT_PTR</b> to a value of type <b>USHORT</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntSub">
    <summary>Subtracts one value of type <b>UINT</b> from another.</summary>
    <param name="uMinuend">The value from which <i>uSubtrahend</i> is subtracted.</param>
    <param name="uSubtrahend">The value to subtract from <i>uMinuend</i>.</param>
    <param name="puResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToChar">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>CHAR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToInt">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>INT</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToInt8">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>INT8</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToIntPtr">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToLong">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>LONG</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToLongPtr">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToShort">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>SHORT</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="psResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToUChar">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToUInt8">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>UINT8</b>.</summary>
    <param name="uOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UIntToUShort">
    <summary>Converts a value of type <b>UINT</b> to a value of type <b>USHORT</b>.</summary>
    <param name="uOperand">The value to be converted.</param>
    <param name="pusResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongAdd">
    <summary>Adds two values of type <b>ULONG</b>.</summary>
    <param name="ulAugend">The first value in the equation.</param>
    <param name="ulAddend">The value to add to <i>ulAugend</i>.</param>
    <param name="pulResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SIZETAdd">
    <summary>Adds two values of type <b>SIZE_T</b>.</summary>
    <param name="ullAugend">The first value in the equation.</param>
    <param name="ullAddend">The value to add to <i>cbAugend</i>.</param>
    <param name="pullResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTMult">
    <summary>Multiplies one value of type <b>size_t</b> by another.</summary>
    <param name="ullMultiplicand">The value to be multiplied by <i>cbMultiplier</i>.</param>
    <param name="ullMultiplier">The value by which to multiply <i>cbMultiplicand</i>.</param>
    <param name="pullResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SIZETSub">
    <summary>Subtracts one value of type <b>SIZE_T</b> from another.</summary>
    <param name="ullMinuend">The value from which <i>cbSubtrahend</i> is subtracted.</param>
    <param name="ullSubtrahend">The value to subtract from <i>cbMinuend</i>.</param>
    <param name="pullResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToChar">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>CHAR</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToInt">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>INT</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToInt8">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>INT8</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToLong">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>LONG</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToIntPtr">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="pllResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToLongPtr">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToShort">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>SHORT</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToUChar">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToUInt">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>UINT</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToUInt8">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>UINT8</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="pu8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToUIntPtr">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToULong">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>ULONG</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToULongPtr">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>ULONG_PTR</b>.</summary>
    <param name="ullOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongLongToUShort">
    <summary>Converts a value of type <b>ULONGLONG</b> to a value of type <b>USHORT</b>.</summary>
    <param name="ullOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongMult">
    <summary>Multiplies one value of type <b>ULONG</b> by another.</summary>
    <param name="ulMultiplicand">The value to be multiplied by <i>ulMultiplier</i>.</param>
    <param name="ulMultiplier">The value by which to multiply <i>ulMultiplicand</i>.</param>
    <param name="pulResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrAdd">
    <summary>Adds two values of type <b>ULONG_PTR</b>.</summary>
    <param name="ulAugend">The first value in the equation.</param>
    <param name="ulAddend">The value to add to <i>ulAugend</i>.</param>
    <param name="pulResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrMult">
    <summary>Multiplies one value of type <b>ULONG_PTR</b> by another.</summary>
    <param name="ulMultiplicand">The value to be multiplied by <i>ulMultiplier</i>.</param>
    <param name="ulMultiplier">The value by which to multiply <i>ulMultiplicand</i>.</param>
    <param name="pulResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrSub">
    <summary>Subtracts one value of type <b>ULONG_PTR</b> from another.</summary>
    <param name="ulMinuend">The value from which <i>ulSubtrahend</i> is subtracted.</param>
    <param name="ulSubtrahend">The value to subtract from <i>ulMinuend</i>.</param>
    <param name="pulResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToChar">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>CHAR</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SizeTToInt">
    <summary>Converts a value of type <b>size_t</b> to a value of type <b>INT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToInt8">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>INT8</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToIntPtr">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToLong">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>LONG</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.SIZETToInt64">
    <summary>Converts a value of type <b>SIZE_T</b> to a value of type <b>INT64</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="pllResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToLongPtr">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToShort">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>SHORT</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="psResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToUChar">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pch">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToUInt">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>UINT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToUInt8">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>UINT8</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToUIntPtr">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToULong">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>ULONG</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="pulResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongPtrToUShort">
    <summary>Converts a value of type <b>ULONG_PTR</b> to a value of type <b>USHORT</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pusResult">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongSub">
    <summary>Subtracts one value of type <b>ULONG</b> from another.</summary>
    <param name="ulMinuend">The value from which <i>ulSubtrahend</i> is subtracted.</param>
    <param name="ulSubtrahend">The value to subtract from <i>ulMinuend</i>.</param>
    <param name="pulResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToChar">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>CHAR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToInt">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>INT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToInt8">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>INT8</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToIntPtr">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>INT_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="piResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToLong">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>LONG</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToLongPtr">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>LONG_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="plResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToShort">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>SHORT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="psResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToUChar">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToUInt">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>UINT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="puResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToUInt8">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>UINT8</b>.</summary>
    <param name="ulOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToUIntPtr">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>UINT_PTR</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="puiResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.ULongToUShort">
    <summary>Converts a value of type <b>ULONG</b> to a value of type <b>USHORT</b>.</summary>
    <param name="ulOperand">The value to be converted.</param>
    <param name="pusResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortAdd">
    <summary>Adds two values of type <b>USHORT</b>.</summary>
    <param name="usAugend">The first value in the equation.</param>
    <param name="usAddend">The value to add to <i>usAugend</i>.</param>
    <param name="pusResult">A pointer to the sum. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortMult">
    <summary>Multiplies one value of type <b>USHORT</b> by another.</summary>
    <param name="usMultiplicand">The value to be multiplied by <i>usMultiplier</i>.</param>
    <param name="usMultiplier">The value by which to multiply <i>usMultiplicand</i>.</param>
    <param name="pusResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortSub">
    <summary>Subtracts one value of type <b>USHORT</b> from another.</summary>
    <param name="usMinuend">The value from which <i>usSubtrahend</i> is subtracted.</param>
    <param name="usSubtrahend">The value to subtract from <i>usMinuend</i>.</param>
    <param name="pusResult">A pointer to the result. If the operation results in a value that overflows or underflows the capacity of the type, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortToChar">
    <summary>Converts a value of type <b>USHORT</b> to a value of type <b>CHAR</b>.</summary>
    <param name="usOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortToInt8">
    <summary>Converts a value of type <b>USHORT</b> to a value of type <b>INT8</b>.</summary>
    <param name="usOperand">The value to convert.</param>
    <param name="pi8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortToShort">
    <summary>Converts a value of type <b>USHORT</b> to a value of type <b>SHORT</b>.</summary>
    <param name="usOperand">The value to be converted.</param>
    <param name="psResult">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortToUChar">
    <summary>Converts a value of type <b>USHORT</b> to a value of type <b>UCHAR</b>.</summary>
    <param name="usOperand">The value to be converted.</param>
    <param name="pch">A pointer to the converted value. In the case where the conversion causes a truncation of the original value, the function returns INTSAFE_E_ARITHMETIC_OVERFLOW and this parameter is not valid.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
  <member name="Windows.UShortToUInt8">
    <summary>Converts a value of type <b>USHORT</b> to a value of type <b>UINT8</b>.</summary>
    <param name="usOperand">The value to convert.</param>
    <param name="pui8Result">The converted value.</param>
    <returns>If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</returns>
  </member>
</doc>