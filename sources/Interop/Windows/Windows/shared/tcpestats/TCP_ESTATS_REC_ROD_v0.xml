<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="TCP_ESTATS_REC_ROD_v0">
    <summary>The <b>TCP_ESTATS_REC_ROD_v0</b> structure contains read-only dynamic information for extended TCP statistics on the local receiver for a TCP connection.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.CurRwinSent">
    <summary>The most recent window advertisement, in bytes, that has been sent.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.MaxRwinSent">
    <summary>The maximum window advertisement, in bytes, that has been sent.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.MinRwinSent">
    <summary>The minimum window advertisement, in bytes, that has been sent.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.LimRwin">
    <summary>The maximum window advertisement, in bytes, that may be sent.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.DupAckEpisodes">
    <summary>
      <para>The number of Duplicate Acks Sent when prior Ack was not duplicate. This is the number of times that a contiguous series of duplicate acknowledgments have been sent.</para>
      <para>This is an indication of the number of data segments lost or reordered on the path from the remote TCP endpoint to the near TCP endpoint.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.DupAcksOut">
    <summary>
      <para>The number of duplicate ACKs sent.</para>
      <para>The ratio of the change in the <b>DupAcksOut</b> member to the change in the <b>DupAckEpisodes</b> member is an indication of reorder or recovery distance over some interval.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.CeRcvd">
    <summary>The number of segments received with IP headers bearing Congestion Experienced (CE) markings.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.EcnSent">
    <summary>Reserved for future use. This member is always set to zero.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.EcnNoncesRcvd">
    <summary>Reserved for future use. This member is always set to zero.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.CurReasmQueue">
    <summary>
      <para>The current number of bytes of sequence space spanned by the reassembly queue.</para>
      <para>This is generally the difference between rcv.nxt and the sequence number of the right most edge of the reassembly queue.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.MaxReasmQueue">
    <summary>
      <para>The maximum number of bytes of sequence space spanned by the reassembly queue.</para>
      <para>This is the maximum value of the <b>CurReasmQueue</b> member.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.CurAppRQueue">
    <summary>The current number of bytes of application data that has been acknowledged by TCP but not yet delivered to the application.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.MaxAppRQueue">
    <summary>The maximum number of bytes of application data that has been acknowledged by TCP but not yet delivered to the application.</summary>
  </member>
  <member name="TCP_ESTATS_REC_ROD_v0.WinScaleSent">
    <summary>
      <para>The value of the transmitted window scale option if one was sent; otherwise, a value of -1.</para>
      <para>Note that if both the <b>WinScaleSent</b> member and the <b>WinScaleRcvd</b> member of the <see cref="TCP_ESTATS_OBS_REC_ROD_v0" /> structure are not -1, then Rcv.Wind.Scale will be the same as this value and used to scale receiver window announcements from the local host to the remote host.</para>
    </summary>
  </member>
</doc>