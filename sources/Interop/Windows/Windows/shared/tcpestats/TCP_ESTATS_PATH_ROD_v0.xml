<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information. -->
<!-- Ported from https://github.com/MicrosoftDocs/sdk-api/ -->
<doc>
  <member name="TCP_ESTATS_PATH_ROD_v0">
    <summary>The <b>TCP_ESTATS_PATH_ROD_v0</b> structure contains read-only dynamic information for extended TCP statistics on network path measurement for a TCP connection.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.FastRetran">
    <summary>The number of invocations of the Fast Retransmit algorithm.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.Timeouts">
    <summary>The number of times the retransmit timeout has expired when the retransmission timer backoff multiplier is equal to one.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SubsequentTimeouts">
    <summary>
      <para>The number of times the retransmit timeout has expired after the retransmission timer has been doubled.</para>
      <para>For more information, see section 5.5 of RFC 2988 discussed in the Remarks below.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.CurTimeoutCount">
    <summary>
      <para>The current number of times the retransmit timeout has expired without receiving an acknowledgment for new data.</para>
      <para>The <b>CurTimeoutCount</b> member is reset to zero when new data is acknowledged and incremented for each invocation of Section 5.5 of RFC 2988.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.AbruptTimeouts">
    <summary>
      <para>The number of timeouts that occurred without any immediately preceding duplicate acknowledgments or other indications of congestion. Abrupt timeouts indicate that the path lost an entire window of data or acknowledgments.</para>
      <para>Timeouts that are preceded by duplicate acknowledgments or other congestion signals (Explicit Congestion Notification, for example) are not counted as abrupt, and might have been avoided by a more sophisticated Fast Retransmit algorithm.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.PktsRetrans">
    <summary>The number of segments transmitted containing at least some retransmitted data.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.BytesRetrans">
    <summary>The number of bytes retransmitted.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.DupAcksIn">
    <summary>The number of duplicate ACKs received.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SacksRcvd">
    <summary>The number of Selective Acknowledgment (SACK) options received.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SackBlocksRcvd">
    <summary>The number of SACK blocks received (within SACK options).</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.CongSignals">
    <summary>
      <para>The number of multiplicative downward congestion window adjustments due to all forms of congestion signals, including Fast Retransmit, Explicit Congestion Notification (ECN), and timeouts. This member summarizes all events that invoke the Multiplicative Decrease (MD) portion of Additive Increase Multiplicative Decrease (AIMD) congestion control, and as such is the best indicator of how a congestion windows is being affected by congestion.</para>
      <para>Note that retransmission timeouts multiplicatively reduce the window implicitly by setting the slow start threshold size, and are included in the value stored in the <b>CongSignals</b> member. In order to minimize spurious congestion indications due to out-of-order segments, the <b>CongSignals</b> member is incremented in association with the Fast Retransmit algorithm.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.PreCongSumCwnd">
    <summary>
      <para>The sum of the values of the congestion window, in bytes, captured each time a congestion signal is received.</para>
      <para>This member is updated each time the <b>CongSignals</b> member is incremented, such that the change in the <b>PreCongSumCwnd</b> member divided by the change in the <b>CongSignals</b> member is the average window (over some interval) just prior to a congestion signal.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.PreCongSumRtt">
    <summary>
      <para>The sum, in milliseconds, of the last sample of the network round-trip-time (RTT) prior to the received congestion signals. The last sample of the RTT is stored in the <b>SampleRtt</b> member.</para>
      <para>The <b>PreCongSumRtt</b> member is updated each time the <b>CongSignals</b> member is incremented, such that the change in the <b>PreCongSumRtt</b> divided by the change in the <b>CongSignals</b> member is the average RTT (over some interval) just prior to a congestion signal.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.PostCongSumRtt">
    <summary>
      <para>The sum, in milliseconds, of the first sample of the network RTT (stored in the <b>SampleRtt</b> member) following each congestion signal.</para>
      <para>The change in the <b>PostCongSumRtt</b> member divided by the change in the <b>PostCongCountRtt</b> member is the average RTT (over some interval) just after a congestion signal.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.PostCongCountRtt">
    <summary>
      <para>The number of RTT samples, in bytes, included in the <b>PostCongSumRtt</b> member.</para>
      <para>The change in the <b>PostCongSumRtt</b> member divided by the change in the <b>PostCongCountRtt</b> member is the average RTT (over some interval) just after a congestion signal.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.EcnSignals">
    <summary>
      <para>The number of congestion signals delivered to the TCP sender via ECN.</para>
      <para>This is typically the number of segments bearing Echo Congestion</para>
      <para>Experienced (ECE) bits, but also includes segments failing the ECN nonce check or other explicit congestion signals.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.EceRcvd">
    <summary>The number of segments received with IP headers bearing Congestion Experienced (CE) markings.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SendStall">
    <summary>The number of interface stalls or other sender local resource limitations that are treated as congestion signals.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.QuenchRcvd">
    <summary>Reserved for future use. This member is always set to zero.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.RetranThresh">
    <summary>
      <para>The number of duplicate acknowledgments required to trigger Fast Retransmit.</para>
      <para>Note that although this is constant in traditional Reno TCP implementations, it is adaptive in many newer TCP implementations.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SndDupAckEpisodes">
    <summary>
      <para>The number of Duplicate Acks Sent when prior Ack was not duplicate. This is the number of times that a contiguous series of duplicate acknowledgments have been sent.</para>
      <para>This is an indication of the number of data segments lost or reordered on the path from the remote TCP endpoint to the near TCP endpoint.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SumBytesReordered">
    <summary>
      <para>The sum of the amounts SND.UNA advances on the acknowledgment which ends a dup-ack episode without a retransmission.</para>
      <para>Note the change in the <b>SumBytesReordered</b> member divided by the change in the <b>NonRecovDaEpisodes</b> member is an estimate of the average reordering distance, over some interval.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.NonRecovDa">
    <summary>
      <para>The number of duplicate acks (or SACKS) that did not trigger a Fast Retransmit because ACK advanced prior to the number of duplicate acknowledgments reaching the <b>RetranThresh</b>.</para>
      <para>Note that the change in the <b>NonRecovDa</b> member divided by the change in the <b>NonRecovDaEpisodes</b> member is an estimate of the average reordering distance in segments over some interval.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.NonRecovDaEpisodes">
    <summary>The number of duplicate acknowledgment episodes that did not trigger a Fast Retransmit because ACK advanced prior to the number of duplicate acknowledgments reaching the <b>RetranThresh</b>.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.AckAfterFr">
    <summary>Reserved for future use. This member is always set to zero.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.DsackDups">
    <summary>The number of duplicate segments reported to the local host by D-SACK blocks.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SampleRtt">
    <summary>The most recent raw network round trip time measurement, in milliseconds, used in calculation of the retransmission timer (RTO).</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SmoothedRtt">
    <summary>The smoothed round trip time, in milliseconds, used in calculation of the RTO.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.RttVar">
    <summary>The round trip time variation, in milliseconds, used in calculation of the RTO.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MaxRtt">
    <summary>The maximum sampled round trip time in milliseconds.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MinRtt">
    <summary>The minimum sampled round trip time in milliseconds.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SumRtt">
    <summary>
      <para>The sum of all sampled round trip times in milliseconds.</para>
      <para>Note that the change in the <b>SumRtt</b> member divided by the change in the <b>CountRtt</b> member is the mean RTT, uniformly averaged over an enter interval.</para>
    </summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.CountRtt">
    <summary>The number of round trip time samples included in the <b>SumRtt</b> member.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.CurRto">
    <summary>The current value, in milliseconds, of the retransmit timer.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MaxRto">
    <summary>The maximum value, in milliseconds, of the retransmit timer.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MinRto">
    <summary>The minimum value, in milliseconds, of the retransmit timer.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.CurMss">
    <summary>The current maximum segment size (MSS), in bytes.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MaxMss">
    <summary>The maximum MSS, in bytes.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.MinMss">
    <summary>The minimum MSS, in bytes.</summary>
  </member>
  <member name="TCP_ESTATS_PATH_ROD_v0.SpuriousRtoDetections">
    <summary>The number of acknowledgments reporting segments that have already been retransmitted due to a Retransmission Timeout.</summary>
  </member>
</doc>